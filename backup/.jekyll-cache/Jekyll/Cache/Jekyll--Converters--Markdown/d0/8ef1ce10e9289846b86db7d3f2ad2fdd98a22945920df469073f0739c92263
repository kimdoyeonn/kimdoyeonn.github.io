I"@/<ul>
  <li>참고: <a href="https://tutorial-extensions.djangogirls.org/ko/homework">장고걸스</a></li>
</ul>

<h3 id="미리보기로-블로그-글-저장하기">미리보기로 블로그 글 저장하기</h3>

<p>지금은 새 글을 작성하면 바로 발행이 된다. 미리보기로 글을 저장하려면 <code class="language-plaintext highlighter-rouge">blog/views.py</code>파일에서 <code class="language-plaintext highlighter-rouge">post_new</code>와 <code class="language-plaintext highlighter-rouge">post_edit</code> 메소드에 다음 줄을 삭제하세요</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">post</span><span class="p">.</span><span class="n">published_date</span> <span class="o">=</span> <span class="n">timezone</span><span class="p">.</span><span class="n">now</span><span class="p">()</span>
</code></pre></div></div>

<p>이렇게 하면 새로 작성한 글이 바로 게시되지 않고 미리 볼 수 있는 초안으로 저장됩니다.</p>

<p>이제부터 작성된 글과 목록을 미리 볼 수 있도록 해봅시다!</p>

<h3 id="게시되지-않은-블로그-글-목록-페이지-만들기">게시되지 않은 블로그 글 목록 페이지 만들기</h3>

<p>기본 튜토리얼에서 배웠던 QuerySet을 사용할거에요. 기본 튜토리얼에서는 블로그 게시물만 보여주는 <code class="language-plaintext highlighter-rouge">post_list</code>를 만들었다. (기본값이 들어가는 <code class="language-plaintext highlighter-rouge">publisged_date</code>도 포함)</p>

<p>이번에도 비슷한 것을 해볼 건데 임시저장(draft) 기능을 구현할거에요</p>

<p>새 글 추가하기 버튼 근처에 <code class="language-plaintext highlighter-rouge">blog/templates/blog/base.html</code>링크를 추가하세요(<code class="language-plaintext highlighter-rouge">&lt;h1&gt;</code>태그 위)</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{% url 'post_draft_list' %}"</span> <span class="na">class=</span><span class="s">"top-menu"</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">"glyphicon glyphicon-edit"</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</code></pre></div></div>

<ul>
  <li>
    <p>url <code class="language-plaintext highlighter-rouge">blog/urls.py</code></p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">path</span><span class="p">(</span><span class="s">'drafts/'</span><span class="p">,</span> <span class="n">views</span><span class="p">.</span><span class="n">post_draft_list</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">"post_draft_list"</span><span class="p">),</span>
<span class="c1"># django1.x일 경우
# url(r'^drafts/$', views.post_draft_list, name='post_draft_list'),
</span></code></pre></div>    </div>
  </li>
  <li>
    <p>view <code class="language-plaintext highlighter-rouge">blog/views.py</code></p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">post_draft_list</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="n">posts</span> <span class="o">=</span> <span class="n">Post</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="nb">filter</span><span class="p">(</span><span class="n">published_date__isnull</span><span class="o">=</span><span class="bp">True</span><span class="p">).</span><span class="n">order_by</span><span class="p">(</span><span class="s">'created_date'</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">'blog/post_draft_list.html'</span><span class="p">,</span> <span class="p">{</span><span class="s">'posts'</span><span class="p">:</span><span class="n">posts</span><span class="p">})</span>
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">published_date__isnull=True</code> - 발행되지 않은 글 목록을 가져옴</p>

    <p><code class="language-plaintext highlighter-rouge">order_by('created_date')</code>- <code class="language-plaintext highlighter-rouge">created_date</code> 필드에 대해 오름차순 정렬을 수행</p>
  </li>
  <li>
    <p>template <code class="language-plaintext highlighter-rouge">blog/templates/blog/post_draft_list.html</code></p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% extends 'blog/base.html' %}
  
{% block content %}
    {% for post in posts %}
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">'post'</span><span class="nt">&gt;</span>
            <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"date"</span><span class="nt">&gt;</span>created: {{ post.created_date|date:'d-m-Y' }}<span class="nt">&lt;/p&gt;</span>
            <span class="nt">&lt;h1&gt;&lt;a</span> <span class="na">href=</span><span class="s">"{% url 'post_detail' pk=post.pk %}"</span><span class="nt">&gt;</span>{{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h1&gt;</span>
            <span class="nt">&lt;p&gt;</span>{{ post.text|truncatechars:200 }}<span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
    {% endfor %}
{% endblock %}
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="게시-버튼-추가하기">게시 버튼 추가하기</h3>

<p><code class="language-plaintext highlighter-rouge">blog/templates/blog/post_detail_list.html</code></p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% if post.published_date %}
	<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"date"</span><span class="nt">&gt;</span>
        {{ post.published_date }}
	<span class="nt">&lt;/div&gt;</span>
{% else %}
	<span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"btn btn-default"</span> <span class="na">href=</span><span class="s">"{% url 'post_publish' pk=post.pk %}"</span><span class="nt">&gt;</span>Publish<span class="nt">&lt;/a&gt;</span>
{% endif %}
</code></pre></div></div>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">published_date</code>필드가 비었을 때, <code class="language-plaintext highlighter-rouge">&lt;a&gt;</code>태그의 내용으로 실행됩니다. pk가 넘어감</p>
  </li>
  <li>
    <p>url <code class="language-plaintext highlighter-rouge">blog/urls.py</code></p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">path</span><span class="p">(</span><span class="s">'post/&lt;pk&gt;/publish/'</span><span class="p">,</span> <span class="n">views</span><span class="p">.</span><span class="n">post_publish</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">'post_publish'</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>view <code class="language-plaintext highlighter-rouge">blog/views.py</code></p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">post_publish</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">pk</span><span class="p">):</span>
    <span class="n">post</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">Post</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
    <span class="n">post</span><span class="p">.</span><span class="n">publish</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">'post_detail'</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>model <code class="language-plaintext highlighter-rouge">blog/models.py</code>에서 <code class="language-plaintext highlighter-rouge">Post</code>모델을 만들  때 다음과 같이 작성했었음!</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">publish</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">published_date</span> <span class="o">=</span> <span class="n">timezone</span><span class="p">.</span><span class="n">now</span><span class="p">()</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">save</span><span class="p">()</span>
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="게시글-삭제하기">게시글 삭제하기</h3>

<p><code class="language-plaintext highlighter-rouge">blog/templates/blog/post_detail.html</code>을 열어 다음 코드를 추가한다. edit 버튼 아래에 추가</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"btn btn-default"</span> <span class="na">href=</span><span class="s">"{% url 'post_remove' pk=post.pk %}"</span><span class="nt">&gt;&lt;span</span> <span class="na">class=</span><span class="s">"glyphicon glyphicon-remove"</span><span class="nt">&gt;&lt;/span&gt;&lt;/a&gt;</span>
</code></pre></div></div>

<p>이제 URL이 필요하다(<code class="language-plaintext highlighter-rouge">blog/urls.py</code>)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">path</span><span class="p">(</span><span class="s">'post/&lt;pk&gt;/remove/'</span><span class="p">,</span><span class="n">views</span><span class="p">.</span><span class="n">post_remove</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">'post_remove'</span><span class="p">),</span>
</code></pre></div></div>

<p>이젠 <code class="language-plaintext highlighter-rouge">view</code>를 만들어보자! <code class="language-plaintext highlighter-rouge">blog/views.py</code>를 열고 다음 코드를 추가한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">post_remove</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">pk</span><span class="p">):</span>
    <span class="n">post</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">Post</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="n">pk</span><span class="p">)</span>
    <span class="n">post</span><span class="p">.</span><span class="n">delete</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">'post_list'</span><span class="p">)</span>
</code></pre></div></div>

<p>이제 블로그 게시글을 지울 수 있다. 모든 장고 모델은 <code class="language-plaintext highlighter-rouge">.delete()</code>를 사용하면 지울 수 있다!</p>

<p><code class="language-plaintext highlighter-rouge">redirect</code>를 사용하여 게시글이 삭제된 후에 <code class="language-plaintext highlighter-rouge">post_list</code>페이지로 이동하게 만들었다.</p>

:ET