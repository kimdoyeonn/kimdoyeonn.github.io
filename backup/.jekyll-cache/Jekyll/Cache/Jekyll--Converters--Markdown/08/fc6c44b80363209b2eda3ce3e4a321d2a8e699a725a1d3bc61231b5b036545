I"<p>응용 프로그램, 운영체제, 컴퓨터 하드웨어(시스템 리소스)의 관계는 도서관서비스로 비유할 수 있다.</p>

<p>운영체제를 도서관, 응용프로그램을 시민, 컴퓨터 하드웨어를 책이라고 비유고 운영체제(도서관)의 역할을 살펴보면</p>

<ul>
  <li>시민(응용프로그램)은 도서관(운영체제)에 원하는 책(자원)을 요청함</li>
  <li>도서관(운영체제)은 적절한 책(자원)을 찾아서, 시민(응용프로그램)에게 빌려줌</li>
  <li>시민(응용프로그램)이 기한이 다 되면, 도서관(운영체제)이 해당 책(자원)을 회수함</li>
  <li>불량 회원의 자원을 강제로 회수함,, 등등 과 같은 역할을 한다.</li>
</ul>

<h4 id="응용프로그램-운영체제-컴퓨터-하드웨어-관계">응용프로그램, 운영체제, 컴퓨터 하드웨어 관계</h4>

<ul>
  <li>운영체제는 응용프로그램이 요청하는 메모리를 허가하고, 분배한다.</li>
  <li>운영체제는 응용 프로그램이 요청하는 CPU 시간을 제공한다.</li>
  <li>운영체제는 응용 프로그램이 요청하는 IO Devices 사용을 허가/제어한다.</li>
</ul>

<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Operating_system_placement_kor.png/180px-Operating_system_placement_kor.png" alt="Operating system placement kor.png" /></p>

<p><img src="https://media.vlpt.us/images/underlier12/post/2b8f5464-5db5-4291-b79b-d39f1910af31/image.png" alt="img" style="zoom:67%;" /></p>

<h3 id="쉘shell">쉘(Shell)</h3>

<ul>
  <li>운영체제가 제공하는 사용자 인터페이스</li>
  <li>사용자가 운영체제 기능과 서비스를 조작할 수 있도록 인터페이스를 제공하는 프로그램</li>
  <li>쉘은 터미널 환경(CLI)과, GUI 환경 두 종류로 분류</li>
</ul>

<h3 id="apiapplication-programming-interface">API(Application Programming Interface)</h3>

<ul>
  <li>운영체제가 응용 프로그램을 위해서 제공하는 인터페이스(프로그래밍 언어를 통해)</li>
  <li>각 언어별 운영체제 기능 호출 인터페이스 함수(각 언어별 인터페이스)</li>
  <li>함수로 제공된다.(ex. open())</li>
  <li>수가 많기 때문에 보통은 종류별로 묶어서 라이브러리(library) 형태로 제공
    <ul>
      <li>ex. C library</li>
    </ul>
  </li>
</ul>

<h3 id="시스템-콜">시스템 콜</h3>

<ul>
  <li>시스템 콜, 시스템 호출 인터페이스</li>
  <li>운영체제 기능을 호출하는 함수</li>
  <li>운영체제가 운영체제 각 기능을 사용할 수 있도록 시스템 콜이라는 명령, 함수를 제공</li>
  <li>API 내부에는 시스템콜을 호출하는 형태로 만들어지는 경우가 대부분</li>
  <li>정의 예: POSIX API, 윈도우 API</li>
</ul>

<p><img src="https://user-images.githubusercontent.com/53068706/114696308-78d6f100-9d57-11eb-8dde-f5b2b3bc931e.png" alt="image" /></p>

<ul>
  <li>
    <p>운영체제를 사용하려면 어떤 식으로 사용해야하는지 나와있는 것이 <code class="language-plaintext highlighter-rouge">시스템 콜</code></p>
  </li>
  <li>
    <p>시스템 콜을 직접 사용하는 것이 복잡하고 어려울 수 있기 때문에 좀 정리를 해서 더 쉽게 사용할 수 있도록 만들어 놓은 것이 <code class="language-plaintext highlighter-rouge">Library</code>와 <code class="language-plaintext highlighter-rouge">API</code> 이다. 때문에 API를 뜯어보면 시스템 콜을 호출하고 있는 것을 알 수 있다.</p>
  </li>
  <li>
    <p>라이브러리와 API를 사용해서 어플리케이션이나 쉘을 만들고 그것을 사용자들이 사용하게 되는 것</p>
  </li>
</ul>

<h3 id="운영체제를-만드는-순서">운영체제를 만드는 순서</h3>

<ol>
  <li>운영체제를 개발 (kernel)</li>
  <li>시스템 콜을 개발</li>
  <li>C API(library) 개발 (쉘을 만들기 위해서 자신이 정한 언어로 만듦, 보통은 C)</li>
  <li>Shell 프로그램 개발</li>
  <li>응용 프로그램 개발</li>
</ol>

<h4 id="정리">정리</h4>

<ul>
  <li>운영체제는 컴퓨터 하드웨어와 응용 프로그램을 관리</li>
  <li>사용자 인터페이스를 제공하기 위해 운영체제가 쉘을 제공</li>
  <li>운영체제는 응용 프로그램에 운영체제 기능을 제공하기 위해서 시스템 콜을 제공</li>
  <li>보통 시스템 콜을 직접 사용하기 보다는 해당 시스템 콜을 사용해서 만든 각 언어별 라이브러리(API)를 사용</li>
</ul>
:ET