I"v!<h6 id="문제-설명">문제 설명</h6>

<p>점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.</p>

<p>전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.</p>

<h5 id="제한사항">제한사항</h5>

<ul>
  <li>전체 학생의 수는 2명 이상 30명 이하입니다.</li>
  <li>체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li>
  <li>여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li>
  <li>여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.</li>
  <li>여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.</li>
</ul>

<h5 id="입출력-예">입출력 예</h5>

<table>
  <thead>
    <tr>
      <th>n</th>
      <th>lost</th>
      <th>reserve</th>
      <th>return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>5</td>
      <td>[2, 4]</td>
      <td>[1, 3, 5]</td>
      <td>5</td>
    </tr>
    <tr>
      <td>5</td>
      <td>[2, 4]</td>
      <td>[3]</td>
      <td>4</td>
    </tr>
    <tr>
      <td>3</td>
      <td>[3]</td>
      <td>[1]</td>
      <td>2</td>
    </tr>
  </tbody>
</table>

<h5 id="입출력-예-설명">입출력 예 설명</h5>

<p>예제 #1
1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.</p>

<p>예제 #2
3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다.</p>

<p><a href="http://hsin.hr/coci/archive/2009_2010/contest6_tasks.pdf">출처</a></p>

<h3 id="내-풀이">내 풀이</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 체육복
</span><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">lost</span><span class="p">,</span> <span class="n">reserve</span><span class="p">):</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="c1"># 여벌옷이 있는데 도난당한 학생을 먼저 걸러주어야함
</span>    <span class="c1"># 먼저 걸러주지 않으면 반복문을 돌면서 앞의 학생을 처리할 때 필요없는데 빌림당할수도 있음
</span>    <span class="n">f_lost</span> <span class="o">=</span> <span class="p">[</span><span class="n">std</span> <span class="k">for</span> <span class="n">std</span> <span class="ow">in</span> <span class="n">lost</span> <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">std</span> <span class="ow">in</span> <span class="n">reserve</span><span class="p">)]</span> 
    <span class="c1"># list(set(lost)-set(reserve))
</span>    <span class="n">f_reserve</span> <span class="o">=</span> <span class="p">[</span><span class="n">std</span> <span class="k">for</span> <span class="n">std</span> <span class="ow">in</span> <span class="n">reserve</span> <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">std</span> <span class="ow">in</span> <span class="n">lost</span><span class="p">)]</span> 
    <span class="c1"># list(set(reserve)-set(lost))
</span>

    <span class="k">for</span> <span class="n">std</span> <span class="ow">in</span> <span class="n">f_reserve</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">std</span><span class="o">-</span><span class="mi">1</span> <span class="ow">in</span> <span class="n">f_lost</span><span class="p">:</span>
            <span class="n">f_lost</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">std</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">std</span><span class="o">+</span><span class="mi">1</span> <span class="ow">in</span> <span class="n">f_lost</span><span class="p">:</span>
            <span class="n">f_lost</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">std</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">n</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">f_lost</span><span class="p">)</span>

</code></pre></div></div>

<h3 id="다른-사람-풀이">다른 사람 풀이</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">lost</span><span class="p">,</span> <span class="n">reserve</span><span class="p">):</span>
    <span class="n">_reserve</span> <span class="o">=</span> <span class="p">[</span><span class="n">r</span> <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">reserve</span> <span class="k">if</span> <span class="n">r</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">lost</span><span class="p">]</span>
    <span class="n">_lost</span> <span class="o">=</span> <span class="p">[</span><span class="n">l</span> <span class="k">for</span> <span class="n">l</span> <span class="ow">in</span> <span class="n">lost</span> <span class="k">if</span> <span class="n">l</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">reserve</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">_reserve</span><span class="p">:</span>
        <span class="n">f</span> <span class="o">=</span> <span class="n">r</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="n">b</span> <span class="o">=</span> <span class="n">r</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">_lost</span><span class="p">:</span>
            <span class="n">_lost</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">_lost</span><span class="p">:</span>
            <span class="n">_lost</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">n</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">_lost</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">not in</code>을 사용할 수 있다는걸 몰랐다. 나중에 써먹어야지
<code class="language-plaintext highlighter-rouge">set(x)-set(y)</code>도 할 수 있는지 몰랐다. 중복된 자료를 걸러낼 때 사용하면 편할 것 같다.</p>

  <p>세세하게 차근차근 따져보지 않고 두루뭉실하게 대충 생각하는 버릇이 있는거같다. 귀찮아도 차근차근 천천히 최대한 많은 경우를 따져볼 수 있게 노력해야겠다.</p>
</blockquote>
:ET