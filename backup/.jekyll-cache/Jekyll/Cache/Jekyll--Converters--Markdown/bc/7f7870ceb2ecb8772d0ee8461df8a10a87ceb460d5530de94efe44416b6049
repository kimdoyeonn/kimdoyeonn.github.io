I"K<h3 id="호이스팅hoisting">호이스팅(Hoisting)</h3>

<p>선언된 변수, 함수 등을 유효범위의 최상단으로 끌어올리는 것을 말한다.</p>

<p><strong>대상</strong></p>

<ul>
  <li>var 변수 선언, 함수 선언문이 끌어올려진다.</li>
  <li>할당이 아닌, 선언 자체만 끌어올려진다.</li>
  <li>let, const 변수 선언, 함수 표현식은 블록 스코프가 명확하기 때문에 호이스팅이 발생하지 않는다.</li>
</ul>

<p><strong>우선순위</strong></p>

<ul>
  <li>변수 선언이 함수 선언보다 높이 끌어올려진다.</li>
</ul>

<hr />

<h3 id="얕은-복사-vs-깊은-복사">얕은 복사 vs 깊은 복사</h3>

<p>얕은 복사란 객체를 복사할 때 겉의 객체는 새로 만들어져 새로운 주소를 가지지만 내부의 객체들은 기존의 객체와 동일한 주소를 갖는 것을 말한다. 때문에 내부의 객체들은 하나만 변경되더라도 원본과 복사본 모두 변경된다. 껍데기만 새로운 껍데기인 것</p>

<p>깊은 복사의 경우 복합 객체는 물론 내부의 다른 객체들까지 재귀적으로 모두 새로운 객체로 생성된다. 때문에 완전히 다른 객체가 생성된 것과 같아서, 원본 객체를 수정한다고 하더라도 복사본 객체는 상태글 그대로 유지한다.</p>
:ET