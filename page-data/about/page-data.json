{"componentChunkName":"component---src-pages-about-js","path":"/about/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"837da3c6-df3b-5a76-97ff-cfc9dc268b94","excerpt":"암호화된 유저 데이터를 클라이언트에 저장해놓는 인증 방식이다. 대표적인 Token 기반 인증인 JWT는 Access Token, Refresh Token 이렇게 두 개의 토큰을 사용한다. JWT(JSON Web Token) Access Token…","html":"<p>암호화된 유저 데이터를 클라이언트에 저장해놓는 인증 방식이다. 대표적인 Token 기반 인증인 JWT는 Access Token, Refresh Token 이렇게 두 개의 토큰을 사용한다.</p>\n<h3 id=\"jwtjson-web-token\" style=\"position:relative;\"><a href=\"#jwtjson-web-token\" aria-label=\"jwtjson web token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT(JSON Web Token)</h3>\n<p>Access Token는 보호된 유저 정보에 접근할 수 있는 권한 부여에 사용하고, Refresh Token은 access token이 만료될 경우 새로운 access token을 생성하기 위해 사용한다. 클라이언트가 처음 인증할 때는 access token, refresh token을 둘 다 받게 되지만, 실제로 권한을 얻을 때 사용하는 토큰은 access token이다.</p>\n<p>이렇게 두 개의 토큰을 사용하는 이유는 악의적인 목적을 가진 누군가에게 토큰을 탈취당했을 경우를 대비하기 위해서이다. access token은 refresh token보다 유효시간이 짧게 설정되어 있기 때문에 만약 유저가 access token을 탈취당하더라도 유효시간이 끝나면 사용할 수 없기 때문에 피해를 최소화할 수 있다.</p>\n<p>하지만 이도 refresh token을 탈취당하면 소용이 없다. refresh token을 사용하면 access token이 만료되더라도 재발급받을 수 있기 때문이다.</p>\n<p>refresh token은 보통 유저가 일정 시간이 지나면 또 로그인을 해야하는 번거로움을 해결하기 위해 사용된다. 하지만 위에 설명처럼 악의적 유저에게 탈취당할 경우 치명적인 피해를 당할 수 있기 때문에, 서비스에 따라 유저의 편의보다 보안이 중요할 경우에는 refresh token을 사용하지 않기도 한다.</p>\n<h3 id=\"jwt의-구조\" style=\"position:relative;\"><a href=\"#jwt%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"jwt의 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT의 구조</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">header<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">.</span>signature</code></pre></div>\n<p>header, payload, signature 세 부분이 <code class=\"language-text\">.</code>으로 구분되어 하나의 토큰을 이룬다.</p>\n<ol>\n<li>\n<p>header</p>\n<p>어떤 종류의 토큰인지(<code class=\"language-text\">JWT</code>), 어떤 알고리즘으로 암호화되는지가 JSON 형태로 작성되어 있다. base64로 인코딩한다.</p>\n</li>\n<li>\n<p>Payload</p>\n<p>정보가 담겨 있다. 어떤 정보에 접근할 수 있는지에 대한 권한이나 유저의 데이터 같은 필요한 데이터를 담아 암호화한다. 암호화되기는 하지만 민감한 정보는 담지 않는 것이 좋다. header와 마찬가지로 JSON 객체 형태이다. base64로 인코딩한다.</p>\n</li>\n<li>\n<p>Signature</p>\n<p>base64로 인코딩된 header와 payload에 원하는 비밀키를 추가하여 암호화한다.(salt) base64 인코딩만 한 값은 누구나 쉽게 디코딩할 수 있지만, 이 단계에서 비밀키를 추가하여 한번 더 암호화를 진행하기 때문에 한층 더 강화된 암호화를 할 수 있다.</p>\n</li>\n</ol>\n<h3 id=\"토큰-기반-인증-절차\" style=\"position:relative;\"><a href=\"#%ED%86%A0%ED%81%B0-%EA%B8%B0%EB%B0%98-%EC%9D%B8%EC%A6%9D-%EC%A0%88%EC%B0%A8\" aria-label=\"토큰 기반 인증 절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토큰 기반 인증 절차</h3>\n<ol>\n<li>클라이언트가 서버에 로그인 요청을 보낸다.</li>\n<li>\n<p>서버에서 아이디와 비밀번호가 일치하는지 확인한 후 클라이언트에게 보낼 암호화된 토큰을 생성한다.</p>\n<p>access와 refresh 가 둘다 생성되지만, 둘의 내용이 같을 필요는 없다. 토큰에는 유저 식별정보, 권한이 부여된 카테고리 등이 들어갈 수 있다.</p>\n</li>\n<li>생성된 토큰은 클라이언트에 전달되고, 클라이언트는 토큰을 저장한다. 토큰이 저장되는 위치는 localStorage, cookie, React state 등 다양하다.</li>\n<li>\n<p>클라이언트가 HTTP 헤더(<code class=\"language-text\">authorization</code>)에 토큰을 담아 보낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token literal-property property\">authrization</span><span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>credentials</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>authorization 필드에는 위와 같은 형식으로 문자열 값을 작성하면 된다. 여기서 type은 토큰을 처리하는 방식이다. 토큰을 처리하는 방식은 Basic, Bearer, Digest, HOBA 등 여러가지가 있다. JWT는 Bearer 방식이 사용된다.</p>\n</li>\n<li>서버는 클라이언트가 보낸 토큰을 복호화하여 서버에서 발급한 토큰이 맞는지 확인하고, 맞을 경우 클라이언트의 요청을 처리한다.</li>\n</ol>\n<h3 id=\"토큰-기반-인증의-장점\" style=\"position:relative;\"><a href=\"#%ED%86%A0%ED%81%B0-%EA%B8%B0%EB%B0%98-%EC%9D%B8%EC%A6%9D%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"토큰 기반 인증의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토큰 기반 인증의 장점</h3>\n<ol>\n<li>\n<p>Statelessness &#x26; Scalability(무상태성 &#x26; 확장성)</p>\n<p>서버는 클라이언트가 보내준 토큰을 확인하여 그 때 그때 클라이언트를 확인할 뿐 클라이언트의 정보를 따로 저장하지 않아도 된다.</p>\n<p>올바른 비밀키를 가진 서버면 어디서든 인증이 가능하기 때문에 서버를 여러 개 가지고 있는 서비스에서 특히 유용하다.</p>\n</li>\n<li>\n<p>안전하다.</p>\n<p>암호화한 토큰을 사용하고, 암호화 키는 노출할 필요없이 서버에만 있기 때문에 안전하다.</p>\n</li>\n<li>\n<p>어디서나 생성할 수 있다.</p>\n<p>토큰을 발급한 서버와 토큰을 확인하는 서버가 같지 않아도 된다. 토큰 생성용 서버를 따로 만들거나, 다른 회사에 토큰 관련 작업을 맡기는 등의 다양한 활용도 가능하다.</p>\n</li>\n<li>\n<p>권한 부여에 용이하다.</p>\n<p>토큰의 payload에 유저별로 어떤 정보에 접근 가능한지를 저장해놓을 수 있기 때문에 다양한 권한 설정이 가능하다.</p>\n</li>\n</ol>","frontmatter":{"title":"Token 방식 인증이란?","date":"November 23, 2021","lang":null}}},{"node":{"id":"cef0093f-cc5e-5d7a-b05e-af81341276e2","excerpt":"image Web Server 웹 브라우저, 클라이언트로부터 HTTP 요청을 받아 정적 컨텐츠를 제공하기 위한 프로그램이다.  두 가지 동작 중 요청에 적절한 동작을 적절히 선택하여 수행한다. 정적인 콘텐츠 제공 WAS…","html":"<p><img src=\"https://user-images.githubusercontent.com/53068706/138560058-b70d9e18-9662-4db8-87cc-0f53345ba0e9.png\" alt=\"image\"></p>\n<h3 id=\"web-server\" style=\"position:relative;\"><a href=\"#web-server\" aria-label=\"web server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Server</h3>\n<p>웹 브라우저, 클라이언트로부터 HTTP 요청을 받아 정적 컨텐츠를 제공하기 위한 프로그램이다. </p>\n<p>두 가지 동작 중 요청에 적절한 동작을 적절히 선택하여 수행한다.</p>\n<ol>\n<li>\n<p>정적인 콘텐츠 제공</p>\n<p>WAS를 거치지 않고 바로 자원을 제공한다.</p>\n</li>\n<li>\n<p>동적인 콘텐츠 제공을 위한 요청 전달</p>\n<p>클라이언트(보통 브라우저)의 요청을 WAS에게 보내고, WAS가 처리한 결과를 클라이언트에게 전달한다. </p>\n</li>\n</ol>\n<p>앱 서버까지 요청이 가지 않아도 웹 서버를 통해 정적인 파일을 빠르게 보내줄 수 있다. 때문에 정적인 파일들을 웹 서버가 처리하여 서버의 부담을 줄일 수 있다.</p>\n<p>대표적인 Web Server 플랫폼 구축 소프트웨어는 Apache, Nginx, IIS가 있다.</p>\n<h3 id=\"was-web-application-server\" style=\"position:relative;\"><a href=\"#was-web-application-server\" aria-label=\"was web application server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WAS, Web Application Server</h3>\n<p>DB 조회나 다양한 로직 처리를 요구하는 동적 콘텐츠를 제공하기 위해 만들어진 Application Server이다. HTTP를 통해 컴퓨터나 장치에 애플리케이션을 수행해주는 미들웨어(소프트웨어 엔진)이다.</p>\n<p>‘웹 컨테이너’ ‘서블릿 컨테이너’라고도 불린다. 컨테이너란 JSP, Servlet을 실행시킬 수 있는 소프트웨어를 말한다. 즉, WAS는 JSP, Servlet 구동 환경을 제공하는 것이다.</p>\n<p>WAS는 Web Server와 Web Container를 합한 것이다. Web Server 기능들을 구조적으로 분리하여 처리하고자하는 목적으로 제시되었다. 분산 트랜잭션, 보안, 메시징, 쓰레드 처리 등의 기능을 처리하는 분산 환경에서 사용되고, 주로 DB 서버와 같이 수행된다.</p>\n<p>현재는 WAS가 가지고 있는 Web Server도 정적인 컨텐츠를 처리하는데 있어서 성능 차이가 거의 없다.</p>\n<ul>\n<li>\n<p>주요기능</p>\n<ol>\n<li>프로그램의 실행 환경과 DB 접속 기능 제공</li>\n<li>여러 개의 트랜잭션(논리적 작업 단위) 관리 기능</li>\n<li>업무를 처리하는 비지니스 로직 수행</li>\n</ol>\n</li>\n</ul>\n<p>웹 서버만 이용하면 사용자가 원하는 요청에 대한 결과값을 모두 미리 만들어놓고 서비스해야 하는데, 자원이 부족하기 때문에 불가능하다. 때문에 WAS를 통해 요청에 맞는 데이터를 DB에서 가져와 비지니스 로직에 맞게 그때 그때 결과를 만들어서 제공하므로써 자원을 효율적으로 사용할 수 있다.</p>\n<p>대표적인 WAS 플랫폼 구축 소프트웨어에는 Apache 재단의 Tomcat, Tmax 사의 Jeus, IBM 사의 Web Sphere, Open source project인 Node.js 등이 있다.</p>\n<h3 id=\"static-pages-정적-컨텐츠\" style=\"position:relative;\"><a href=\"#static-pages-%EC%A0%95%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0\" aria-label=\"static pages 정적 컨텐츠 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static Pages 정적 컨텐츠</h3>\n<ul>\n<li>Web Server는 파일 경로 이름을 받아 경로와 일치하는 file contents를 반환한다.</li>\n<li>항상 동일한 페이지를 반환한다.</li>\n<li>html, css, 이미지, js 파일 같이 컴퓨터에 저장되어 있는 파일들을 말한다.</li>\n</ul>\n<h3 id=\"dynamic-pages-동적-콘텐츠\" style=\"position:relative;\"><a href=\"#dynamic-pages-%EB%8F%99%EC%A0%81-%EC%BD%98%ED%85%90%EC%B8%A0\" aria-label=\"dynamic pages 동적 콘텐츠 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Pages 동적 콘텐츠</h3>\n<ul>\n<li>인자의 내용에 맞게 동적인 contents를 반환한다.</li>\n<li>즉, 웹 서버에 의해 실행되는 프로그램을 통해 만들어지는 결과물</li>\n</ul>\n<h3 id=\"was와-web-server를-분리한-이유\" style=\"position:relative;\"><a href=\"#was%EC%99%80-web-server%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"was와 web server를 분리한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WAS와 Web Server를 분리한 이유</h3>\n<ul>\n<li>기능을 분리하여 서버 부하 방지</li>\n<li>물리적으로 분리하여 보안 강화</li>\n<li>여러 개의 WAS를 연결 가능</li>\n<li>여러 웹 어플리케이션 서비스 기능</li>\n</ul>\n<p>⇒ 자원 이용의 효율성 및 장애 극복, 배포 및 유지보수의 편의성을 위해 분리한다.</p>\n<p>출처:</p>\n<ul>\n<li><a href=\"https://gmlwjd9405.github.io/2018/10/27/webserver-vs-was.html\">[Web] Web Server와 WAS의 차이와 웹 서비스 구조</a></li>\n</ul>","frontmatter":{"title":"웹 서버와 앱 서버의 차이","date":"October 23, 2021","lang":null}}},{"node":{"id":"692f5476-2997-5d46-a029-7bcb3c1f13da","excerpt":"프로세스(process)란? 운영체제에서 실행 중인 하나의 프로그램을 프로세스라고 한다.  프로그램이 실행되면 프로세스가 메모리에 적제되어 운영체제로부터 다른 프로세스와 독립된 메모리 영역(code, data, stack, heap…","html":"<h2 id=\"프로세스process란\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process%EB%9E%80\" aria-label=\"프로세스process란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스(process)란?</h2>\n<p>운영체제에서 실행 중인 하나의 프로그램을 프로세스라고 한다. </p>\n<p>프로그램이 실행되면 프로세스가 메모리에 적제되어 운영체제로부터 다른 프로세스와 독립된 메모리 영역(code, data, stack, heap)을 할당받는다. </p>\n<p>크롬 창을 여러 개 띄울 수 있듯이 하나의 프로그램은 여러 개의 프로세스를 가질 수 있다. </p>\n<h2 id=\"스레드thread란\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9Cthread%EB%9E%80\" aria-label=\"스레드thread란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스레드(thread)란?</h2>\n<p>사전적 의미로는 한 가닥의 실이라는 뜻으로, <strong>프로세스 내에서 실행되는 흐름의 단위</strong>이다. 하나의 프로세스는 여러 개의 스레드를 가질 수 있으며 각각의 스레드는 독립적으로 작동한다. 한 번에 돌릴 수 있는 스레드의 개수는 컴퓨터의 코어 개수와 같다. 한 번에 돌릴 수 있는 스레드가 하나인 경우를 싱글 스레드라고 하고, 2개 이상인 경우를 멀티 스레드라고 한다.</p>\n<p>스레드는 프로세스가 운영체제로부터 할당받은 메모리 공간 위에서 동작한다. 각각의 스레드는 독립된 stack을 할당받고, code, data, heap 영역은 서로 공유한다.</p>\n<h2 id=\"멀티-스레드multi-thread란\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0-%EC%8A%A4%EB%A0%88%EB%93%9Cmulti-thread%EB%9E%80\" aria-label=\"멀티 스레드multi thread란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티 스레드(multi-thread)란?</h2>\n<p>멀티스레드는 두 개 이상의 스레드를 가지는 경우를 말한다. 즉, 두 가지 이상의 작업을 동시에 처리할 수 있다. </p>\n<p>운영체제는 멀티 태스킹이 가능하도록 프로세스마다 컴퓨터 자원을 적절히 할당하고 병렬로 실행한다. 이를 멀티 프로세스라고 한다</p>\n<p>또, 한 프로세스 내에서 멀티 태스킹을 할 수 있도록 만들어진 경우도 있다. 이 경우가 멀티 스레드이다.</p>\n<p><strong>멀티 프로세스가 프로그램 단위의 멀티 태스킹이라면, 멀티 스레드는 프로그램 내부에서의 멀티 태스킹이라고 할 수 있다.</strong></p>\n<h2 id=\"nodejs는\" style=\"position:relative;\"><a href=\"#nodejs%EB%8A%94\" aria-label=\"nodejs는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js는?</h2>\n<p><a href=\"https://www.notion.so/3487bff0325348d0807cf12adaf11083\">이벤트 루프</a></p>\n<p>Node.js는 V8 엔진을 사용한다. 그리고 V8엔진은 싱글 스레드 이벤트 루프를 사용한다고 알려져 있다. 아 그럼 Node.js는 싱글 스레드이구나 할 수 있는데, 맞을 수도 있고 아닐 수도 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/143461340-77f91bfe-e25b-4d30-b67e-fa5e64b2e498.png\" alt=\"image\"></p>\n<p>Node.js 애플리케이션는 세 가지 영역으로 나눌 수 있다.</p>\n<ol>\n<li>자바스크립트 코드</li>\n<li>c++ 라이브러리인 libuv</li>\n<li>자바스크립트 코드와 libuv 라이브러리와 V8 사이의 인터페이스 역할을 하는 Node.js</li>\n</ol>\n<h3 id=\"libuv\" style=\"position:relative;\"><a href=\"#libuv\" aria-label=\"libuv permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>libuv</h3>\n<p>여기서 Node.js가 멀티스레드로도 동작하게 만드는 부분은 libuv에 구현되어 있다.</p>\n<p>우선 libuv에 대해 정리해보면, 비동기 입출력에 초점을 둔 멀티 플랫폼 지원 라이브러리이다. 다양한 네트워크, 운영체제와 관련된 기능을 포함하고 있으며, 주로 Node.js에 사용하기 위해 개발되었다. 기존 브라우저에서만 구동되던 자바스크립트를 브라우저 밖에서 구동될 수 있도록 해주기 위해 개발된 라이브러리라고 볼 수 있다. V8이 컨버팅한 c++ 코드를 이해하고 실행하는 역할을 한다.</p>\n<p>libuv는 OS 관련 처리를 위해 4개의 스레드 풀을 세팅한다. 그리고 이 스레드 풀 때문에 <code class=\"language-text\">crypto</code> 같은 node.js 내장 객체를 사용해보면 멀티 스레드로 동작하고 있는 것을 알 수 있다.</p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>자바스크립트 기반 언어인 Node.js는 기본적으로 싱글 스레드로 동작한다. 하지만 Node.js는 자바스크립트 만으로 이루어지지 않았다. 자바스크립트가 브라우저를 벗어나도록 만들어준 c++로 이루어진 libnv 라이브러리는 OS 작업을 위해 스레드 풀이라고 하는 기본 4개의 스레드를 추가로 세팅한다. 그리고 이 부분을 이용하는 입출력 작업 CPU 작업 모듈들은 사용할 경우 스레드 풀을 사용하게 되면서 멀티 스레드으로 동작하게 된다.</p>\n<p><strong>즉, Node.js는 기본적으로 싱글 스레드로 동작하지만 항상 그런 것은 아니며, 일부 모듈을 사용할 경우 멀티 스레드로 동작할 수 있다.</strong></p>\n<p>출처:</p>\n<ul>\n<li><strong><a href=\"https://medium.com/@gwakhyoeun/%EC%99%9C-node-js%EB%8A%94-single-thread-%EC%9D%B8%EA%B0%80-bb68434027a3\">왜 node.js는 single-thread 인가</a></strong></li>\n<li><strong><a href=\"https://gyofeel.github.io/js/nodejs/web/Javascript%EC%99%80-Nodejs%EB%8A%94-%EB%AA%A8%EB%91%90-%EC%8B%B1%EA%B8%80-%EC%8A%A4%EB%A0%88%EB%93%9C%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94%EA%B0%80/\">Javascript와 Nodejs, 그리고 싱글 스레드</a></strong></li>\n</ul>","frontmatter":{"title":"Node.js는 싱글 스레드다?","date":"November 25, 2021","lang":null}}},{"node":{"id":"78d5c22b-b75b-56a0-8164-b54be6ccc17a","excerpt":"서버와 클라이언트는 도메인이 다른 경우가 많다. 이를 Cross-Origin…","html":"<p>서버와 클라이언트는 도메인이 다른 경우가 많다. 이를 Cross-Origin이라고 하는데, 쉽게 말해 출처가 다르다는 것이다.  </p>\n<p>기본적으로 브라우저는 출처가 다른 경우를 허용하지 않는다. 하지만 인터넷이 발전하면서 출처가 다른 곳에서 데이터를 주고 받고 싶어하는 개발자의 수요가 늘어나기 시작했고, 결국엔 별도의 정책을 만들어 정책이 정한 조건을 만족하는 경우에는 다른 출처이더라도 통신을 가능하게 했다. 그렇게 생긴 정책이 CORS이다.  </p>\n<p>동일한 출처 간의 전송될 쿠키가 있을 경우 쿠키는 알아서 header로 들어가 서버로 전송된다. 하지만 서로 다른 출처 간의 통신에서는 header에 쿠키가 자동으로 들어가지 않기 때문에 개발자가 따로 몇 가지를 설정해주어야 한다.</p>\n<h3 id=\"view\" style=\"position:relative;\"><a href=\"#view\" aria-label=\"view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>View</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">url</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>body<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">withCredentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>axios로 통신할 때는 <code class=\"language-text\">withCredentials</code>를 <code class=\"language-text\">true</code>로 설정해주어야 한다.</p>\n<h3 id=\"express\" style=\"position:relative;\"><a href=\"#express\" aria-label=\"express permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Express</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://localhost:3000'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OPTIONS'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>express를 사용할 때는 cors 모듈의 <code class=\"language-text\">credentials</code>설정은 <code class=\"language-text\">Access-Control-Allow-Origin</code>를 true로 만들어 준다.</p>\n<p><code class=\"language-text\">origin: true</code>로 설정해주면 프론트 도메인 주소가 자동으로 <code class=\"language-text\">Access-Control-Allow-Origin</code>에 들어간다. 모든 주소에 대해 접근을 하는 와일드카드 <code class=\"language-text\">*</code>와는 다르다. </p>\n<p>출처:</p>\n<ul>\n<li><a href=\"https://www.zerocho.com/category/NodeJS/post/5e9bf5b18dcb9c001f36b275\">다른 도메인간 쿠키 전송하기(axios와 express 예제)\n</a></li>\n<li><a href=\"https://kosaf04pyh.tistory.com/152\">withCredentials 옵션</a></li>\n</ul>","frontmatter":{"title":"서버(Express.js)와 클라이언트(axios) 사이의 credential 설정","date":"November 22, 2021","lang":null}}},{"node":{"id":"dfb49a57-429b-5cdb-ab17-3b2738500af9","excerpt":"Content Delivery Network 지리적으로 분산된 서버를 이용하여 사용자 경험을 향상시키고, 서버의 부하를 방지하는 캐싱 방법이다. 동작 방식 트래픽이 낮은 시간에 복사본을 CDN…","html":"<p>Content Delivery Network</p>\n<p>지리적으로 분산된 서버를 이용하여 사용자 경험을 향상시키고, 서버의 부하를 방지하는 캐싱 방법이다.</p>\n<h3 id=\"동작-방식\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91-%EB%B0%A9%EC%8B%9D\" aria-label=\"동작 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작 방식</h3>\n<ol>\n<li>트래픽이 낮은 시간에 복사본을 CDN 데이터 센터들에 전송시켜 놓는다.</li>\n<li>사용자가 웹 콘텐츠 요청을 보낸다.</li>\n<li>사용자와 가장 가까운 CDN 데이터 센터를 찾아 웹 콘텐츠가 있는지 확인한다.</li>\n<li>있으면 사용자에게 바로 전송하고 없으면 다음으로 가까운 CDN 데이터 센터에서 웹 콘텐츠를 찾아 전송한다.</li>\n</ol>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ol>\n<li>사용자와 지리적으로 가까운 데이터 센터에서 콘텐츠를 제공하기 때문에 빠르게 콘텐츠를 제공할 수 있어 사용자 경험을 향상 시킬 수 있다.</li>\n<li>트래픽을 여러 서버로 분산시키기 때문에 트래픽 관련 비용이 절감된다.</li>\n<li>DDoS 공격에 어느정도 대응할 수 있다.<br>\nDDos 공격은 짧은 시간에 서버가 감당할 수 없을만큼 많은 요청을 보내서 서버를 사용할 수 없게 만드는 공격이다. CDN 데이터 센터가 DDoS 공격을 받아 사용할 수 없게 될 경우, 또 다른 CDN 데이터 센터가 역할을 대신할 수 있기 때문에 DDoS 공격에도 서비스가 중단되지 않을 수 있다.</li>\n</ol>\n<p>참고</p>\n<ul>\n<li>코드스테이츠 유어클래스</li>\n<li><a href=\"https://www.akamai.com/ko/our-thinking/cdn/what-is-a-cdn\">콘텐츠 전송 네트워크(CDN) — CDN이란 무엇인가요?</a></li>\n</ul>","frontmatter":{"title":"cdn이란?","date":"November 27, 2021","lang":null}}},{"node":{"id":"1ef71d22-7ad0-5ca8-8f76-e61092588e0c","excerpt":"자바스크립트에서 메모리 참조 변수 생성과 값 할당 자바스크립트에서 변수를 생성하고 값을 할당할 때 위와 같이 문을 작성한다. 키워드 let으로 a 변수를 생성하고 거기에 10…","html":"<h2 id=\"자바스크립트에서-메모리-참조\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%B0%B8%EC%A1%B0\" aria-label=\"자바스크립트에서 메모리 참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트에서 메모리 참조</h2>\n<h3 id=\"변수-생성과-값-할당\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%EC%83%9D%EC%84%B1%EA%B3%BC-%EA%B0%92-%ED%95%A0%EB%8B%B9\" aria-label=\"변수 생성과 값 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 생성과 값 할당</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자바스크립트에서 변수를 생성하고 값을 할당할 때 위와 같이 문을 작성한다.</p>\n<p>키워드 let으로 a 변수를 생성하고 거기에 100을 담는다 라는 의미이다. 이 과정을 자바스크립트의 동작 기준으로 나누면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> a<span class=\"token punctuation\">;</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자바스크립트에서는 변수의 생성과 값의 할당이 동시에 일어나지 않는다. 한번에 작성하더라도 따로 일어나고, 저장되는 메모리도 다르다.</p>\n<p>변수 할당이 일어나면 변수는 stack에 저장된다. 이 때 변수는 아무 값도 참조하고 있지 않기 때문에 <code class=\"language-text\">undefined</code>를 가지게 된다.</p>\n<p>그리고 값 할당이 일어나면 값은 heap에 어딘가에 저장된다. 그리고 heap이 저장된 메모리 주소가 stack의 변수의 값으로 저장된다. 따라서 <strong>자바스크립트에서 변수는 값을 직접 가지고 있는 것이 아니라 값이 저장된 메모리 주소를 참조하고 있다고 할 수 있다</strong>.</p>\n<h3 id=\"값-재할당\" style=\"position:relative;\"><a href=\"#%EA%B0%92-%EC%9E%AC%ED%95%A0%EB%8B%B9\" aria-label=\"값 재할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값 재할당</h3>\n<p>변수를 다루다 보면 재할당이 일어나는 것은 매우 흔한 일이다. 그럴 땐 아래와 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">a <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그러면 자바스크립트는 heap의 어딘가의 공간에 200을 저장한 후에 이미 저장되어 있는 변수 a가 참조하고 있는 주소를 200이 저장된 주소로 바꾼다.</p>\n<p><strong>더이상 아무 변수도 참조하고 있지 않은 100은 가비지 컬렉터의 수거 대상이 되어 적절한 시점에 제거된다.</strong></p>\n<h2 id=\"가비지-컬렉터garbage-collector-gc\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%ED%84%B0garbage-collector-gc\" aria-label=\"가비지 컬렉터garbage collector gc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가비지 컬렉터(Garbage Collector, GC)</h2>\n<p>가비지 컬렉터는 <strong>프로그램이 더이상 사용하지 않는 메모리를 자동으로 정리하는 기능</strong>을 말한다. 이 기능을 가진 언어는 Java, C#, V8엔진 등이 있다.</p>\n<p>가비지 컬렉터는 작동하는 시점이 정해져 있지 않고 조절할 수도 없다. 일단 작동하면 프로그램이 멈추고 작동이 끝날 때까지를 기다려야 한다. 작동을 막을 수 없기 때문에 개발자 입장에서 할 수 있는 최선은 메모리를 효율적으로 사용하여 가비지컬렉션 작업 시간을 최소한으로 줄이는 것이다.</p>","frontmatter":{"title":"자바스크립트 메모리 참조와 가비지 컬랙터(Garbage Collector)","date":"November 26, 2021","lang":null}}},{"node":{"id":"3836b0ff-890f-529d-bae3-acb2a4f4c65b","excerpt":"개발을 하다보면 API키나 데이터베이스 비밀번호 같이 외부에 유출되면 안되는 정보들을 사용하게 된다. 이 값들은 소스코드에 직접 포함하여 git 같은 곳에 공유할 경우 문제가 발생할 수 있기 때문에 환경변수로 만들어서 파일을 따로 관리해 주어야 한다. 실습을 하는 동안에는 .env…","html":"<p>개발을 하다보면 API키나 데이터베이스 비밀번호 같이 외부에 유출되면 안되는 정보들을 사용하게 된다. 이 값들은 소스코드에 직접 포함하여 git 같은 곳에 공유할 경우 문제가 발생할 수 있기 때문에 환경변수로 만들어서 파일을 따로 관리해 주어야 한다.</p>\n<p>실습을 하는 동안에는 .env 파일을 사용하여 환경변수를 설정해주고 이 파일이 GitHub에 올라가지 않도록 설정하여 관리했다. AWS에 배포를 할 때도 이와 비슷한 설정을 해주어야 한다.</p>\n<aside>\n📌 환경변수명은 로컬에서 개발할 때 사용하던 이름 그대로 설정해주면 된다.\n</aside>\n<h3 id=\"클라이언트\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8\" aria-label=\"클라이언트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라이언트</h3>\n<p>CodeBuild 서비스에서 환경 변수 설정을 할 수 있다.</p>\n<p>배포 프로젝트 → 편집 → 환경 → 추가 구성 → 환경변수 입력 → 환경 업데이트 → 변경사항 릴리즈</p>\n<p>위 단계로 환경변수를 설정하면 배포된 클라이언트에 환경변수를 적용할 수 있다.</p>\n<h3 id=\"서버\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84\" aria-label=\"서버 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버</h3>\n<p>AWS Parameter Store 서비스를 이용하여 EC2 인스턴스에 환경변수를 전달할 수 있다. 환경 변수 설정에 앞서 EC2에 AWS CLI가 설치되어 있어야 환경변수가 전달될 수 있다.</p>\n<p>파라미터 생성 → 환경변수명, 환경변수값을 입력 → 파라미터 생성 → 자동화배포 때 사용했던 코드에 환경변수를 가져올 수 있는 코드를 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token constant\">DATABASE_USER</span><span class=\"token operator\">=</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>aws ssm get<span class=\"token operator\">-</span>parameters <span class=\"token operator\">--</span>region ap<span class=\"token operator\">-</span>northeast<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token operator\">--</span>names <span class=\"token constant\">DATABASE_USER</span> <span class=\"token operator\">--</span>query Parameters<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">|</span> sed <span class=\"token string\">'s/\"//g'</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"AWS - 환경변수 설정","date":"December 07, 2021","lang":null}}},{"node":{"id":"ea9d1952-1ea1-504a-b81d-7eec4d495c81","excerpt":"뮤텍스와 세마포어는 다중 프로그래밍에서 자주 발생하는 문제인 데드락을 해결하기 위한 방법이다. 멀티스레드 정리 데드락은 프로세스나 스레드가 서로가 가진 자원을 가지기 위해 무한 대기상태에 빠지게 되는 것을 의미한다. 데드락이 발생하기 위해서는…","html":"<p>뮤텍스와 세마포어는 다중 프로그래밍에서 자주 발생하는 문제인 데드락을 해결하기 위한 방법이다.</p>\n<p><a href=\"https://www.notion.so/c762cff01e4e4a188e3176b9e5b249bb\">멀티스레드 정리</a></p>\n<p>데드락은 프로세스나 스레드가 서로가 가진 자원을 가지기 위해 무한 대기상태에 빠지게 되는 것을 의미한다.</p>\n<p>데드락이 발생하기 위해서는 4가지의 조건이 필요하다. 자세한 내용은 위 링크에 정리해놓았다.</p>\n<ul>\n<li>상호 배제</li>\n<li>점유 대기</li>\n<li>비선점</li>\n<li>순환 대기</li>\n</ul>\n<p>데드락은 이 4가지 조건 중 하나라도 만족하지 않는다면 발생하지 않는다. 뮤텍스와 세마포어는 이 중에서 상호 배제 조건을 해결하여 데드락을 해결한다.</p>\n<h2 id=\"뮤텍스mutex\" style=\"position:relative;\"><a href=\"#%EB%AE%A4%ED%85%8D%EC%8A%A4mutex\" aria-label=\"뮤텍스mutex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뮤텍스(Mutex)</h2>\n<p>mutual과 exclusion의 합성어이다.</p>\n<p>각 프로세스에서 공유 자원를 엑세스 하는 프로그램 코드 부분을 critical section이라고 하는데, 뮤텍스는 critical section을 한 번에 하나의 스레드만 사용할 수 있도록 제어함으로써 상호 배제 조건을 제거하여 데드락을 방지한다.</p>\n<h3 id=\"동작-방식\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91-%EB%B0%A9%EC%8B%9D\" aria-label=\"동작 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작 방식</h3>\n<p>먼저 접근한 스레드는 자신이 작업을 완료할 때까지 다른 스레드가 critical section을 사용하지 못하도록 lock을 건다. lock을 건 스레드만이 unlock을 할 수 있으며, unlock이 되어야 다른 스레드가 critical section을 사용할 수 있다.</p>\n<h2 id=\"세마포어semaphore\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%A7%88%ED%8F%AC%EC%96%B4semaphore\" aria-label=\"세마포어semaphore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세마포어(Semaphore)</h2>\n<p>세마포어는 세마포어 변수만큼의 스레드가 공유자원에 접근할 수 있다.</p>\n<p>세마포어 변수는 0 이상의 정수 값을 갖는다. 만약 세마포어가 0이라면 critical section에 더이상 접근할 수 없는 상태로, 세마포어가 1 이상이 될 때까지 대기해야 한다.</p>\n<p>참조</p>\n<ul>\n<li><a href=\"https://zangzangs.tistory.com/128\">뮤텍스(Mutex)와 세마포어(Semaphore)</a></li>\n<li><strong><a href=\"https://loginfo.dev/Semaphore-and-Mutex\">세마포어(Semaphore)와 뮤텍스(Mutex) - LOG.INFO</a></strong></li>\n</ul>","frontmatter":{"title":"뮤텍스(Mutex)와 세마포어(Semaphore)","date":"November 28, 2021","lang":null}}},{"node":{"id":"52154862-136f-5f3c-99a1-cd0f5d8ed0aa","excerpt":"Cache-Control max-age 캐시 유효시간(초) public 응답이 public 캐시(프록시 캐시)에 저장되어도 된다.  private 응답이 private 캐시(브라우저 캐시)에 저장되어야 한다.(default) s-maxage 프록시 캐시에만 적용되는 max-age no…","html":"<h2 id=\"cache-control\" style=\"position:relative;\"><a href=\"#cache-control\" aria-label=\"cache control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache-Control</h2>\n<h3 id=\"max-age\" style=\"position:relative;\"><a href=\"#max-age\" aria-label=\"max age permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>max-age</h3>\n<p>캐시 유효시간(초)</p>\n<h3 id=\"public\" style=\"position:relative;\"><a href=\"#public\" aria-label=\"public permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>public</h3>\n<p>응답이 public 캐시(프록시 캐시)에 저장되어도 된다. </p>\n<h3 id=\"private\" style=\"position:relative;\"><a href=\"#private\" aria-label=\"private permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>private</h3>\n<p>응답이 private 캐시(브라우저 캐시)에 저장되어야 한다.(default)</p>\n<h3 id=\"s-maxage\" style=\"position:relative;\"><a href=\"#s-maxage\" aria-label=\"s maxage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>s-maxage</h3>\n<p>프록시 캐시에만 적용되는 max-age</p>\n<h3 id=\"no-cache\" style=\"position:relative;\"><a href=\"#no-cache\" aria-label=\"no cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>no-cache</h3>\n<p>데이터를 캐시해도 되지만, <strong>항상 오리진 서버에 검증 후 사용</strong>해야 한다. </p>\n<p>캐시가 만료된 경우 오리진 서버에 접근을 실패하더라도 200OK와 오래된 데이터를 보내준다.</p>\n<h3 id=\"no-store\" style=\"position:relative;\"><a href=\"#no-store\" aria-label=\"no store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>no-store</h3>\n<p>민감한 정보이므로 저장되면 안 되고 사용된 후에 최대한 빨리 삭제되어야 한다.</p>\n<h3 id=\"must-revalidate\" style=\"position:relative;\"><a href=\"#must-revalidate\" aria-label=\"must revalidate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>must-revalidate</h3>\n<p>캐시가 만료된 후 오리진 서버의 검증을 받는데, 오리진 서버에 접근 실패시에 오류가 발생해야 한다. (504 Gateway Timeout)</p>\n<h2 id=\"pragma-no-cache\" style=\"position:relative;\"><a href=\"#pragma-no-cache\" aria-label=\"pragma no cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pragma: no-cache</h2>\n<p>HTTP1.0 하위 호환</p>\n<h2 id=\"age-60\" style=\"position:relative;\"><a href=\"#age-60\" aria-label=\"age 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>age: 60</h2>\n<p>오리진 서버에서 응답 후 프록시 캐시 내에 머문 시간(초)</p>\n<h2 id=\"expires-mon-01-jan-1990-000000-gmt\" style=\"position:relative;\"><a href=\"#expires-mon-01-jan-1990-000000-gmt\" aria-label=\"expires mon 01 jan 1990 000000 gmt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expires: Mon, 01 Jan 1990 00:00:00: GMT</h2>\n<ul>\n<li>정확한 날짜로 만료 시간 지정</li>\n<li>HTTP 1.0부터 사용</li>\n<li>Cache-Control: max-age가 더 권장됨(함께 사용하면 Expires가 무시됨)</li>\n</ul>\n<h2 id=\"last-modified\" style=\"position:relative;\"><a href=\"#last-modified\" aria-label=\"last modified permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Last-Modified</h2>\n<p>캐시 데이터의 마지막 수정일, 오리진 서버에서 캐시에 저장할 데이터를 보낼 때 같이 보낸다.</p>\n<h2 id=\"if-modified-since-if-unmodified-since\" style=\"position:relative;\"><a href=\"#if-modified-since-if-unmodified-since\" aria-label=\"if modified since if unmodified since permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If-Modified-Since, If-Unmodified-Since</h2>\n<p>클라이언트에서 유효시간이 만료된 캐시의 수정 여부를 서버에 확인할 때 사용한다.</p>\n<h2 id=\"etag\" style=\"position:relative;\"><a href=\"#etag\" aria-label=\"etag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Etag</h2>\n<p>캐시의 해시값을 응답에 담아 클라이언트에 보내줄 때 사용한다.</p>\n<h2 id=\"if-none-match-if-match\" style=\"position:relative;\"><a href=\"#if-none-match-if-match\" aria-label=\"if none match if match permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>If-None-Match, If-Match</h2>\n<p>클라이언트에서 유효시간이 만료된 캐시의 수정 여부를 서버에 확인할 때 사용한다.</p>","frontmatter":{"title":"캐시 관련 헤더 설정","date":"November 29, 2021","lang":null}}},{"node":{"id":"2bc8c1fc-74c4-56c9-a798-402618499870","excerpt":"express-session는 express에서 session을 사용하기 위한 express…","html":"<p>express-session는 express에서 session을 사용하기 위한 express 미들웨어이다. </p>\n<p>세션을 사용한 상태유지는 데이터 자체는 서버에 저장하고, 데이터를 저장한 세션의 아이디만 클라이언트에 쿠키로 전달한다. 이 때 세션에 대한 설정과 클라이언트에 보내지는 쿠키에 대한 설정을 미리 해줘야하는데, express-session에서는 아래와 같은 형식으로 옵션을 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">secret</span><span class=\"token operator\">:</span> <span class=\"token string\">'@doyeon'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">resave</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">saveUninitialized</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">cookie</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">domain</span><span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">sameSite</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">httpOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">secure</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"sessionoptions\" style=\"position:relative;\"><a href=\"#sessionoptions\" aria-label=\"sessionoptions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>session(options)</h3>\n<p>세션을 만들 때 사용하는 미들웨어이다. 인자로 옵션 객체를 전달하여 사용한다.</p>\n<h2 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>options</h2>\n<h3 id=\"cookie\" style=\"position:relative;\"><a href=\"#cookie\" aria-label=\"cookie permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cookie</h3>\n<p>클라이언트로 보낼 세션 아이디 쿠키 객체를 설정한다.</p>\n<ul>\n<li>domain: <code class=\"language-text\">Set-Cookie</code> 의 <code class=\"language-text\">domain</code>속성의 값을 정한다. 설정하지 않으면, 모든 클라이언트는 쿠키가 자신의 도메인에만 적용되는 것으로 안다.</li>\n<li>expires: 쿠키의 수명을 설정(Date 객체)</li>\n<li>httpOnly: <code class=\"language-text\">Set-Cookie</code> 의 <code class=\"language-text\">httpOnly</code> 속성의 값을 설정(boolean), <code class=\"language-text\">true</code>로 설정하면 클라이언트에서 자바스크립트에서 <code class=\"language-text\">document.cookie</code>로 접근할 수 없다.</li>\n<li>maxAge: <code class=\"language-text\">Set-Cookie</code>의 <code class=\"language-text\">Expires</code> 속성의 값으로 설정할 때 사용한다. 현재 서버 시간에 maxAge의 ms를 추가하여 만료 날짜를 계산한다.</li>\n<li>path: <code class=\"language-text\">Set-Cookie</code>의 <code class=\"language-text\">Path</code> 속성을 정한다. 기본 값은 ’/‘이다.</li>\n<li>\n<p>sameSite: boolean 이나 문자열 값이 <code class=\"language-text\">Set-Cookie</code>의 <code class=\"language-text\">SameSite</code> 속성으로 정해진다.</p>\n<ul>\n<li>true: SameSite를 Strict로 설정한다.</li>\n<li>false: SameSite를 설정하지 않는다.</li>\n<li>‘lax’: ‘Lax’로 설정 다른 origin에는 get 요청에만 쿠키를 전달한다.(같은 origin은 다 ok)</li>\n<li>‘none’: ‘None’로 설정, 모든 origin에 대해 쿠키를 전달한다.</li>\n<li>‘strict’: ‘Strict’로 설정, 같은 origin에만 쿠키를 전달한다.</li>\n</ul>\n</li>\n<li>secure: <code class=\"language-text\">Set-Cookie</code>의 <code class=\"language-text\">Secure</code> 값을 설정한다. boolean값이며 https인 서버에만 쿠키를 전달한다.</li>\n</ul>\n<h3 id=\"resave\" style=\"position:relative;\"><a href=\"#resave\" aria-label=\"resave permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>resave</h3>\n<p>true일 경우 요청 중에 세션을 수정하지 않은 경우에도 세션을 다시 저장소에 저장한다. 기본값은 true이지만 false로 많이 사용하기 때문에 deprecated 상태이다.</p>\n<p>true일 경우에는 서버로 병렬 요청이 들어올 경우 한 요청의 변경 사항과 다른 요청의 변경사항이 충돌하는 경우가 발생할 수 있다.</p>\n<p>세션 저장소에서 세션을 유지하도록 도와주는 touch 메소드를 사용하지 않을 경우에는 true로 사용한다. 하지만 거의 대부분의 저장소들이 touch 메소드를 사용하므로 false를 많이 사용한다.</p>\n<h3 id=\"saveuninitialized\" style=\"position:relative;\"><a href=\"#saveuninitialized\" aria-label=\"saveuninitialized permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>saveUninitialized</h3>\n<p>요청이 들어왔을 때마다 서버에 새로운 세션이 만들어지게 되는데 uninitialized는 요청이 새로 만들어진 세션을 사용하지 않은 경우를 말한다. </p>\n<p>이 설정은 요청이 새로 만들어진 세션을 사용하지 않은 경우에도 서버에 저장할지 하지 않을지를 결정한다. 기본값인 true로 설정하면 빈 세션을 서버에 저장하게 된다.</p>\n<p>출처:</p>\n<ul>\n<li>코드스테이츠 유어클래스</li>\n<li><strong><a href=\"https://fierycoding.tistory.com/36\">express-session 패키지의 resave, saveUninitialized 옵션</a></strong></li>\n<li><strong><a href=\"https://www.npmjs.com/package/express-session\">express-session 공식 문서</a></strong></li>\n</ul>","frontmatter":{"title":"express-session-options","date":"December 04, 2021","lang":null}}},{"node":{"id":"3291b39a-6e89-5830-a98f-b9d7aac572b2","excerpt":"merge 명령어는 브랜치를 생성하여 작업 후, 두 브랜치를 병합할 때 사용한다.  merge 명령어 흐름 main 브랜치에서 fix 브랜치를 생성한 후, fix 브랜치에서 작업을 진행한다.   명령어를 사용하면 새로운 브랜치를 만들고 만들어진 브랜치로 이동한다. 작업을 완료한 fix…","html":"<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> merge</code></pre></div>\n<p>merge 명령어는 브랜치를 생성하여 작업 후, 두 브랜치를 병합할 때 사용한다.</p>\n<h5 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<h2 id=\"merge-명령어-흐름\" style=\"position:relative;\"><a href=\"#merge-%EB%AA%85%EB%A0%B9%EC%96%B4-%ED%9D%90%EB%A6%84\" aria-label=\"merge 명령어 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>merge 명령어 흐름</h2>\n<ol>\n<li>\n<p>main 브랜치에서 fix 브랜치를 생성한 후, fix 브랜치에서 작업을 진행한다. </p>\n<ul>\n<li><code class=\"language-text\">checkout -b</code> 명령어를 사용하면 새로운 브랜치를 만들고 만들어진 브랜치로 이동한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -b fix</code></pre></div>\n</li>\n<li>\n<p>작업을 완료한 fix 브랜치의 결과를 main 브랜치에 적용시키려고 한다. 일단 <code class=\"language-text\">checkout</code> 명령어를 사용하여 현재 브랜치 위치를 main 브랜치로 이동한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout main</code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">merge</code>를 진행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> merge fix</code></pre></div>\n</li>\n</ol>\n<h5 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<h2 id=\"병합-유형\" style=\"position:relative;\"><a href=\"#%EB%B3%91%ED%95%A9-%EC%9C%A0%ED%98%95\" aria-label=\"병합 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>병합 유형</h2>\n<h3 id=\"fast-forward\" style=\"position:relative;\"><a href=\"#fast-forward\" aria-label=\"fast forward permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fast-forward</h3>\n<p>main 브랜치에 fix 브랜치를 병합할 때, main 브랜치의 상태가 변경되지 않았다면 쉽게 병합이 진행될 수 있다. fix 브랜치가 이미 main 브랜치의 상태를 모두 포함하고 있기 때문이다. 이 같은 병합 방식을 <strong>Fast-forward</strong>이라고 한다.</p>\n<p>병합이 끝나고 나면 fix 브랜치의 마지막 커밋이 최근 커밋이 되고, fix 브랜치는 사라진다.</p>\n<h3 id=\"merge-commit\" style=\"position:relative;\"><a href=\"#merge-commit\" aria-label=\"merge commit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>merge commit</h3>\n<p>하지만 main 브랜치의 상태도 변경되었다면, main 브랜치의 변경과 fix 브랜치의 변경을 합치는 병합이 진행된다. 이 병합 방식은 <strong>merge commit</strong>이라고 한다. </p>\n<p>병합이 진행되면서 새로운 커밋이 생성되기 때문에 마지막 커밋은 이 새로운 커밋이 된다. fix 브랜치도 그대로 남는다.</p>\n<p>만약 Fast-forward가 가능한 경우에 병합 이후에도 브랜치를 남기고 싶다면 <strong>non-fast-forward</strong> 옵션을 지정하여 병합을 진행하면 된다.</p>\n<h3 id=\"conflict\" style=\"position:relative;\"><a href=\"#conflict\" aria-label=\"conflict permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>conflict</h3>\n<p>만약 main 브랜치과 fix 브랜치가 같은 파일을 수정했다고 가정해보자. 그리고 똑같이 main 브랜치로 fix 브랜치를 병합하는 과정을 진행하면 git은 main브랜치의 변경사항과 fix 브랜치의 변경사항 중에 어떤걸 선택해야할지 알 수 없기 때문에 충돌이 발생하면서 merge를 진행하지 않는다. 이럴 때는 개발자가 직접 코드부분을 보고 해결해주어야 한다.</p>\n<p>충돌 부분을 보면 아래와 같은 내용이 있는 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token literal-property property\">add</span><span class=\"token operator\">:</span> 변경 사항을 만들어서 인덱스에 등록해보기\n<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token constant\">HEAD</span>\n<span class=\"token literal-property property\">commit</span><span class=\"token operator\">:</span> 인덱스의 상태를 기록하기\n<span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">=</span>\n<span class=\"token literal-property property\">pull</span><span class=\"token operator\">:</span> 원격 저장소의 내용을 가져오기\n<span class=\"token operator\">>>></span><span class=\"token operator\">>>></span><span class=\"token operator\">></span> fix</code></pre></div>\n<p><code class=\"language-text\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code> 아래 부분은 현재 브랜치의 내용 여기서는 main 브랜치의 내용이고, <code class=\"language-text\">=======</code> 아래 부분부터 <code class=\"language-text\">>>>>>>> fix</code> 위까지는 병합하려는 브랜치의 내용, 여기서는 fix 브랜치의 내용이다. 개발자는 이 부분을 확인하여 어떤 부분을 남길지 확인하고 수정하여 다시 커밋을 해주면 된다.</p>\n<p>충돌해결을 위한 새로운 커밋을 추가한 새로운 커밋이 마지막 커밋이 되고, main 브랜치의 시작이 새로운 커밋 위치로 이동한다. 이와 같은 방식의 커밋을 <strong>non fast-forward</strong> 라고 한다.</p>\n<h5 id=\"-2\" style=\"position:relative;\"><a href=\"#-2\" aria-label=\" 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<h2 id=\"merge-옵션\" style=\"position:relative;\"><a href=\"#merge-%EC%98%B5%EC%85%98\" aria-label=\"merge 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>merge 옵션</h2>\n<h3 id=\"code-classlanguage-textsquashcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textsquashcode\" aria-label=\"code classlanguage textsquashcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">—squash</code></h3>\n<p>대상 브랜치를 병합할 때, 대상 브랜치가 가진 커밋 이력을 하나의 커밋으로 합쳐서 병합한다. </p>\n<p>만약 main 브랜치에서 fix 브랜치를 생성하고 4번의 커밋을 진행했다고 생각해보자. 이 때 main 브랜치로 fix 브랜치르 병합하면서 <code class=\"language-text\">--squash</code> 옵션을 사용하면 5번의 커밋을 무시하고 파일의 변경 내역을 합쳐서 하나의 커밋으로 main 브랜치에 병합된다. 따라서 깔끔한 히스토리와 함께 병합을 할 수 있다.</p>\n<h3 id=\"code-classlanguage-textno-ffcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textno-ffcode\" aria-label=\"code classlanguage textno ffcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">—no-ff</code></h3>\n<p>fast-forward 관계에서 병합을 하면 merge commit이 생략되는데, <code class=\"language-text\">--no-ff</code> 옵션을 사용하면 merge commit이 생성된다. merge commit을 생략해야하는 경우에 사용하는 옵션은 <code class=\"language-text\">—ff</code> 이다.</p>\n<h3 id=\"code-classlanguage-textcontinuecode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcontinuecode\" aria-label=\"code classlanguage textcontinuecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">—continue</code></h3>\n<p>병합 과정에서 충돌이 발생한 경우, 충돌을 해결한 후에 <code class=\"language-text\">--continue</code> 사용할 수 있다. 사용할 경우 병합을 이어서 진행한다.</p>\n<h1 id=\"-3\" style=\"position:relative;\"><a href=\"#-3\" aria-label=\" 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>참고:</p>\n<ul>\n<li><strong><a href=\"https://backlog.com/git-tutorial/kr/stepup/stepup1_4.html\">브랜치 통합하기</a></strong></li>\n<li><strong><a href=\"https://backlog.com/git-tutorial/kr/stepup/stepup2_7.html\">병합할 때 발생하는 충돌 해결하기</a></strong></li>\n<li><a href=\"https://victorydntmd.tistory.com/78\">[Git] 명령어(4) - merge, conflict</a></li>\n<li><a href=\"https://git-scm.com/docs/git-merge#_description\">https://git-scm.com/docs/git-merge#_description</a></li>\n</ul>","frontmatter":{"title":"Git - merge 명령어와 옵션들","date":"December 08, 2021","lang":null}}},{"node":{"id":"e2fd250a-46c6-55ca-a559-b1f827c350c4","excerpt":"…","html":"<h3 id=\"프로젝트가-끝났다\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EA%B0%80-%EB%81%9D%EB%82%AC%EB%8B%A4\" aria-label=\"프로젝트가 끝났다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트가 끝났다!</h3>\n<p>지난 이주간 진행됐던 프로젝트가 드디어 끝이 났다. 기간이 짧기도 했고, 이주 동안 얼만큼을 구현할 수 있는지 감도 없는대다 프로젝트를 처음하시는 분들도 많아서 완성이 될 수 있을까 걱정이 있었는데, 그래도 다들 노력해준 덕분에 완성하고 무사히 발표까지 마칠 수 있었던 것 같다.</p>\n<h4 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<h3 id=\"우리가-만든-서비스는\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%A6%AC%EA%B0%80-%EB%A7%8C%EB%93%A0-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%8A%94\" aria-label=\"우리가 만든 서비스는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우리가 만든 서비스는?</h3>\n<p>BookLog라는 이름의 독서노트 서비스를 만들었다. 독서를 하다보면 같은 책, 같은 문장을 읽어도 내가 생각하는 것이 다르다는 것을 느끼게 되는 경우가 많다. 그런데 이런 감상은 금방 휘발되기 때문에 어딘가에 기록을 해야 영구히 남길 수 있는데, Book Log는 독서에 대한 감성을 작성하여 감상을 언제든 다시 꺼내볼 수 있도록 하면서, 감상을 입력할 때 어느 부분에 대한 감상인지 페이지를 같이 입력하도록 하여 같은 부분에 대해 과거에 작성한 감상을 같이 볼 수 있도록 하였다.</p>\n<h4 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<h3 id=\"개발에서-어려웠던-점\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C%EC%97%90%EC%84%9C-%EC%96%B4%EB%A0%A4%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\"개발에서 어려웠던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발에서 어려웠던 점</h3>\n<ol>\n<li>\n<p>설계를 충분히 고려하지 않음</p>\n<p>내가 맡은 포지션은 백엔드였고, 그 중에서도 도서와 감상에 대한 기능 API를 맡았었다. 기능을 구현하기 전에 어떤 점을 고려해야할지 정리하고 개발을 시작했었는데, 이 과정이 충분하지 않았다.</p>\n<p>예를 들어</p>\n<ul>\n<li>\n<p>감상을 추가할 때,</p>\n<ul>\n<li>도서가 db에 이미 있는 경우와 도서가 db에 없는 경우를 분기</li>\n<li>도서 테이블, 도서-사용자 테이블, 리뷰 테이블에 데이터를 추가</li>\n</ul>\n</li>\n<li>\n<p>감상을 삭제했을 때</p>\n<ul>\n<li>도서에 대한 감상이 하나도 남아있지 않으면 어떻게 해야할지</li>\n</ul>\n</li>\n</ul>\n<p>같은 부분들을 고려하고 구현해야했었는데, 미리 고려하지 못하고 추후에 적용한 부분도 있었다. </p>\n</li>\n<li>\n<p>API 테스트가 충분하지 않았음</p>\n<p>1번과 관련된 부분이기도 하다. 나름 구현도 했고, 테스트도 충분히 해봤다고 생각했는데, 프론트에서 직접 호출하여 사용하다보니 구현이 잘못돼서 에러가 발생해 계속해서 수정을 하느라 나중에는 시간에 쫓겨서 코드를 더럽게 작성하게 되었던 것 같다. </p>\n</li>\n</ol>\n<aside>\n💡 1, 2를 겪고 보니, 다시 한 번 기획과 설계의 중요성을 깨닳았다. 아무리 충분히 고려해도 중간에 수정사항이 생긴다고는 하지만, 그래도 설계 단계에서 할 수 있는 한 고려하고 넘어가야, 수정으로 인해 발생하는 혼란도 줄일 수 있을 것 같다는 생각을 했다.\n</aside>\n<h4 id=\"-2\" style=\"position:relative;\"><a href=\"#-2\" aria-label=\" 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<h3 id=\"협업에서-어려웠던-점\" style=\"position:relative;\"><a href=\"#%ED%98%91%EC%97%85%EC%97%90%EC%84%9C-%EC%96%B4%EB%A0%A4%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\"협업에서 어려웠던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>협업에서 어려웠던 점</h3>\n<ol>\n<li>\n<p>소통이 부족하여 마무리 단계까지 구현되지 않은 부분이 있었음</p>\n<ul>\n<li>\n<p>원인</p>\n<ul>\n<li>팀장으로서 팀원의 진행상황을 정확하게 파악하지 못함</li>\n<li>팀원이 겪는 어려움을 공유받지 못함</li>\n</ul>\n</li>\n<li>\n<p>해결</p>\n<aside>\n💡 내가 해결할 수 있는 문제였고, 팀원들이 나를 믿고 맡겨준 덕분에 빠르게 해결할 수 있었다.\n</aside>\n<p>구현이 완료되지 않은 부분은 감상 프론트의 상세 조회 페이지였다.</p>\n<ul>\n<li>도서 감상이 기록된 페이지 조회</li>\n<li>같은 페이지 안에서 날짜별로 기록된 감상을 조회</li>\n<li>조회된 감상을 수정, 삭제</li>\n</ul>\n<p>마무리 단계에서 알아차린 것이기도 하고, 해야 할 일(발표준비)가 남아있어서 포기할 부분은 포기해야한다는 것은 알고 있었다. 하지만 그러기엔 우리 서비스의 핵심 기능이었기 때문에 포기할 수가 없었다. 그리고 내가 시간 안에 구현할 수 있을 것 같다는 생각도 있었기 때문에 팀원분들에게 내가 최대한 구현해볼테니, 발표준비를 해주실 수 있겠냐 양해를 구하고 개발을 시작했고, 발표 슬라이드를 만드는 스케줄에 영향을 주지 않고 완성할 수 있었다.</p>\n<p>이 일로 팀원분들께서 팀장님이 능력이 좋으셔서 프로젝트를 잘 끝낼 수 있었던 것 같다는 말씀을 해주셔서 뿌듯하기도 민망하기도 했지만, 내가 능력이 좋았다기 보다는 <strong>그 부분을 구현하는 방법에 대해 고민했었기 때문에 가능했던 것 같다.</strong></p>\n<p>감상 상세 조회 페이지는 페이지 하나에 가지고 있는 기능이 다른 페이지에 비해 많아 고려해야할 부분이 많았다. 때문에 만약 내가 프론트였다면 감상 상세 페이지를 해보고 싶다고 했을 것이었다.</p>\n<p>프로젝트를 진행하면 설계 단계에서 이 부분은 어떤 방법으로 구현하면 되겠다 하는 것을 간단하게나마 생각하면서 진행하게 되는데, <strong>감상 상세 조회 페이지는 다른 부분에 비해서 더 구체적으로 내가 맡았다면 어떻게 구현하겠다 하는 것을 개인적으로 더 생각해봤었다.</strong> 그래서 그 부분이 구현이 안 됐다는 문제를 만났을 때 빠르게 해결할 수 있었던 것 같다.</p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"도전해볼-것\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%A0%84%ED%95%B4%EB%B3%BC-%EA%B2%83\" aria-label=\"도전해볼 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도전해볼 것</h3>\n<ul>\n<li>해야할 일을 세분화하여 정리한 후에 개발에 들어간다.</li>\n<li>여러 테스트 케이스를 만들어서 테스트 해본다.</li>\n<li>팀원의 진행상황을 구두 뿐만 아니라 직접 확인하고, 도움을 편하게 요청할 수 있는 분위기를 만든다.</li>\n</ul>","frontmatter":{"title":"[프로젝트회고] 쓸데없는 짓은 없다.","date":"December 26, 2021","lang":null}}},{"node":{"id":"e63b1a1c-5494-52a2-ab18-5ca6b0007c5e","excerpt":"https://jjalbot.com/media/2019/01/cl-H9wkxrn/RLRlP6kQU.png 전에 실습을 하다가 200 응답코드가 아닌 30…","html":"<p><img src=\"https://jjalbot.com/media/2019/01/cl-H9wkxrn/RLRlP6kQU.png\" alt=\"https://jjalbot.com/media/2019/01/cl-H9wkxrn/RLRlP6kQU.png\"></p>\n<p>전에 실습을 하다가 200 응답코드가 아닌 304 응답코드가 돌아오는 것을 본 적이 있다. 그 때는 일단 오류가 뜬 것도 아니고 브라우저도 잘 동작하니, 뭔가 있나보다 까지만 생각을 하고 넘어갔었다. 그러다 오늘 다시 HTTP 공부를 하고 있었는데, 그 때 그 일이 생각나면서 왜 그런 응답이 돌아왔는지, 왜 브라우저가 잘 동작했는지 궁금해져서 찾아보고 정리를 해보려고 한다.</p>\n<h4 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<h2 id=\"304-not-modified란\" style=\"position:relative;\"><a href=\"#304-not-modified%EB%9E%80\" aria-label=\"304 not modified란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>304 Not Modified란?</h2>\n<p>304 상태코드는 Not Modified, 즉, <strong>요청한 자원이 변경되지 않았으므로 클라이언트에 캐싱된 자원을 사용해도 된다</strong>라는 의미이다. 이 응답을 받은 브라우저는 서버가 보내주는 자원 대신 자신이 캐싱해두었던 자원을 사용하여 요청을 처리한다. </p>\n<h4 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<h2 id=\"난-캐시한-적-없는데\" style=\"position:relative;\"><a href=\"#%EB%82%9C-%EC%BA%90%EC%8B%9C%ED%95%9C-%EC%A0%81-%EC%97%86%EB%8A%94%EB%8D%B0\" aria-label=\"난 캐시한 적 없는데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>난 캐시한 적 없는데?</h2>\n<p>캐싱은 서버의 부하를 줄이기 위해 개발자가 설정하기도 하지만 브라우저가 사용자 경험을 위해 하기도 한다.</p>\n<p>브라우저는 사용자가 이용하는 웹 사이트들을 캐싱해놓는다. 그리고 나중에 이전에 방문한 웹사이트를 사용자가 다시 방문하면 캐싱된 자원을 사용하여 빠르게 제공해준다. 이 과정을 정리해보면 다음과 같다.</p>\n<ol>\n<li>사용자가 방문한 웹사이트를 브라우저가 캐싱</li>\n<li>사용자가 캐싱된 사이트를 다시 방문</li>\n<li>브라우저가 서버에게 캐싱된 자원을 사용해도 되는지 확인 요청보냄</li>\n<li>요청을 받은 서버는 요청 자원을 확인한 후 캐싱된 자원을 사용해도 되면 304 상태코드로 응답을 보냄</li>\n<li>304를 받은 브라우저는 캐싱된 자원을 사용</li>\n</ol>\n<h4 id=\"-2\" style=\"position:relative;\"><a href=\"#-2\" aria-label=\" 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<h2 id=\"캐싱된-자원이-유효한지-어떻게-확인하지\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%B1%EB%90%9C-%EC%9E%90%EC%9B%90%EC%9D%B4-%EC%9C%A0%ED%9A%A8%ED%95%9C%EC%A7%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%99%95%EC%9D%B8%ED%95%98%EC%A7%80\" aria-label=\"캐싱된 자원이 유효한지 어떻게 확인하지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐싱된 자원이 유효한지 어떻게 확인하지?</h2>\n<p>캐싱된 데이터를 사용할 때는 항상 서버에게 자원이 최신 상태가 맞는지 확인을 받아야 한다. 그러기 위해서는 데이터의 상태를 확인할 다른 기준이 필요한데, 캐싱된 자원이 언제 마지막으로 수정되었는지를 확인하는 <strong>Last-Modified</strong> 헤더와 서버에서 자원에 정해주는 임의의 이름인 <strong>Etag</strong>가 그것이다. </p>\n<p>서버에서 보내준 자원을 처음 캐싱할 때 Last-Modified와 Etag 헤더에 담긴 값을 메타데이터로 데이터와 함께 저장한다. 그리고 다음에 캐싱된 자원을 사용하려고 할 때 클라이언트는 이 마지막 수정일과 Etag을 포함하여 서버에게 조건부 요청을 보내 캐시를 사용해도 되는지를 확인받는다.</p>\n<h5 id=\"-3\" style=\"position:relative;\"><a href=\"#-3\" aria-label=\" 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<h3 id=\"조건부-요청\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%B6%80-%EC%9A%94%EC%B2%AD\" aria-label=\"조건부 요청 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건부 요청</h3>\n<p><img src=\"https://mdn.mozillademos.org/files/13729/Cache1.png\" alt=\"https://mdn.mozillademos.org/files/13729/Cache1.png\"></p>\n<p><img src=\"https://mdn.mozillademos.org/files/13731/HTTPCache2.png\" alt=\"https://mdn.mozillademos.org/files/13731/HTTPCache2.png\"></p>\n<p>클라이언트가 서버에게 캐시의 유효성 확인을 요청할 때 사용하는 헤더를 조건부 요청 헤더라고 한다. 사용자가 캐싱된 자원을 사용하려할 때도 이 요청을 보내지만, 유효시간이 끝난 캐시에 대한 확인을 할 때도 같은 방식으로 요청을 보낸다.</p>\n<p>Last-Modified에 대한 조건부 요청 헤더는 <strong>If-Modified-Since</strong>, <strong>If-Unmodified-Since</strong>이다.</p>\n<p>Etag에 대한 조건부 요청 헤더는 <strong>If-None-Match</strong>이다. </p>\n<p>조건부 요청 헤더를 포함한 요청을 받은 서버는 해당 자원을 확인한 후에 캐싱된 자원을 사용해도 된다면 위에서 설명한대로 304 응답을 보내준다. 만약 자원이 수정되어 새로운 자원을 사용해야 한다면 서버는 새로운 버전의 자원과 함께 200 응답을 보내준다. 이는 유효시간이 끝난 캐시를 확인할 때도 마찬가지이다. 유효시간이 끝난 캐시는 삭제되지 않고 남아있다가 브라우저가 캐시를 사용하려고 할 때 서버로 조건부 요청을 보내 검증을 받는다. 그리고 만약 서버에서 304 응답을 보낸다면, 클라이언트는 캐싱된 자원의 유효시간만 갱신하는 방식으로 캐시를 재사용한다.</p>","frontmatter":{"title":"HTTP - 304 Not Modified가 뜨는 이유","date":"December 09, 2021","lang":null}}},{"node":{"id":"b3dd75e8-39f5-538b-9c39-48af3288655c","excerpt":"…","html":"<h1 id=\"구현\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84\" aria-label=\"구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현</h1>\n<p>머릿속에 있는 알고리즘을 소스코드로 바꾸는 과정</p>\n<p>문제 해결 분야에서 구현 유형의 문제는 ‘풀이를 떠올리는 것은 쉽지만 소스코드로 옮기기 어려운 문제’를 의미한다.</p>\n<p>대체로 사소한 조건 설정이 많은 문제일수록 코드로 구현하기 까다롭다.</p>\n<ul>\n<li>완전탐색: 모든 경우의 수를 주저없이 다 계산하는 해결 방법</li>\n<li>시뮬레이션: 문제에서 제시한 알고리즘을 한 단계식 차례대로 직접 수행</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"299adef0-f39d-5920-8d30-3c93519536d7","excerpt":"자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 5,4,3,2,1을 리턴합니다. 제한조건 : n은 10,000,000,000이하인 자연수입니다.","html":"<blockquote>\n<p>자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.</p>\n<p>제한조건 : n은 10,000,000,000이하인 자연수입니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//처음에 Integer.toString()을 사용하면서 아무생각없이 n을 int로 형변환하여 사용했다가 문제가 안풀림</span>\n        <span class=\"token comment\">//n의 길이는 바꾸지 않으면서 문자열로 변환하기 위해 long형 n에 \"\"을 더해주었고</span>\n        <span class=\"token comment\">//그대로 길이를 구할 수 있었다.</span>\n        <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//구한 n의 길이로 배열을 생성</span>\n\n        <span class=\"token keyword\">long</span> temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">//제일 높은 자리부터 10의 제곱으로 나눠서 한자리씩 배열에 넣어줌</span>\n   answer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   n<span class=\"token operator\">=</span>n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> answer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//다음 자리를 넣을 때 필요없는 자리를 가져오지 않기 위해 윗자리수는 지워줌</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[algorithm]level1 자연수 뒤집어 배열로 만들기","date":null,"lang":null}}},{"node":{"id":"7512ac82-dce5-582e-af78-d378080c6449","excerpt":"문제 설명 문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.</p>\n<h5 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h5>\n<ul>\n<li>문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.</li>\n<li>첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>try hello world</td>\n<td>TrY HeLlO WoRlD</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>try hello world는 세 단어 try, hello, world로 구성되어 있습니다. 각 단어의 짝수번째 문자를 대문자로, 홀수번째 문자를 소문자로 바꾸면 TrY, HeLlO, WoRlD입니다. 따라서 TrY HeLlO WoRlD 를 리턴합니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<p>문장 전체를 반복문을 돌리고 띄어쓰기를 기준으로 계산되는 인덱스변수도 선언해주었다.</p>\n<p><code class=\"language-text\">s.split(\" \")</code>을 사용하여 문자열 배열을 만들어 보려고 했는데 split은 <code class=\"language-text\">\" \"</code>이 여러번 나오는 경우에도 모두 지우고 배열을 만들어버려서 실패</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">String</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> letter <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   letter <span class=\"token operator\">=</span> <span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//letter가 \" \"이면 answer에 \" \"을 추가</span>\n      <span class=\"token comment\">//다음 단어를 연산하기 위해 j를 0으로 초기화</span>\n      <span class=\"token comment\">//아래 코드로 넘어가지 않고 다음 연산을 진행하기 위해 continue</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>letter<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    answer <span class=\"token operator\">+=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n    j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    answer <span class=\"token operator\">+=</span> letter<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    answer <span class=\"token operator\">+=</span> letter<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>문제를 제대로 읽자</li>\n<li>문자열을 비교할 때는 <code class=\"language-text\">\"\".equals(\"\")</code></li>\n</ul>\n<h3 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//문자열을 하나씩 잘라서 배열에 넣어줌</span>\n<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//배열 인덱스 순서대로 문자열을 ss에 대입하여 연산</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> ss <span class=\"token operator\">:</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//ss에 \" \"가 있으면 cnt를 0으로 초기화하고 없으면 + 1을 해줌</span>\n    cnt <span class=\"token operator\">=</span> ss<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> cnt <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//\" \"일 때 cnt가 0이니까</span>\n    <span class=\"token comment\">//짝수 자리의 수를 대문자로 바꾸어 주려면</span>\n    <span class=\"token comment\">//cnt가 홀수 인 자리를 대문자로 바꾸고 cnt가 짝수인 자리를 소문자로 바꾸어 주어야한다.</span>\n    answer <span class=\"token operator\">+=</span> cnt<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> ss<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> ss<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[algorithm]level1 이상한 문자 만들기","date":null,"lang":null}}},{"node":{"id":"040fbcc3-9bd1-52b8-b6a6-fcc4496313df","excerpt":"문제설명 매개변수로 주어진 문자열을 내림차순으로 정렬하여 새로운 문자열을 리턴하는 함수 작성 문자열은 영문 대소문자로만 구성되어있으며, 대문자는 소문자보다 작은 것으로 간주한다.","html":"<ul>\n<li>\n<p>문제설명</p>\n<ul>\n<li>매개변수로 주어진 문자열을 내림차순으로 정렬하여 새로운 문자열을 리턴하는 함수 작성</li>\n<li>문자열은 영문 대소문자로만 구성되어있으며, 대문자는 소문자보다 작은 것으로 간주한다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//매개변수로 받은 문자열을 한 자리씩 잘라 String배열로 만들어준다.</span>\n        <span class=\"token comment\">//toCharArr()로도 가능함 반환형은 char[]</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//Arrays 클래스의 sort method을 사용하여 arr이 오름차순으로 정렬되고</span>\n        <span class=\"token comment\">//Collections.reverseOrder()는 arr를 반대로 정렬시켜준다.</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverseOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//07-08-2020</span>\n        <span class=\"token comment\">//replace로 풀어보려다가 못풀어서</span>\n        <span class=\"token comment\">//일단 배열에 반복문을 돌려서 element를 가져오는 방법으로 품</span>\n        <span class=\"token comment\">//for(int i=0;i&lt;arr.length;i++){</span>\n        <span class=\"token comment\">//    answer+=arr[i];</span>\n        <span class=\"token comment\">//}</span>\n\n        <span class=\"token comment\">//07-08-2020</span>\n        <span class=\"token comment\">//replaceAll(\"대체 할 문자\",\"대체 될 문자\") 사용</span>\n        <span class=\"token comment\">//[]를 다른 문자와 같이 바꾸려고 하면 오류가 생겨서 여러번 나눠서 써주었더니 해결됨</span>\n        <span class=\"token class-name\">String</span> answer<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\[\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\]\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[algorithm]level1. 문자열 내림차순으로 배치하기","date":null,"lang":null}}},{"node":{"id":"55dac315-fe9f-5f5a-8286-98c58b75f5d0","excerpt":"문제 설명 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 1…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.</p>\n<h5 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h5>\n<ul>\n<li>두 수는 1이상 1000000이하의 자연수입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>m</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td>12</td>\n<td>[3, 12]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>5</td>\n<td>[1, 10]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1\n위의 설명과 같습니다.</p>\n<p>입출력 예 #2\n자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.</p>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//n에는 작은 수 m에는 큰 수를 넣어 줌</span>\n    <span class=\"token keyword\">int</span> temp<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        temp <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n        n <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span>\n        m <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 최대공약수</span>\n    <span class=\"token comment\">// i가 작은 수 n 부터 1까지 1씩 감소하는 반복문을 돌려주고</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//n이 i에 나누어 떨어지면 다음 코드를 진행</span>\n        <span class=\"token comment\">//코드를 진행하지 않고 i--</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//n이 나누어 떨어지고 m도 나누어 떨어지는 수 중에 제일 큰 수가 최대 공약수</span>\n        <span class=\"token comment\">// 조건에 맞다면 break</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            answer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//end for</span>\n\n    <span class=\"token comment\">//최소공배수</span>\n    <span class=\"token comment\">//m 부터 m*n까지 m씩 증가하는 반복문을 돌려줌</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span>m<span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>m<span class=\"token operator\">*</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">+=</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//j가 n에 나누어 떨어진다면 j는 n의 배수이므로 최소공배수</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            answer<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[algorithm]level1 최대공약수와 최소공배수","date":null,"lang":null}}},{"node":{"id":"971dd37d-1009-537e-aefc-b090d18b4959","excerpt":"문제 설명 1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다. 예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1-1. 입력된 수가 짝수라면 2로 나눕니다.\n1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.\n2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.</code></pre></div>\n<p>예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.</p>\n<h5 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h5>\n<ul>\n<li>입력된 수, <code class=\"language-text\">num</code>은 1 이상 8000000 미만인 정수입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>6</td>\n<td>8</td>\n</tr>\n<tr>\n<td>16</td>\n<td>4</td>\n</tr>\n<tr>\n<td>626331</td>\n<td>-1</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1\n문제의 설명과 같습니다.</p>\n<p>입출력 예 #2\n16 -> 8 -> 4 -> 2 -> 1 이되어 총 4번만에 1이 됩니다.</p>\n<p>입출력 예 #3\n626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야합니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//i 가 500이되면 답은 -1</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//num이 1이 될 때까지 반복문을 돌림</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//num이 짝수면 나누기 2 아니면 곱하기 3 더하기 1</span>\n            <span class=\"token comment\">//삼항연산자로 바꾸어 사용할 수 있음</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                num <span class=\"token operator\">=</span> num <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                num <span class=\"token operator\">=</span> num<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token comment\">//end else</span>\n\n            <span class=\"token comment\">//i가 500이면 답이 -1이 되고 결과를 출력</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token comment\">//end if</span>\n        <span class=\"token punctuation\">}</span><span class=\"token comment\">//end while</span>\n        answer <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//solution</span></code></pre></div>\n<ul>\n<li>반복문이 500까지만 돌 수 있으므로 처음부터 500번만 도는 반복문을 사용하는 방법</li>\n<li>삼항연산자를 사용하는 방법 -> 삼항연산자는 연산자이기 때문에 if문보다 속도가 빠르다고함</li>\n</ul>","frontmatter":{"title":"[algorithm]level1 콜라츠 추측","date":null,"lang":null}}},{"node":{"id":"2c3027fc-c650-5817-bfd5-fd1999c816d4","excerpt":"문제 설명 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.</p>\n<h5 id=\"제한-조건\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\" aria-label=\"제한 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 조건</h5>\n<ul>\n<li><code class=\"language-text\">x</code>는 1 이상, 10000 이하인 정수입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>arr</th>\n<th align=\"center\">return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td align=\"center\">true</td>\n</tr>\n<tr>\n<td>12</td>\n<td align=\"center\">true</td>\n</tr>\n<tr>\n<td>11</td>\n<td align=\"center\">false</td>\n</tr>\n<tr>\n<td>13</td>\n<td align=\"center\">false</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p><strong>입출력 예 #1</strong>\n10의 모든 자릿수의 합은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.</p>\n<p><strong>입출력 예 #2</strong>\n12의 모든 자릿수의 합은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.</p>\n<p><strong>입출력 예 #3</strong>\n11의 모든 자릿수의 합은 2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.</p>\n<p><strong>입출력 예 #4</strong>\n13의 모든 자릿수의 합은 4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">boolean</span> answer <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> input <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>input <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//10을 계속 나눠주면서 그 나머지를 더하면 모든 자리의 합이 구해진다.</span>\n         sum <span class=\"token operator\">+=</span> input <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n            input <span class=\"token operator\">=</span> input<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n     <span class=\"token comment\">//입력값이 sum으로 나누어떨어지면 하샤드수</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> x <span class=\"token operator\">%</span> sum <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            answer <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[algorithm]level1 하샤드수","date":null,"lang":null}}},{"node":{"id":"d4a6c4b2-0f00-5c86-8a90-4cf861c99e0f","excerpt":"문제 설명 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다. 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ……","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.</p>\n<p>1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …\n3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, …</p>\n<p>1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한-조건\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\" aria-label=\"제한 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 조건</h5>\n<ul>\n<li>시험은 최대 10,000 문제로 구성되어있습니다.</li>\n<li>문제의 정답은 1, 2, 3, 4, 5중 하나입니다.</li>\n<li>가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>answers</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1,2,3,4,5]</td>\n<td>[1]</td>\n</tr>\n<tr>\n<td>[1,3,2,4,2]</td>\n<td>[1,2,3]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1</p>\n<ul>\n<li>수포자 1은 모든 문제를 맞혔습니다.</li>\n<li>수포자 2는 모든 문제를 틀렸습니다.</li>\n<li>수포자 3은 모든 문제를 틀렸습니다.</li>\n</ul>\n<p>따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.</p>\n<p>입출력 예 #2</p>\n<ul>\n<li>모든 사람이 2문제씩을 맞췄습니다.</li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//세명의 점수를 담을 배열과 최고점을 담을 변수 선언</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> score<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> topScore<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//학생들의 답변패턴을 배열로 만듦</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pattern1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pattern2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pattern3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//정답 배열에 반복문사용하여 정답패턴과 비교해 학생의 점수를 매김</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>answers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        score<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pattern1<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>pattern1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> answers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">?</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        score<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pattern2<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>pattern2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> answers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">?</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        score<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pattern3<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span>pattern3<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> answers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">?</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>score<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//end for</span>\n\n    <span class=\"token comment\">//최고점 얻기</span>\n    <span class=\"token keyword\">int</span> cnt<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>score<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>topScore <span class=\"token operator\">&lt;</span> score<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            topScore <span class=\"token operator\">=</span> score<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token comment\">//end if</span>\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//end for</span>\n\n    <span class=\"token comment\">//학생들의 점수를 최고점과 비교해서 결과 배열의 크기와 최고점 학생 얻기</span>\n    <span class=\"token comment\">//Math.max 찾아보기</span>\n    <span class=\"token class-name\">String</span> topStu<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> student<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>score<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>topScore <span class=\"token operator\">==</span> score<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            topStu<span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//최고점 학생을 결과 배열에 넣어줌</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    student <span class=\"token operator\">=</span> topStu<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>student<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        answer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>List 공부하기</li>\n<li>Math.max method 찾아보기</li>\n</ul>","frontmatter":{"title":"[algorithm]level1 모의고사","date":null,"lang":null}}},{"node":{"id":"9a3c0ffe-cfd5-59cd-96d3-cc721dbc930b","excerpt":"문제 설명 프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.\n전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 으로 가린 문자열을 리턴하는 함수, solution…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.\n전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 <code class=\"language-text\">*</code>으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요.</p>\n<h5 id=\"제한-조건\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\" aria-label=\"제한 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 조건</h5>\n<ul>\n<li>s는 길이 4 이상, 20이하인 문자열입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>phone_number</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>01033334444</td>\n<td><strong>***</strong>4444</td>\n</tr>\n<tr>\n<td>027778888</td>\n<td><strong>*</strong>8888</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"내가-푼-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EA%B0%80-%ED%91%BC-%ED%92%80%EC%9D%B4\" aria-label=\"내가 푼 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내가 푼 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>phone_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>phone_number<span class=\"token punctuation\">)</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token string\">'*'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>length<span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> phone_number<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h3 id=\"다른-사람이-푼-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C%EC%9D%B4-%ED%91%BC-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람이 푼 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람이 푼 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">hide_numbers</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"*\"</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"결과 : \"</span> <span class=\"token operator\">+</span> hide_numbers<span class=\"token punctuation\">(</span><span class=\"token string\">'01033334444'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>변수를 선언하지 않아도 되는 부분을 생각하면서 풀기</li>\n<li>그 외에는 연습문제라 그런지 다른 사람이 푼 풀이와 크게 다르지 않았음</li>\n</ul>","frontmatter":{"title":"[algorithm]level1 핸드폰 번호 가리기","date":null,"lang":null}}},{"node":{"id":"f596fb64-4a0a-52e7-98a8-2f5077543e85","excerpt":"문제 설명 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요. 제한 조건 행렬 arr1, arr2의 행과 열의 길이는 50…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.</p>\n<h5 id=\"제한-조건\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\" aria-label=\"제한 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 조건</h5>\n<ul>\n<li>행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>arr1</th>\n<th>arr2</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[1,2],[2,3]]</td>\n<td>[[3,4],[5,6]]</td>\n<td>[[4,6],[7,9]]</td>\n</tr>\n<tr>\n<td>[[1],[2]]</td>\n<td>[[3],[4]]</td>\n<td>[[4],[6]]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"내가-푼-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EA%B0%80-%ED%91%BC-%ED%92%80%EC%9D%B4\" aria-label=\"내가 푼 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내가 푼 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> ind1 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> ind1<span class=\"token punctuation\">:</span> answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> ind2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span>ind1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            answer<span class=\"token punctuation\">[</span>ind1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span>ind1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ind2<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> arr2<span class=\"token punctuation\">[</span>ind1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ind2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h3 id=\"다른-사람이-푼-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C%EC%9D%B4-%ED%91%BC-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람이 푼 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람이 푼 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sumMatrix</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>c <span class=\"token operator\">+</span> d <span class=\"token keyword\">for</span> c<span class=\"token punctuation\">,</span> d <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> a<span class=\"token punctuation\">,</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>\n<p>zip(a,b) - 동일한 개수로 이루어진 자료형을 묶어주는 내장함수</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [(1, 2), (2, 3)]</span></code></pre></div>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sumMatrix</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[algorithm]level1 행렬의 덧셈","date":null,"lang":null}}},{"node":{"id":"a890283b-5b39-5f41-a857-dd287b432ab5","excerpt":"문제 설명 자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후, 이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요. 제한사항 n은 1 이상 100,000,000 이하인 자연수입니다. 입출력 예 n result 45 7 12…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>자연수 n이 매개변수로 주어집니다. n을 3진법 상에서 앞뒤로 뒤집은 후, 이를 다시 10진법으로 표현한 수를 return 하도록 solution 함수를 완성해주세요.</p>\n<hr>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>n은 1 이상 100,000,000 이하인 자연수입니다.</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>45</td>\n<td>7</td>\n</tr>\n<tr>\n<td>125</td>\n<td>229</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1</p>\n<ul>\n<li>답을 도출하는 과정은 다음과 같습니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>n (10진법)</th>\n<th>n (3진법)</th>\n<th>앞뒤 반전(3진법)</th>\n<th>10진법으로 표현</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>45</td>\n<td>1200</td>\n<td>0021</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>따라서 7을 return 해야 합니다.</li>\n</ul>\n<p>입출력 예 #2</p>\n<ul>\n<li>답을 도출하는 과정은 다음과 같습니다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>n (10진법)</th>\n<th>n (3진법)</th>\n<th>앞뒤 반전(3진법)</th>\n<th>10진법으로 표현</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>125</td>\n<td>11122</td>\n<td>22111</td>\n<td>229</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>따라서 229를 return 해야 합니다.</li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 3진법로 바꿔주려면 3으로 나눈 나머지를 모아야함</span>\n        n <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span><span class=\"token number\">3</span>\n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">break</span> <span class=\"token comment\"># 3으로 나눈 몫이 0 이면 3진법 변환 끝</span>\n\n        <span class=\"token comment\"># 탈출 조건을 n == 0으로 한 이유</span>\n        <span class=\"token comment\"># -> n &lt; 3으로 하는 것보다 가독성이 더 좋고 코드가 깔끔하다고 생각해서 (나중에 다시 봤을 때)</span>\n        <span class=\"token comment\"># if n &lt; 3:</span>\n        <span class=\"token comment\">#   temp.append(n)</span>\n        <span class=\"token comment\">#   break</span>\n\n    trans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token operator\">**</span>power <span class=\"token keyword\">for</span> power <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n\n    <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span>num <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> trans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">+=</span> x<span class=\"token operator\">*</span>num\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[algorithm]level1 3진법 뒤집기","date":null,"lang":null}}},{"node":{"id":"98070648-2246-5c52-9288-bf15fc91d56e","excerpt":"문제 설명 길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다. a와 b의 내적을 return 하도록 solution 함수를 완성해주세요. 이때, a와 b의 내적은  입니다. (n은 a, b의 길이) 제한사항 a, b의 길이는 1 이상 1,000 이하입니다. a, b…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다. a와 b의 <a href=\"https://en.wikipedia.org/wiki/Dot_product\">내적</a>을 return 하도록 solution 함수를 완성해주세요.</p>\n<p>이때, a와 b의 내적은 <code class=\"language-text\">a[0]*b[0] + a[1]*b[1] + ... + a[n-1]*b[n-1]</code> 입니다. (n은 a, b의 길이)</p>\n<hr>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>a, b의 길이는 1 이상 1,000 이하입니다.</li>\n<li>a, b의 모든 수는 -1,000 이상 1,000 이하입니다.</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>a</th>\n<th>b</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">[1,2,3,4]</code></td>\n<td><code class=\"language-text\">[-3,-1,0,2]</code></td>\n<td>3</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[-1,0,1]</code></td>\n<td><code class=\"language-text\">[1,0,-1]</code></td>\n<td>-2</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1</p>\n<ul>\n<li>a와 b의 내적은 <code class=\"language-text\">1*(-3) + 2*(-1) + 3*0 + 4*2 = 3</code> 입니다.</li>\n</ul>\n<p>입출력 예 #2</p>\n<ul>\n<li>a와 b의 내적은 <code class=\"language-text\">(-1)*1 + 0*0 + 1*(-1) = -2</code> 입니다.</li>\n</ul>\n<h3 id=\"내가-푼-코드\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EA%B0%80-%ED%91%BC-%EC%BD%94%EB%93%9C\" aria-label=\"내가 푼 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내가 푼 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">+=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h3 id=\"다른-사람-코드\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%EC%BD%94%EB%93%9C\" aria-label=\"다른 사람 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span>y <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">+=</span> x<span class=\"token operator\">*</span>y\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<blockquote>\n<p>한 번 봤다고 넘어가지말고 따로 한 번씩이라도 더 기록을 해놓고 정리를 해놔야겠다. 전에 본 적이 있는 함순데 생각이 안나서 못써먹었다…</p>\n<p>프로그래머스에 나오는 복잡도를 확인해보니 내장함수를 사용하는 쪽이 확실히 더 속도가 빠르기도 하고… 파이썬을 떠나서 알고리즘 측면에서는 내가 푼 코드가 더 알아보기 쉬운거같기도 하다ㅎㅎ</p>\n</blockquote>","frontmatter":{"title":"[algorithm]level1 내적","date":null,"lang":null}}},{"node":{"id":"e45cb92e-4eaf-5af9-855f-72a88c05f0fc","excerpt":"문제 설명 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다. 예를 들어 array가 1, 5, 2, 6, 3, 7, 4, i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 자르면 5, 2, 6,…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.</p>\n<p>예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면</p>\n<ol>\n<li>array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.</li>\n<li>1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.</li>\n<li>2에서 나온 배열의 3번째 숫자는 5입니다.</li>\n</ol>\n<p>배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>array의 길이는 1 이상 100 이하입니다.</li>\n<li>array의 각 원소는 1 이상 100 이하입니다.</li>\n<li>commands의 길이는 1 이상 50 이하입니다.</li>\n<li>commands의 각 원소는 길이가 3입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>array</th>\n<th>commands</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1, 5, 2, 6, 3, 7, 4]</td>\n<td>[[2, 5, 3], [4, 4, 1], [1, 7, 3]]</td>\n<td>[5, 6, 3]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.\n[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.\n[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.</p>\n<p><a href=\"https://neerc.ifmo.ru/subregions/northern.html\">출처</a></p>\n<h3 id=\"내가-푼-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EA%B0%80-%ED%91%BC-%ED%92%80%EC%9D%B4\" aria-label=\"내가 푼 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내가 푼 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> commands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> command <span class=\"token keyword\">in</span> commands<span class=\"token punctuation\">:</span>\n        temp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        num <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h3 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> commands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 1</span>\n    <span class=\"token keyword\">for</span> command <span class=\"token keyword\">in</span> commands<span class=\"token punctuation\">:</span>\n        temp <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k <span class=\"token operator\">=</span> command\n        num <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span>k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 2</span>\n    <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> commands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 3</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k <span class=\"token keyword\">in</span> commands<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">i,j,k = command</code> 너무 신기해</p>\n<p><code class=\"language-text\">lambda</code> 를 더 공부해야겠다</p>\n</blockquote>","frontmatter":{"title":"[algorithm]level1 k번째 숫자","date":null,"lang":null}}},{"node":{"id":"9164f0c9-9961-5b43-a074-0d15a4de573c","excerpt":"문제 설명 정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요. 제한사항 numbers의 길이는 2 이상 10…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>정수 배열 numbers가 주어집니다. numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 return 하도록 solution 함수를 완성해주세요.</p>\n<hr>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>\n<p>numbers의 길이는 2 이상 100 이하입니다.</p>\n<ul>\n<li>numbers의 모든 수는 0 이상 100 이하입니다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>numbers</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">[2,1,3,4,1]</code></td>\n<td><code class=\"language-text\">[2,3,4,5,6,7]</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[5,0,2,7]</code></td>\n<td><code class=\"language-text\">[2,5,7,9,12]</code></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1</p>\n<ul>\n<li>2 = 1 + 1 입니다. (1이 numbers에 두 개 있습니다.)</li>\n<li>3 = 2 + 1 입니다.</li>\n<li>4 = 1 + 3 입니다.</li>\n<li>5 = 1 + 4 = 2 + 3 입니다.</li>\n<li>6 = 2 + 4 입니다.</li>\n<li>7 = 3 + 4 입니다.</li>\n<li>따라서 <code class=\"language-text\">[2,3,4,5,6,7]</code> 을 return 해야 합니다.</li>\n</ul>\n<p>입출력 예 #2</p>\n<ul>\n<li>2 = 0 + 2 입니다.</li>\n<li>5 = 5 + 0 입니다.</li>\n<li>7 = 0 + 7 = 5 + 2 입니다.</li>\n<li>9 = 2 + 7 입니다.</li>\n<li>12 = 5 + 7 입니다.</li>\n<li>따라서 <code class=\"language-text\">[2,5,7,9,12]</code> 를 return 해야 합니다.</li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> numbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>num <span class=\"token keyword\">in</span> answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> numbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 중복제거에 set을 사용</span></code></pre></div>\n<ul>\n<li>set: 중복을 허용되지 않는다는 특성을 사용하여 중복제거에 사용한다.</li>\n</ul>","frontmatter":{"title":"[algorithm]level1 두개 뽑아서 더하기","date":null,"lang":null}}},{"node":{"id":"9b4e6e8c-9c98-5d93-b793-7604cac4083c","excerpt":"문제 설명 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다. 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ……","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.</p>\n<p>1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …\n3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, …</p>\n<p>1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한-조건\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\" aria-label=\"제한 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 조건</h5>\n<ul>\n<li>시험은 최대 10,000 문제로 구성되어있습니다.</li>\n<li>문제의 정답은 1, 2, 3, 4, 5중 하나입니다.</li>\n<li>가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>answers</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1,2,3,4,5]</td>\n<td>[1]</td>\n</tr>\n<tr>\n<td>[1,3,2,4,2]</td>\n<td>[1,2,3]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1</p>\n<ul>\n<li>수포자 1은 모든 문제를 맞혔습니다.</li>\n<li>수포자 2는 모든 문제를 틀렸습니다.</li>\n<li>수포자 3은 모든 문제를 틀렸습니다.</li>\n</ul>\n<p>따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.</p>\n<p>입출력 예 #2</p>\n<ul>\n<li>모든 사람이 2문제씩을 맞췄습니다.</li>\n</ul>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 모의고사</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>answers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    std_answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>answers<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>answers<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>answers<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n\n    score <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>answers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> answers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> std_answer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            score<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> answers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> std_answer<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            score<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> answers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> std_answer<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            score<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>std <span class=\"token keyword\">for</span> std <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> score<span class=\"token punctuation\">[</span>std<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>answers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pattern1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    pattern2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    pattern3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    score <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> answer <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>answers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> answer <span class=\"token operator\">==</span> pattern1<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">%</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pattern1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            score<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> answer <span class=\"token operator\">==</span> pattern2<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">%</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pattern2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            score<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> answer <span class=\"token operator\">==</span> pattern3<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">%</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pattern3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            score<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> s <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idx<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> result</code></pre></div>","frontmatter":{"title":"[algorithm]level1 모의고사","date":null,"lang":null}}},{"node":{"id":"335678c4-eb45-5445-80f0-01e6e09058af","excerpt":"문제 설명 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어,…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.</p>\n<p>전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>전체 학생의 수는 2명 이상 30명 이하입니다.</li>\n<li>체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li>\n<li>여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.</li>\n<li>여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.</li>\n<li>여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>lost</th>\n<th>reserve</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>[2, 4]</td>\n<td>[1, 3, 5]</td>\n<td>5</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[2, 4]</td>\n<td>[3]</td>\n<td>4</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[3]</td>\n<td>[1]</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>예제 #1\n1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.</p>\n<p>예제 #2\n3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다.</p>\n<p><a href=\"http://hsin.hr/coci/archive/2009_2010/contest6_tasks.pdf\">출처</a></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 체육복</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> lost<span class=\"token punctuation\">,</span> reserve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># 여벌옷이 있는데 도난당한 학생을 먼저 걸러주어야함</span>\n    <span class=\"token comment\"># 먼저 걸러주지 않으면 반복문을 돌면서 앞의 학생을 처리할 때 필요없는데 빌림당할수도 있음</span>\n    f_lost <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>std <span class=\"token keyword\">for</span> std <span class=\"token keyword\">in</span> lost <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>std <span class=\"token keyword\">in</span> reserve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># list(set(lost)-set(reserve))</span>\n    f_reserve <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>std <span class=\"token keyword\">for</span> std <span class=\"token keyword\">in</span> reserve <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>std <span class=\"token keyword\">in</span> lost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># list(set(reserve)-set(lost))</span>\n\n\n    <span class=\"token keyword\">for</span> std <span class=\"token keyword\">in</span> f_reserve<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> std<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">in</span> f_lost<span class=\"token punctuation\">:</span>\n            f_lost<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>std<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> std<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">in</span> f_lost<span class=\"token punctuation\">:</span>\n            f_lost<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>std<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> n <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>f_lost<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> lost<span class=\"token punctuation\">,</span> reserve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    _reserve <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>r <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> reserve <span class=\"token keyword\">if</span> r <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> lost<span class=\"token punctuation\">]</span>\n    _lost <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>l <span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> lost <span class=\"token keyword\">if</span> l <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> reserve<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> _reserve<span class=\"token punctuation\">:</span>\n        f <span class=\"token operator\">=</span> r <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        b <span class=\"token operator\">=</span> r <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> f <span class=\"token keyword\">in</span> _lost<span class=\"token punctuation\">:</span>\n            _lost<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> b <span class=\"token keyword\">in</span> _lost<span class=\"token punctuation\">:</span>\n            _lost<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> n <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>_lost<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">not in</code>을 사용할 수 있다는걸 몰랐다. 나중에 써먹어야지\n<code class=\"language-text\">set(x)-set(y)</code>도 할 수 있는지 몰랐다. 중복된 자료를 걸러낼 때 사용하면 편할 것 같다.</p>\n<p>세세하게 차근차근 따져보지 않고 두루뭉실하게 대충 생각하는 버릇이 있는거같다. 귀찮아도 차근차근 천천히 최대한 많은 경우를 따져볼 수 있게 노력해야겠다.</p>\n</blockquote>","frontmatter":{"title":"[algorithm]level1 체육복","date":null,"lang":null}}},{"node":{"id":"0aada40a-b320-517f-8b93-67dbe1729ff9","excerpt":"문제 설명 수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다. 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.</p>\n<p>마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.</li>\n<li>completion의 길이는 participant의 길이보다 1 작습니다.</li>\n<li>참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.</li>\n<li>참가자 중에는 동명이인이 있을 수 있습니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>participant</th>\n<th>completion</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[leo, kiki, eden]</td>\n<td>[eden, kiki]</td>\n<td>leo</td>\n</tr>\n<tr>\n<td>[marina, josipa, nikola, vinko, filipa]</td>\n<td>[josipa, filipa, marina, nikola]</td>\n<td>vinko</td>\n</tr>\n<tr>\n<td>[mislav, stanko, mislav, ana]</td>\n<td>[stanko, ana, mislav]</td>\n<td>mislav</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>예제 #1\nleo는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.</p>\n<p>예제 #2\nvinko는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다.</p>\n<p>예제 #3\nmislav는 참여자 명단에는 두 명이 있지만, 완주자 명단에는 한 명밖에 없기 때문에 한명은 완주하지 못했습니다.</p>\n<p><a href=\"http://hsin.hr/coci/archive/2014_2015/contest2_tasks.pdf\">출처</a></p>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 배열을 정렬해서 반복문을 돌려서 같은지 비교하다가 다른 값이 나오면 참가자의 값을 리턴</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution2</span><span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">,</span> completion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n    participant<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    completion<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>participant<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>completion<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> i <span class=\"token keyword\">or</span> participant<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> completion<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n           answer <span class=\"token operator\">=</span> participant<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n           <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[algorithm]level1 완주하지 못한 선수","date":null,"lang":null}}},{"node":{"id":"0cf1bfa2-183b-5cd8-bc2d-ddd9e03b08ea","excerpt":"시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 54526 11699 7488 19.937% 문제 집에서 시간을 보내던 오영식은 박성원의 부름을 받고 급히 달려왔다. 박성원이 캠프 때 쓸 N…","html":"<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">54526</td>\n<td align=\"left\">11699</td>\n<td align=\"left\">7488</td>\n<td align=\"left\">19.937%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>집에서 시간을 보내던 오영식은 박성원의 부름을 받고 급히 달려왔다. 박성원이 캠프 때 쓸 N개의 랜선을 만들어야 하는데 너무 바빠서 영식이에게 도움을 청했다.</p>\n<p>이미 오영식은 자체적으로 K개의 랜선을 가지고 있다. 그러나 K개의 랜선은 길이가 제각각이다. 박성원은 랜선을 모두 N개의 같은 길이의 랜선으로 만들고 싶었기 때문에 K개의 랜선을 잘라서 만들어야 한다. 예를 들어 300cm 짜리 랜선에서 140cm 짜리 랜선을 두 개 잘라내면 20cm는 버려야 한다. (이미 자른 랜선은 붙일 수 없다.)</p>\n<p>편의를 위해 랜선을 자르거나 만들 때 손실되는 길이는 없다고 가정하며, 기존의 K개의 랜선으로 N개의 랜선을 만들 수 없는 경우는 없다고 가정하자. 그리고 자를 때는 항상 센티미터 단위로 정수길이만큼 자른다고 가정하자. N개보다 많이 만드는 것도 N개를 만드는 것에 포함된다. 이때 만들 수 있는 최대 랜선의 길이를 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에는 오영식이 이미 가지고 있는 랜선의 개수 K, 그리고 필요한 랜선의 개수 N이 입력된다. K는 1이상 10,000이하의 정수이고, N은 1이상 1,000,000이하의 정수이다. 그리고 항상 K ≦ N 이다. 그 후 K줄에 걸쳐 이미 가지고 있는 각 랜선의 길이가 센티미터 단위의 정수로 입력된다. 랜선의 길이는 231-1보다 작거나 같은 자연수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 N개를 만들 수 있는 랜선의 최대 길이를 센티미터 단위의 정수로 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4 11\n802\n743\n457\n539</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">200</code></pre></div>\n<h2 id=\"힌트\" style=\"position:relative;\"><a href=\"#%ED%9E%8C%ED%8A%B8\" aria-label=\"힌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힌트</h2>\n<p>802cm 랜선에서 4개, 743cm 랜선에서 3개, 457cm 랜선에서 2개, 539cm 랜선에서 2개를 잘라내 모두 11개를 만들 수 있다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 랜선 자르기</span>\nn<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nwires <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    wires<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ntemp <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>wires<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 잘라질 길이</span>\nm_temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 중간 길이</span>\nm_cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 중간 개수</span>\n<span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> wire <span class=\"token keyword\">in</span> wires<span class=\"token punctuation\">:</span> <span class=\"token comment\"># temp로 잘랐을 때 나오는 조각들의 수를 반복문을 돌면서 계산</span>\n        cnt <span class=\"token operator\">+=</span> wire <span class=\"token operator\">//</span> temp\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'cnt </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>cnt<span class=\"token punctuation\">}</span></span><span class=\"token string\"> temp </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>temp<span class=\"token punctuation\">}</span></span><span class=\"token string\"> m_cnt </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>m_cnt<span class=\"token punctuation\">}</span></span><span class=\"token string\"> m_temp </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>m_temp<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'------------------'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> cnt <span class=\"token operator\">==</span> m_cnt <span class=\"token keyword\">and</span> temp <span class=\"token operator\">==</span> m_temp<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 무한 루프를 막기 위한 탈출 조건</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n\n\n    <span class=\"token keyword\">if</span> cnt <span class=\"token operator\">>=</span> k<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 필요한 개수보다 구해진 개수가 크거나 같으면 temp가 짧다는 것</span>\n        <span class=\"token comment\"># cnt == k 인 경우 이 때의 temp가 답일 수 있지만</span>\n        <span class=\"token comment\"># 더 길면서 cnt == k인 다른 temp가 있을 수도 있기 때문에</span>\n        <span class=\"token comment\"># 조건문을 통과한 temp보다 더 긴 길이를 탐색해보기 위해서 일단 변수로 저장</span>\n        m_cnt <span class=\"token operator\">=</span> cnt\n        m_temp <span class=\"token operator\">=</span> temp\n\n        temp <span class=\"token operator\">=</span> temp <span class=\"token operator\">+</span> temp<span class=\"token operator\">//</span><span class=\"token number\">2</span> <span class=\"token comment\"># 잘라질 크기 늘이기 1.5배</span>\n\n    <span class=\"token keyword\">elif</span> cnt <span class=\"token operator\">&lt;</span> m_cnt<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 저장된 직전 개수보다 작아지면 temp가 너무 긴 것</span>\n        temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m_temp <span class=\"token operator\">+</span> temp<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 저장된 길이 와 temp 사이의 값을 temp에 대입</span>\n        <span class=\"token comment\"># m_cnt와 m_temp가 저장된 이후에는</span>\n        <span class=\"token comment\"># m_temp와 temp 사이에서 값을 찾아야하기 때문에 두번째 조건문까지만 돌게됨</span>\n\n    <span class=\"token comment\"># 값이 넘어가는 지점을 찾기 전까지 temp를 반으로 나눠줌</span>\n    <span class=\"token keyword\">elif</span> cnt <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 필요한 개수보다 구해진 개수가 작을 경우, temp가 길다는 것</span>\n        temp <span class=\"token operator\">=</span> temp <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 필요한 개수보다 작은 경우 반절로 자르기</span></code></pre></div>\n<ol>\n<li>가장 긴 랜선의 길이를 temp로 잡고 이등분을 하면서 탐색을 한다.</li>\n<li>\n<p>탐색을 하다보면 구해야하는 값을 넘어가거나 값과 같아지는 지점이 생김</p>\n<ul>\n<li>이 때 길이의 1.5배를 하고 값이 넘어간 길이와 개수를 저장</li>\n<li>temp가 답일 수도 있지만 더 긴 temp가 있을 수도 있기 때문에 이 때의 길이와 개수를 변수로 저장함</li>\n</ul>\n</li>\n<li>2에서 저장한 지점과 1.5배한 temp 사이의 중간 값을 탐색</li>\n<li>\n<p>또 구해야하는 값을 넘어가거나 값과 같아지는 지점이 생김</p>\n<ul>\n<li>똑같이 길이를 1.5배하고 값이 넘어간 길이와 개수를 저장</li>\n</ul>\n</li>\n<li>\n<p>이걸 계속 반복하면 저장된 temp에는 cnt를 넘기는 temp -> cnt는 맞지만 길이가 최대인지 확실하지 않은 temp가 남게 된다.</p>\n<ul>\n<li>temp가 최대 길이인지 판단하기</li>\n</ul>\n<p> 처음 첫번째 조건문(<code class=\"language-text\">cnt >= k</code>)에 <code class=\"language-text\">True</code>가 나왔을 때의 temp를 편의상 T라고 하겠다. 이 이후로 temp에는 1.5*temp가 담기게 되고 그 후로는 T와 temp 사이의 값을 탐색하게 되므로 이 이후에 계산된 temp는 T를 넘을 수 없다. 때문에 첫번째 조건문(<code class=\"language-text\">cnt >= k</code>)을 통과하는 temp는 T보다 무조건 길다. 그렇게 점점 긴 temp가 첫번째 조건문(<code class=\"language-text\">cnt >= k</code>)을 통과하다보면 결국에는 <code class=\"language-text\">cnt == k</code>이고 가장 긴 temp가 m<em>temp에 들어가게 된다. 그리고 가장 긴 m</em>temp가 구해진 이후로는 더 이상 첫번째 조건을 통과하는 경우가 m<em>temp와 temp 사이에 없기 때문에 m</em>temp가 바뀌지 않아 똑같은 루트를 반복하게 된다. cnt와 temp가 각각 m<em>cnt, m</em>temp와 같을 경우 똑같은 루프가 돌고 있다 = 결과를 구했다. 라고 판단하고 탈출하게 했다.</p>\n</li>\n</ol>","frontmatter":{"title":"[algorithm] 1654번 랜선 자르기","date":null,"lang":null}}},{"node":{"id":"4b1db64e-2ef6-5a8d-a6d0-152ebd5157ff","excerpt":"문제 설명 failture_rate1.png…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p><img src=\"https://grepp-programmers.s3.amazonaws.com/files/production/bde471d8ac/48ddf1cc-c4ea-499d-b431-9727ee799191.png\" alt=\"failture_rate1.png\"></p>\n<p>슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다.</p>\n<p>이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 역시 슈퍼 개발자라 대부분의 로직은 쉽게 구현했지만, 실패율을 구하는 부분에서 위기에 빠지고 말았다. 오렐리를 위해 실패율을 구하는 코드를 완성하라.</p>\n<ul>\n<li>\n<p>실패율은 다음과 같이 정의한다.</p>\n<ul>\n<li>스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수 / 스테이지에 도달한 플레이어 수</li>\n</ul>\n</li>\n</ul>\n<p>전체 스테이지의 개수 N, 게임을 이용하는 사용자가 현재 멈춰있는 스테이지의 번호가 담긴 배열 stages가 매개변수로 주어질 때, 실패율이 높은 스테이지부터 내림차순으로 스테이지의 번호가 담겨있는 배열을 return 하도록 solution 함수를 완성하라.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>스테이지의 개수 N은 <code class=\"language-text\">1</code> 이상 <code class=\"language-text\">500</code> 이하의 자연수이다.</li>\n<li>stages의 길이는 <code class=\"language-text\">1</code> 이상 <code class=\"language-text\">200,000</code> 이하이다.</li>\n<li>\n<p>stages에는 <code class=\"language-text\">1</code> 이상 <code class=\"language-text\">N + 1</code> 이하의 자연수가 담겨있다.</p>\n<ul>\n<li>각 자연수는 사용자가 현재 도전 중인 스테이지의 번호를 나타낸다.</li>\n<li>단, <code class=\"language-text\">N + 1</code> 은 마지막 스테이지(N 번째 스테이지) 까지 클리어 한 사용자를 나타낸다.</li>\n</ul>\n</li>\n<li>만약 실패율이 같은 스테이지가 있다면 작은 번호의 스테이지가 먼저 오도록 하면 된다.</li>\n<li>스테이지에 도달한 유저가 없는 경우 해당 스테이지의 실패율은 <code class=\"language-text\">0</code> 으로 정의한다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>N</th>\n<th>stages</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>[2, 1, 2, 6, 2, 4, 3, 3]</td>\n<td>[3,4,2,1,5]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>[4,4,4,4,4]</td>\n<td>[4,1,2,3]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1\n1번 스테이지에는 총 8명의 사용자가 도전했으며, 이 중 1명의 사용자가 아직 클리어하지 못했다. 따라서 1번 스테이지의 실패율은 다음과 같다.</p>\n<ul>\n<li>1 번 스테이지 실패율 : 1/8</li>\n</ul>\n<p>2번 스테이지에는 총 7명의 사용자가 도전했으며, 이 중 3명의 사용자가 아직 클리어하지 못했다. 따라서 2번 스테이지의 실패율은 다음과 같다.</p>\n<ul>\n<li>2 번 스테이지 실패율 : 3/7</li>\n</ul>\n<p>마찬가지로 나머지 스테이지의 실패율은 다음과 같다.</p>\n<ul>\n<li>3 번 스테이지 실패율 : 2/4</li>\n<li>4번 스테이지 실패율 : 1/2</li>\n<li>5번 스테이지 실패율 : 0/1</li>\n</ul>\n<p>각 스테이지의 번호를 실패율의 내림차순으로 정렬하면 다음과 같다.</p>\n<ul>\n<li>[3,4,2,1,5]</li>\n</ul>\n<p>입출력 예 #2</p>\n<p>모든 사용자가 마지막 스테이지에 있으므로 4번 스테이지의 실패율은 1이며 나머지 스테이지의 실패율은 0이다.</p>\n<ul>\n<li>[4,1,2,3]</li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> stages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># N: 스테이지의 개수, stages: 스테이지의 번호가 담긴 배열</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    passed_cnt <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stages<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 초기값: 통과한 사용자+현재 머무는 사용자 = stages의 길이</span>\n    stage_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        stages_cnt <span class=\"token operator\">=</span> stages<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> stages_cnt <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            stage_dict<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            stage_dict<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stages_cnt<span class=\"token operator\">/</span>passed_cnt\n        passed_cnt <span class=\"token operator\">-=</span> stages_cnt\n\n    sorted_dict <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>stage_dict<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>stage <span class=\"token keyword\">for</span> stage<span class=\"token punctuation\">,</span> _ <span class=\"token keyword\">in</span> sorted_dict<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ol>\n<li>스테이지의 개수 N은 1 이상이므로 반복문을 1부터 N+1까지 돌림</li>\n<li><code class=\"language-text\">stages_cnt</code>: 리스트 stage에 count를 사용해 각각의 스테이지에 멈춰 있는 사람의 수를 구함</li>\n<li><code class=\"language-text\">if</code>: 실패율을 계산하는 과정에서 불필요한 연산을 줄이기 위해 2의 결과가 0일 경우 연산 없이 0을 넣고 넘어감</li>\n<li><code class=\"language-text\">else</code>: 멈춰있는 사람의 수와 통과한 사용자의 수를 사용해서 실패율을 구한 후 dict에 넣음</li>\n<li>다음 반복문에서는 현재 스테이지에 멈춰있는 사람의 수를 제외하고 연산을 해야하기 때문에 2에서 구한 현재 스테이지에 멈춘 사람 수를 통과한 사람 수에서 뺌</li>\n<li>for문을 반복하면 스테이지 별 실패율이 담긴 dictionary가 구해짐</li>\n<li>\n<p><code class=\"language-text\">sorted</code>함수를 사용해서 dict를 값기준(<code class=\"language-text\">items</code>, <code class=\"language-text\">lambda</code>)으로 내림차순정렬(<code class=\"language-text\">reverse=True</code>)한다.</p>\n<ul>\n<li><code class=\"language-text\">sorted(stage_dict, key=lambda x: stage_dict[x], reverse=True)</code></li>\n<li>stage_dict는 dictionary이므로 sorted에 넘기면 keys가 들어가게 된다. 여기서 keys는 생략가능</li>\n<li>lambda에 stage_dict[x]로 주면 value로 정렬한다는 뜻</li>\n<li>결과는 key가 출력됨</li>\n</ul>\n</li>\n<li>정렬한 값에서 스테이지만 가져와서 반환해줌</li>\n</ol>","frontmatter":{"title":"[algorithm]level1 실패율","date":null,"lang":null}}},{"node":{"id":"89a5e535-4980-5e2a-a4dd-b5f5eab38300","excerpt":"문제 설명 카카오톡에 뜬 네 번째 별! 심심할 땐? 카카오톡 게임별~ Game Star…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>카카오톡에 뜬 네 번째 별! 심심할 땐? 카카오톡 게임별~</p>\n<p><img src=\"http://t1.kakaocdn.net/welcome2018/gamestar.png\" alt=\"Game Star\"></p>\n<p>카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다. 다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는 게임으로, 모두가 간단히 즐길 수 있다.\n갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다.</p>\n<ol>\n<li>다트 게임은 총 3번의 기회로 구성된다.</li>\n<li>각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다.</li>\n<li>점수와 함께 Single(<code class=\"language-text\">S</code>), Double(<code class=\"language-text\">D</code>), Triple(<code class=\"language-text\">T</code>) 영역이 존재하고 각 영역 당첨 시 점수에서 1제곱, 2제곱, 3제곱 (점수1 , 점수2 , 점수3 )으로 계산된다.</li>\n<li>옵션으로 스타상(<code class=\"language-text\">*</code>) , 아차상(<code class=\"language-text\">#</code>)이 존재하며 스타상(<code class=\"language-text\">*</code>) 당첨 시 해당 점수와 바로 전에 얻은 점수를 각 2배로 만든다. 아차상(<code class=\"language-text\">#</code>) 당첨 시 해당 점수는 마이너스된다.</li>\n<li>스타상(<code class=\"language-text\">*</code>)은 첫 번째 기회에서도 나올 수 있다. 이 경우 첫 번째 스타상(<code class=\"language-text\">*</code>)의 점수만 2배가 된다. (예제 4번 참고)</li>\n<li>스타상(<code class=\"language-text\">*</code>)의 효과는 다른 스타상(<code class=\"language-text\">*</code>)의 효과와 중첩될 수 있다. 이 경우 중첩된 스타상(<code class=\"language-text\">*</code>) 점수는 4배가 된다. (예제 4번 참고)</li>\n<li>스타상(<code class=\"language-text\">*</code>)의 효과는 아차상(<code class=\"language-text\">#</code>)의 효과와 중첩될 수 있다. 이 경우 중첩된 아차상(<code class=\"language-text\">#</code>)의 점수는 -2배가 된다. (예제 5번 참고)</li>\n<li>Single(<code class=\"language-text\">S</code>), Double(<code class=\"language-text\">D</code>), Triple(<code class=\"language-text\">T</code>)은 점수마다 하나씩 존재한다.</li>\n<li>스타상(<code class=\"language-text\">*</code>), 아차상(<code class=\"language-text\">#</code>)은 점수마다 둘 중 하나만 존재할 수 있으며, 존재하지 않을 수도 있다.</li>\n</ol>\n<p>0~10의 정수와 문자 S, D, T, *, #로 구성된 문자열이 입력될 시 총점수를 반환하는 함수를 작성하라.</p>\n<h3 id=\"입력-형식\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5-%ED%98%95%EC%8B%9D\" aria-label=\"입력 형식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력 형식</h3>\n<p>점수|보너스|[옵션]으로 이루어진 문자열 3세트.\n예) <code class=\"language-text\">1S2D*3T</code></p>\n<ul>\n<li>점수는 0에서 10 사이의 정수이다.</li>\n<li>보너스는 S, D, T 중 하나이다.</li>\n<li>옵선은 *이나 # 중 하나이며, 없을 수도 있다.</li>\n</ul>\n<h3 id=\"출력-형식\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5-%ED%98%95%EC%8B%9D\" aria-label=\"출력 형식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력 형식</h3>\n<p>3번의 기회에서 얻은 점수 합계에 해당하는 정수값을 출력한다.\n예) 37</p>\n<h3 id=\"입출력-예제\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88%EC%A0%9C\" aria-label=\"입출력 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예제</h3>\n<table>\n<thead>\n<tr>\n<th>예제</th>\n<th>dartResult</th>\n<th>answer</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code class=\"language-text\">1S2D*3T</code></td>\n<td>37</td>\n<td>11 _ 2 + 22 _ 2 + 33</td>\n</tr>\n<tr>\n<td>2</td>\n<td><code class=\"language-text\">1D2S#10S</code></td>\n<td>9</td>\n<td>12 + 21 * (-1) + 101</td>\n</tr>\n<tr>\n<td>3</td>\n<td><code class=\"language-text\">1D2S0T</code></td>\n<td>3</td>\n<td>12 + 21 + 03</td>\n</tr>\n<tr>\n<td>4</td>\n<td><code class=\"language-text\">1S*2T*3S</code></td>\n<td>23</td>\n<td>11 _ 2 _ 2 + 23 * 2 + 31</td>\n</tr>\n<tr>\n<td>5</td>\n<td><code class=\"language-text\">1D#2S*3S</code></td>\n<td>5</td>\n<td>12 _ (-1) _ 2 + 21 * 2 + 31</td>\n</tr>\n<tr>\n<td>6</td>\n<td><code class=\"language-text\">1T2D3D#</code></td>\n<td>-4</td>\n<td>13 + 22 + 32 * (-1)</td>\n</tr>\n<tr>\n<td>7</td>\n<td><code class=\"language-text\">1D2S3T*</code></td>\n<td>59</td>\n<td>12 + 21 _ 2 + 33 _ 2</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"http://tech.kakao.com/2017/09/27/kakao-blind-recruitment-round-1/\">해설 보러가기</a></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>dartResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    score_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'2'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'3'</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'4'</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'5'</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'6'</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'7'</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'8'</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'9'</span><span class=\"token punctuation\">:</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'10'</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># 길이가 3이상이면 -2</span>\n    <span class=\"token comment\"># 길이가 2 이면 -1</span>\n    bonus_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'S'</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'T'</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># 길이가 3이면 -1</span>\n    options_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'*'</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'#'</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    data <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n    <span class=\"token keyword\">for</span> ind<span class=\"token punctuation\">,</span> ch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>dartResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">+=</span> ch\n\n        <span class=\"token keyword\">if</span> ch <span class=\"token keyword\">in</span> options_dict<span class=\"token punctuation\">:</span>\n            data <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n            <span class=\"token keyword\">continue</span>\n        <span class=\"token keyword\">elif</span> ch <span class=\"token keyword\">in</span> bonus_dict<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> ind <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dartResult<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> dartResult<span class=\"token punctuation\">[</span>ind<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> options_dict<span class=\"token punctuation\">:</span>\n                temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data <span class=\"token operator\">+</span> dartResult<span class=\"token punctuation\">[</span>ind<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n            data <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n    <span class=\"token keyword\">for</span> ind<span class=\"token punctuation\">,</span> data <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> bonus_dict<span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            bonus <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n            option <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            bonus <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n        temp<span class=\"token punctuation\">[</span>ind<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> score_dict<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">**</span> bonus_dict<span class=\"token punctuation\">[</span>bonus<span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">if</span> ind <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> option <span class=\"token operator\">==</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">:</span>\n            temp<span class=\"token punctuation\">[</span>ind<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*=</span> options_dict<span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span>\n\n        temp<span class=\"token punctuation\">[</span>ind<span class=\"token punctuation\">]</span> <span class=\"token operator\">*=</span> options_dict<span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> option <span class=\"token keyword\">in</span> options_dict <span class=\"token keyword\">else</span> <span class=\"token number\">1</span>\n\n    answer <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ol>\n<li>\n<p>일단 문자열을 일회씩 나눠주기 위해 <code class=\"language-text\">dartResult</code>를 반복문 돌리면서 문자를 하나씩 이어붙임 - 옵션을 있을수도 없을수도 있지만 보너스는 무조건 있으므로 보너스를 기준으로 문자열을 잘랐음</p>\n<ul>\n<li><code class=\"language-text\">if</code>:</li>\n<li><code class=\"language-text\">options_dict</code>를 붙이냐 안붙이느냐에 대한 판단은 다른 조건문에서 해야하므로 data를 ”로 초기화하고 continue함</li>\n<li>따로 조건을 주지 않을 경우 option 문자가 다음 요소에 붙어서 나옴</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">elif</code>: <code class=\"language-text\">bonus_dict</code>에 들어있는 문자일 때</p>\n<ul>\n<li><code class=\"language-text\">if</code>:</li>\n<li>마지막 요소를 확인할 때 옵션을 확인하려다 out of range되지 않도록 <code class=\"language-text\">ind &lt; len(dartResult)-1</code></li>\n<li>보너스의 다음 문자가 옵션일 경우<code class=\"language-text\">dartResult[ind+1] in options_dict</code></li>\n<li>위의 두 조건을 만족할 경우 현재 가지고 있는 data + 옵션문자열을 append</li>\n<li>하나라도 만족하지 않을 경우 data만 append</li>\n</ul>\n</li>\n<li>\n<p>일회씩 나눠진 문자열을 넣은 리스트로 점수 계산</p>\n<ul>\n<li>숫자 부분이 1~10이기 때문에 앞에서 자르거나 길이를 기준으로 연산할 경우 수가 한자리일 때와 두자리일 때를 따로 생각해주어야해서 뒤에서 잘라보기로함</li>\n<li><code class=\"language-text\">if</code> 마지막 문자가 보너스문자일 경우 마지막문자는 보너스, 마지막을 제외한 모든 문자는 숫자</li>\n<li><code class=\"language-text\">else</code> 마지막 문자가 보너스가 아닐 경우 마지막 문자는 옵션, 뒤에서 두번째 문자는 보너스, 그 나머지는 숫자</li>\n</ul>\n</li>\n<li>\n<p>점수 계산</p>\n<ul>\n<li>수와 보너스 문자를 사용해서 기본적으로 가지고 있는 부분을 계산</li>\n<li>직전 값이 없는 1회차에 <code class=\"language-text\">*</code>가 나올 경우 직전 값을 계산할 수 없으므로 (<code class=\"language-text\">ind > 0</code>: 인덱스가 0일 경우 통과하지 못함) 그걸 제외한 경우는 직전 값에 *2를 해줌</li>\n<li>현재 값에 적용하는 옵션은 dictionary를 사용하여 dictionary의 값을 곱해주거나 키가 존재하지 않을 경우 1을 곱해주어 값이 변하지 않게했다</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<ul>\n<li>\n<p>점수를 dictionary에 넣은 이유</p>\n<p>수의 길이가 동일하지 않다는걸 해결하려고 하다가 dictionary로 만들면 어떻게 되지 않을까 하고 만들었는데 (점수가 10개밖에 없기도 했고) 결과적으로 dictionary여야하는 방법을 사용하지 않았다. 나중에는 다른 값들과의 통일성을 위해서 dictionary를 지우지 않았음</p>\n</li>\n</ul>\n</blockquote>","frontmatter":{"title":"[algorithm]level1 다트게임","date":null,"lang":null}}},{"node":{"id":"621f6322-0345-5d40-91ab-581025699855","excerpt":"…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.</p>\n<ol>\n<li>지도는 한 변의 길이가 <code class=\"language-text\">n</code>인 정사각형 배열 형태로, 각 칸은 공백(” ) 또는벽(#”) 두 종류로 이루어져 있다.</li>\n<li>전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.</li>\n<li>지도 1과 지도 2는 각각 정수 배열로 암호화되어 있다.</li>\n<li>암호화된 배열은 지도의 각 가로줄에서 벽 부분을 <code class=\"language-text\">1</code>, 공백 부분을 <code class=\"language-text\">0</code>으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.</li>\n</ol>\n<p><img src=\"http://t1.kakaocdn.net/welcome2018/secret8.png\" alt=\"secret map\"></p>\n<p>네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독하는 작업을 도와줄 프로그램을 작성하라.</p>\n<h3 id=\"입력-형식\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5-%ED%98%95%EC%8B%9D\" aria-label=\"입력 형식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력 형식</h3>\n<p>입력으로 지도의 한 변 크기 <code class=\"language-text\">n</code> 과 2개의 정수 배열 <code class=\"language-text\">arr1</code>, <code class=\"language-text\">arr2</code>가 들어온다.</p>\n<ul>\n<li>1 ≦ <code class=\"language-text\">n</code> ≦ 16</li>\n<li><code class=\"language-text\">arr1</code>, <code class=\"language-text\">arr2</code>는 길이 <code class=\"language-text\">n</code>인 정수 배열로 주어진다.</li>\n<li>정수 배열의 각 원소 <code class=\"language-text\">x</code>를 이진수로 변환했을 때의 길이는 <code class=\"language-text\">n</code> 이하이다. 즉, 0 ≦ <code class=\"language-text\">x</code> ≦ 2n - 1을 만족한다.</li>\n</ul>\n<h3 id=\"출력-형식\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5-%ED%98%95%EC%8B%9D\" aria-label=\"출력 형식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력 형식</h3>\n<p>원래의 비밀지도를 해독하여 <code class=\"language-text\">'#'</code>, <code class=\"language-text\">공백</code>으로 구성된 문자열 배열로 출력하라.</p>\n<h3 id=\"입출력-예제\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88%EC%A0%9C\" aria-label=\"입출력 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예제</h3>\n<table>\n<thead>\n<tr>\n<th>매개변수</th>\n<th>값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>n</td>\n<td>5</td>\n</tr>\n<tr>\n<td>arr1</td>\n<td>[9, 20, 28, 18, 11]</td>\n</tr>\n<tr>\n<td>arr2</td>\n<td>[30, 1, 21, 17, 28]</td>\n</tr>\n<tr>\n<td>출력</td>\n<td><code class=\"language-text\">[\"#####\",\"# # #\", \"### #\", \"# ##\", \"#####\"]</code></td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>매개변수</th>\n<th>값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>n</td>\n<td>6</td>\n</tr>\n<tr>\n<td>arr1</td>\n<td>[46, 33, 33 ,22, 31, 50]</td>\n</tr>\n<tr>\n<td>arr2</td>\n<td>[27 ,56, 19, 14, 14, 10]</td>\n</tr>\n<tr>\n<td>출력</td>\n<td><code class=\"language-text\">[\"######\", \"### #\", \"## ##\", \" #### \", \" #####\", \"### # \"]</code></td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"http://tech.kakao.com/2017/09/27/kakao-blind-recruitment-round-1/\">해설 보러가기</a></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> key1<span class=\"token punctuation\">,</span> key2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        row <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n        <span class=\"token keyword\">while</span> i <span class=\"token operator\">!=</span> n<span class=\"token punctuation\">:</span>\n            temp1 <span class=\"token operator\">=</span> key1 <span class=\"token operator\">%</span> <span class=\"token number\">2</span>\n            temp2 <span class=\"token operator\">=</span> key2 <span class=\"token operator\">%</span> <span class=\"token number\">2</span>\n            <span class=\"token keyword\">if</span> temp1 <span class=\"token operator\">+</span> temp2<span class=\"token punctuation\">:</span>\n                row <span class=\"token operator\">+=</span> <span class=\"token string\">'#'</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                row <span class=\"token operator\">+=</span> <span class=\"token string\">' '</span>\n\n            key1<span class=\"token punctuation\">,</span> key2 <span class=\"token operator\">=</span> key1 <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> key2 <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ol>\n<li>두개의 지도를 한번에 같이 비교하기 위해 반복문에 <code class=\"language-text\">zip</code>을 사용했다.</li>\n<li>for문으로 가져온 지도 한 줄 정보를 지도의 한 변 길이만큼 돌리기 위해 n번 돌아가는 while문을 사용했음</li>\n<li>\n<p>while문을 돌리면서 지도 두 개의 수를 2로 나눈 나머지를 비교하여 벽인지 공백인지 판단하여 <code class=\"language-text\">'#'</code>과 <code class=\"language-text\">' '</code>를 넣어줌</p>\n<ul>\n<li>둘 중 하나라도 1이 있으면 벽이고 둘다 0이면 공백</li>\n</ul>\n</li>\n<li>\n<p>이진수로 바꾸려면 2로 나눈 나머지들을 모아서 거꾸로 뒤집어야하기 때문에 여기서 나온 row도 거꾸로 뒤집어야 제대로 된 결과를 얻을 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">row[::-1]</code></li>\n</ul>\n</li>\n<li>이걸 주어진 arr1, arr2의 길이만큼 돌리면 결과를 얻을 수 있음</li>\n</ol>\n<h3 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a12 <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">|</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        a12<span class=\"token operator\">=</span>a12<span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span>\n        a12<span class=\"token operator\">=</span>a12<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span>\n        a12<span class=\"token operator\">=</span>a12<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a12<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h4 id=\"code-classlanguage-textrjustwidth-fillcharcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textrjustwidth-fillcharcode\" aria-label=\"code classlanguage textrjustwidth fillcharcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">rjust(width[, fillchar])</code></h4>\n<ul>\n<li>문자열 내장함수</li>\n<li>오른쪽 정렬</li>\n<li>왼쪽 정렬은 <code class=\"language-text\">ljust(width[, fillchar])</code></li>\n<li>width: 문자열의 전체길이</li>\n<li>fillchar: 문자열 길이가 부족할 때 채울 문자 기본값은 공백</li>\n</ul>","frontmatter":{"title":"[algorithm]level1 비밀지도","date":null,"lang":null}}},{"node":{"id":"5a79b85c-dbdf-5624-9383-5ee3d7bf3b14","excerpt":"참고: 프로그래머스 문제 설명 게임개발자인 죠르디는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.\n죠르디는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다. crane_game_101.png 게임 화면은 1 x…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/64061\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>게임개발자인 죠르디는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.\n죠르디는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다.</p>\n<p><img src=\"https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/69f1cd36-09f4-4435-8363-b71a650f7448/crane_game_101.png\" alt=\"crane_game_101.png\"></p>\n<p>게임 화면은 <strong>1 x 1</strong> 크기의 칸들로 이루어진 <strong>N x N</strong> 크기의 정사각 격자이며 위쪽에는 크레인이 있고 오른쪽에는 바구니가 있습니다. (위 그림은 5 x 5 크기의 예시입니다). 각 격자 칸에는 다양한 인형이 들어 있으며 인형이 없는 칸은 빈칸입니다. 모든 인형은 1 x 1 크기의 격자 한 칸을 차지하며 <strong>격자의 가장 아래 칸부터 차곡차곡 쌓여 있습니다.</strong> 게임 사용자는 크레인을 좌우로 움직여서 멈춘 위치에서 가장 위에 있는 인형을 집어 올릴 수 있습니다. 집어 올린 인형은 바구니에 쌓이게 되는 데, 이때 바구니의 가장 아래 칸부터 인형이 순서대로 쌓이게 됩니다. 다음 그림은 [1번, 5번, 3번] 위치에서 순서대로 인형을 집어 올려 바구니에 담은 모습입니다.</p>\n<p><img src=\"https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/638e2162-b1e4-4bbb-b0d7-62d31e97d75c/crane_game_102.png\" alt=\"crane_game_102.png\"></p>\n<p>만약 같은 모양의 인형 두 개가 바구니에 연속해서 쌓이게 되면 두 인형은 터뜨려지면서 바구니에서 사라지게 됩니다. 위 상태에서 이어서 [5번] 위치에서 인형을 집어 바구니에 쌓으면 같은 모양 인형 <strong>두 개</strong>가 없어집니다.</p>\n<p><img src=\"https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/8569d736-091e-4771-b2d3-7a6e95a20c22/crane_game_103.gif\" alt=\"crane_game_103.gif\"></p>\n<p>크레인 작동 시 인형이 집어지지 않는 경우는 없으나 만약 인형이 없는 곳에서 크레인을 작동시키는 경우에는 아무런 일도 일어나지 않습니다. 또한 바구니는 모든 인형이 들어갈 수 있을 만큼 충분히 크다고 가정합니다. (그림에서는 화면표시 제약으로 5칸만으로 표현하였음)</p>\n<p>게임 화면의 격자의 상태가 담긴 2차원 배열 board와 인형을 집기 위해 크레인을 작동시킨 위치가 담긴 배열 moves가 매개변수로 주어질 때, 크레인을 모두 작동시킨 후 터트려져 사라진 인형의 개수를 return 하도록 solution 함수를 완성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>[제한사항]</strong></h5>\n<ul>\n<li>board 배열은 2차원 배열로 크기는 5 x 5 이상 30 x 30 이하입니다.</li>\n<li>\n<p>board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.</p>\n<ul>\n<li>0은 빈 칸을 나타냅니다.</li>\n<li>1 ~ 100의 각 숫자는 각기 다른 인형의 모양을 의미하며 같은 숫자는 같은 모양의 인형을 나타냅니다.</li>\n</ul>\n</li>\n<li>moves 배열의 크기는 1 이상 1,000 이하입니다.</li>\n<li>moves 배열 각 원소들의 값은 1 이상이며 board 배열의 가로 크기 이하인 자연수입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예</strong></h5>\n<table>\n<thead>\n<tr>\n<th>board</th>\n<th>moves</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[0,0,0,0,0],[0,0,1,0,3],[0,2,5,0,1],[4,2,4,4,2],[3,5,1,3,1]]</td>\n<td>[1,5,3,5,1,2,1,4]</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예에-대한-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88%EC%97%90-%EB%8C%80%ED%95%9C-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예에 대한 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예에 대한 설명</strong></h5>\n<p><strong>입출력 예 #1</strong></p>\n<p>인형의 처음 상태는 문제에 주어진 예시와 같습니다. 크레인이 [1, 5, 3, 5, 1, 2, 1, 4] 번 위치에서 차례대로 인형을 집어서 바구니에 옮겨 담은 후, 상태는 아래 그림과 같으며 바구니에 담는 과정에서 터트려져 사라진 인형은 4개 입니다.</p>\n<p><img src=\"https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/bb0f59c7-6b72-485a-8302-217fe53ea88f/crane_game_104.jpg\" alt=\"crane_game_104.jpg\"></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> moves<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    basket <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> move <span class=\"token keyword\">in</span> moves<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>move<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                basket<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>move<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>move<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n                <span class=\"token keyword\">break</span>\n\n    t_basket <span class=\"token operator\">=</span> basket<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        pre <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> doll <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>t_basket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 직전 인형과 지금 인형이 같을 경우 통과</span>\n            <span class=\"token keyword\">if</span> doll <span class=\"token operator\">==</span> pre<span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 나란히 있는 두 인형을 삭제</span>\n                <span class=\"token keyword\">del</span> basket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> basket<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n                answer<span class=\"token operator\">+=</span><span class=\"token number\">2</span>\n                flag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n                <span class=\"token keyword\">break</span>\n\n            <span class=\"token comment\"># 직전의 원소를 저장</span>\n            pre <span class=\"token operator\">=</span> doll\n        <span class=\"token comment\"># 탈출 조건</span>\n        <span class=\"token keyword\">if</span> flag<span class=\"token punctuation\">:</span> <span class=\"token keyword\">break</span>\n\n        t_basket <span class=\"token operator\">=</span> basket<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>인형을 따로 담은 다음에 같은 인형을 삭제하는 방식으로 풀었는데, 인형을 꺼내면서 바로바로 삭제하는 방법이 더 좋은 방법일 것 같다.</li>\n</ul>\n<h3 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> moves<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    stacklist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> moves<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> board<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                stacklist<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                board<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stacklist<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> stacklist<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> stacklist<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                        stacklist<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                        stacklist<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                        answer <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\n                <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[algorithm]level1 크레인 인형뽑기 게임","date":null,"lang":null}}},{"node":{"id":"baa0941c-6ed5-5d6d-a1fb-dede63a3a72f","excerpt":"참고: 프로그래머스 문제 설명 Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다. 1 + 2 + 3 + 4 + 5 = 1…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12924\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다.</p>\n<ul>\n<li>1 + 2 + 3 + 4 + 5 = 15</li>\n<li>4 + 5 + 6 = 15</li>\n<li>7 + 8 = 15</li>\n<li>15 = 15</li>\n</ul>\n<p>자연수 n이 매개변수로 주어질 때, 연속된 자연수들로 n을 표현하는 방법의 수를 return하는 solution를 완성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>n은 10,000 이하의 자연수 입니다.</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>15</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예#1\n문제의 예시와 같습니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        comp <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            comp <span class=\"token operator\">+=</span> num\n            <span class=\"token keyword\">if</span> comp <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span>\n                answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                temp <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">elif</span> comp <span class=\"token operator\">></span> n<span class=\"token punctuation\">:</span>\n                temp <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                <span class=\"token keyword\">break</span>\n\n        <span class=\"token keyword\">if</span> temp <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>1부터 더해보기 시작해서 값이 나오면 answer+1하고 break, 값이 넘어가면 break 다음은 2(temp)부터 더해보고 ~~~ 반복</li>\n<li>주어진 값과 더하기 시작할 값이 같아지면 answer+1하고 break</li>\n</ul>\n<h3 id=\"다른-사람-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4\" aria-label=\"다른 사람 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 사람 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 등차수열 합 공식</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">expressions</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>num<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token keyword\">is</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>홀수 약수의 개수 = 연속하는 수로 이루어진 표현 방법의 개수</li>\n</ul>\n<p>예를 들어 20가 주어졌을 때,</p>\n<ul>\n<li>\n<p>약수: 1, 5, 10 -> 10은 짝수 이므로 제외</p>\n<ul>\n<li>1: 20</li>\n<li>5: 4+4+4+4+4 -> 2+3+4+5+6</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[algorithm]level2 숫자의 표현","date":null,"lang":null}}},{"node":{"id":"0c57792e-164e-53ba-8d24-a637543b0dbe","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 퀵 정렬 알아보기 퀵정렬(quick sort)은 가장 빠른 정렬 알고리즘으로 알려져 있으며 널리 사용되며 알고리즘의 정렬 속도가 매우 빠르다 하여 찰스 A. R…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h4 id=\"퀵-정렬-알아보기\" style=\"position:relative;\"><a href=\"#%ED%80%B5-%EC%A0%95%EB%A0%AC-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"퀵 정렬 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>퀵 정렬 알아보기</h4>\n<p>퀵정렬(quick sort)은 가장 빠른 정렬 알고리즘으로 알려져 있으며 널리 사용되며 알고리즘의 정렬 속도가 매우 빠르다 하여 찰스 A. R. 호어가 붙인 이름입니다.</p>\n<ol>\n<li>정렬하려는 그룹에서 임의로 하나의 값을 선택해 그 값을 기준으로 그룹을 두개로 나눈다.</li>\n<li>\n<p>다시 각 그룹에서 임의의 값을 선택하여 나누기를 반복하여 모든 그룹이 자료가 하나씩 남으면 정렬이 완료된다.</p>\n<blockquote>\n<p>여기서 기준이 되는 임의의 값을 피벗(pivot)이라고 하고, 다른 말로는 중심축이라고도 한다. 피벗은 임의로 선택할 수 있고, 선택된 피벗은 두 개로 나눈 그룹 어디에 넣어도 상관없다.</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"배열을-두-그룹으로-나누기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%91%90-%EA%B7%B8%EB%A3%B9%EC%9C%BC%EB%A1%9C-%EB%82%98%EB%88%84%EA%B8%B0\" aria-label=\"배열을 두 그룹으로 나누기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열을 두 그룹으로 나누기</h3>\n<p>가운데 값을 피벗으로 하고 오른쪽 끝과 왼쪽 끝에서 값을 스캔하면서 피벗과 비교하여 피벗보다 큰 값은 오른쪽으로 보내고 피벗보다 작은 값은 왼쪽으로 보낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 배열을 두 그룹으로 나누기</span>\n\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"배열을 나누어 출력\"\"\"</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    pl <span class=\"token operator\">=</span> <span class=\"token number\">0</span>          <span class=\"token comment\"># 왼쪽 커서</span>\n    pr <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span>      <span class=\"token comment\"># 오른쪽 커서</span>\n    x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>n <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\"># 피벗(가운데 원소)</span>\n\n    <span class=\"token keyword\">while</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">:</span>    <span class=\"token comment\"># a[pl]의 값이 피벗보다 클 때까지 인덱스를 옮김(오른쪽으로)</span>\n            pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> x<span class=\"token punctuation\">:</span>    <span class=\"token comment\"># a[pr]의 값이 피벗보다 작을 때까지 인덱스를 옮김(왼쪽으로)</span>\n            pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">if</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>        <span class=\"token comment\"># pl, pr이 서로 일치하거나 교차하지 않았을 경우 True</span>\n            a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 교환</span>\n            pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'피벗은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">}</span></span><span class=\"token string\">입니다.'</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'피벗 이하인 그룹입니다.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span> pl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>                    <span class=\"token comment\"># a[0] ~ a[pl-1]</span>\n\n    <span class=\"token keyword\">if</span> pl <span class=\"token operator\">></span> pr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'피벗과 일치하는 그룹입니다.'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">[</span>pr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>pl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\"># a[pr+1] ~ a[pl-1]</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'피벗 이상인 그루입니다.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">[</span>pr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>                   <span class=\"token comment\"># a[pr+1] ~ a[n-1]</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'배열을 나눕니다.'</span><span class=\"token punctuation\">)</span>\n    num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'원소 수를 입력하세요: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>num              <span class=\"token comment\"># 원소 수가 num인 배열을 생성</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">]: '</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    partition<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>                <span class=\"token comment\"># 배열 x를 나누어 출력</span></code></pre></div>\n<p>이 프로그램에서는 배열 가운데에 있는 원소를 피벗으로 선택했습니다. 피벗을 어떤 값으로 선택하느냐에 따라 배열을 나누는 것과 정렬하는 성능에 영향을 미칩니다.</p>\n<h3 id=\"퀵-정렬-만들기\" style=\"position:relative;\"><a href=\"#%ED%80%B5-%EC%A0%95%EB%A0%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"퀵 정렬 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>퀵 정렬 만들기</h3>\n<p>배열을 두 그룹으로 나누는 것을 조금 더 발전시키면 큇 정렬 알고리즘이 됩니다.</p>\n<p>원소가 1개인 그룹은 더이상 나눌 필요가 없으므로 원소 수가 2개 이상인 그룹만 다음과 같이 반복해서 나눕니다.</p>\n<ul>\n<li>pr가 a[0]보다 오른쪽에 위치하면 (left &#x3C; pr) 왼쪽 그룹을 나눕니다.</li>\n<li>pl가 a[8]보다 왼쪽에 위치하면 (pl &#x3C; right) 오른쪽 그룹을 나눕니다.</li>\n</ul>\n<blockquote>\n<p>가운데 그룹은 나눌 필요가 없으므로 제외합니다.</p>\n</blockquote>\n<p>퀵 정렬은 5장에서 살펴본 8퀸 문제와 같은 분할 정복 알고리즘이므로 재귀 호출을 사용하여 구현할 수 있습니다. 아래의 qsort()함수는 배열 a, 나누는 구간의 첫 번째 원소(left), 마지막 원소(right)의 인덱스를 전달받아 퀵 정렬을 수행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 퀵 정렬 알고리즘 구현하기</span>\n\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">qsort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"a[left] ~ a[right]를 퀵 정렬\"\"\"</span>\n    pl <span class=\"token operator\">=</span> left                       <span class=\"token comment\"># 왼쪽 커서</span>\n    pr <span class=\"token operator\">=</span> right                      <span class=\"token comment\"># 오른쪽 커서</span>\n    x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\"># 피벗(가운데 원소)</span>\n\n    <span class=\"token keyword\">while</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">:</span>\n            pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> x<span class=\"token punctuation\">:</span>\n            pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>\n            a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span>\n            pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> left <span class=\"token operator\">&lt;</span> pr<span class=\"token punctuation\">:</span>\n        qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> pl <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">:</span>\n        qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> pl<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"퀵정렬\"\"\"</span>\n    qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'퀵 정렬을 수행힙니다.'</span><span class=\"token punctuation\">)</span>\n    num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'원소 수를 입력하세요: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> num    <span class=\"token comment\"># 원소 수가 num인 배열을 생성</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">]: '</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    quick_sort<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 배열 x를 퀵 정렬</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'오름차순으로 정렬했습니다.'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">] = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>qsort() 함수는 3개의 인수를 전달받는데 인수를 1개 전달받는 quick_sort()함수로부터 다시 qsort() 함수를 호출하는 구조입니다. 이렇게 작성하면 프로그램 본문에서 함수를 호출할 때 일관성을 유지할 수 있습니다.</p>\n</blockquote>\n<p>하지만 퀵 정렬은 서로 이웃하지 않은 원소를 교환하므로 안정적이지 않은 알고리즘입니다.</p>\n<h3 id=\"비재귀적인-퀵-정렬-만들기\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%9E%AC%EA%B7%80%EC%A0%81%EC%9D%B8-%ED%80%B5-%EC%A0%95%EB%A0%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"비재귀적인 퀵 정렬 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비재귀적인 퀵 정렬 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 비재귀적인 퀵 정렬 구현하기</span>\n<span class=\"token keyword\">from</span> stack <span class=\"token keyword\">import</span> Stack\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">qsort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"a[left] ~ a[right]를 퀵 정렬(비재귀적인 퀵 정렬)\"\"\"</span>\n\n    <span class=\"token builtin\">range</span> <span class=\"token operator\">=</span> Stack<span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 스택 생성</span>\n\n    <span class=\"token builtin\">range</span><span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        pl<span class=\"token punctuation\">,</span> pr <span class=\"token operator\">=</span> left<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 왼쪽, 오른쪽 커서를 꺼냄</span>\n        x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\"># 피벗(가운데 원소)</span>\n\n    <span class=\"token keyword\">while</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">:</span>\n            pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> x<span class=\"token punctuation\">:</span>\n            pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>\n            a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span>\n            pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> left <span class=\"token operator\">&lt;</span> pr<span class=\"token punctuation\">:</span>\n        qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> pl <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">:</span>\n        qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> pl<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"퀵정렬\"\"\"</span>\n    qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>데이터를 임시 저장하기 위해 다음 스택을 사용합니다.</p>\n<ul>\n<li>range: 나눌 범위에서 맨 앞 원소의 인덱스와 맨 끝 원소의 인덱스를 조합한 튜플 스택</li>\n</ul>\n<p>이 스택의 크기는 right - left + 1 이며 나누는 배열의 원소 수와 같습니다.</p>\n<p>스택에 푸시한 값은 나눠야 할 배열의 맨 앞 원소와 맨 끝 원소의 인덱스입니다. 배열을 나누는 작업을 완료하면 왼쪽 그룹의 인덱스와 오른쪽 그룹의 인덱스 범위를 푸시합니다. 그리고 다시 스택에 팝한 범위를 나누는 작업을 반복하여 정렬을 수행합니다. 이 과정에서 스택이 비면 정렬이 끝납니다.</p>\n<h4 id=\"스택의-크기\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%9D%EC%9D%98-%ED%81%AC%EA%B8%B0\" aria-label=\"스택의 크기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스택의 크기</h4>\n<p>스택의 크기는 정렬 대상인 배열의 원소 수와 같은 값으로 합니다.</p>\n<p>배열을 스택에 푸시하는 순서를 정할 때는 다음 2가지 규칙을 고려할 수 있습니다.</p>\n<ul>\n<li>규칙 1: 원소 수가 많은 쪽의 그룹을 먼저 푸시합니다.</li>\n<li>규칙 2: 원소 수가 적은 쪽의 그룹을 먼저 푸시합니다.</li>\n</ul>\n<p><strong>규칙 1: 원소 수가 많은 그룹을 먼저 푸시</strong></p>\n<p>원소 수가 많은 그룹을 먼저 푸시하면 원소 수가 적은 그룹이 먼저 팝되어 나뉜다. 이렇게 하면 스택에 동시에 쌓여 있는 데이터의 개수는 최대 2가 된다. (p269)</p>\n<p><strong>규칙 2: 원소 수가 적은 그룹을 먼저 푸시</strong></p>\n<p>원소 수가 적은 그룹을 먼저 푸시하면 원소 수가 많은 그룹이 먼저 팝되어 나뉜다. 이렇게 하면 스택에 쌓여 있는 데이터의 개수는 최대 4가 된다. (p269)</p>\n<p>일반적으로 원소 수가 적은 배열일수록 나누는 과정을 빠르게 마칠 수 있다. 따라서 앞에서 살펴본 규칙 1과 같이 원소 수가 많은 그룹의 나누기를 나중에 하고, 원소 수가 적은 그룹의 나누기를 먼저 하면 스택에 동시에 쌓이는 데이터 개수는 적어진다. 규칙 1, 2의 경우 스택에 넣고 꺼내는 횟수는 같지만, 동시에 쌓이는 데이터의 최대 개수는 다르다.</p>\n<p>규칙 1에서 배열의 원소 수가 n이면, 스택에 쌓이는 데이터의 최대 개수는 log n보다 적다. 따라서 원소 수 n이 100만 개라도 스택의 최대 크기는 20으로 충분하다.</p>\n<h4 id=\"피벗-선택하기\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EB%B2%97-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\" aria-label=\"피벗 선택하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>피벗 선택하기</h4>\n<p>피벗 선택 방법은 퀵 정렬의 실행 효율에 큰 영향을 미칩니다. 만약 피벗으로 맨 앞, 맨 뒤의 원소를 선택할 경우 하나의 원소와 그 외 나머지 원소로 나누는 것이 되기 떄문에 한쪽으로 완전히 치우친 분할을 반복하므로 빠른 정렬 속도를 기대할 수 없습니다.</p>\n<p>빠른 정렬을 위해서는 배열을 정렬한 뒤 가운데에 위치하는 값, 즉 전체에서 중앙값을 피벗으로 하는 것이 이상적입니다. 그러면 배열이 한쪽으로 치우치지 않고 절반 크기로 나누어집니다. 하지만 정렬된 배열의 중앙값을 구하려면 그에 대한 처리가 필요하고, 이 처리를 위해 많은 계산 시간이 걸립니다. 결국 피벗을 선택하는 의미가 없어집니다.</p>\n<p>이 문제를 해결하기 위해서 다음과 같은 방법을 사용하면 최악의 경우를 피할 수 있습니다.</p>\n<ul>\n<li>방법 1: 나누어야 할 배열의 원소 수가 3이상이면, 배열에서 임의의 원소 3개를 꺼내 중앙값인 원소를 피벗으로 선택한다.</li>\n<li>\n<p>방법 2: 나누어야 할 배열의 맨 앞 원소, 가운데 원소, 맨 끝 원소를 정렬한 뒤 가운데 원소와 맨 끝에서 두 번째 원소를 교환합니다. 맨 끝에서 두 번쨰 원솟값 a[right-1]이 피벗으로 선택되었고, 동시에 나눌 대상을 a[left+1] ~ a[right - 2]로 좁힙니다.</p>\n<p>p271</p>\n</li>\n</ul>\n<h4 id=\"퀵-정렬의-시간-복잡도\" style=\"position:relative;\"><a href=\"#%ED%80%B5-%EC%A0%95%EB%A0%AC%EC%9D%98-%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"퀵 정렬의 시간 복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>퀵 정렬의 시간 복잡도</h4>\n<p>배열을 조금씩 나누어 보다 작은 문제를 푸는 과정을 반복하므로 시간 복잡도는 O(n logn)입니다. 그런데 정렬하는 배열의 초깃값이나 피벗을 선택하는 방법에 따라 실행 시간 복잡도가 증가하는 경우도 있습니다. 예를 들어 매번 1개이 원소와 나머지 원소로 나누어진다면 n번의 분할이 필요합니다. 이러한 최악의 경우 시간 복잡도는 O(n^2)입니다.</p>\n<p>퀵 정렬은 원소 수가 적은 경우에는 그다지 빠른 알고리즘이 아닌 것으로 알려져 있습니다. 그래서 다음 2가지 방법을 적용하여 프로그램을 작성했습니다.</p>\n<ul>\n<li>원소 수가 9개 미만인 경우 단순 삽입 정렬로 전환합니다.</li>\n<li>피벗 선택은 방법 2를 채택합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 퀵 정렬 알고리즘 구현하기(원소 수가 9 미만이면 단순 삽입 정렬)</span>\n\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sort3</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> idx1<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> idx2<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> idx3<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"a[idx1],a[idx2],a[idx3]를 오름차순으로 정렬하고 중앙값의 인덱스를 반환\"\"\"</span>\n    <span class=\"token keyword\">if</span> a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> a<span class=\"token punctuation\">[</span>idx3<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">[</span>idx3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>idx3<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>idx1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>idx2<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> idx2\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">insertion_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"a[left] ~ a[right]를 단순 삽입 정렬\"\"\"</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        j <span class=\"token operator\">=</span> i\n        tmp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">while</span> j <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> a<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> tmp<span class=\"token punctuation\">:</span>\n            a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            j <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">qsort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"a[left] ~ a[right]를 퀵 정렬\"\"\"</span>\n    <span class=\"token keyword\">if</span> right <span class=\"token operator\">-</span> left <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span>            <span class=\"token comment\"># 원소 수가 9 미만이면 단순 삽입 정렬로 전환</span>\n        insertion_sort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        pl <span class=\"token operator\">=</span> left                   <span class=\"token comment\"># 왼쪽 커서</span>\n        pr <span class=\"token operator\">=</span> right                  <span class=\"token comment\"># 오른쪽 커서</span>\n        m <span class=\"token operator\">=</span> sort3<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> pl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>pl <span class=\"token operator\">+</span> pr<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">)</span>\n        x <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span>\n\n        a<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pr <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pr <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span>\n        pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        pr <span class=\"token operator\">-=</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">while</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">:</span>\n                pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">while</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> x<span class=\"token punctuation\">:</span>\n                pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">if</span> pl <span class=\"token operator\">&lt;=</span> pr<span class=\"token punctuation\">:</span>\n                a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>pl<span class=\"token punctuation\">]</span>\n                pl <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                pr <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">if</span> left <span class=\"token operator\">&lt;</span> pr<span class=\"token punctuation\">:</span>\n            qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> pr<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> pl <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">:</span>\n            qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> pl<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"퀵정렬\"\"\"</span>\n    qsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"보충수업-6-4-sorted-함수로-정렬하기\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%B6%A9%EC%88%98%EC%97%85-6-4-sorted-%ED%95%A8%EC%88%98%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0\" aria-label=\"보충수업 6 4 sorted 함수로 정렬하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보충수업 6-4 sorted() 함수로 정렬하기</h4>\n<p>파이썬에서는 정렬을 수행하는 sorted()함수를 내장함수로 제공합니다. 이 함수는 전달받은(임의의 자료형) 이터러블 객체의 원소를 정렬하여 list형으로 반환합니다. sorted() 함수는 ‘정렬을 직접 수행’하지 않고 ‘정렬을 수행한 뒤 늘어선 원소를 새로운 리스트로 생성하여 반환’합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># a, b를 오름차순으로 정렬</span>\na<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># a, b, c를 오름차순으로 정렬</span>\na<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># a, b, c, d를 오름차순으로 정렬</span></code></pre></div>\n<p>이 3가지 예시에서는 변수를 나열한 리스트를 sorted() 함수에 전달하고, 반환된 리스트를 풀어 변수에 대입합니다. sorted() 함수는 오름차순을 기본으로 하지만, reverse에 True값을 넘겨주면 내림차순으로 정렬을 수행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># sorted() 함수를 사용하여 정렬하기</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sorted() 함수를 사용하여 정렬합니다.'</span><span class=\"token punctuation\">)</span>\nnum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'원소 수를 입력하세요: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> num        <span class=\"token comment\"># 원소 수가 num인 배열을 생성</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">]: '</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 배열 x를 오름차순으로 정렬</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'오름차순으로 정렬했습니다.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">] = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 배열 x를 내림차순으로 정렬</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'내림차순으로 정렬했습니다.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">] = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>튜플은 이뮤터블의 속성을 가지므로 튜플 자체를 정렬할 수 없습니다. 튜플을 정렬해야 한다면 다음과 같은 2단계 방법을 사용합니다.</p>\n<ul>\n<li>1단계: sorted() 함수로 정렬한 원소의 나열에서 새로운 리스트를 생성합니다.</li>\n<li>\n<p>2단계: 생성한 리스트를 튜플로 변환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># a = (1,2,3)</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"[doit_algorithm] 06-6 퀵 정렬","date":null,"lang":null}}},{"node":{"id":"c4aa7bfa-2c49-5ea0-9021-5ff0290b969b","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 힙정렬 알아보기 힙정렬(heap sort…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h4 id=\"힙정렬-알아보기\" style=\"position:relative;\"><a href=\"#%ED%9E%99%EC%A0%95%EB%A0%AC-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"힙정렬 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙정렬 알아보기</h4>\n<p>힙정렬(heap sort)는 힙의 특성을 이용하여 정렬하는 알고리즘입니다. 힙은 ‘부모의 값이 자식의 값보다 항상 크다’는 조건을 만족하는 완전 이진 트리입니다. 이때 부모의 값이 자식의 값보다 항상 작아도 힙이라고 합니다. 즉, 이러한 두 값의 대소 관계가 일정하면 됩니다.</p>\n<blockquote>\n<p>힙(heap)은 ‘쌓아놓음’, ‘쌓아 놓은 더미’라는 뜻</p>\n</blockquote>\n<p>힙에서 어떤 부모와 자식 관계를 주목할 때 ‘부모의 값’ >= ‘자식의 값’ 인 관계가 항상 성립합니다. 따라서 힙의 가장 위쪽에 위치한 루트가 가장 큰 값이 됩니다.</p>\n<blockquote>\n<ul>\n<li>\n<p>트리</p>\n<p>트리는 각 원소를 의미하는 노드(node)들이 연결된 계층 구조입니다. 트리의 가장 윗부분에 위치한 루트(root)는 부모가 없는 노드입니다. 노드의 상하 관계에는 부모노드(parent node)와 자식노드(child node)가 있습니다. 그리고 부모가 같은 자식 간의 관계를 형제노드(sibling)라고 합니다.</p>\n<p>완전 이진 트리란 트리의 한 종류로 완전 이진 상태라는 특징이 있습니다. 여기서 “완전”은 부모는 왼쪽 자식부터 추가하여 모양을 유지하라는 뜻입니다. 그리고 ‘이진’은 부모가 가질 수 있는 자식의 최대 개수는 2개라는 의미입니다.</p>\n</li>\n</ul>\n</blockquote>\n<p>힙에서 부모와 자식 관계는 일정하지만 형제 사이의 대소 관계는 일정하지 않습니다. 따라서 힙은 형제의 대소 관계가 정해져 있지 않으므로 부분 순서 트리(partial ordered tree)라고도 합니다.</p>\n<h3 id=\"힙정렬의-특징\" style=\"position:relative;\"><a href=\"#%ED%9E%99%EC%A0%95%EB%A0%AC%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"힙정렬의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙정렬의 특징</h3>\n<p>힙 정렬은 ‘힙에서 최댓값은 루트에 위치한다.‘는 특징을 이용하여 정렬하는 알고리즘입니다.</p>\n<ul>\n<li>힙에서 최댓값인 루트를 꺼냅니다.</li>\n<li>루트 이외의 부분을 힙으로 만듭니다.</li>\n</ul>\n<p>이 과정에서 꺼낸 값을 나열하면 정렬이 끝난 배열이 완성됩니다. 즉, 힙 정렬은 선택 정렬을 응용한 알고리즘입니다.</p>\n<p>또한 힙 정렬에서 최댓값인 루트를 꺼낸 뒤 다시 남은 원소 중에서 최댓값을 구해야 합니다. 예를 들어 힙으로 이루어진 원소 10개에서 최댓값을 꺼내면 남은 9개 원소에서 다시 최댓값을 구해야합니다. 따라서 남은 9개 원소로 구성한 트리도 힙이 되도록 재구성해야 합니다.</p>\n<blockquote>\n<p>선택정렬: 최솟값 또는 최댓값을 선택해 정렬하는 알고리즘</p>\n</blockquote>\n<h3 id=\"루트를-삭제한-힙의-재구성\" style=\"position:relative;\"><a href=\"#%EB%A3%A8%ED%8A%B8%EB%A5%BC-%EC%82%AD%EC%A0%9C%ED%95%9C-%ED%9E%99%EC%9D%98-%EC%9E%AC%EA%B5%AC%EC%84%B1\" aria-label=\"루트를 삭제한 힙의 재구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>루트를 삭제한 힙의 재구성</h3>\n<ol>\n<li>루트를 꺼냅니다.</li>\n<li>마지막 원소(가장 하단의 오른쪽에 위치한 원소)를 루트로 이동합니다.</li>\n<li>루트에서 시작하여 자신보다 값이 큰 자식과 자리를 바꾸고 아래쪽으로 내려가는 작업을 반복합니다. 자식의 값이 작서나 리프의 위치에 도달하면 종료합니다.</li>\n</ol>\n<blockquote>\n<p>리프(leaf)는 트리에서 자식이 없는 노드를 말하며 잎 노드, 말단 노드라고도 합니다.</p>\n</blockquote>\n<h3 id=\"힙정렬-알고리즘-알아보기\" style=\"position:relative;\"><a href=\"#%ED%9E%99%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"힙정렬 알고리즘 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙정렬 알고리즘 알아보기</h3>\n<ol>\n<li>i값을 n-1로 초기화합니다.</li>\n<li>a[0]과 a[i]를 교환합니다.</li>\n<li>a[0], a[1], … , a[i - 1]을 힙으로 만듭니다.</li>\n<li>i값을 1씩 감소시켜 0이 되면 종료합니다. 그렇지 않으면 2로 돌아갑니다.</li>\n</ol>\n<p>이 떄 중요한 것은 배열의 처음 상태가 힙의 요구 사항을 만족하지 않을 수도 있다는 것입니다. 따라서 이 순서를 적용하기 전에 배열을 반드시 힙으로 만들어야 합니다.</p>\n<h3 id=\"배열을-힙으로-만들기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EC%9D%84-%ED%9E%99%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"배열을 힙으로 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열을 힙으로 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">heap_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"힙 정렬\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">down_heap</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"a[left] ~ a[right]를 힙으로 만들기\"\"\"</span>\n        temp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>          <span class=\"token comment\"># 루트</span>\n\n        parent <span class=\"token operator\">=</span> left\n        <span class=\"token keyword\">while</span> parent <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n            cl <span class=\"token operator\">=</span> parent <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>             <span class=\"token comment\"># 왼쪽 자식</span>\n            cr <span class=\"token operator\">=</span> cl <span class=\"token operator\">+</span> <span class=\"token number\">1</span>                     <span class=\"token comment\"># 오른쪽 자식</span>\n            child <span class=\"token operator\">=</span> cr <span class=\"token keyword\">if</span> cr <span class=\"token operator\">&lt;=</span> right <span class=\"token keyword\">and</span> a<span class=\"token punctuation\">[</span>cr<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span>cl<span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> cl     <span class=\"token comment\"># 큰 값을 선택</span>\n            <span class=\"token keyword\">if</span> temp <span class=\"token operator\">>=</span> a<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            a<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span>\n            parent <span class=\"token operator\">=</span> child\n        a<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp\n\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>     <span class=\"token comment\"># a[i] ~ a[n-1]을 힙으로 만들기</span>\n        down_heap<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>             <span class=\"token comment\"># 최댓값인 a[0]와 마지막 원소를 교환</span>\n        down_heap<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\"># a[0] ~ a[i - 1]을 힙으로 만들기</span></code></pre></div>\n<h4 id=\"down_heap-함수\" style=\"position:relative;\"><a href=\"#down_heap-%ED%95%A8%EC%88%98\" aria-label=\"down_heap 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>down_heap() 함수</h4>\n<p>배열 a에서 a[left] ~ a[right] 원소를 힙으로 만듭니다. a[left] 이외에는 모두 힙 상태라고 가정하고 a[left]를 아랫부분의 알맞은 위치로 옮겨 힙 상태를 만듭니다.</p>\n<h4 id=\"heap_sort-함수\" style=\"position:relative;\"><a href=\"#heap_sort-%ED%95%A8%EC%88%98\" aria-label=\"heap_sort 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>heap_sort() 함수</h4>\n<p>원소 수가 n인 배열 a를 힙 정렬하는 함수입니다.</p>\n<ul>\n<li>1단계: down_sort()함수를 호출하여 배열 a를 힙으로 만듭니다.</li>\n<li>2단계: 최댓값인 루트 a[0]을 꺼내 배열의 마지막 우너소와 교환하고, 배열의 남은 부분을 다시 힙으로 만드는 과정을 반복하여 정렬을 수행합니다.</li>\n</ul>\n<h3 id=\"힙-정렬의-시간-복잡도\" style=\"position:relative;\"><a href=\"#%ED%9E%99-%EC%A0%95%EB%A0%AC%EC%9D%98-%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"힙 정렬의 시간 복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙 정렬의 시간 복잡도</h3>\n<p>힙 정렬은 선택 정렬을 응용한 알고리즘 입니다. 단숱 선택 정렬은 아직 정렬하지 않은 부분의 모든 원소 중에서 최대값을 선택합니다. 힙 정렬은 맨 앞 원소를 꺼내는 것 만으로 최댓값을 구할 수 있지만 남은 원소를 힙으로 재구성해야 합니다.</p>\n<p>단순 선택 정렬에서 최댓값인 원소를 선택하는 시간 복잡도는 O(n)이지만, 힙 정렬에서 다시 힙으로 만드는 작업의 시간 복잡도는 O(log n)으로 크기 줄어듭니다.</p>\n<h4 id=\"heapq-모듈을-사용하는-힙-정렬\" style=\"position:relative;\"><a href=\"#heapq-%EB%AA%A8%EB%93%88%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%9E%99-%EC%A0%95%EB%A0%AC\" aria-label=\"heapq 모듈을 사용하는 힙 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>heapq 모듈을 사용하는 힙 정렬</h4>\n<p>파이썬 heapq 모듈은 힙에 원소를 추가하는 heapqush() 함수와 힙에서 원소를 제거하는 heappop() 함수를 제공합니다. 이때 푸시와 팝은 힙의 조건을 유지하며 수행됩니다. 따라서 heapq모듈을 사용하면 힙 정렬을 간결하게 구현할 수 있습니다. heap에 전체 원소를 푸시하고 꺼내는 작업을 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> heapq\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">heap_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"힙 정렬(heap.qpush와 heapq.pop를 적용)\"\"\"</span>\n\n    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n        heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[doit_algorithm] 06-8 힙 정렬","date":null,"lang":null}}},{"node":{"id":"10b5e7dd-d2b7-578e-a672-745f401e6157","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 병합정렬(merge sort…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<p>병합정렬(merge sort)은 배열을 앞부분과 뒷부분의 두 그룹으로 나누어 각각 정렬한 후 병합하는 작업을 반복하는 알고리즘입니다.</p>\n<h3 id=\"정렬을-마친-배열의-병합\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A0%AC%EC%9D%84-%EB%A7%88%EC%B9%9C-%EB%B0%B0%EC%97%B4%EC%9D%98-%EB%B3%91%ED%95%A9\" aria-label=\"정렬을 마친 배열의 병합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정렬을 마친 배열의 병합</h3>\n<p>각 배열에서 주목하는 원소의 값을 비교하여 작은 쪽의 원소를 꺼내 새로운 배열에 저장합니다. 이 과정을 반복하며 정렬을 마친 배열을 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 정렬을 마친 두 배열을 병합하기</span>\n\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Sequence<span class=\"token punctuation\">,</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">merge_sorted_list</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> Sequence<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> Sequence<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"정렬을 마친 배열 a와 b를 병합하여 c에 저장\"\"\"</span>\n    pa<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> pc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>          <span class=\"token comment\"># 각 배열의 커서</span>\n    na<span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">,</span> nc <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 각 배열의 원소 수</span>\n\n    <span class=\"token keyword\">while</span> pa <span class=\"token operator\">&lt;</span> na <span class=\"token keyword\">and</span> pb <span class=\"token operator\">&lt;</span> nb<span class=\"token punctuation\">:</span>              <span class=\"token comment\"># pa와 pb를 비교하여 작은 값을 pc에 저장</span>\n        <span class=\"token comment\"># print(f' {a[pa]} {b[pb]}')</span>\n        <span class=\"token keyword\">if</span> a<span class=\"token punctuation\">[</span>pa<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">[</span>pb<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            c<span class=\"token punctuation\">[</span>pc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pa<span class=\"token punctuation\">]</span>\n            pa <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            c<span class=\"token punctuation\">[</span>pc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>pb<span class=\"token punctuation\">]</span>\n            pb <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        pc <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># print(f'배열 c: {c}')</span>\n\n    <span class=\"token keyword\">while</span> pa <span class=\"token operator\">&lt;</span> na<span class=\"token punctuation\">:</span>                          <span class=\"token comment\"># a에 남은 원소를 c에 복사</span>\n        c<span class=\"token punctuation\">[</span>pc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>pa<span class=\"token punctuation\">]</span>\n        pa <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        pc <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">while</span> pb <span class=\"token operator\">&lt;</span> nb<span class=\"token punctuation\">:</span>                          <span class=\"token comment\"># b에 남은 원소를 c에 복사</span>\n        c<span class=\"token punctuation\">[</span>pc<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>pb<span class=\"token punctuation\">]</span>\n        pb <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        pc <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># print(f'배열 c: {c}')</span></code></pre></div>\n<ul>\n<li>pa와 pb를 비교하여 작은 값을 pc에 대입하고 작은 값이 있던 커서와 pc를 +1해준다. 값을 꺼내지 않은 커서는 움직이지 않는다. 커서 pa와 pb가 배열의 끝에 도달하면 while 문이 종료된다.</li>\n<li>커서가 아직 끝에 도달하지 않은 경우 배열에 남은 원소를 모두 c에 복사한다. (a,b의 길이가 달라서 하나만 끝에 도달한 경우 실행됨)</li>\n</ul>\n<h4 id=\"sorted-함수로-병합-정렬하기\" style=\"position:relative;\"><a href=\"#sorted-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B3%91%ED%95%A9-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0\" aria-label=\"sorted 함수로 병합 정렬하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sorted() 함수로 병합 정렬하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">c <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>a와 b를 연결하여 오름차운으로 정렬한 것을 list로 변환하여 c에 저장</li>\n<li>\n<p>a와 b가 정렬을 마친 상태가 아니어도 적용할 수 있다는 장점이 있지만, 속도가 빠르지 않다는 단점도 있습니다. 빠르게 병합하려면 다음과 같이 heapq 모듈의 merge()함수를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 정렬을 마친 두 뱅려의 병합(heapq.merge 사용)</span>\n\n<span class=\"token keyword\">import</span> heapq\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">]</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>heapq<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># 배열 a와 b를 병합하여 c에 저장</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"병합-정렬-만들기\" style=\"position:relative;\"><a href=\"#%EB%B3%91%ED%95%A9-%EC%A0%95%EB%A0%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"병합 정렬 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>병합 정렬 만들기</h3>\n<p>정렬을 마친 배열의 병합을 응용하여 분할 정복법에 따라 정렬하는 알고리즘을 병합 정렬이라고 합니다.</p>\n<p>주어진 배열을 두개의 배열로 나눈 후, 나눈 두 배열을 각각 정렬한 뒤 병합하여 배열 정렬을 완료합니다. 배열을 반으로 나눈 앞부분과 뒷부분의 정렬을 각각 수행할 때도 똑같이 병합 정렬을 적용하여 진행합니다.</p>\n<h4 id=\"병합-정렬-알고리즘\" style=\"position:relative;\"><a href=\"#%EB%B3%91%ED%95%A9-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"병합 정렬 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>병합 정렬 알고리즘</h4>\n<p><strong>배열의 원소 수가 2개 이상인 경우</strong></p>\n<ol>\n<li>배열의 앞부분을 병합 정렬로 정렬합니다.</li>\n<li>배열의 뒷부분을 병합 정렬로 정렬합니다.</li>\n<li>배열의 앞부분과 뒷부분을 병합합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 병합 정렬 알고리즘 구현하기</span>\n\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">merge_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"병합 정렬\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_merge_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"a[right] ~ a[left]를 재귀적으로 병합 정렬\"\"\"</span>\n        <span class=\"token keyword\">if</span> left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">:</span>\n            center <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left<span class=\"token operator\">+</span>right<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n\n            _merge_sort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 배열 앞부분을 병합 정렬</span>\n            _merge_sort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> center <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 배열 뒷부분을 병합 정렬</span>\n\n            <span class=\"token comment\"># 앞부분과 뒷부분을 병합하는 과정-------------------------------</span>\n            p <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            i <span class=\"token operator\">=</span> k <span class=\"token operator\">=</span> left\n\n            <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> center<span class=\"token punctuation\">:</span>\n                buff<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n                p <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n            <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> right <span class=\"token keyword\">and</span> j <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> buff<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    a<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> buff<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                    j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    a<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n                    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n            <span class=\"token keyword\">while</span> j <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">:</span>\n                a<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> buff<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n                k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token comment\"># 앞부분과 뒷 부분을 병합하는 과정-------------------------------</span>\n\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    buff <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n           <span class=\"token comment\"># 작업용 배열을 생성</span>\n    _merge_sort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\"># 배열 전체를 병합 정렬</span>\n    <span class=\"token keyword\">del</span> buff</code></pre></div>\n<p>배열 병합의 시간 복잡도는 O(n)입니다. 데이터 원소 수가 n일 때 병합 정렬의 단계는 log n만큼 필요하므로 전체 시간 복잡도는 O(n logn)입니다. 병합 정렬 알고리즘은 서로 떨어져 있는 우너소를 교환하는 것이 아니므로 안정적입니다.</p>","frontmatter":{"title":"[doit_algorithm] 06-7 병합 정렬","date":null,"lang":null}}},{"node":{"id":"3ae0f712-ea39-5ab2-8f4e-d0d6ccb707cb","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 39565 15254 13346 39.123% 문제 자연수 M과 N이 주어질 때 M이상 N이하의 자연수 중 소수인 것을 모두 골라 이들 소수의 합과 최솟값을 찾는 프로그램을 작성하시오. 예를 들어 M…","html":"<ul>\n<li>참고: <a href=\"https://www.acmicpc.net/step/10\">백준</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">39565</td>\n<td align=\"left\">15254</td>\n<td align=\"left\">13346</td>\n<td align=\"left\">39.123%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>자연수 M과 N이 주어질 때 M이상 N이하의 자연수 중 소수인 것을 모두 골라 이들 소수의 합과 최솟값을 찾는 프로그램을 작성하시오.</p>\n<p>예를 들어 M=60, N=100인 경우 60이상 100이하의 자연수 중 소수는 61, 67, 71, 73, 79, 83, 89, 97 총 8개가 있으므로, 이들 소수의 합은 620이고, 최솟값은 61이 된다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>입력의 첫째 줄에 M이, 둘째 줄에 N이 주어진다.</p>\n<p>M과 N은 10,000이하의 자연수이며, M은 N보다 작거나 같다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>M이상 N이하의 자연수 중 소수인 것을 모두 찾아 첫째 줄에 그 합을, 둘째 줄에 그 중 최솟값을 출력한다.</p>\n<p>단, M이상 N이하의 자연수 중 소수가 없을 경우는 첫째 줄에 -1을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">60\n100</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">620\n61</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">64\n65</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">-1</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.acmicpc.net/category/2\">Olympiad </a>> <a href=\"https://www.acmicpc.net/category/55\">한국정보올림피아드 </a>> <a href=\"https://www.acmicpc.net/category/57\">한국정보올림피아드시․도지역본선 </a>> <a href=\"https://www.acmicpc.net/category/70\">지역본선 2006 </a>> <a href=\"https://www.acmicpc.net/category/detail/368\">중등부</a> 1번</p>\n<ul>\n<li>데이터를 추가한 사람: <a href=\"https://www.acmicpc.net/user/hchanhong\">hchanhong</a> <a href=\"https://www.acmicpc.net/user/kyaryunha\">kyaryunha</a></li>\n<li>문제의 오타를 찾은 사람: <a href=\"https://www.acmicpc.net/user/jh05013\">jh05013</a> <a href=\"https://www.acmicpc.net/user/sky1357\">sky1357</a></li>\n<li>잘못된 데이터를 찾은 사람: <a href=\"https://www.acmicpc.net/user/myungwoo\">myungwoo</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/124\">수학</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/95\">정수론</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/9\">소수 판정</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nprime <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">if</span> m <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">:</span>\n    prime<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 2를 제외한 짝수는 소수가 될 수 없으므로 고려하지 않음</span>\n<span class=\"token keyword\">if</span> m <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    m <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> num<span class=\"token operator\">//</span><span class=\"token number\">3</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        prime<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> prime<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>prime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>prime<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>2를 제외한 짝수는 소수의 조건에 맞지 않으므로 홀수 중에서 판단할 수 있게 반복문을 만들었고, 범위 안에 2가 포함될 때는 리스트에 미리 2를 넣어주는 것으로 해결했다.</li>\n<li>\n<p>소수인지 판단하기 위해 반복문을 사용해 나누어 떨어지는지 확인했는데 그 반복문의 범위는 <code class=\"language-text\">3부터 소수인지 판단할 수 // 3 + 1</code>로 하였다.</p>\n<ul>\n<li>짝수는 미리 제거하였으므로 <code class=\"language-text\">num / i</code>의 결과가 3이 나오게 하는 수가 나누어 떨어지는 수 중에서 최댓값이 되고, 그 이상의 수는 <code class=\"language-text\">num</code>을 나누어 떨어지게 만들 수 없다.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>근데 이렇게 짝수를 먼제 제외하고 한다고 속도가 빨라지거나 하지는 않는 것 같다. 오히려 짝수를 포함해서 제출해본 결과가 속도는 더 빨랐음…</p>\n</blockquote>","frontmatter":{"title":"[algorithm]2581번 소수","date":null,"lang":null}}},{"node":{"id":"5ea37cdc-f603-577b-ac61-1b369438f395","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 57404 26900 22152 48.282% 문제 주어진 수 N개 중에서 소수가 몇 개인지 찾아서 출력하는 프로그램을 작성하시오. 입력 첫 줄에 수의 개수 N이 주어진다. N은 10…","html":"<ul>\n<li>참고: <a href=\"https://www.acmicpc.net/step/10\">백준</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">57404</td>\n<td align=\"left\">26900</td>\n<td align=\"left\">22152</td>\n<td align=\"left\">48.282%</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h3>\n<p>주어진 수 N개 중에서 소수가 몇 개인지 찾아서 출력하는 프로그램을 작성하시오.</p>\n<h3 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h3>\n<p>첫 줄에 수의 개수 N이 주어진다. N은 100이하이다. 다음으로 N개의 수가 주어지는데 수는 1,000 이하의 자연수이다.</p>\n<h3 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h3>\n<p>주어진 수들 중 소수의 개수를 출력한다.</p>\n<h4 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4\n1 3 5 7</code></pre></div>\n<h4 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3</code></pre></div>\n<h4 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h4>\n<ul>\n<li>데이터를 추가한 사람: <a href=\"https://www.acmicpc.net/user/bclim9108\">bclim9108</a> <a href=\"https://www.acmicpc.net/user/nova9128\">nova9128</a></li>\n<li>문제의 오타를 찾은 사람: <a href=\"https://www.acmicpc.net/user/djm03178\">djm03178</a></li>\n</ul>\n<h4 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h4>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/124\">수학</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/95\">정수론</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/9\">소수 판정</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/67\">에라토스테네스의 체</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnums <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>1은 소수가 아니므로 continue</li>\n<li>2는 소수이므로 결과에 포함되어야하는데, 2는 반복문 내부 코드가 실행되지 않고 else문이 실행되어 계산됨</li>\n</ul>","frontmatter":{"title":"[algorithm]1978번 소수 찾기","date":null,"lang":null}}},{"node":{"id":"6519042f-8c73-5b0e-9f4a-f3c8351a3c13","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 도수 정렬 알아보기 도수 정렬(counting sort)은 원소의 대소 관계를 판단하지 않고 빠르게 정렬하는 알고리즘으로, 분포수 세기(distribution counting…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h4 id=\"도수-정렬-알아보기\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%88%98-%EC%A0%95%EB%A0%AC-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"도수 정렬 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도수 정렬 알아보기</h4>\n<p>도수 정렬(counting sort)은 원소의 대소 관계를 판단하지 않고 빠르게 정렬하는 알고리즘으로, 분포수 세기(distribution counting)정렬이라고도 합니다.</p>\n<p>지금까지 학습한 정렬 알고리즘에서는 두 우너소의 키값을 비교하여 정렬했습니다. 하지만 도수 정렬은 원소를 비교할 필요가 없다는 특징이 있습니다.</p>\n<ol>\n<li>\n<p>도수 분포표 만들기</p>\n<p>정렬하려는 배열의 데이터 범위 크기의 배열을 만들고, 대상 정렬을 스캔하면서 각각 몇개의 데이터가 존재하는지 정리한다.</p>\n<p>확률과 통계에서 자주 등장하는 용어인 도수 분포표는 자료를 몇 개의 등급으로 나누고 각 등급에 속하는 도수를 조사하여 나타낸 표를 의미합니다. 여기에서 도수는 각 등급에 속하는 재료의 개수입니다.</p>\n</li>\n<li>\n<p>누적 도수 분포표 만들기</p>\n<p>다음으로 0부터 n까지 몇명이 있는지 를 누적된 값으로 나타내는 누적 도수 분포표를 만듭니다. 배열의 두 번째 원소부터 바로 앞의 원솟값을 더하는 과정을 나타냅니다.</p>\n</li>\n<li>\n<p>작업용 배열 만들기</p>\n<p>앞 단계에서 각 점수를 받은 학생이 몇 번째에 위치하는지 알 수 있으므로 이 시점에서 정렬은 거의 마쳤다고 할 수 있습니다.</p>\n<p>남은 작업은 정렬하려는 배열의 각 원솟값과 누적 도수 분포표를 대조하여 정렬을 완료한 배열을 만드는 것입니다. 이 작업에서 원소 수가 동일한 작업용 배열이 필요합니다. 정렬하려는 배열의 우너소를 맨 끝에서 맨 앞으로 스캔하면서 누적 도수분포표와 대조합니다.</p>\n</li>\n<li>\n<p>배열 복사하기</p>\n<p>정렬은 완료되었지만 정렬한 결과가 저장되어 있는 곳은 작업용 배열이므로 정렬하려는 배열은 아직 정렬 전 의 상태입니다. 그러므로 for문을 수행하여 작업용 배열의 모든 원소를 그대로 복사합니다.</p>\n</li>\n</ol>\n<p>도수 정렬은 if문을 사용하지 않고 for문만 반복해서 정렬할 수 있는 알고리즘입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 도수 정렬 알고리즘 구현하기</span>\n\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableSequence\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fsort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"도수 정렬(배열 원솟값은 0 이상 max 이하)\"\"\"</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>                  <span class=\"token comment\"># 정렬할 배열 a</span>\n    f <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># 누적 도수 분포표 배열 f</span>\n    b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n                 <span class=\"token comment\"># 작업용 배열 b</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>        <span class=\"token comment\"># 1단계</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> f<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\"># 2단계</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        b<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>     <span class=\"token comment\"># 3단계</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>         <span class=\"token comment\"># 4단계</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">counting_sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> MutableSequence<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"도수 정렬\"\"\"</span>\n    fsort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"도수 정렬을 수행합니다.\"</span><span class=\"token punctuation\">)</span>\n    num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원소 수를 입력하세요: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> num                            <span class=\"token comment\"># 원소 수가 num인 배열을 생성</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>                        <span class=\"token comment\"># 양수만 입력받도록 제한</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">]: '</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    counting_sort<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>                            <span class=\"token comment\"># 배열 x를 도수 정렬</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"오름차순으로 정렬했습니다.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'x[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">] = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>fsort() 함수는 도수 정렬을 수행합니다. 배열의 모든 원솟값이 0 이상 max 이하라는 것을 전제로 해서 배열 a를 정렬합니다. counting_sort()함수는 배열 a와 그 원소의 최댓값 max(a)를 fsort()함수에 전달하여 호출합니다.</p>\n<p>도수 정렬 알고리즘은 데이터 비교, 교환작업이 필요 없어 매우 빠릅니다. 프로그램에서는 단일 for문만 사용하고 재귀 호출이나 이중 if문이 없어 매우 효율이 좋은 알고리즘입니다. 하지만 도수 분포표가 필요하므로 데이터의 최솟값과 최댓값을 미리 알고있는 경우에만 적용할 수 있습니다.</p>\n<p>각 단계(for문)에서 배열 우너소를 건너뛰지 않고 순서대로 스캔하므로 이 정렬 알고리즘은 안정적입니다. 그러나 3단계에서 배열 a를 스캔할 때 맨 앞부터 스캔하면 안정적이지 않다는 점을 주의해야 합니다.</p>\n<blockquote>\n<p>앞에서 뒤로 스캔하면 안정적이지 않은 이유는 원솟값이 같을 경우 실행순서가 뒤바뀌는 것을 보면 확인할 수 있습니다. 즉, 같은 키 값의 순서 관계가 정렬 전후로 뒤바뀝니다.</p>\n</blockquote>","frontmatter":{"title":"[doit_algorithm] 06-9 도수 정렬","date":null,"lang":null}}},{"node":{"id":"cc4d0eb4-88e2-5676-baeb-25d3083a34e9","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 KMP법 알아보기 브루트 포스법은 일치하지 않는 문자를 만나면 이전 단계에서 검사했던 결과를 버리고 패턴의 첫 문자부터 다시 검사를 수행합니다. 하지만 KMP법은 검사했던 결과를 버리지 않고 효율적으로 활용하는 알고리즘입니다. KMP…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h4 id=\"kmp법-알아보기\" style=\"position:relative;\"><a href=\"#kmp%EB%B2%95-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"kmp법 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>KMP법 알아보기</h4>\n<p>브루트 포스법은 일치하지 않는 문자를 만나면 이전 단계에서 검사했던 결과를 버리고 패턴의 첫 문자부터 다시 검사를 수행합니다. 하지만 KMP법은 검사했던 결과를 버리지 않고 효율적으로 활용하는 알고리즘입니다.</p>\n<blockquote>\n<p>KMP법은 Knuth-Morris-Pratt법의 줄임말로 이 알고리즘을 고안한 세 명의 이름에서 따온 용어입니다.</p>\n</blockquote>\n<p>KMP법은 텍스트와 패턴 안에서 겹치는 문자열을 찾아내 검사를 다시 시작할 위치를 구하여 패터느이 이동을 되도록이면 크게 하는 알고리즘이니다. 그런데 몇 번째 문자부터 검사를 다시 시작할지 패턴을 이동할 때마다 계산한다면 좋은 효율을 기대할 수 없습니다. 그래서 KMP법은 ‘몇 번째 문자부터 다시 검색할지’값을 표로 만들어서 문제를 해결합니다.</p>\n<h4 id=\"kmp법에서-사용하는-표-만들기\" style=\"position:relative;\"><a href=\"#kmp%EB%B2%95%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%91%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"kmp법에서 사용하는 표 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>KMP법에서 사용하는 표 만들기</h4>\n<p>표를 작성할 때는 패턴에서 겹치는 문자열을 찾습니다. 이 과정에서도 KMP법과 같은 방법을 적용합니다. 패턴의 첫 문자가 일치하지 않으면 패턴을 오른쪽으로 1칸 밀어 첫 문자부터 검사해야 하므로 2번째 문자 이후 부분을 생각합니다. 또 패턴과 텍스트를 서로 겹치도록 맞추는 것이 아니라 패턴끼리(즉, 패턴과 패턴을) 서로 겹치도록 맞추고 검사를 시작할 곳을 계산합니다.</p>\n<blockquote>\n<p>p312 건너뛰기 표 이해안됨</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">kmp_match</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> pat<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"KMP법으로 문자열 검색\"\"\"</span>\n    pt <span class=\"token operator\">=</span> <span class=\"token number\">1</span>                          <span class=\"token comment\"># txt를 따라가는 커서</span>\n    pp <span class=\"token operator\">=</span> <span class=\"token number\">0</span>                          <span class=\"token comment\"># pat를 따라가는 커서</span>\n    skip <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 건너뛰기 표</span>\n\n    <span class=\"token comment\"># 건너뛰기 표 만들기</span>\n    skip<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> pt <span class=\"token operator\">!=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> pat<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pat<span class=\"token punctuation\">[</span>pp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            pt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            pp <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            skip<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pp\n        <span class=\"token keyword\">elif</span> pp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            pt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            skip<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pp\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            pp <span class=\"token operator\">=</span> skip<span class=\"token punctuation\">[</span>pp<span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 문자열 검색하기</span>\n    pt <span class=\"token operator\">=</span> pp <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> pt <span class=\"token operator\">!=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> pp <span class=\"token operator\">!=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> txt<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pat<span class=\"token punctuation\">[</span>pp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            pt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            pp <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> pp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            pt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            pp <span class=\"token operator\">=</span> skip<span class=\"token punctuation\">[</span>pp<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> pt <span class=\"token operator\">-</span> pp <span class=\"token keyword\">if</span> pp <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>\n<p>KMP법에서 텍스트를 스캔하는 커서 pt는 앞으로 나아갈 뿐 뒤로 되돌아오지 않습니다. 이것은 브루트 포스법에는 없는 특징입니다. 그러나 이 알고리즘은 복잡할 뿐 보이어무어법보다 성능 면에서 같거나 오히려 낮은 수준이라 실제 프로그램에서 별로 사용하지 않습니다.</p>","frontmatter":{"title":"[doit_algorithm] 07-2 KMP법","date":null,"lang":null}}},{"node":{"id":"554ad609-9a3a-557b-94e2-43852ede50b3","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 27685 15867 14313 58.162% 문제 한수는 지금 (x, y)에 있다. 직사각형의 왼쪽 아래 꼭짓점은 (0, 0)에 있고, 오른쪽 위 꼭짓점은 (w, h…","html":"<ul>\n<li>참고: <a href=\"https://www.acmicpc.net/step/10\">백준</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">27685</td>\n<td align=\"left\">15867</td>\n<td align=\"left\">14313</td>\n<td align=\"left\">58.162%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>한수는 지금 (x, y)에 있다. 직사각형의 왼쪽 아래 꼭짓점은 (0, 0)에 있고, 오른쪽 위 꼭짓점은 (w, h)에 있다. 직사각형의 경계선까지 가는 거리의 최솟값을 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 x, y, w, h가 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 문제의 정답을 출력한다.</p>\n<h2 id=\"제한\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C\" aria-label=\"제한 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한</h2>\n<ul>\n<li>1 ≤ w, h ≤ 1,000</li>\n<li>1 ≤ x ≤ w-1</li>\n<li>1 ≤ y ≤ h-1</li>\n<li>x, y, w, h는 정수</li>\n</ul>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">6 2 10 3</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<ul>\n<li>문제를 번역한 사람: <a href=\"https://www.acmicpc.net/user/baekjoon\">baekjoon</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/124\">수학</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/100\">기하학</a></li>\n</ul>\n<h3 id=\"풀이\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1</span>\ndist1 <span class=\"token operator\">=</span> w <span class=\"token operator\">-</span> x <span class=\"token keyword\">if</span> w <span class=\"token operator\">-</span> x <span class=\"token operator\">&lt;=</span> w<span class=\"token operator\">//</span><span class=\"token number\">2</span> <span class=\"token keyword\">else</span> x\ndist2 <span class=\"token operator\">=</span> h <span class=\"token operator\">-</span> y <span class=\"token keyword\">if</span> h <span class=\"token operator\">-</span> y <span class=\"token operator\">&lt;=</span> h<span class=\"token operator\">//</span><span class=\"token number\">2</span> <span class=\"token keyword\">else</span> y\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dist1 <span class=\"token keyword\">if</span> dist1 <span class=\"token operator\">&lt;</span> dist2 <span class=\"token keyword\">else</span> dist2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2</span>\ndist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token operator\">-</span>x<span class=\"token punctuation\">,</span> h<span class=\"token operator\">-</span>y<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>너비, 높이에서 x, y를 뺀 값과 너비, 높이의 1/2를 비교하여 반절보다 뺀 값이 작으면 뺀 값을, 아니면 x,y를 각각 dist1, dist2에 넣고 dist1과 dist2 중에 작은 값을 출력</li>\n<li>x, y, w-x, h-y를 모두 리스트에 넣고 리스트의 <code class=\"language-text\">min()</code>함수를 사용하여 최소 값을 출력</li>\n</ol>\n<blockquote>\n<p>2번 방법으로 푼 다른 사람은 속도가 더 빨리 나온거같은데 내가 해보니 둘의 속도가 비슷했다. 서버의 상황에 따라 속도가 다르게 찍히나보다.</p>\n</blockquote>","frontmatter":{"title":"[algorithm]1085번 직사각형에서 탈출","date":null,"lang":null}}},{"node":{"id":"e37e437c-e8c0-53c4-8d20-8b6dc3a99e6e","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 문자열 검색이란? 문자열 검색(string search)은 어떤 문자열 안에 따른 문자열이 포함되어 있는지 검사하고, 만약 포함되어 있다면 어디에 위치하는지 찾아내는 것을 말함 검색되는 문자열을 text…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h4 id=\"문자열-검색이란\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B2%80%EC%83%89%EC%9D%B4%EB%9E%80\" aria-label=\"문자열 검색이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 검색이란?</h4>\n<p>문자열 검색(string search)은 어떤 문자열 안에 따른 문자열이 포함되어 있는지 검사하고, 만약 포함되어 있다면 어디에 위치하는지 찾아내는 것을 말함</p>\n<ul>\n<li>검색되는 문자열을 text, 찾아내는 문자열을 pattern이라고 한다.</li>\n</ul>\n<h4 id=\"브루트-포스법-알아보기\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%A3%A8%ED%8A%B8-%ED%8F%AC%EC%8A%A4%EB%B2%95-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"브루트 포스법 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브루트 포스법 알아보기</h4>\n<ul>\n<li>선형 검색을 단순하게 확장한 알고리즘이라서 <strong>단순법</strong>이라고 합니다.</li>\n<li>이미 검사한 위치를 기억하지 못하므로 브루트 포스법은 효율이 좋지 않다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">bf_match</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> pat<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"브루트 포스법으로 문자열 검색\"\"\"</span>\n\n    pt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>              <span class=\"token comment\"># txt를 따라가는 커서</span>\n    pp <span class=\"token operator\">=</span> <span class=\"token number\">0</span>              <span class=\"token comment\"># pat을 따라가는 커서</span>\n\n    <span class=\"token keyword\">while</span> pt <span class=\"token operator\">!=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> pp <span class=\"token operator\">!=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> txt<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pat<span class=\"token punctuation\">[</span>pp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            pt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            pp <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            pt <span class=\"token operator\">=</span> pt <span class=\"token operator\">-</span> pp <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            pp <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">return</span> pt <span class=\"token operator\">-</span> pp <span class=\"token keyword\">if</span> pp <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>\n<h4 id=\"멤버십-연산자와-표준-라이브러리를-사용한-문자열-검색\" style=\"position:relative;\"><a href=\"#%EB%A9%A4%EB%B2%84%EC%8B%AD-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%ED%91%9C%EC%A4%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B2%80%EC%83%89\" aria-label=\"멤버십 연산자와 표준 라이브러리를 사용한 문자열 검색 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멤버십 연산자와 표준 라이브러리를 사용한 문자열 검색</h4>\n<p><strong>멤버십 연산자로 구현하기</strong></p>\n<p>membership operator인 in과 not in을 사용하면 어떤 문자열이 다른 문자열 안에 포함되어 있는지 검색할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">ptn <span class=\"token keyword\">in</span> txt\nptn <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> txt</code></pre></div>\n<p>이 방법은 어떤 문자열이 다른 문자열 안에 포함되어 있는지 판단할 수는 있지만 그 위치는 알지 못합니다.</p>\n<p><strong>find, index 계열 함수로 구현하기</strong></p>\n<p>str 클래스형에 소속된 find(), rfind(), index(), rindex() 함수는 문자열을 검색하여 검색한 문자열의 위치를 반환합니다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">find()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>문자열 str의 [start:end]에 sub가 포함되면 그 가운데 가장 작은 인덱스를 반환하고, 그렇지 않으면 -1을 반환합니다.</p>\n<p>sub, start, end 중에서 end만 생략하거나 start와 end 둘 다 생략 할 수 있습니다. sub는 생략할 수 없습니다.(생략할 수 있는 인수 start와 end는 슬라이스 표기에 따라 지정합니다.초기값은 0과 슬라이스되는 시퀀스의 길이)</p>\n</li>\n<li>\n<p><code class=\"language-text\">rfind()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>rfind<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>[start:end]에 sub가 포함되면 그 가운데 가장 큰 인덱스를 반환하고, 그렇지 않으면 -1을 반환합니다.(생략할 수 있는 인수 start와 end는 슬라이스 표기에 따라 지정합니다.초기값은 0과 슬라이스되는 시퀀스의 길이)</p>\n</li>\n<li>\n<p><code class=\"language-text\">index()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>find() 함수와 같은 기능을 수행합니다. 다만 sub가 발견되지 않으면 예외 처리로 ValueError를 내보냅니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">rindex()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>rfind() 함수와 같은 기능을 수행합니다. 다만 sub가 발견되지 않으면 예외 처리로 ValueError를 내보냅니다.</p>\n</li>\n</ul>\n<p><strong>with()계열 함수로 구현하기</strong></p>\n<p>어떤 문자열이 다른 문자열의 시작이나 끝에 포함되어 있는지를 판단합니다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">startswith()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>문자열이 prefix로 시작하면 True, 아니면 False를 반환합니다. start가 지정되어 있으면 그 위치에서 판단을 시작하고, end가 지정되어 있으면 그 위치에서 비교를 중단합니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">endswith()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>suffix<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>문자열이 suffix로 끝나면 True, 아니면 False를 반환힙니다. start가 지정되어 있으면 그 위치에서 판단을 시작하고, end가 지정되어 있으면 그 위치에서 비교를 중단합니다.</p>\n</li>\n</ul>","frontmatter":{"title":"[doit_algorithm] 07-1 브루트 포스법","date":null,"lang":null}}},{"node":{"id":"2ea5afaa-bc4c-534c-b4cc-4ede39af2c3a","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 256 MB 81185 22719 16117 27.365% 문제 M이상 N이하의 소수를 모두 출력하는 프로그램을 작성하시오. 입력 첫째 줄에 자연수 M과 N이 빈 칸을 사이에 두고 주어진다. (1 ≤ M ≤ N…","html":"<p>참고: <a href=\"https://www.acmicpc.net/step/10\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">256 MB</td>\n<td align=\"left\">81185</td>\n<td align=\"left\">22719</td>\n<td align=\"left\">16117</td>\n<td align=\"left\">27.365%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>M이상 N이하의 소수를 모두 출력하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 자연수 M과 N이 빈 칸을 사이에 두고 주어진다. (1 ≤ M ≤ N ≤ 1,000,000) M이상 N이하의 소수가 하나 이상 있는 입력만 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>한 줄에 하나씩, 증가하는 순서대로 소수를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3 16</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3\n5\n7\n11\n13</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<ul>\n<li>데이터를 추가한 사람: <a href=\"https://www.acmicpc.net/user/jinjean0123\">jinjean0123</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/124\">수학</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/95\">정수론</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/9\">소수 판정</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/67\">에라토스테네스의 체</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nnums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nnums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">while</span> temp <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">:</span>\n        nums<span class=\"token punctuation\">[</span>temp <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        temp <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> nums<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"에라토스테네스의-체\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98-%EC%B2%B4\" aria-label=\"에라토스테네스의 체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에라토스테네스의 체</h4>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b9/Sieve_of_Eratosthenes_animation.gif\" alt=\"에라토스테네스의 체\"></p>\n<ol>\n<li>2부터 소수를 구하고자 하는 구간의 모든 수를 나열한다. 그림에서 회색 사각형으로 두른 수들이 여기에 해당한다.</li>\n<li>2는 소수이므로 오른쪽에 2를 쓴다. (빨간색)</li>\n<li>자기 자신을 제외한 2의 배수를 모두 지운다.</li>\n<li>남아있는 수 가운데 3은 소수이므로 오른쪽에 3을 쓴다. (초록색)</li>\n<li>자기 자신을 제외한 3의 배수를 모두 지운다.</li>\n<li>남아있는 수 가운데 5는 소수이므로 오른쪽에 5를 쓴다. (파란색)</li>\n<li>자기 자신을 제외한 5의 배수를 모두 지운다.</li>\n<li>남아있는 수 가운데 7은 소수이므로 오른쪽에 7을 쓴다. (노란색)</li>\n<li>자기 자신을 제외한 7의 배수를 모두 지운다.</li>\n<li>위의 과정을 반복하면 구하는 구간의 모든 소수가 남는다.</li>\n</ol>\n<p>출처: <a href=\"%5Bhttps://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4%5D(https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4)\">위키백과</a></p>\n<ul>\n<li>전에 프로그래머스에 이걸 사용해서 풀어야 효율성이 나오는 문제가 있었어서 쉽게 풀었다. 소수를 찾을 떄 가장 효율적이고 빠른 알고리즘인가보다</li>\n</ul>","frontmatter":{"title":"[algorithm]1929번 소수 구하기","date":null,"lang":null}}},{"node":{"id":"78eb58d5-5be7-555c-89cf-f39042236056","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 12411 8923 8137 73.73…","html":"<ul>\n<li>참고: <a href=\"https://www.acmicpc.net/step/10\">백준</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">12411</td>\n<td align=\"left\">8923</td>\n<td align=\"left\">8137</td>\n<td align=\"left\">73.731%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>세 점이 주어졌을 때, 축에 평행한 직사각형을 만들기 위해서 필요한 네 번째 점을 찾는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>세 점의 좌표가 한 줄에 하나씩 주어진다. 좌표는 1보다 크거나 같고, 1000보다 작거나 같은 정수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>직사각형의 네 번째 점의 좌표를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">30 20\n10 10\n10 20</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">30 10</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.acmicpc.net/category/45\">Contest </a>> <a href=\"https://www.acmicpc.net/category/17\">Croatian Open Competition in Informatics </a>> <a href=\"https://www.acmicpc.net/category/23\">COCI 2007/2008 </a>> <a href=\"https://www.acmicpc.net/category/detail/100\">Contest #1</a> 1번</p>\n<ul>\n<li>문제를 번역한 사람: <a href=\"https://www.acmicpc.net/user/baekjoon\">baekjoon</a></li>\n<li>문제의 오타를 찾은 사람: <a href=\"https://www.acmicpc.net/user/onjo0127\">onjo0127</a></li>\n<li>데이터를 추가한 사람: <a href=\"https://www.acmicpc.net/user/pichulia\">pichulia</a></li>\n</ul>\n<h2 id=\"링크\" style=\"position:relative;\"><a href=\"#%EB%A7%81%ED%81%AC\" aria-label=\"링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>링크</h2>\n<ul>\n<li><a href=\"http://acm.tju.edu.cn/toj/showp2955.html\">TJU Online Judge</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/102\">구현</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/100\">기하학</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">xs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nys <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    xs<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    ys<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\nfourth_dot <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> xs<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>xs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        fourth_dot<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> ys<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>ys<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        fourth_dot<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ys<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fourth_dot<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fourth_dot<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>직사각형은 꼭짓점의 각이 전부 직각이어야하기 떄문에 x축에 수평인 직선 2개와 y축에 수평인 직선 두개로 이루어져 있다. 때문에 4개의 좌표로 직사각형을 만들 수 있다면 동일한 좌표가 x, y에서 각각 두번씩 나오게되는데 (단, 기울어져 있는 직사각형은 제외되는데, 통과한 것을 보면 그 경우는 고려하지 않는 것 같다.)</li>\n<li>위의 사실을 이용하여 두번 나오지 않는 수(한번 나온 수)로 4번째 점의 좌표를찾을 수 있었다.</li>\n</ul>","frontmatter":{"title":"[algorithm]3009번 네 번째 집","date":null,"lang":null}}},{"node":{"id":"24512fd2-6dea-5501-97cc-bba6655de4f8","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 보이어무어법 알아보기 보이어무어법은 이론이나 실제 효율 면에서 KMP…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h4 id=\"보이어무어법-알아보기\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%9D%B4%EC%96%B4%EB%AC%B4%EC%96%B4%EB%B2%95-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"보이어무어법 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보이어무어법 알아보기</h4>\n<p>보이어무어법은 이론이나 실제 효율 면에서 KMP법보다 뛰어난 알고리즘입니다. 패턴의 끝 문자에서 시작하여 앞쪽을 향해 검사를 수행합니다. 이 과정에서 일치하지 않는 문자를 발견하면 미리 준비한 표를 바탕으로 패턴이 아동하는 값을 결정합니다.</p>\n<ul>\n<li>\n<p>각각의 문자를 만났을 때 패턴을 이동할 크기를 저장하는 표(건너뛰기 표)를 미리 만들어 둘 필요가 있다. 패턴의 길이가 n일 때 이동할 크기(이동량)는 다음과 같이 결정한다.</p>\n<ul>\n<li>패턴에 포함되지 않는 문자를 만난 경우 - n만큼 이동</li>\n<li>패턴에 포함되는 문자를 만난 경우</li>\n<li>마지막에 나오는 위치의 인덱스가 k이면 이동량은 n - k - 1</li>\n<li>같은 문자가 패턴 안에 중복해서 존재하지 않으면 패턴의 맨 끝 문자의 이동량은 n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>여기서는 배열 하나를 사용하여 보이어무어법을 간략하게 나타냈다. 원래의 보이어무어법은 배열 2개를 사용해서 검사한다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">bm_match</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> pat<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"보이어무어법으로 문자열 검색\"\"\"</span>\n\n    skip <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">256</span>                     <span class=\"token comment\"># 건너뛰기 표</span>\n\n    <span class=\"token comment\"># 건너뛰기 표</span>\n    <span class=\"token keyword\">for</span> pt <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>               <span class=\"token comment\"># 패턴의 길이만큼 밀기</span>\n        skip<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> pt <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>          <span class=\"token comment\"># 패턴 안에 존재하는 문자는 len(pat) - pt - 1만큼 밀어줌</span>\n        skip<span class=\"token punctuation\">[</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> pt <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n    <span class=\"token comment\"># 검색하기</span>\n    <span class=\"token keyword\">while</span> pt <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        pp <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">while</span> txt<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pat<span class=\"token punctuation\">[</span>pp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> pp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> pt\n            pt <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n            pp <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n        pt <span class=\"token operator\">+=</span> skip<span class=\"token punctuation\">[</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> skip<span class=\"token punctuation\">[</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> pp \\\n            <span class=\"token keyword\">else</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pat<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> pp\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>\n<h4 id=\"문자열-검색-알고리즘의-시간-복잡도\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B2%80%EC%83%89-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"문자열 검색 알고리즘의 시간 복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 검색 알고리즘의 시간 복잡도</h4>\n<p>텍스트의 길이 = n, 패턴의 길이 = m</p>\n<p><strong>브루트 포스법</strong></p>\n<p>시간 복잡도는 <code class=\"language-text\">O(mn)</code>이지만 일부러 꾸며 낸 패턴이 아니라면 <code class=\"language-text\">O(n)</code>이라고 알려져 있습니다. 단순한 알고리즘이지만 실제로는 아주 빠르게 동작합니다.</p>\n<p><strong>KMP법</strong></p>\n<p>시간 복잡도는 최악의 경우에도 <code class=\"language-text\">O(n)</code>입니다. 다만 처리하기 복잡하고 패턴 안에 반복이 없으면 효율이 좋지 않습니다. 그러나 검색 과정에서 주목하는 곳을 앞으로 되돌릴 필요가 전혀 없으므로 파일을 차례로 읽어들이면서 검색할 때 사용하면 좋습니다.</p>\n<p><strong>보이어무어법</strong></p>\n<p>시간복잡도는 최악의 경우라도 <code class=\"language-text\">O(n)</code>이고 평균 <code class=\"language-text\">O(n/m)</code>입니다. 배열 2개로 알고리즘을 구현하면 KMP법과 마찬가지로 배열을 만드는 데 복잡한 처리 과정이 필요하므로 효율성이 떨어집니다. 보이어무어법은 배열을 1개만 사용해도 충분히 빠릅니다.</p>\n<p>일반적으로 파이썬에서 문자열 검색을 하려면 표준 라이브러리를 사용하는 것을 추천합니다. 만약 표준 라이브러리를 사용하지 않는다면 보이어무어법(또는 개선한 방법)이나 상황에 따라서 브루트 포스법을 사용하는 경우가 많습니다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">ord()</code></p>\n<p>파이썬 내장함수로, 단일 문자를 전달받아 그 문자의 유니코드 코드 포인트를 정수로 반환합니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">chr()</code></p>\n<p>파이썬 내장함수로 정수로된 유니코드 코드 포인트를 문자로 반환합니다.</p>\n</li>\n</ul>","frontmatter":{"title":"[doit_algorithm] 07-3 보이어 무어 법","date":null,"lang":null}}},{"node":{"id":"8b6166c7-4c9b-559c-bda4-7f3f8f38f097","excerpt":"참고: 프로그래머스 문제 설명 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42583\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.\n※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.</p>\n<p>예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.</p>\n<table>\n<thead>\n<tr>\n<th>경과 시간</th>\n<th>다리를 지난 트럭</th>\n<th>다리를 건너는 트럭</th>\n<th>대기 트럭</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>[]</td>\n<td>[]</td>\n<td>[7,4,5,6]</td>\n</tr>\n<tr>\n<td>1~2</td>\n<td>[]</td>\n<td>[7]</td>\n<td>[4,5,6]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[7]</td>\n<td>[4]</td>\n<td>[5,6]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>[7]</td>\n<td>[4,5]</td>\n<td>[6]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[7,4]</td>\n<td>[5]</td>\n<td>[6]</td>\n</tr>\n<tr>\n<td>6~7</td>\n<td>[7,4,5]</td>\n<td>[6]</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>8</td>\n<td>[7,4,5,6]</td>\n<td>[]</td>\n<td>[]</td>\n</tr>\n</tbody>\n</table>\n<p>따라서, 모든 트럭이 다리를 지나려면 최소 8초가 걸립니다.</p>\n<p>solution 함수의 매개변수로 다리 길이 bridge<em>length, 다리가 견딜 수 있는 무게 weight, 트럭별 무게 truck</em>weights가 주어집니다. 이때 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 return 하도록 solution 함수를 완성하세요.</p>\n<h5 id=\"제한-조건\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4\" aria-label=\"제한 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 조건</h5>\n<ul>\n<li>bridge_length는 1 이상 10,000 이하입니다.</li>\n<li>weight는 1 이상 10,000 이하입니다.</li>\n<li>truck_weights의 길이는 1 이상 10,000 이하입니다.</li>\n<li>모든 트럭의 무게는 1 이상 weight 이하입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>bridge_length</th>\n<th>weight</th>\n<th>truck_weights</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>10</td>\n<td>[7,4,5,6]</td>\n<td>8</td>\n</tr>\n<tr>\n<td>100</td>\n<td>100</td>\n<td>[10]</td>\n<td>101</td>\n</tr>\n<tr>\n<td>100</td>\n<td>100</td>\n<td>[10,10,10,10,10,10,10,10,10,10]</td>\n<td>110</td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"http://icpckorea.org/2016/ONLINE/problem.pdf\">출처</a></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution2</span><span class=\"token punctuation\">(</span>bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    bridge <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    time <span class=\"token operator\">=</span> <span class=\"token number\">0</span>    <span class=\"token comment\"># 경과 시간</span>\n    pt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>      <span class=\"token comment\"># 건널 차 리스트의 포인터</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span>    <span class=\"token comment\"># 모든 차가 다 지나가면 탈출</span>\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> temp<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 트럭 무게 리스트의 범위를 벗어나지 않기 위해</span>\n        <span class=\"token keyword\">if</span> pt <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>bridge<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> truck_weights<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> weight<span class=\"token punctuation\">:</span>\n            bridge<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">[</span>pt<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            pt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            bridge<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bridge<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> bridge_length<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> bridge<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                temp <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">del</span> bridge<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n        time <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> time<span class=\"token operator\">+</span><span class=\"token number\">1</span></code></pre></div>\n<ul>\n<li>pt가 truck<em>weights의 범위를 벗어났을 때, 다음 트럭의 무게와 다리 위 트럭들의 무게를 계산해서 트럭이 올라갈 수 있는지 없는지 계산해주는 조건문이 실행될 경우 예외가 발생하기 때문에 `pt &#x3C; len(truck</em>weights)`를 조건문에 추가해서 거짓일 경우 and 뒤의 조건문을 실행하지 않게 했다.</li>\n<li>다리 위에 트럭이 올라갈 수 있으면 bridge 리스트에 트럭의 무게를 append해주고 pt를 +1해준다.</li>\n<li>다리 위에 트럭이 올라갈 수 없으면 bridge 리스트에 0을 append 해준다.</li>\n<li>만약 bridge 리스트의 길이가 문제에서 주어진 다리의 길이가 되면 제일 먼저 append된 bridge[0] 값을 지워주는데 이 값이 0이 아니라면 트럭이 다리에서 내려왔다는 의미로 temp에 +1을 해준다.</li>\n<li>위 과정을 지나야하는 트럭의 개수보다 temp가 작은 동안 반복해준다.</li>\n<li>while이 끝났을 때 time은 마지막 트럭이 내려오는데 걸린 시간을 계산하지 않은 상태이므로 트럭이 내려오는데 걸린 시간을 추가로 계산 해준다. (time + 1)</li>\n</ul>","frontmatter":{"title":"[algorithm]level2 다리를 지나는 트럭","date":null,"lang":null}}},{"node":{"id":"9d7dafab-fb34-5eff-b167-1c350d098395","excerpt":"참고: 프로그래머스 문제 설명 초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요. 제한사항 prices의 각 가격은 1 이상 10,00…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42584\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.</li>\n<li>prices의 길이는 2 이상 100,000 이하입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>prices</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1, 2, 3, 2, 3]</td>\n<td>[4, 3, 1, 1, 0]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<ul>\n<li>1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.</li>\n<li>2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.</li>\n<li>3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.</li>\n<li>4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.</li>\n<li>5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.</li>\n</ul>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> prices<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<p>분류는 큐, 스택이라고 써있는데, 완전탐색으로 풀리는 문제였다. 큐, 스택으로 풀어보려고 코드를 짜긴했는데 효율성 0점이라 통과하질 못했다..</p>\n<p>for문을 두번 돌렸고, 바깥 for문은 prices 배열 전체를, 안쪽 for문은 바깥 for문에서 들어온 i 다음부터 끝까지의 배열을 반복했다. 안쪽 for문은 i에 있는 값보다 값이 작아질 때까지 반복문을 돌고 작아지면 작아지는데까지 걸린 시간을 배열의 길이로 계산하여 answer에 넣어주고 break한다. 반복문이 다 돌 때까지 조건문이 True가 안되면 끝까지 가격이 떨어지지 않았다는 말이므로 그 길이를 else문에서 계산해준다.</p>","frontmatter":{"title":"[algorithm]level2 주식 가격","date":null,"lang":null}}},{"node":{"id":"fae19af6-11ee-507a-b5fa-24826b6e1b79","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 연결 리스트에 데이터를 삽입할 때 노드용 인스턴스를 생성하고, 데이터를 삭제할 때 노드용 인스턴스를 없애면 데이터를 옮기는 문제를 해결할 수 있다. 이러한 노드를 구현하는 클래스 Node를 만들었다. Node는 데이터용 필드 data…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<p>연결 리스트에 데이터를 삽입할 때 노드용 인스턴스를 생성하고, 데이터를 삭제할 때 노드용 인스턴스를 없애면 데이터를 옮기는 문제를 해결할 수 있다. 이러한 노드를 구현하는 클래스 Node를 만들었다. Node는 데이터용 필드 data와는 별도로 자신과 같은 클래스형의 인스턴스를 참조하기 위한 참조용 필드 next를 갖는다. 이처럼 자신과 같은 형의 인스턴스를 참조하는 필드가 있는 구조를 <code class=\"language-text\">자기참조(self-referential)형</code>이라고 한다.</p>\n<p>여기서 data는 데이터 자체가 아니라 ‘데이터에 대한 참조’이고 next는 ‘노드에 대한 참조’이다.</p>\n<p>뒤쪽 노드를 참조하는 필드 next를 뒤쪽 포인터라고 할 때, 뒤쪽 포인터 next에는 뒤쪽 노드에 대한 참조를 저장한다. 뒤쪽 노드가 없는 코리 노드의 뒤쪽 포인터 값은 None이다.</p>\n<h3 id=\"포인터로-연결-리스트-구현하기\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%EC%9D%B8%ED%84%B0%EB%A1%9C-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"포인터로 연결 리스트 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포인터로 연결 리스트 구현하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> annotations\t<span class=\"token comment\">#1</span>\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Any<span class=\"token punctuation\">,</span> Type\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"연결 리스트용 노드 클래스\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">:</span> Node <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"초기화\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data        <span class=\"token comment\"># 데이터</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span>        <span class=\"token comment\"># 뒤쪽 포인터</span></code></pre></div>\n<h4 id=\"필드\" style=\"position:relative;\"><a href=\"#%ED%95%84%EB%93%9C\" aria-label=\"필드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필드</h4>\n<ul>\n<li>data: 데이터 (데이터에 대한 참조: 임의의 형)</li>\n<li>next: 뒤쪽 포인터(뒤쪽 노드에 대한 참조: Node형)</li>\n</ul>\n<h4 id=\"code-classlanguage-text__init__code함수\" style=\"position:relative;\"><a href=\"#code-classlanguage-text__init__code%ED%95%A8%EC%88%98\" aria-label=\"code classlanguage text__init__code함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">__init__()</code>함수</h4>\n<p>전달받은 data와 next를 해당 필드에 대입합니다. 호출할 때 모두 생략할 수 있으며, 생략할 경우에는 None으로 간주한다.</p>\n<p><code class=\"language-text\">#1</code> 책이 집필되던 시점에 파이썬에서는 함수에 대한 주석달기로 그 함수가 속한 클래스의 이름을 사용할 수 없다. (<code class=\"language-text\">__init__()</code>의 세번째 인수에 <code class=\"language-text\">:Node</code>라고 적으면 오류가 발생) 실습에서는 오류가 발생하지 않도록 프로그램 첫버리의 import문을 사용하여 <code class=\"language-text\">__future__</code>모듈에서 <code class=\"language-text\">annotations</code>를 불러온다. 이는 나중에 지원받을 기능을 미리 사용하기 위한 import문이라고 이해하면 된다. 나중에 파이썬이 업데이트 되어 이 기능을 공식적으로 지원해준다면 import문은 더이상 필요없다.</p>\n<h3 id=\"파이썬의-리스트는-자료구조가-아님\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9D%98-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0%EA%B0%80-%EC%95%84%EB%8B%98\" aria-label=\"파이썬의 리스트는 자료구조가 아님 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬의 리스트는 자료구조가 아님</h3>\n<p>연결리스트는 임의의 위치에 원소를 삽입하거나 삭제할 때 빠르게 수행할 수 있다는 장점이 있다. 하지만 기억 영역(메모리)과 속도 면에서 배열보다 효율이 뒤떨어진다. 파이썬의 리스트는 이러한 연결 리스트의 자료구조가 아니라 모든 원소를 연속으로 메모리에 배치하는 ‘배열’로 내부에서 구현하고 있다. 그러므로 속도가 급격하게 떨어지지 않는다. 또 원소를 하나씩 추가, 삽입할 때마다 내부에서 메모리를 확보하거나 해제하지 않는다. 실제 필요한 메모리보다 여유있게 미리 마련해 놓기 때문이다.</p>\n<h3 id=\"연결-리스트-클래스-linkedlist\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-linkedlist\" aria-label=\"연결 리스트 클래스 linkedlist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연결 리스트 클래스 LinkedList</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"연결 리스트 클래스\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"초기화\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">=</span> <span class=\"token number\">0</span>         <span class=\"token comment\"># 노드의 개수</span>\n        self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>    <span class=\"token comment\"># 머리 노드</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>  <span class=\"token comment\"># 주목 노드</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"연결 리스트의 노드 개수를 반환\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>no</code></pre></div>\n<h4 id=\"필드-1\" style=\"position:relative;\"><a href=\"#%ED%95%84%EB%93%9C-1\" aria-label=\"필드 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필드</h4>\n<ul>\n<li>no: 리스트에 등록되어 있는 노드의 개수</li>\n<li>head: 머리 노드에 대한 참조</li>\n<li>current: 현재 주목하고 있는 노드에 대한 참조, 주목 포인터, 리스트에서 노드를 검색하여, 그 노드를 주목한 직후에 노드를 삭제하는 등의 용도로 사용한다.</li>\n</ul>\n<h4 id=\"초기화하는-code-classlanguage-text__init__code함수\" style=\"position:relative;\"><a href=\"#%EC%B4%88%EA%B8%B0%ED%99%94%ED%95%98%EB%8A%94-code-classlanguage-text__init__code%ED%95%A8%EC%88%98\" aria-label=\"초기화하는 code classlanguage text__init__code함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>초기화하는 <code class=\"language-text\">__init__()</code>함수</h4>\n<p>노드가 하나도 없는 빈 연결 리스트를 생성한다. 머리 노드를 참조하기 위한 Node형 필드 head에 None을 대입한다.</p>\n<p>head는 머리 노드에 대한 참조일뿐 머리 노드 그 자체가 아님에 주의한다. 노드가 존재하지 않는 빈 열결 리스트는 head가 참조하는 곳이 없으므로(참조해야 하는 노드가 존재하지 않으므로) 그 값을 None으로 한다.</p>\n<p>주목 포인터 current에도 None을 대입하여 어떤 우너소도 주목하지 않는다.</p>\n<h4 id=\"노드-개수를-반환하는-code-classlanguage-text__len__code함수\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C-%EA%B0%9C%EC%88%98%EB%A5%BC-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-code-classlanguage-text__len__code%ED%95%A8%EC%88%98\" aria-label=\"노드 개수를 반환하는 code classlanguage text__len__code함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드 개수를 반환하는 <code class=\"language-text\">__len__()</code>함수</h4>\n<p>연결 리스트의 노드 개수를 반환하는 함수이다. no값을 그대로 반환한다.</p>\n<blockquote>\n<p>이 함수를 구현하므로써 연결 리스트를 len() 함수의 인수로 전달받을 수 있다.len()함수로 연결리스트의 노드 개수를 알아낼 수 있다.</p>\n</blockquote>\n<ul>\n<li>\n<p>빈 연결 리스트</p>\n<p>연결 리스트가 비어있을 때(노드가 하나도 존재하지 않을 때) head값은 None입니다. 그러므로 연결 리스트가 비어 있는지는 다음 식을 검사할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">head <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span>\t<span class=\"token comment\"># 연결 리스트가 비어 있는지 확인</span></code></pre></div>\n</li>\n<li>\n<p>노드가 1개인 연결 리스트</p>\n<p>이 때 Node형 필드인 head가 참조하는 곳은 머리노드이다. 이 머리노드는 리스트의 꼬리 노드이기도 하므로 뒤쪽 포인터의 값은 None이다.</p>\n<p>head가 참조하는 뒤쪽 포인터의 값이 None이므로 연결 리스트에 존재하는 노드가 하나뿐인지는 다음 식으로 수행할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span>\t<span class=\"token comment\"># 연결 리스트의 노드가 1개인지 확인</span></code></pre></div>\n</li>\n<li>\n<p>노드가 2개인 연결 리스트</p>\n<p>머리 노드는 노드 A이고, 꼬리 노드는 노드 B이다. 이 때 head가 참조하는 곳인 노드 A의 뒤쪽 포인터 next가 노드 B를 참조한다. (곧 head.next가 참조하는 곳은 노드 B). 맨 끝에 위치한 노드 B의 뒤쪽 포인터가 None이므로 연결 리스트의 노드가 2개인지는 다음 식으로 수행할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span>\t<span class=\"token comment\"># 연결 리스트의 노드가 2개인지 확인</span></code></pre></div>\n<p>뒤쪽 포인터가 아니라 데이터를 나타내는 식으로 생각해보면, 노드 A의 데이터에 대한 참조를 나타낸 식은 <code class=\"language-text\">head.data</code>이고 노드 B의 데이터에 대한 참조를 나타낸 식은 <code class=\"language-text\">head.next.data</code>이다.</p>\n</li>\n</ul>\n<p>위 세가지 경우의 판단은 no == 0, no == 1, no == 2를 사용할 수 있다.</p>\n<ul>\n<li>\n<p>꼬리 노드의 판단</p>\n<p>Node형인 변수 p가 리스트에 있는 노드를 참조한다면, 이때 p가 참조하는 노드가 연결 리스트의 꼬리 노드인지는 다음 식으로 수행할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">p<span class=\"token punctuation\">,</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span>\t\t<span class=\"token comment\"># p가 참조하는 노드가 꼬리 노드인지 확인</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"검색을-수행하는-search-함수\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%83%89%EC%9D%84-%EC%88%98%ED%96%89%ED%95%98%EB%8A%94-search-%ED%95%A8%EC%88%98\" aria-label=\"검색을 수행하는 search 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검색을 수행하는 search() 함수</h4>\n<p>인수로 주어진 데이터 data와 값이 같은 노드를 검색하는 함수이다. 검색 알고리즘은 선형 검색을 사용한다. 목적노드를 만날 때까지 머리 노드부터 순서대로 스캔한다.</p>\n<p>노드를 스캔할 때 다음 조건 가운데 하나만 성립해도 검색이 종료된다.</p>\n<ul>\n<li>종료조건1: 검색 조건을 만족하는 노드를 발견하지 못하고 꼬리 노드까지 왔을 경우</li>\n<li>종료조건2: 검색 조건을 만족하는 노드를 발견한 경우</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"data와 값이 같은 노드를 검색\"\"\"</span>\n        cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head\n\n        <span class=\"token keyword\">while</span> ptr <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> ptr<span class=\"token punctuation\">.</span>data <span class=\"token operator\">==</span> data<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> ptr\n                <span class=\"token keyword\">return</span> cnt\n            cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>\n<h3 id=\"데이터가-포함되어-있는지-판단하는-code-classlanguage-text__containts__code함수\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%ED%8F%AC%ED%95%A8%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94%EC%A7%80-%ED%8C%90%EB%8B%A8%ED%95%98%EB%8A%94-code-classlanguage-text__containts__code%ED%95%A8%EC%88%98\" aria-label=\"데이터가 포함되어 있는지 판단하는 code classlanguage text__containts__code함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터가 포함되어 있는지 판단하는 <code class=\"language-text\">__containts__()</code>함수</h3>\n<p>리스트에 data와 값이 같은 노드가 포함되어 있는지를 판단하는 함수이다. 포함되어 있으면 True를 반환하고, 그렇지 않으면 False를 반환한다.</p>\n<blockquote>\n<p>이를 구현함으로써 연결 리스트에 in 연산자를 적용할 수 있다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">__contains__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"연결 리스트에 data가 포함되어 있는지 확인\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span></code></pre></div>\n<h3 id=\"머리에-노드를-삽입하는-code-classlanguage-textadd_firstcode함수\" style=\"position:relative;\"><a href=\"#%EB%A8%B8%EB%A6%AC%EC%97%90-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%BD%EC%9E%85%ED%95%98%EB%8A%94-code-classlanguage-textadd_firstcode%ED%95%A8%EC%88%98\" aria-label=\"머리에 노드를 삽입하는 code classlanguage textadd_firstcode함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>머리에 노드를 삽입하는 <code class=\"language-text\">add_first()</code>함수</h3>\n<p>리스트의 맨 앞에 노드를 삽입하는 함수이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\t<span class=\"token keyword\">def</span> <span class=\"token function\">add_first</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"맨 앞에 노드를 삽입\"\"\"</span>\n        ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head     <span class=\"token comment\"># 삽입하기 전의 머리 노드</span>\n        self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> Node<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></code></pre></div>\n<ol>\n<li>삽입하기 전의 머리 노드A를 참조하는 포인터를 ptr에 저장해 둡니다.</li>\n<li>삽입할 노드를 Node(data, ptr)로 생성합니다. 노드의 데이터는 data가 되고, 뒤쪽 포인터가 참조하는 곳은 ptr(삽입하기 전의 머리노드)이 됩니다. 이때 수행하는 대입으로 head는 삽입한 노드를 참조하도록 업데이트됩니다.</li>\n</ol>\n<blockquote>\n<p>주목 포인터 current도 삽입한 노드를 참조하도록 업데이트합니다. (꼬리에 노드를 삽입하는 add_last()에서도 마찬가지입니다.</p>\n</blockquote>\n<h3 id=\"꼬리에-노드를-삽입하는-code-classlanguage-textadd_lastcode함수\" style=\"position:relative;\"><a href=\"#%EA%BC%AC%EB%A6%AC%EC%97%90-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%BD%EC%9E%85%ED%95%98%EB%8A%94-code-classlanguage-textadd_lastcode%ED%95%A8%EC%88%98\" aria-label=\"꼬리에 노드를 삽입하는 code classlanguage textadd_lastcode함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>꼬리에 노드를 삽입하는 <code class=\"language-text\">add_last()</code>함수</h3>\n<p>리스트의 맨 끝에 노드를 삽입하는 함수입니다. 리스트가 비어 있는지 (head is None이 성립하는지)확인하고 그에 따라 다르게 처리합니다.</p>\n<ul>\n<li>\n<p>리스트가 비어 있을 때</p>\n<p>맨 앞에 노드를 삽입하는 것과 같은 처리를 수행하므로 add_first()함수를 호출한다.</p>\n</li>\n<li>\n<p>리스트가 비어 있지 않을 때</p>\n<p>리스트의 맨 끝에 노드를 삽입합니다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">add_last</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"맨 끝에 노드를 삽입\"\"\"</span>\n\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>head <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>   <span class=\"token comment\"># 리스트가 비어 있으면</span>\n            self<span class=\"token punctuation\">.</span>add_first<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 맨 앞에 노드를 삽입</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head\n            <span class=\"token keyword\">while</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n            ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> Node<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></code></pre></div>\n<ol>\n<li>\n<p>꼬리를 찾는 과정을 수행합니다. ptr이 참조하는 곳을 그 뒤쪽 포인터로 업데이트하는 과정을 반복하므로써 노드를 맨 앞부터 순서대로 스캔합니다.</p>\n<p>ptr.next가 참조하는 곳이 None으로 되어 있으면 while문이 종료되는 것으로 한다.(꼬리노드)</p>\n</li>\n<li>삽입하는 노드를 Node(data, None)로 생성한다. 뒤쪽 포인터를 None으로 하는 것은 맨 끝에 위치한 노드가 어떤 노드도 참조하지 않도록 하기 위한 것이다. 원래 꼬리 노드의 ptr.next가 참조하는 곳이 새로 삽입한 노드가 되도록 업데이트 한다.</li>\n</ol>","frontmatter":{"title":"[doit_algorithm] 08-2 포인터를 이용한 연결 리스트-1","date":null,"lang":null}}},{"node":{"id":"202a2db6-32e0-5140-a9d4-ef0d29ef7995","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 리스트(list)는 데이터에 순서를 매겨 늘어놓은 자료구조이다. 연결 리스트 알아보기 연결리스트는 가장 단순한 리스트 구조 중 하나로, 구조가 단순한 리스트로 선형 리스트(linear list), 연결 리스트(linked list…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<p>리스트(list)는 데이터에 순서를 매겨 늘어놓은 자료구조이다.</p>\n<h3 id=\"연결-리스트-알아보기\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"연결 리스트 알아보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연결 리스트 알아보기</h3>\n<p>연결리스트는 가장 단순한 리스트 구조 중 하나로, 구조가 단순한 리스트로 선형 리스트(linear list), 연결 리스트(linked list)가 있다. 스택과 큐도 리스트 자료구조에 속하는데, 파이썬에서 제공하는 리스트 자료형과는 다르다.</p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Single_linked_list.png/400px-Single_linked_list.png\" alt=\"img\"></p>\n<p>데이터가 순서대로 나열되고 각 데이터가 화살표로 연결되어 있습니다. 이런 구조에서는 누군가를 건너뛰거나 뒤돌아 앞 사람에게 연결해서는 안됩니다. 연결 리스트에서 각각의 원소(element)를 노드(node)라고 합니다. 노드가 갖고 있는 것은 데이터와 뒤쪽 노드를 가리키는(참조하는) 포인터(pointer)입니다. 특별히 맨 앞에 있는 노드를 머리노드(head node), 맨 끝에 있는 노드를 꼬리 노드(tail node)라고 합니다. 또 각 노드에서 바로 앞에 있는 노드를 앞쪽 노드(prodecessor node), 바로 뒤에 있는 노드를 뒤쪽 노드(successor node)라고 합니다.</p>\n<h3 id=\"배열로-연결리스트-만들기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%A1%9C-%EC%97%B0%EA%B2%B0%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"배열로 연결리스트 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열로 연결리스트 만들기</h3>\n<p>비상연락망 같은 연결리스트를 구현한 예이다. 어떤 회원 그룹의 데이터를 나타내는 튜플은 int형인 회원번호와 str형인 회원 이름, 전화번호로 구성된다. 여기서 중간에 새로운 회원 정보를 삽입하기 위해서는 삽입된 자리 이후의 데이터는 한칸씩 뒤로 옮겨져야한다.</p>\n<p>현재 list형 배열인 data의 원소는 7개이다. 현재 회원은 5명이고 data[5], data[6]은 등록되지 않은 상태이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999-999-1234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Paul'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999-999-1235'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mike'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999-999-1236'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Rita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999-999-1237'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Alan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'999-999-1238'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h4 id=\"뒤쪽-노드-꺼내기\" style=\"position:relative;\"><a href=\"#%EB%92%A4%EC%AA%BD-%EB%85%B8%EB%93%9C-%EA%BA%BC%EB%82%B4%EA%B8%B0\" aria-label=\"뒤쪽 노드 꺼내기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뒤쪽 노드 꺼내기</h4>\n<p>배열의 각 원소에는 연락할 순서대로 데이터가 저장되어 있다. 연락하는 데 필요한 ‘뒤쪽 노드 꺼내기’는 인덱스 값이 1만큼 큰 원소에 접근하여 얻을 수 있다.</p>\n<h4 id=\"노드의-삽입과-삭제\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C%EC%9D%98-%EC%82%BD%EC%9E%85%EA%B3%BC-%EC%82%AD%EC%A0%9C\" aria-label=\"노드의 삽입과 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드의 삽입과 삭제</h4>\n<p>예를 들어 회원번호가 55인 회원이 새로 가입하여 그 데이터를 회우너 번호 12와 33사이에 갑입해야한다고 가정해보자. 이 경우 삽입한 원소 이후의 모든 원소가 하나씩 뒤로 이동해야 한다. 원소를 삭제하는 경우에도 배열 안의 일부 원소를 모두 이동해야 한다.</p>\n<p>따라서 단순한 배열로 구현한 연결리스트는 데이터를 삽입, 삭제할 때 데이터를 옮겨야 하므로 효율적이지 않다.</p>","frontmatter":{"title":"[doit_algorithm] 08-1 연결 리스트","date":null,"lang":null}}},{"node":{"id":"085bde92-92b7-5949-9dff-5615c6902ccc","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 머리노드를 삭제하는  함수 삭제 처리를 수행하는 것은 리스트가 비어 있지 않을 때 입니다.(head is not None이 성립할 때) 맨 앞에서 2번째 노드 B에 대한 참조인 head.next를 머리 노드에 대한 참조인 head…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h3 id=\"머리노드를-삭제하는-code-classlanguage-textremove_firstcode-함수\" style=\"position:relative;\"><a href=\"#%EB%A8%B8%EB%A6%AC%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EB%8A%94-code-classlanguage-textremove_firstcode-%ED%95%A8%EC%88%98\" aria-label=\"머리노드를 삭제하는 code classlanguage textremove_firstcode 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>머리노드를 삭제하는 <code class=\"language-text\">remove_first()</code> 함수</h3>\n<p>삭제 처리를 수행하는 것은 리스트가 비어 있지 않을 때 입니다.(head is not None이 성립할 때)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">remove_first</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"머리 노드를 삭제\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>head <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>       <span class=\"token comment\"># 리스트가 비어 있지 않으면</span>\n            self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></code></pre></div>\n<p>맨 앞에서 2번째 노드 B에 대한 참조인 head.next를 머리 노드에 대한 참조인 head에 대입함으로써 head가 참조하는 곳을 노드 B로 업데이트합니다. 이때 주목 포인터 current가 참조하는 곳도 노드 B로 업데이트합니다. 그 결과 삭제하기 전의 머리 노드 A는 어디에서도 참조되지 않습니다.</p>\n<blockquote>\n<p>리스트에 노드가 하나밖에 없는 경우의 삭제 처리 - 삭제하기 전의 머리 노드는 꼬리 노드이기도 하므로 뒤쪽 포인터 head.next의 값은 None입니다. 이 None을 head에 대입하면 리스트는 빈 상태가 된다.</p>\n</blockquote>\n<h3 id=\"꼬리-노드를-삭제하는-remove_last-함수\" style=\"position:relative;\"><a href=\"#%EA%BC%AC%EB%A6%AC-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EB%8A%94-remove_last-%ED%95%A8%EC%88%98\" aria-label=\"꼬리 노드를 삭제하는 remove_last 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>꼬리 노드를 삭제하는 remove_last() 함수</h3>\n<p>삭제 처리를 수행하는 것은 리스트가 비어 있지 않을 때입니다. 그리고 리스트에 존재하는 노드가 하나뿐인지 확인하고 그에 따라 다르게 처리합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">remove_last</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"꼬리 노드를 삭제\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>head <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\"># 노드가 1개 뿐이라면</span>\n                self<span class=\"token punctuation\">.</span>remove_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># 머리 노드를 삭제</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head             <span class=\"token comment\"># 스캔 중인 노드</span>\n                pre <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head             <span class=\"token comment\"># 스캔 중인 노드의 앞쪽 노드</span>\n\n                <span class=\"token keyword\">while</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                    pre <span class=\"token operator\">=</span> ptr\n                    ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n                pre<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>             <span class=\"token comment\"># pre는 삭제 뒤 꼬리 노드</span>\n                self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> pre\n                self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></code></pre></div>\n<p><strong>리스트에 노드가 하나만 존재할 때</strong></p>\n<p>​ 머리 노드를 삭제하는 것이므로 remove_first()함수를 호출</p>\n<p><strong>리스트에 노드가 2개 이상 존재할 때</strong></p>\n<p>​ 리스트의 맨 끝에서 노드 F를 삭제합니다.</p>\n<h3 id=\"임의의-노드를-삭제하는-remove-함수\" style=\"position:relative;\"><a href=\"#%EC%9E%84%EC%9D%98%EC%9D%98-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EB%8A%94-remove-%ED%95%A8%EC%88%98\" aria-label=\"임의의 노드를 삭제하는 remove 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>임의의 노드를 삭제하는 remove() 함수</h3>\n<p>삭제 처리를 수행하는 것은 리스트가 비어 있지 않고 인수로 주어진 노드 p(p가 참조하는 노드)가 존재할 때 입니다.</p>\n<p><strong>p가 머리 노드일 때</strong></p>\n<p>​ 머리 노드를 삭제하는 것이므로 remove_first()함수를 호출합니다.</p>\n<p><strong>p가 머리 노드가 아닐 때</strong></p>\n<p>​ 리스트에서 p가 참조하는 노드 D를 삭제합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"노드 p를 삭제\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>head <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> p <span class=\"token keyword\">is</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>      <span class=\"token comment\"># p가 머리 노드이면</span>\n                self<span class=\"token punctuation\">.</span>remove_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 머리 노드를 삭제</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head\n\n                <span class=\"token keyword\">while</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> p<span class=\"token punctuation\">:</span>\n                    ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n                    <span class=\"token keyword\">if</span> ptr <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">return</span>      <span class=\"token comment\"># p는 리스트에 존재하지 않음</span>\n\n                ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n                self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> ptr\n                self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></code></pre></div>\n<h3 id=\"주목-노드를-삭제하는-removecurrentnode-함수\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EB%AA%A9-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EB%8A%94-removecurrentnode-%ED%95%A8%EC%88%98\" aria-label=\"주목 노드를 삭제하는 removecurrentnode 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주목 노드를 삭제하는 remove<em>current</em>node() 함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">remove_current_node</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드를 삭제\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span></code></pre></div>\n<p>주목 포인터 currnet를 remove()함수에 전달한다.</p>\n<h3 id=\"모든-노드를-삭제하는-clear함수\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EB%8A%94-clear%ED%95%A8%EC%88%98\" aria-label=\"모든 노드를 삭제하는 clear함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 노드를 삭제하는 clear()함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"전체 노드를 삭제\"\"\"</span>\n        <span class=\"token keyword\">while</span> self<span class=\"token punctuation\">.</span>head <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 전체가 비어 있을 때까지</span>\n            self<span class=\"token punctuation\">.</span>remove_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># 머리 노드를 삭제</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code></pre></div>\n<p>연결 리스트가 비어 있을 때 (head가 None이 될 때)까지 머리 노드의 삭제를 반복하여 모든 노드를 삭제한다.</p>\n<h3 id=\"주목-노드를-한-칸-뒤로-이동시키는-next-함수\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EB%AA%A9-%EB%85%B8%EB%93%9C%EB%A5%BC-%ED%95%9C-%EC%B9%B8-%EB%92%A4%EB%A1%9C-%EC%9D%B4%EB%8F%99%EC%8B%9C%ED%82%A4%EB%8A%94-next-%ED%95%A8%EC%88%98\" aria-label=\"주목 노드를 한 칸 뒤로 이동시키는 next 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주목 노드를 한 칸 뒤로 이동시키는 next() 함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드를 한 칸 뒤로 이동\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>current <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">or</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>        <span class=\"token comment\"># 이동할 수 없음</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></code></pre></div>\n<p>주목 노드를 한 칸 뒤로 이동시키려면 리스트가 비어 있지 않고 주목 노드에 뒤쪽 노드가 존재해야 합니다. 구체적으로는 주목 포인터 current를 current.next로 업데이트합니다. 주목 노드를 이동시키면 True를 반환하고, 그렇지 않으면 False를 반환합니다.</p>\n<h3 id=\"주목-노드를-출력하는-printcurrentnode-함수\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EB%AA%A9-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-printcurrentnode-%ED%95%A8%EC%88%98\" aria-label=\"주목 노드를 출력하는 printcurrentnode 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주목 노드를 출력하는 print<em>current</em>node() 함수</h3>\n<p>주목 포인터 current가 참조하는 곳의 노드 데이터인 current.data를 출력합니다. 다만 주목 노드가 존재하지 않을 경우(current가 None인 경우)에는 ‘주목 노드가 존재하지 않습니다.‘를 출력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">print_current_node</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드를 출력\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>current <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'주목 노드가 존재하지 않습니다.'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></code></pre></div>\n<p>주목 포인터 current값을 업데이트하지 않는다.</p>\n<h3 id=\"모든-노드를-출력하는-print-함수\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-print-%ED%95%A8%EC%88%98\" aria-label=\"모든 노드를 출력하는 print 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 노드를 출력하는 print() 함수</h3>\n<p>ptr을 사용하여 머리 노드에서 꼬리 노드까지 스캔하면서 각 노드의 데이터 ptr.data를 출력합니다.</p>\n<p>주목 포인터 current값을 업데이트하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"모든 노드를 출력\"\"\"</span>\n        ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head\n\n        <span class=\"token keyword\">while</span> ptr <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n            ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span></code></pre></div>\n<h3 id=\"이터레이터용-클래스\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%ED%84%B0%EB%A0%88%EC%9D%B4%ED%84%B0%EC%9A%A9-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"이터레이터용 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이터레이터용 클래스</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> LinkedListIterator<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"이터레이터를 반환\"\"\"</span>\n        <span class=\"token keyword\">return</span> LinkedListIterator<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LinkedListIterator</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"클래스 LinkedList의 이터레이터용 클래스\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> head\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> LinkedListIterator<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__next__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Any<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>currnet <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> StopIteration\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>data\n            self<span class=\"token punctuation\">.</span>currnet <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n            <span class=\"token keyword\">return</span> data</code></pre></div>\n<h4 id=\"이터러블-객체와-이터레이터의-구현\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%ED%84%B0%EB%9F%AC%EB%B8%94-%EA%B0%9D%EC%B2%B4%EC%99%80-%EC%9D%B4%ED%84%B0%EB%A0%88%EC%9D%B4%ED%84%B0%EC%9D%98-%EA%B5%AC%ED%98%84\" aria-label=\"이터러블 객체와 이터레이터의 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이터러블 객체와 이터레이터의 구현</h4>\n<p>str형 문자열, list형 리스트, tuple형 튜플 등은 이터러블(iterable: 반복 가능)하다는 공통점이 있습니다. 이터러블 객체는 원소를 1개씩 꺼내는 구조의 객체입니다. 이터러블 객체를 내장 함수인 iter()함수에 인수로 전달하면 그 객체에 대한 이터레이터(iterator: 반복자)를 반환합니다.</p>\n<p>이터레이터는 데이터가 줄지어 늘어선 것을 표현하는 객체입니다. 이터레이터의 <code class=\"language-text\">__next__()</code> 함수를 호출하거나, 내장 함수인 next()함수에 반복자를 전달하면 줄지어 늘어선 원소를 순차적으로 꺼냅니다. 꺼낼 원소가 StopIteration 예외 처리를 내보냅니다.</p>\n<blockquote>\n<p>next()함수의 첫 번쨰 호출에서는 맨 앞 원소를 꺼내고, 2번쨰 호출에서는 2번쨰 원소를 꺼낸다. 이런 식으로 호출할 때 마다 다음 원소를 꺼냅니다.</p>\n</blockquote>\n<p>클래스 LinkedList는 이터러블이 되도록 이터레이터를 구현합니다. 이터레이터를 나타내는 것이 클래스 LinkedListIterator입니다.</p>\n<ul>\n<li><code class=\"language-text\">__next__()</code> 함수를 갖는 이터레이터를 반환하는 <code class=\"language-text\">__iter__()</code> 함수를 구현합니다.</li>\n<li><code class=\"language-text\">__next__()</code> 함수는 다음 원소를 꺼내 반환합니다. 반환하는 원소가 없으면 StopIteration 예외 처리를 내보냅니다.</li>\n</ul>\n<h3 id=\"포인터로-연결-리스트-프로그램-만들기\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%EC%9D%B8%ED%84%B0%EB%A1%9C-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"포인터로 연결 리스트 프로그램 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포인터로 연결 리스트 프로그램 만들기</h3>","frontmatter":{"title":"[doit_algorithm] 08-2 포인터를 이용한 연결 리스트-2","date":null,"lang":null}}},{"node":{"id":"b62ed50c-7003-5c3e-8aa2-efd2358eec69","excerpt":"참고: 프로그래머스 문제 설명 0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요. 예를 들어, 주어진 정수가 6, 10, 2라면 6102, 6210, 1062, 1026, 2610, 2106를 만들 수 있고, 이중 가장 큰 수는 621…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42746?language=python3\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.</p>\n<p>예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.</p>\n<p>0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h5>\n<ul>\n<li>numbers의 길이는 1 이상 100,000 이하입니다.</li>\n<li>numbers의 원소는 0 이상 1,000 이하입니다.</li>\n<li>정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>numbers</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[6, 10, 2]</td>\n<td>“6210”</td>\n</tr>\n<tr>\n<td>[3, 30, 34, 5, 9]</td>\n<td>“9534330”</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    num_list <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>처음에는 숫자의 제일 앞자리 기준으로 정렬하면 풀리는 간단한 문제인줄 알았다. 그래서 앞자리 기준으로 내림차순으로 정렬하고 테스트해봤더니 통과가 되지 않았고 다시 봤더니 이번엔 두번째 자리가 문제였다.</p>\n<p>문자열 정렬은 앞자리를 기준으로 정렬한 후 앞자리가 같다면 두번째 자리를 기준으로 정렬하는데, 이때 두번째 자리는 기본이 오름차순으로 정렬된다. 하지만 문제의 결과가 제대로 나오려면 오름차순도 내림차순도 아닌 다른 기준으로 정렬이 되어야했다. 처음에 내가 찾은 방법은 첫번째 자리가 같을 때 두번째 자리의 순서는 수 문자열의 최대값 기준으로 정렬하는 것이었다. 이렇게 하니 주어진 테스트케이스는 모두 통과가 됐다. 당연히 통과는 안됐다. 문제에서 주어진 수의 범위는 0부터 1000이었고 내가 짠 코드는 그 중에서 일부만 통과하게 돼있었다… 제일 작은 자리 수의 문자열을 제일 긴 자리수 문자열에 맞춰서 늘려야 하나 생각했다가 그러다가 다른 수랑 겹쳐버리면 정렬이 제대로 되지 않으니까 포기하고…</p>\n<p>계속 고민을 하다가 결국 인터넷을 찾아봤는데 문자열 곱셈을 이용하는 방법이 나왔다. 주어진 리스트의 숫자들을 3배로 문자열 곱셈을 하고 그 수를 기준으로 정렬하는 방법이었다. 누가 생각했는지 천잰가 싶었음…</p>\n<p>x<em>3을 하는 이유는 numbers의 원소가 0 이상 1000이하이기 때문이다. 예를 들어 2와 223이 있을 경우 2223과 2232를 만들 수 있고 최댓값은 2232가 된다. 그런데 *2를 하면 22와 223223을 기준으로 정렬하게 되고 결과값은 2223이 나오게 된다. 때문에 문제에서 주어진 값이 한자리여도 다른 값들과 모든 자리수를 비교해 올바른 순서를 찾아줄 수 있도록 \\</em>3을 해주는 것이다.</p>\n<p>마지막 반환 값은 주어진 값이 [“0”,“0”,“0”,“0”,“0”]일 경우 그대로 join하면 “00000”가 나오는데 이 때 숫자형태인 “0”으로 바꾸어 주기 위해 join한 str형의 결과값을 int형로 변환한 후에 다시 str형으로 변환해서 값을 반환하도록 만들었다.</p>","frontmatter":{"title":"[algorithm]level2 가장 큰 수","date":null,"lang":null}}},{"node":{"id":"fa531b35-c413-5134-9f1b-97ffb1edbbb3","excerpt":"참고: 프로그래머스 문제 설명 H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42747\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과<a href=\"https://programmers.co.kr/learn/courses/30/lessons/42747#fn1\">1</a>에 따르면, H-Index는 다음과 같이 구합니다.</p>\n<p>어떤 과학자가 발표한 논문 <code class=\"language-text\">n</code>편 중, <code class=\"language-text\">h</code>번 이상 인용된 논문이 <code class=\"language-text\">h</code>편 이상이고 나머지 논문이 h번 이하 인용되었다면 <code class=\"language-text\">h</code>의 최댓값이 이 과학자의 H-Index입니다.</p>\n<p>어떤 과학자가 발표한 논문의 인용 횟수를 담은 배열 citations가 매개변수로 주어질 때, 이 과학자의 H-Index를 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>과학자가 발표한 논문의 수는 1편 이상 1,000편 이하입니다.</li>\n<li>논문별 인용 횟수는 0회 이상 10,000회 이하입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>citations</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[3, 0, 6, 1, 5]</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>이 과학자가 발표한 논문의 수는 5편이고, 그중 3편의 논문은 3회 이상 인용되었습니다. 그리고 나머지 2편의 논문은 3회 이하 인용되었기 때문에 이 과학자의 H-Index는 3입니다.</p>\n<p>※ 공지 - 2019년 2월 28일 테스트 케이스가 추가되었습니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>citations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>citations<span class=\"token punctuation\">)</span>\n    citations<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">while</span> citations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> i<span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">return</span> i</code></pre></div>\n<ol>\n<li>\n<p><code class=\"language-text\">나머지 논문이 h번 이하 인용되었다면</code> -> citations를 정렬한 이유 ( 반복문을 돌면서 큰 수부터 확인하기 위해 내림차순 )</p>\n<p>​ <code class=\"language-text\">[6, 5, 3, 1, 0]</code></p>\n</li>\n<li>\n<p>정렬하여 얻은 결과를 반복하면서 인덱스와 인덱스에 해당하는 원소를 비교한다.</p>\n<p>인덱스가 정렬된 리스트의 원소보다 커질 때 ”<code class=\"language-text\">h</code>번 이상 인용된 논문이 <code class=\"language-text\">h</code>편 이상이고”를 만족하게 된다.</p>\n<p>6 > 0</p>\n<p>5 > 1</p>\n<p>3 > 2</p>\n<p>1 > 3 -> False -> return 3</p>\n<p>while문이 다 돌 때까지 탈출 조건에 만족하지 않는 경우가 있을 수 있다. [2, 2]</p>\n<p>2 > 0</p>\n<p>2 > 1</p>\n<p>IndexError</p>\n<p>이 때 올바른 결과를 반환하기 위해 <code class=\"language-text\">i == n</code>일 경우 while문을 탈출하도록 했다.</p>\n</li>\n</ol>","frontmatter":{"title":"[algorithm]level2 H-Index","date":null,"lang":null}}},{"node":{"id":"70061978-b64e-5c8e-86d5-9d0ecc4f80d1","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 256 MB 28599 12288 10235 44.688% 문제 베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/4948\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">256 MB</td>\n<td align=\"left\">28599</td>\n<td align=\"left\">12288</td>\n<td align=\"left\">10235</td>\n<td align=\"left\">44.688%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용을 담고 있다.</p>\n<p>이 명제는 조제프 베르트랑이 1845년에 추측했고, 파프누티 체비쇼프가 1850년에 증명했다.</p>\n<p>예를 들어, 10보다 크고, 20보다 작거나 같은 소수는 4개가 있다. (11, 13, 17, 19) 또, 14보다 크고, 28보다 작거나 같은 소수는 3개가 있다. (17,19, 23)</p>\n<p>자연수 n이 주어졌을 때, n보다 크고, 2n보다 작거나 같은 소수의 개수를 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>입력은 여러 개의 테스트 케이스로 이루어져 있다. 각 케이스는 n을 포함하며, 한 줄로 이루어져 있다. (n ≤ 123456)</p>\n<p>입력의 마지막에는 0이 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>각 테스트 케이스에 대해서, n보다 크고, 2n보다 작거나 같은 소수의 개수를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n10\n13\n100\n1000\n10000\n100000\n0</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n4\n3\n21\n135\n1033\n8392</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.acmicpc.net/category/1\">ICPC</a> > <a href=\"https://www.acmicpc.net/category/7\">Regionals</a> > <a href=\"https://www.acmicpc.net/category/42\">Asia Pacific</a> > <a href=\"https://www.acmicpc.net/category/43\">Japan</a> > <a href=\"https://www.acmicpc.net/category/44\">Japan Domestic Contest</a> > <a href=\"https://www.acmicpc.net/category/detail/201\">2011 Japan Domestic Contest</a> A번</p>\n<ul>\n<li>문제를 번역한 사람: <a href=\"https://www.acmicpc.net/user/baekjoon\">baekjoon</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/124\">수학</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/95\">정수론</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/9\">소수 판정</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/67\">에라토스테네스의 체</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">123456</span>\ntemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ntemp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n    cnt <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span></code></pre></div>\n<p>에라토스테네스의 체를 사용했고, 체를 미리 만든 다음에 입력받은 값을 만큼의 범위를 잘라서 참인 개수를 세는 방식으로 풀었다.</p>","frontmatter":{"title":"[algorithm]4948번 배르트랑 공준","date":null,"lang":null}}},{"node":{"id":"62e2072f-4e16-58e2-91c2-fff0cef553f2","excerpt":"참고: doit…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h3 id=\"커서로-연결-리스트-만들기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%84%9C%EB%A1%9C-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"커서로 연결 리스트 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커서로 연결 리스트 만들기</h3>\n<p>포인터를 이용한 연결 리스트는 ‘노드를 삽입, 삭제할 때 데이터를 이동하지 않고 처리’하는 특징이 있다. 하지만 노드를 삽입, 삭제할 때마다 내부에서 노드용 인스턴스를 생성하고 소멸한다. 이떄 메모리를 확보하고 해제하는 데 쓰는 비용은 결코 무시할 수 없을 정도인데, 프로그램을 실행하면서 데이터 개수가 크게 변하지 않거나 데이터 최대 개수를 예측할 수 있는 경우라면 배열 안의 원소를 사용하여 효율적으로 운용할 수 있다.</p>\n<p>뒤쪽 포인터는 뒤쪽 노드가 저장되는 원소의 인덱스이다. 여기서는 int형 정숫값인 인덱스로 나타낸 포인터를 커서(cursor)라고 한다.</p>\n<p>꼬리 노드의 뒤쪽 커서는 -1이다. 머리 노드를 나타내는 head도 커서이다. 머리 노트가 저장되어 있는 인덱스인 1은 head의 값이다.</p>\n<p>이 방법은 노드의 삽입과 삭제에 따른 원소의 이동이 처음부터 불필요하다는 점에서 포인터를 이용한 연결 리스트와 다르다. 예를 들어 연결 리스트 맨 앞에 노드를 삽입하면 head를 1에서 6으로 업데이트하고 노드 G의 뒤쪽 커서를 1로 했을 뿐이다.</p>\n<h3 id=\"배열-안에-비어-있는-원소-처리하기\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%95%88%EC%97%90-%EB%B9%84%EC%96%B4-%EC%9E%88%EB%8A%94-%EC%9B%90%EC%86%8C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"배열 안에 비어 있는 원소 처리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 안에 비어 있는 원소 처리하기</h3>\n<p>실습의 프로그램은 포인터를 이용한 연결 리스트의 실습 프로그램과 거의 일대일로 대응한다. 이때 발생할 수 있는 가장 중요한 문제인 ‘삭제된 노드 관리’에 대해 자세히 알아보겠다.</p>\n<ol>\n<li>연결 리스트에 노드 4개가 A -> B-> C -> D로 연결되어 있고 배열로 저장됩니다.</li>\n<li>연결 리스트의 ㅁ내 앞에 새로운 노드 E를 삽입하여 인덱스 4 위치에 노드 E가 저장된다.</li>\n</ol>\n<p>삽입된 노드의 저장 장소는 ”배열 안에서 가장 끝 쪽에 있는 인덱스의 위치’ 이다. 연결 리스트의 맨 끝이 아님, 배열에서 물리적인 위치 관계와 연결 리스트의 논리적인 순서 관게는 일치하지 않습니다. 즉, 리스트에서 n번쨰 위치ㅏ는 노드가 배열 인덱스 n의 원소에 저장되는 것이 아닙니다. 때문에 리스트의 순서와 구별하기 위해 인덱스 n인 원소에 저장되는 노드를 n번째 레코드 라고 하겠습니다. 예를 들어 삽입된 노드 E는 4번째 레코드에 저장된다는 의미입니다.</p>\n<p>삭제할 때는 노드의 데이터가 저장되어 있던 레코드를 비운다.</p>\n<p>만약 삭제를 여러번 빤복하면 배열 안에 빈 레코드가 많이 생긴다. 삭제되는 레코드가 딱 하나라면 그 인덱스를 어떤 변수에 넣어 놓고 관리함으로써 쉽게 재사용할 수 있다. 그러나 실제로는 여러 레코드가 삭제되므로 그렇게 간단하진 않습니다.</p>\n<h4 id=\"프리리스트\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A6%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8\" aria-label=\"프리리스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프리리스트</h4>\n<p>연결 리스트인 프리 리스트 (free list)는 삭제된 레코드 그룹을 관리할때 사용하는 자료구조이다. 프리 리스트를 사요하면 앞에서 발생한 삭제 후 비어 있는 배열의 문제를 해결할 수 있습니다. 데이터 자ㅔ의 순서를 나타내는 연결 리스트와 프리 리스트가 결합하므로 노드 클래스 Node와 연결 리스트 클래스 ArrayLinkedList에는 다음과 같은 필드가 추가되어 있습니다.</p>\n<p><strong>노드 클래스 Node에 추가된 필드</strong></p>\n<ul>\n<li>dnext: 프리 리스트의 뒤쪽 포인터(프리 리스트의 뒤쪽 노드를 참조하는 커서)</li>\n</ul>\n<p><strong>연결 리스트 클래스 ArrayLinkedList에 추가된 필드</strong></p>\n<ul>\n<li>deleted: 프리 리스트의 머리 노드를 참조하는 커서</li>\n<li>max: 배열에서 맨 끝 쪽에 저장되는 노드의 레코드 번호</li>\n</ul>","frontmatter":{"title":"[doit_algorithm] 08-3 커서를 이용한 연결 리스트","date":null,"lang":null}}},{"node":{"id":"be225875-d9b9-5691-a73d-0ee83a7646e4","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 45384 19617 15733 42.866% 문제 카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 2…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2798\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">45384</td>\n<td align=\"left\">19617</td>\n<td align=\"left\">15733</td>\n<td align=\"left\">42.866%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 21을 넘지 않는 한도 내에서, 카드의 합을 최대한 크게 만드는 게임이다. 블랙잭은 카지노마다 다양한 규정이 있다.</p>\n<p>한국 최고의 블랙잭 고수 김정인은 새로운 블랙잭 규칙을 만들어 상근, 창영이와 게임하려고 한다.</p>\n<p>김정인 버전의 블랙잭에서 각 카드에는 양의 정수가 쓰여 있다. 그 다음, 딜러는 N장의 카드를 모두 숫자가 보이도록 바닥에 놓는다. 그런 후에 딜러는 숫자 M을 크게 외친다.</p>\n<p>이제 플레이어는 제한된 시간 안에 N장의 카드 중에서 3장의 카드를 골라야 한다. 블랙잭 변형 게임이기 때문에, 플레이어가 고른 카드의 합은 M을 넘지 않으면서 M과 최대한 가깝게 만들어야 한다.</p>\n<p>N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 구해 출력하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 카드의 개수 N(3 ≤ N ≤ 100)과 M(10 ≤ M ≤ 300,000)이 주어진다. 둘째 줄에는 카드에 쓰여 있는 수가 주어지며, 이 값은 100,000을 넘지 않는다.</p>\n<p>합이 M을 넘지 않는 카드 3장을 찾을 수 있는 경우만 입력으로 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5 21\n5 6 7 8 9</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">21</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10 500\n93 181 245 214 315 36 185 138 216 295</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">497</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.acmicpc.net/category/45\">Contest</a> > <a href=\"https://www.acmicpc.net/category/17\">Croatian Open Competition in Informatics</a> > <a href=\"https://www.acmicpc.net/category/19\">COCI 2011/2012</a> > <a href=\"https://www.acmicpc.net/category/detail/73\">Contest #6</a> 1번</p>\n<ul>\n<li>문제를 번역한 사람: <a href=\"https://www.acmicpc.net/user/baekjoon\">baekjoon</a></li>\n<li>빠진 조건을 찾은 사람: <a href=\"https://www.acmicpc.net/user/bupjae\">bupjae</a></li>\n<li>문제의 오타를 찾은 사람: <a href=\"https://www.acmicpc.net/user/eric00513\">eric00513</a>, <a href=\"https://www.acmicpc.net/user/joonas\">joonas</a>, <a href=\"https://www.acmicpc.net/user/otter66\">otter66</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/125\">브루트포스 알고리즘</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncards <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ntemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> c <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>cards<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j<span class=\"token punctuation\">,</span> a <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>cards<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> cards<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">=</span> c<span class=\"token operator\">+</span>a<span class=\"token operator\">+</span>r\n            <span class=\"token keyword\">if</span> num <span class=\"token operator\">></span> m<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>삼중포문을 돌려서 서로 겹치지 않는 숫자 세개를 뽑아 합을 확인하고 주어지는 수를 넘지 않는 수 중에 최댓값을 구했다.</p>","frontmatter":{"title":"[algorithm]2798번 블랙잭","date":null,"lang":null}}},{"node":{"id":"3f7e96f5-e4f9-586b-aa95-4c6ccc7c9efc","excerpt":"참고: 프로그래머스 문제 설명 Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다. carpet.png Leo…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42842\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.</p>\n<p><img src=\"https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/b1ebb809-f333-4df2-bc81-02682900dc2d/carpet.png\" alt=\"carpet.png\"></p>\n<p>Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다.</p>\n<p>Leo가 본 카펫에서 갈색 격자의 수 brown, 노란색 격자의 수 yellow가 매개변수로 주어질 때 카펫의 가로, 세로 크기를 순서대로 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>갈색 격자의 수 brown은 8 이상 5,000 이하인 자연수입니다.</li>\n<li>노란색 격자의 수 yellow는 1 이상 2,000,000 이하인 자연수입니다.</li>\n<li>카펫의 가로 길이는 세로 길이와 같거나, 세로 길이보다 깁니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>brown</th>\n<th>yellow</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td>2</td>\n<td>[4, 3]</td>\n</tr>\n<tr>\n<td>8</td>\n<td>1</td>\n<td>[3, 3]</td>\n</tr>\n<tr>\n<td>24</td>\n<td>24</td>\n<td>[8, 6]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>brown<span class=\"token punctuation\">,</span> yellow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    area <span class=\"token operator\">=</span> brown <span class=\"token operator\">+</span> yellow\n\n    height <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token keyword\">if</span> area <span class=\"token operator\">%</span> height <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            width <span class=\"token operator\">=</span> area <span class=\"token operator\">//</span> height\n            <span class=\"token keyword\">if</span> brown <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">+</span> width<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n        height <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<p>노란부분과 갈색부분의 합이 넓이이고 높이와 너비의 최솟값이 3안 것을 이용해서 풀었다.</p>\n<p>높이의 최솟값인 3부터 하나씩 늘려가면서 넓이에 나누어떨어지는 수를 찾아서 그 떄 갈색 부분의 개수와 문제에서 주어진 갈색부분의 개수를 비교하면 조건에 맞는 너비와 높이를 구할 수 있었다.</p>","frontmatter":{"title":"[algorithm]level2 카펫","date":null,"lang":null}}},{"node":{"id":"32f873a1-1325-5be1-97d9-5526250c95f4","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 192 MB 34746 16898 13690 48.267% 문제 어떤 자연수 N이 있을 때, 그 자연수 N의 분해합은 N과 N을 이루는 각 자리수의 합을 의미한다. 어떤 자연수 M의 분해합이 N인 경우, M을 N…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2231\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">192 MB</td>\n<td align=\"left\">34746</td>\n<td align=\"left\">16898</td>\n<td align=\"left\">13690</td>\n<td align=\"left\">48.267%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>어떤 자연수 N이 있을 때, 그 자연수 N의 분해합은 N과 N을 이루는 각 자리수의 합을 의미한다. 어떤 자연수 M의 분해합이 N인 경우, M을 N의 생성자라 한다. 예를 들어, 245의 분해합은 256(=245+2+4+5)이 된다. 따라서 245는 256의 생성자가 된다. 물론, 어떤 자연수의 경우에는 생성자가 없을 수도 있다. 반대로, 생성자가 여러 개인 자연수도 있을 수 있다.</p>\n<p>자연수 N이 주어졌을 때, N의 가장 작은 생성자를 구해내는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 자연수 N(1 ≤ N ≤ 1,000,000)이 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 답을 출력한다. 생성자가 없는 경우에는 0을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">216</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">198</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.acmicpc.net/category/1\">ICPC</a> > <a href=\"https://www.acmicpc.net/category/7\">Regionals</a> > <a href=\"https://www.acmicpc.net/category/42\">Asia Pacific</a> > <a href=\"https://www.acmicpc.net/category/211\">Korea</a> > <a href=\"https://www.acmicpc.net/category/detail/1067\">Asia Regional - Seoul 2005</a> B번</p>\n<ul>\n<li>데이터를 추가한 사람: <a href=\"https://www.acmicpc.net/user/kimtree97\">kimtree97</a>, <a href=\"https://www.acmicpc.net/user/yjwr0528\">yjwr0528</a></li>\n</ul>\n<h2 id=\"링크\" style=\"position:relative;\"><a href=\"#%EB%A7%81%ED%81%AC\" aria-label=\"링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>링크</h2>\n<ul>\n<li><a href=\"https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&#x26;Itemid=8&#x26;page=show_problem&#x26;problem=1356\">ACM-ICPC Live Archive</a></li>\n<li><a href=\"http://acm.tju.edu.cn/toj/showp2502.html\">TJU Online Judge</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/125\">브루트포스 알고리즘</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> number <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>가장 작은 수를 구해야하므로 1부터 확인하는데 문자열 반복문으로 각 자릿수의 값을 나누고, 그 합을 확인했다. 생성자가 없는 수는 끝까지 종료 조건문을 통과하지 못할 것이므로 else문으로 0을 출력하게 했다.</p>","frontmatter":{"title":"[algorithm]2231번 분해합","date":null,"lang":null}}},{"node":{"id":"9d0fb00c-247d-5e7c-ba58-87c258eb3e0d","excerpt":"참고: 프로그래머스 문제 설명 전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.\n전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다. 구조대 : 119 박준영 : 97 674 223 지영석 : 11 955…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42577\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.\n전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.</p>\n<ul>\n<li>구조대 : 119</li>\n<li>박준영 : 97 674 223</li>\n<li>지영석 : 11 9552 4421</li>\n</ul>\n<p>전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h5>\n<ul>\n<li>phone_book의 길이는 1 이상 1,000,000 이하입니다.</li>\n<li>각 전화번호의 길이는 1 이상 20 이하입니다.</li>\n</ul>\n<h5 id=\"입출력-예제\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88%EC%A0%9C\" aria-label=\"입출력 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예제</h5>\n<table>\n<thead>\n<tr>\n<th>phone_book</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[119, 97674223, 1195524421]</td>\n<td>false</td>\n</tr>\n<tr>\n<td>[123,456,789]</td>\n<td>true</td>\n</tr>\n<tr>\n<td>[12,123,1235,567,88]</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1\n앞에서 설명한 예와 같습니다.</p>\n<p>입출력 예 #2\n한 번호가 다른 번호의 접두사인 경우가 없으므로, 답은 true입니다.</p>\n<p>입출력 예 #3\n첫 번째 전화번호, “12”가 두 번째 전화번호 “123”의 접두사입니다. 따라서 답은 false입니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>phone_book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    pre_phone <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>phone_book<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> pre <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>pre_phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> pre_phone<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> p<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span>pre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<p>주어진 전화번호목록을 짧은 번호부터 확인할 수 있게 전화번호 순으로 정렬해준 후 앞부터 확인하면서 그 번호로 시작하는 전화번호가 있는지 확인</p>\n<ul>\n<li>\n<p><code class=\"language-text\">a.startswith(b)</code></p>\n<p>a가 b로 시작하면 True 그렇지 않으면 False</p>\n</li>\n</ul>","frontmatter":{"title":"[algorithm]level2 전화번호 목록","date":null,"lang":null}}},{"node":{"id":"52ebe688-7182-515e-a572-373ac7baeed1","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 23142 10047 8333 44.698% 문제 666은 종말을 나타내는 숫자라고 한다. 따라서, 많은 블록버스터 영화에서는 66…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/1436\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">23142</td>\n<td align=\"left\">10047</td>\n<td align=\"left\">8333</td>\n<td align=\"left\">44.698%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>666은 종말을 나타내는 숫자라고 한다. 따라서, 많은 블록버스터 영화에서는 666이 들어간 제목을 많이 사용한다. 영화감독 숌은 세상의 종말 이라는 시리즈 영화의 감독이다. 조지 루카스는 스타워즈를 만들 때, 스타워즈 1, 스타워즈 2, 스타워즈 3, 스타워즈 4, 스타워즈 5, 스타워즈 6과 같이 이름을 지었고, 피터 잭슨은 반지의 제왕을 만들 때, 반지의 제왕 1, 반지의 제왕 2, 반지의 제왕 3과 같이 영화 제목을 지었다.</p>\n<p>하지만 숌은 자신이 조지 루카스와 피터 잭슨을 뛰어넘는다는 것을 보여주기 위해서 영화 제목을 좀 다르게 만들기로 했다.</p>\n<p>종말의 숫자란 어떤 수에 6이 적어도 3개이상 연속으로 들어가는 수를 말한다. 제일 작은 종말의 숫자는 666이고, 그 다음으로 큰 수는 1666, 2666, 3666, … 과 같다.</p>\n<p>따라서, 숌은 첫 번째 영화의 제목은 세상의 종말 666, 두 번째 영화의 제목은 세상의 종말 1666 이렇게 이름을 지을 것이다. 일반화해서 생각하면, N번째 영화의 제목은 세상의 종말 (N번째로 작은 종말의 숫자) 와 같다.</p>\n<p>숌이 만든 N번째 영화의 제목에 들어간 숫자를 출력하는 프로그램을 작성하시오. 숌은 이 시리즈를 항상 차례대로 만들고, 다른 영화는 만들지 않는다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 숫자 N이 주어진다. N은 10,000보다 작거나 같은 자연수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 N번째 영화의 제목에 들어간 수를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1666</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<ul>\n<li>문제를 번역한 사람: <a href=\"https://www.acmicpc.net/user/baekjoon\">baekjoon</a></li>\n<li>어색한 표현을 찾은 사람: <a href=\"https://www.acmicpc.net/user/mwy3055\">mwy3055</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/125\">브루트포스 알고리즘</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ncnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">'666'</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> cnt<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<p>1부터 다 돌면서 문자열 ‘666’이 포함된 모든 수를 확인했고 입력받은 n번째의 수를 만났을 때 그 수를 출력하도록 만들었다. 다시 생각해보니까 초깃값을 666으로 주고 해도 될 거같다. 속도에 별 차이는 없을 것 같지만…</p>","frontmatter":{"title":"[algorithm]1436번 영화감독 숍","date":null,"lang":null}}},{"node":{"id":"31c65dc8-72f8-5d28-afa7-d2cd81ffdeb9","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 25236 14603 12720 59.218% 문제 우리는 사람의 덩치를 키와 몸무게, 이 두 개의 값으로 표현하여 그 등수를 매겨보려고 한다. 어떤 사람의 몸무게가 x kg이고 키가 y cm…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/7568\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">25236</td>\n<td align=\"left\">14603</td>\n<td align=\"left\">12720</td>\n<td align=\"left\">59.218%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>우리는 사람의 덩치를 키와 몸무게, 이 두 개의 값으로 표현하여 그 등수를 매겨보려고 한다. 어떤 사람의 몸무게가 x kg이고 키가 y cm라면 이 사람의 덩치는 (x,y)로 표시된다. 두 사람 A 와 B의 덩치가 각각 (x,y), (p,q)라고 할 때 x>p 그리고 y>q 이라면 우리는 A의 덩치가 B의 덩치보다 “더 크다”고 말한다. 예를 들어 어떤 A, B 두 사람의 덩치가 각각 (56,177), (45,165) 라고 한다면 A의 덩치가 B보다 큰 셈이 된다. 그런데 서로 다른 덩치끼리 크기를 정할 수 없는 경우도 있다. 예를 들어 두 사람 C와 D의 덩치가 각각 (45, 181), (55,173)이라면 몸무게는 D가 C보다 더 무겁고, 키는 C가 더 크므로, “덩치”로만 볼 때 C와 D는 누구도 상대방보다 더 크다고 말할 수 없다.</p>\n<p>N명의 집단에서 각 사람의 덩치 등수는 자신보다 더 “큰 덩치”의 사람의 수로 정해진다. 만일 자신보다 더 큰 덩치의 사람이 k명이라면 그 사람의 덩치 등수는 k+1이 된다. 이렇게 등수를 결정하면 같은 덩치 등수를 가진 사람은 여러 명도 가능하다. 아래는 5명으로 이루어진 집단에서 각 사람의 덩치와 그 등수가 표시된 표이다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">이름</th>\n<th align=\"center\">&#x3C;몸무게, 키></th>\n<th align=\"center\">덩치 등수</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">A</td>\n<td align=\"center\">&#x3C;55, 185></td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">B</td>\n<td align=\"center\">&#x3C;58, 183></td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">C</td>\n<td align=\"center\">&#x3C;88, 186></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">D</td>\n<td align=\"center\">&#x3C;60, 175></td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">E</td>\n<td align=\"center\">&#x3C;46, 155></td>\n<td align=\"center\">5</td>\n</tr>\n</tbody>\n</table>\n<p>위 표에서 C보다 더 큰 덩치의 사람이 없으므로 C는 1등이 된다. 그리고 A, B, D 각각의 덩치보다 큰 사람은 C뿐이므로 이들은 모두 2등이 된다. 그리고 E보다 큰 덩치는 A, B, C, D 이렇게 4명이므로 E의 덩치는 5등이 된다. 위 경우에 3등과 4등은 존재하지 않는다. 여러분은 학생 N명의 몸무게와 키가 담긴 입력을 읽어서 각 사람의 덩치 등수를 계산하여 출력해야 한다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫 줄에는 전체 사람의 수 N이 주어진다. 그리고 이어지는 N개의 줄에는 각 사람의 몸무게와 키를 나타내는 양의 정수 x와 y가 하나의 공백을 두고 각각 나타난다. 단, 2 ≤ N ≤ 50, 10 ≤ x,y ≤ 200 이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>여러분은 입력에 나열된 사람의 덩치 등수를 구해서 그 순서대로 첫 줄에 출력해야 한다. 단, 각 덩치 등수는 공백문자로 분리되어야 한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5\n55 185\n58 183\n88 186\n60 175\n46 155</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2 2 1 2 5</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.acmicpc.net/category/2\">Olympiad</a> > <a href=\"https://www.acmicpc.net/category/55\">한국정보올림피아드</a> > <a href=\"https://www.acmicpc.net/category/57\">한국정보올림피아드시․도지역본선</a> > <a href=\"https://www.acmicpc.net/category/214\">지역본선 2013</a> > <a href=\"https://www.acmicpc.net/category/detail/912\">초등부</a> 2번</p>\n<ul>\n<li>문제의 오타를 찾은 사람: <a href=\"https://www.acmicpc.net/user/apjw6112\">apjw6112</a>, <a href=\"https://www.acmicpc.net/user/eric00513\">eric00513</a>, <a href=\"https://www.acmicpc.net/user/genius0412\">genius0412</a>, <a href=\"https://www.acmicpc.net/user/jung2381187\">jung2381187</a>, <a href=\"https://www.acmicpc.net/user/seecimi\">seecimi</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/102\">구현</a></li>\n<li><a href=\"https://www.acmicpc.net/problem/tag/125\">브루트포스 알고리즘</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nbulks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    bulk <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    bulks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>bulk<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>bulks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    rank <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> u <span class=\"token keyword\">in</span> bulks<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            rank <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rank<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>반복문을 돌면서 자신보다 키와 몸무게가 둘다 큰 사람의 수를 계산하고 거기에 + 1을 하면 순위가 나옴</p>\n<p>예를 들어 자신보다 큰 사람이 아무도 없으면 0 + 1 -> 1</p>\n<p>자기보다 큰 사람이 1명만 있으면 1+1 -> 2</p>\n<p>자기보다 큰 사람이 4명이면 4 + 1 -> 5</p>\n<p>본인보다 덩치가 큰 사람의 수만 계산하면 중복 순위를 따로 고려하지 않아도 문제에서 제시하는 조건에 맞는 순위를 구할 수 있었다.</p>","frontmatter":{"title":"[algorithm]7568번 덩치","date":null,"lang":null}}},{"node":{"id":"4f14c347-d268-52f7-ad68-d1adda3a3575","excerpt":"참고: 프로그래머스 문제 설명 한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다. 각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42839\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.</p>\n<p>각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return 하도록 solution 함수를 완성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>numbers는 길이 1 이상 7 이하인 문자열입니다.</li>\n<li>numbers는 0~9까지 숫자만으로 이루어져 있습니다.</li>\n<li>013은 0, 1, 3 숫자가 적힌 종이 조각이 흩어져있다는 의미입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>numbers</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>17</td>\n<td>3</td>\n</tr>\n<tr>\n<td>011</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>예제 #1\n[1, 7]으로는 소수 [7, 17, 71]를 만들 수 있습니다.</p>\n<p>예제 #2\n[0, 1, 1]으로는 소수 [11, 101]를 만들 수 있습니다.</p>\n<ul>\n<li>11과 011은 같은 숫자로 취급합니다.</li>\n</ul>\n<p><a href=\"http://2009.nwerc.eu/results/nwerc09.pdf\">출처</a></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># 주어진 문자열로 얻을 수 있는 모든 조합을</span>\n    <span class=\"token comment\"># 인덱스로 seqs에 저장</span>\n    seqs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    seqs <span class=\"token operator\">+=</span> n\n    temp <span class=\"token operator\">+=</span> n\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> temp<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> n<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> j <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">:</span>\n                    nums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">)</span>\n        temp <span class=\"token operator\">=</span> nums\n        seqs <span class=\"token operator\">+=</span> nums\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\t<span class=\"token comment\"># ---------------------------------</span>\n\n    <span class=\"token comment\"># 앞에서 얻은 조합으로 숫자를 조합해서 temp에 저장</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> seq <span class=\"token keyword\">in</span> seqs<span class=\"token punctuation\">:</span>\n        num <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token keyword\">for</span> ind <span class=\"token keyword\">in</span> seq<span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">+=</span> numbers<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>ind<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ----------------------------</span>\n\n\t<span class=\"token comment\"># 만들어진 숫자들의 중복 제거</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ----------------------</span>\n\n    <span class=\"token comment\"># 나올 수 있는 모든 수가 담긴 temp에서 소수를 확인</span>\n    <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> temp<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> t <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> t <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> t<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\"># -----------------------------------------</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[algorithm]level2 소수 찾기","date":null,"lang":null}}},{"node":{"id":"fb8ef1f6-7fd1-5eae-a745-26223fceae03","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 28981 13073 10823 46.302% 문제 지민이는 자신의 저택에서 MN개의 단위 정사각형으로 나누어져 있는 MN…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/1018\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">28981</td>\n<td align=\"left\">13073</td>\n<td align=\"left\">10823</td>\n<td align=\"left\">46.302%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>지민이는 자신의 저택에서 MN개의 단위 정사각형으로 나누어져 있는 M<em>N 크기의 보드를 찾았다. 어떤 정사각형은 검은색으로 칠해져 있고, 나머지는 흰색으로 칠해져 있다. 지민이는 이 보드를 잘라서 8</em>8 크기의 체스판으로 만들려고 한다.</p>\n<p>체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다. 구체적으로, 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고, 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다. 따라서 이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐이다. 하나는 맨 왼쪽 위 칸이 흰색인 경우, 하나는 검은색인 경우이다.</p>\n<p>보드가 체스판처럼 칠해져 있다는 보장이 없어서, 지민이는 8<em>8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야겠다고 생각했다. 당연히 8</em>8 크기는 아무데서나 골라도 된다. 지민이가 다시 칠해야 하는 정사각형의 최소 개수를 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 N과 M이 주어진다. N과 M은 8보다 크거나 같고, 50보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에는 보드의 각 행의 상태가 주어진다. B는 검은색이며, W는 흰색이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 지민이가 다시 칠해야 하는 정사각형 개수의 최솟값을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">8 8\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\nBWBBBWBW\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\nBWBWBWBW</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10 13\nBBBBBBBBWBWBW\nBBBBBBBBBWBWB\nBBBBBBBBWBWBW\nBBBBBBBBBWBWB\nBBBBBBBBWBWBW\nBBBBBBBBBWBWB\nBBBBBBBBWBWBW\nBBBBBBBBBWBWB\nWWWWWWWWWWBWB\nWWWWWWWWWWBWB</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">12</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<ul>\n<li>문제를 번역한 사람: <a href=\"https://www.acmicpc.net/user/baekjoon\">baekjoon</a></li>\n<li>데이터를 추가한 사람: <a href=\"https://www.acmicpc.net/user/jh05013\">jh05013</a></li>\n<li>문제를 다시 작성한 사람: <a href=\"https://www.acmicpc.net/user/jh05013\">jh05013</a></li>\n</ul>\n<h2 id=\"알고리즘-분류\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B6%84%EB%A5%98\" aria-label=\"알고리즘 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 분류</h2>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/tag/125\">브루트포스 알고리즘</a></li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">temp_board <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'BWBWBWBW'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'WBWBWBWB'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\nn<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nboard <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    row <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    board<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>\n\ntemp <span class=\"token operator\">=</span> <span class=\"token number\">33</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> t_board <span class=\"token keyword\">in</span> temp_board<span class=\"token punctuation\">:</span>\n            paint <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">for</span> row<span class=\"token punctuation\">,</span> temp_row <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t_board<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                row <span class=\"token operator\">=</span> row<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">:</span>j<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n                <span class=\"token keyword\">for</span> color<span class=\"token punctuation\">,</span> temp_color <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> temp_row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> color <span class=\"token operator\">!=</span> temp_color<span class=\"token punctuation\">:</span>\n                        paint <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                temp <span class=\"token operator\">=</span> paint <span class=\"token keyword\">if</span> temp <span class=\"token operator\">></span> paint <span class=\"token keyword\">else</span> temp\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span></code></pre></div>\n<p>만들어질 수 있는 판의 경우를 미리 만든 다음에 주어진 판에서 8*8씩 잘라 만들어 둔 판과 비교하면서 칠해야하는 자리의 최솟값을 구했다.</p>","frontmatter":{"title":"[algorithm]1018번 체스판 다시 칠하기","date":null,"lang":null}}},{"node":{"id":"69a9ea11-f394-59a2-ae29-6274ee37912c","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 원형 리스트(circular list…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<p>원형 리스트(circular list)는 연결 리스트의 꼬리노드가 다시 머리 노드를 가리키는 모양을 하고 있습니다. 고리 모양으로 늘어선 데이터를 표현하는데 알맞은 구조입니다. 원형 리스트가 연결 리스트와 가장 크게 다른 점은 꼬리 노드의 뒤쪽 포인터가 None이 아니라 머리 노드의 포인터값이 된다는 것입니다.</p>\n<h3 id=\"이중-연결-리스트\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A4%91-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8\" aria-label=\"이중 연결 리스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이중 연결 리스트</h3>\n<p>연결 리스트의 가장 큰 단점은 뒤쪽 노드를 찾기 쉬운 반면 앞쪽 노드를 찾기 어렵다는 것입니다. 이 단점을 개선한 리스트 구조가 이중 연결 리스트(doubly linked list)입니다. 각 노드에는 뒤쪽 노드에 대한 포인터 뿐만 아니라 앞쪽 노드에 대한 포인터가 주어집니다. 이중 연결 리스트의 노드는 3개의 필드로 구성도니 Node로 구현합니다.</p>\n<ul>\n<li>data: 데이터에 대한 참조(임의의 형)</li>\n<li>prev: 앞쪽 노드에 대한 참조(앞쪽 포인터: Node형)</li>\n<li>next: 뒤쪽 노드에 대한 참조(뒤쪽 포인터: Node형)</li>\n</ul>\n<h3 id=\"원형-이중-연결-리스트\" style=\"position:relative;\"><a href=\"#%EC%9B%90%ED%98%95-%EC%9D%B4%EC%A4%91-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8\" aria-label=\"원형 이중 연결 리스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원형 이중 연결 리스트</h3>\n<p>원형 리스트와 이중 연결 리스트를 결합한 원형 이중 연결 리스트(circular doubly linked list)</p>\n<blockquote>\n<p>원형 이중 연결 리스트에서 개별 노드의 형은 이중 연결 리스트와 같습니다.</p>\n</blockquote>\n<h3 id=\"원형-이중-연결-리스트-만들기\" style=\"position:relative;\"><a href=\"#%EC%9B%90%ED%98%95-%EC%9D%B4%EC%A4%91-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"원형 이중 연결 리스트 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원형 이중 연결 리스트 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> annotations\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Any<span class=\"token punctuation\">,</span> Type\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"원형 이중 연결 리스트용 노드 클래스\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">:</span> Node <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">:</span> Node <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"초기화\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data            <span class=\"token comment\"># 데이터</span>\n        self<span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> prev <span class=\"token keyword\">or</span> self    <span class=\"token comment\"># 앞쪽 포인터</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span> <span class=\"token keyword\">or</span> self    <span class=\"token comment\"># 뒤쪽 포인터</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DoubleLinkedList</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"원형 이중 연결 리스트 클래스\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"초기화\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> Node<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># .데미 노드를 생성</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"연결 리스트의 노드 수를 반환\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>no\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_empty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"리스트가 비었는지 확인\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> self<span class=\"token punctuation\">.</span>head</code></pre></div>\n<h4 id=\"노드-클래스-node\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C-%ED%81%B4%EB%9E%98%EC%8A%A4-node\" aria-label=\"노드 클래스 node permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드 클래스 Node</h4>\n<p>원형 이중 연결 리스트용 노드 클래스 Node는 필드 3개로 구성됩니다. 필드 data와 next는 연결 리스트와 같지만 앞쪽 포인터인 필드 prev가 추가되었습니다.</p>\n<p><code class=\"language-text\">__init__()</code>함수는 노드의 초기화를 수행하기 위해 매개변수 data, prev, next로 전달받은 값을 해당 필드에 대입합니다. 또, 매개변수 prev 또는 next로 전달받은 값이 None일 경우 앞쪽 포인터 prev와 뒤쪽 포인터 next에 None이 아닌 self를 대입합니다. 그 결과 앞쪽 포인터와 뒤쪽 포인터는 자신의 인스턴스를 참조하게 됩니다.</p>\n<p>대입은 self.prev = prev or self라고 되어 있습니다. or 연산자를 사용하여 다음과 같은 대입이 이루어집니다.</p>\n<ul>\n<li>prev가 참이면(None이 아니면) self.prev에 prev를 대입합니다.</li>\n<li>prev가 거짓이면(None이 이면) self.prev에 self를 대입합니다.</li>\n</ul>\n<h4 id=\"원형-이중-연결-리스트-클래스-doublelinkedlist\" style=\"position:relative;\"><a href=\"#%EC%9B%90%ED%98%95-%EC%9D%B4%EC%A4%91-%EC%97%B0%EA%B2%B0-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4-doublelinkedlist\" aria-label=\"원형 이중 연결 리스트 클래스 doublelinkedlist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원형 이중 연결 리스트 클래스 DoubleLinkedList</h4>\n<p>3개의 필드로 구성됩니다.</p>\n<ul>\n<li>no: 리스트에서 노드의 개수</li>\n<li>head: 머리 노드에 대한 참조</li>\n<li>current: 주목 노드에 대한 참조</li>\n</ul>\n<h4 id=\"code-classlanguage-text__init__code-함수\" style=\"position:relative;\"><a href=\"#code-classlanguage-text__init__code-%ED%95%A8%EC%88%98\" aria-label=\"code classlanguage text__init__code 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">__init__()</code> 함수</h4>\n<p>비어있는 원형 이중 연결 리스트를 생성합니다.</p>\n<p>데이터가 없는 노드를 1개 만듭니다. 이 노드는 삽입과 삭제를 원활하게 처리하기 위해 리스트의 맨 앞에 계속 존재하는 더미 노드입니다. Node()에 의해 생성된 노드의 prev와 next는 클래스 Node의 <code class=\"language-text\">__init__()</code>함수 동작으로 자신의 노드를 참조하게 됩니다. head와 current가 참조하는 곳은 생성한 더미 노드입니다.</p>\n<h4 id=\"노드-수를-반환하는-code-classlanguage-text__len__code함수\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C-%EC%88%98%EB%A5%BC-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-code-classlanguage-text__len__code%ED%95%A8%EC%88%98\" aria-label=\"노드 수를 반환하는 code classlanguage text__len__code함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드 수를 반환하는 <code class=\"language-text\">__len__()</code>함수</h4>\n<p>리스트에 등록되어 있는 데이터 개수를 반환하는 함수입니다. no값을 그대로 반환합니다.</p>\n<h4 id=\"리스트가-비어-있는지-검사하는-is_empty-함수\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8%EA%B0%80-%EB%B9%84%EC%96%B4-%EC%9E%88%EB%8A%94%EC%A7%80-%EA%B2%80%EC%82%AC%ED%95%98%EB%8A%94-is_empty-%ED%95%A8%EC%88%98\" aria-label=\"리스트가 비어 있는지 검사하는 is_empty 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트가 비어 있는지 검사하는 is_empty() 함수</h4>\n<p>리스트가 비어 있는지(더미 노드만 존재하는지)를 검사하는 함수이다. 더미 노드의 뒤쪽 포인터 head.next가 더미 노드인 head를 참조하면 리스트가 비어 있습니다. 리스트가 비어 있으면 True, 그렇지 않으면 False를 반환합니다.</p>\n<blockquote>\n<p>빈 리스트는 head, head.next, head.prev가 참조하는 곳 모두 더미 노드 입니다.(모두 head와 같은 값)</p>\n</blockquote>\n<h4 id=\"노드를-검색하는-search-함수\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C%EB%A5%BC-%EA%B2%80%EC%83%89%ED%95%98%EB%8A%94-search-%ED%95%A8%EC%88%98\" aria-label=\"노드를 검색하는 search 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드를 검색하는 search() 함수</h4>\n<p>인수로 주어진 데이터 data와 값이 같은 노드를 선형 검색하는 함수입니다. 머리 노드부터 시작하여 뒤쪽 포인터를 순차적으로 따라갑니다. 스캔하는 순서는 연결리스트 클래스 LinkedList의 search()함수와 거의 같습니다. 다만 리스트의 실제 머리 노드가 맨 앞의 더미노드가 아니라 그 뒤쪽 노드이므로 검색의 시작점이 다릅니다. head가 참조하는 노드는 더미노드 입니다. 그리고 더미 노드의 뒤쪽 포인터가 참조하는 노드가 실제 머리 노드입니다. 따라서 검색을 시작하는 위치는 head가 아니라 head.next입니다.</p>\n<table>\n<thead>\n<tr>\n<th>노드</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>더미 노드</td>\n<td>head</td>\n<td>c.next</td>\n<td>b.next.next</td>\n<td>a.prev</td>\n<td>b.prev.prev</td>\n</tr>\n<tr>\n<td>노드 a</td>\n<td>a</td>\n<td>head.next</td>\n<td>c.next.next</td>\n<td>b.prev</td>\n<td>c.pre.prev</td>\n</tr>\n<tr>\n<td>노드 b</td>\n<td>b</td>\n<td>a.next</td>\n<td>head.next.next</td>\n<td>c.prev</td>\n<td>d.prev.prev</td>\n</tr>\n<tr>\n<td>노드 c</td>\n<td>c</td>\n<td>b.next</td>\n<td>a.next.next</td>\n<td>d.prev</td>\n<td>head.prev.prev</td>\n</tr>\n<tr>\n<td>노드 d</td>\n<td>d</td>\n<td>c.next</td>\n<td>b.next.next</td>\n<td>head.prev</td>\n<td>a.prev.prev</td>\n</tr>\n</tbody>\n</table>\n<p>while문에 의한 스캔 과정에서 값이 같다고 판단되면 검색에 성공한 것이고 카운더 cnt값을 반환합니다.(이때 주목 포인터 current가 노드 ptr을 참조하도록 업데이트합니다.)</p>\n<p>노드를 찾기 못하고 스캔을 한바퀴 돌아 머리 노드로 되돌아오면 (ptr이 head와 같아지면) while문은 종료됩니다. 이때 검색 실패임을 나타내는 -1을 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Any<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"data와 값이 같은 노드를 검색\"\"\"</span>\n        cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>        <span class=\"token comment\"># 현재 스캔 중인 노드</span>\n        <span class=\"token keyword\">while</span> ptr <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> data <span class=\"token operator\">==</span> ptr<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> ptr\n                <span class=\"token keyword\">return</span> cnt              <span class=\"token comment\"># 검색 성공</span>\n            cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>              <span class=\"token comment\"># 뒤쪽 노드에 주목</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>                       <span class=\"token comment\"># 검색 실패</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__contains__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"연결 리스트에 data가 포함되어 있는지 판단\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span></code></pre></div>\n<p>빈 리스트의 검색은 반드시 실패할 것입니다. 함수 첫머리에서 ptr에 대입되는 head.next는 더미 노드에 대한 참조입니다. 따라서 head와 같은 값이 ptr에 대입됩니다. 그러면while문의 판단식 ptr is not head가 거짓이 됩니다. 따라서 while문의 반복을 건너뛰고 함수 맨 끝에 있는 return문에 의해 -1이 반환됩니다.</p>\n<h4 id=\"데이터가-포함되어-있는지-판단하는-code-classlanguage-text__contains__code함수\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%ED%8F%AC%ED%95%A8%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94%EC%A7%80-%ED%8C%90%EB%8B%A8%ED%95%98%EB%8A%94-code-classlanguage-text__contains__code%ED%95%A8%EC%88%98\" aria-label=\"데이터가 포함되어 있는지 판단하는 code classlanguage text__contains__code함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터가 포함되어 있는지 판단하는 <code class=\"language-text\">__contains__()</code>함수</h4>\n<p>리스트에 데이터와 값이 같은 노드가 존재하는지 판단하는 함수입니다. 존재하면 True를, 그렇지 않으면 False를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">print_current_node</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Node<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드를 출력\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'주목 노드는 없습니다.'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"모든 노드를 출력\"\"\"</span>\n        ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>        <span class=\"token comment\"># 더미 노드의 뒤쪽 노드</span>\n        <span class=\"token keyword\">while</span> ptr <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n            ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">print_reverse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"모든 노드를 역순으로 출력\"\"\"</span>\n        ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span>prev        <span class=\"token comment\"># 더미 노드의 앞쪽 노드</span>\n        <span class=\"token keyword\">while</span> ptr <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n            ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span>prev\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드를 한 칸 뒤로 이동\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token keyword\">is</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>        <span class=\"token comment\"># 이동할 수 없음</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">prev</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드를 한 칸 앞으로 이동\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>prev <span class=\"token keyword\">is</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>        <span class=\"token comment\"># 이동할 수 없음</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>prev\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></code></pre></div>\n<h4 id=\"주목-노드를-출력하는-printcurrentnode-함수\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EB%AA%A9-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-printcurrentnode-%ED%95%A8%EC%88%98\" aria-label=\"주목 노드를 출력하는 printcurrentnode 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주목 노드를 출력하는 print<em>current</em>node() 함수</h4>\n<p>주목 노드의 데이터 current.data를 출력하는 함수, 리스트가 비어 있으면 주목 노드가 존재하지 않으므로 ‘주목노드는 없습니다. ‘를 출력</p>\n<h4 id=\"모든-노드를-출력하는-print함수\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-print%ED%95%A8%EC%88%98\" aria-label=\"모든 노드를 출력하는 print함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 노드를 출력하는 print()함수</h4>\n<p>리스트에 있는 모든 노드를 맨 앞에서 맨 끝까지 순서대로 출력하는 함수입니다. head.next에서 시작하여 뒤쪽 포인터를 따라가면서 스캔하여 각 노드의 데이터를 출력합니다. 한바퀴 돌아 head로 되돌아오면 스캔을 종료합니다.</p>\n<h4 id=\"모든-노드를-역순으로-출력하는-print_reverse-함수\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%97%AD%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%8A%94-print_reverse-%ED%95%A8%EC%88%98\" aria-label=\"모든 노드를 역순으로 출력하는 print_reverse 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 노드를 역순으로 출력하는 print_reverse() 함수</h4>\n<p>리스트에 있는 모든 노드를 맨 끝부터 역순으로 출력하는 함수입니다. head.prev에서 시작하여 앞쪽 포인터를 따라가면서 스캔하여 각 노드의 데이터를 출력합니다. 한바퀴 돌고 head로 되돌아가면 스캔이 종료됩니다.</p>\n<h4 id=\"주목-노드를-한-칸-뒤로-이동시키는-next함수\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EB%AA%A9-%EB%85%B8%EB%93%9C%EB%A5%BC-%ED%95%9C-%EC%B9%B8-%EB%92%A4%EB%A1%9C-%EC%9D%B4%EB%8F%99%EC%8B%9C%ED%82%A4%EB%8A%94-next%ED%95%A8%EC%88%98\" aria-label=\"주목 노드를 한 칸 뒤로 이동시키는 next함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주목 노드를 한 칸 뒤로 이동시키는 next()함수</h4>\n<p>주목 노드를 한 칸 뒤로 이동시키는 함수입니다. 리스트가 비어 있지 않고 주목 노드에 뒤쪽 노드가 존재하는 경우에만 이동합니다. 구체적으로는 주목 포인터 current를 current.next로 업데이트합니다. 주목 노드를 이동하면 True를, 그렇지 않으면 False를 반환합니다.</p>\n<h4 id=\"주목-노드를-한-칸-앞으로-이동시키는-prev-함수\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EB%AA%A9-%EB%85%B8%EB%93%9C%EB%A5%BC-%ED%95%9C-%EC%B9%B8-%EC%95%9E%EC%9C%BC%EB%A1%9C-%EC%9D%B4%EB%8F%99%EC%8B%9C%ED%82%A4%EB%8A%94-prev-%ED%95%A8%EC%88%98\" aria-label=\"주목 노드를 한 칸 앞으로 이동시키는 prev 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주목 노드를 한 칸 앞으로 이동시키는 prev() 함수</h4>\n<p>주목 노드를 한 칸 앞으로 이동시키는 함수입니다. 리스트가 비어 있지 않고 주목 노드에 앞쪽 노드가 존재하는 경우에만 이동합니다. 구체적으로는 주목 포인터 current를 current.prev로 업데이트합니다. 주목 노드를 이동하면 True를, 그렇지 않으면 False를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드 바로 뒤에 노드를 삽입\"\"\"</span>\n        node <span class=\"token operator\">=</span> Node<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> node\n        self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> node\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> node\n        self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_first</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"맨 앞에 노드를 삽입\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head    <span class=\"token comment\"># 더미 노드 head의 바로 뒤에 삽입</span>\n        self<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add_last</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"맨 뒤에 노드를 삽입\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span>prev       <span class=\"token comment\"># 꼬리 노드 head.prev의 바로 뒤에 삽입</span>\n        self<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"노드를-삽입하는-add-함수\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%BD%EC%9E%85%ED%95%98%EB%8A%94-add-%ED%95%A8%EC%88%98\" aria-label=\"노드를 삽입하는 add 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드를 삽입하는 add() 함수</h4>\n<p>주목 노드 바로 뒤에 노드를 삽입하는 함수</p>\n<ol>\n<li>새로 삽입하는 노드를 Node(data, current, current.next)로 생성</li>\n<li>앞 노드의 뒤쪽 포인터 current.next와 뒤 노드의 앞쪽 포인터 current.next.prev 모두 새로 삽입한 노드 node를 참조하도록 업데이트합니다.</li>\n<li>주목 포인터 current가 삽입한 노드를 참조하도록 업데이트합니다.</li>\n</ol>\n<p>연결 리스트 프로그램과는 달리 리스트의 맨 앞에 더미 노드가 있으므로 ‘빈 리스트에 삽입 처리하는 과정’ 과 ‘리스트의 맨 앞에 삽입하는 과정’을 다룰 필요하 없습니다. 더미 노드만 존재하는 빈 리스트에 경우에도 똑같이 수행해주면 노드를 삽입할 수 있습니다.</p>\n<h4 id=\"머리에-노드를-삽입하는-add_first-함수\" style=\"position:relative;\"><a href=\"#%EB%A8%B8%EB%A6%AC%EC%97%90-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%BD%EC%9E%85%ED%95%98%EB%8A%94-add_first-%ED%95%A8%EC%88%98\" aria-label=\"머리에 노드를 삽입하는 add_first 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>머리에 노드를 삽입하는 add_first() 함수</h4>\n<p>리스트의 맨 앞에 노드를 삽입하는 함수</p>\n<p>더미 노드 바로 뒤에 노드를 삽입해주기 위해 주목 포인터 current가 참조하는 곳을 head로 업데이트한 상태에서 add() 함수를 호출합니다.</p>\n<h4 id=\"꼬리에-노드를-삽입하는-add_last-함수\" style=\"position:relative;\"><a href=\"#%EA%BC%AC%EB%A6%AC%EC%97%90-%EB%85%B8%EB%93%9C%EB%A5%BC-%EC%82%BD%EC%9E%85%ED%95%98%EB%8A%94-add_last-%ED%95%A8%EC%88%98\" aria-label=\"꼬리에 노드를 삽입하는 add_last 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>꼬리에 노드를 삽입하는 add_last() 함수</h4>\n<p>리스트의 맨 끝에 노드를 삽입하는 함수</p>\n<p>꼬리 노드 바로 뒤에, 곧 더미 노드 바로 앞에 노드를 삽입해주기 위해 주목 포인터 current가 참조하는 곳을 current.prev로 업데이트한 상테에서 add() 함수를 호출합니다.</p>","frontmatter":{"title":"[doit_algorithm] 08-4 원형 이중 연결 리스트-1","date":null,"lang":null}}},{"node":{"id":"53100d81-e1f0-50c2-b33e-cb7b1e84b2b1","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 0.5 초 128 MB 130500 40263 25595 31.991% 문제 정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다. X가 3으로 나누어 떨어지면, 3으로 나눈다. X가 2로 나누어 떨어지면,…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/1463\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">0.5 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">130500</td>\n<td align=\"left\">40263</td>\n<td align=\"left\">25595</td>\n<td align=\"left\">31.991%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.</p>\n<ol>\n<li>X가 3으로 나누어 떨어지면, 3으로 나눈다.</li>\n<li>X가 2로 나누어 떨어지면, 2로 나눈다.</li>\n<li>1을 뺀다.</li>\n</ol>\n<p>정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\ncnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">//</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">//</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>주어진 숫자가 n이라고 하면 dp[n]은 n이 1이 되는데 필요한 최소 횟수이다.</p>\n<p>n을 1로 만드는데 3가지 경우를 조합해서 사용하면 되는데 각 인접한 항들이 일정한 관계를 맺고 있기 때문에 점화식을 잘 세워서 풀면 된다.</p>\n<p>문제에서 주어진 세 조건에 대해 점화식 풀어서 나타내면</p>\n<ul>\n<li>\n<p>n이 2로 나누어 떨어질 경우 2로 나눔</p>\n<p>점화식을 사용할 했으므로 dp[n//2]에는 그에 해당하는 최적값이 들어가게 되어있다. 이걸 이용하면 dp[n]은 dp[n//2]에서 연산을 한번 더 사용한 경우이기때문에 dp[n]은 dp[n//2] + 1이 성립한다.</p>\n<p><code class=\"language-text\">dp[n] = dp[n//2]+1</code></p>\n</li>\n<li>\n<p>n이 3으로 나누어 떨어질 경우 3으로 나눔</p>\n<p>2로 나누었을 때와 같은 방법으로 생각해보면 <code class=\"language-text\">dp[n] = dp[n//3]+1</code></p>\n</li>\n<li>\n<p>n에서 1을 뻄</p>\n<p><code class=\"language-text\">dp[n] = dp[n-1] + 1</code></p>\n<p>dp[n-1]에 연산 한번을 더 사용하면 dp[n]이 됨</p>\n</li>\n</ul>\n<p>여기서 세 방법을 조합해서 답을 내면 되는데 문제에서는 최솟값을 구하라고 했기 때문에 위의 점화식을 정리해보면</p>\n<p><code class=\"language-text\">dp[n] = min(dp[n//2], dp[n//3], dp[n-1]) + 1</code></p>\n<p>로 만들 수 있다.</p>\n<p>이제 작은 수부터 차례대로 최솟값으로 dp 리스트를 채우면서 연산하면 입력받은 수를 만드는데 필요한 연산 횟수의 최솟값을 구할 수 있다.</p>","frontmatter":{"title":"[algorithm]1463 1로 만들기","date":null,"lang":null}}},{"node":{"id":"680c27d4-a28b-59bf-8765-409844b95af3","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 노드 삭제 이터레이터","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h3 id=\"노드-삭제\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C-%EC%82%AD%EC%A0%9C\" aria-label=\"노드 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드 삭제</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">remove_current_node</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"주목 노드 삭제\"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n            self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>prev\n            self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>prev\n            self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>current <span class=\"token keyword\">is</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"노드 p를 삭제\"\"\"</span>\n        ptr <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n        <span class=\"token keyword\">while</span> ptr <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> ptr <span class=\"token keyword\">is</span> p<span class=\"token punctuation\">:</span>                <span class=\"token comment\"># p를 발견</span>\n                self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> p\n                self<span class=\"token punctuation\">.</span>remove_current_node<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            ptr <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">remove_first</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"머리 노드 삭제\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>   <span class=\"token comment\"># 머리 노드 head.next를 삭제</span>\n        self<span class=\"token punctuation\">.</span>remove_current_node<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">remove_last</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"꼬리 노드 삭제\"\"\"</span>\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span>prev   <span class=\"token comment\"># 꼬리 노드 head.prev를 삭제</span>\n        self<span class=\"token punctuation\">.</span>remove_current_node<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"모든 노드를 삭제\"\"\"</span>\n        <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\"># 리스트 전체가 빌 때까지</span>\n            self<span class=\"token punctuation\">.</span>remove_first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\"># 머리 노드를 삭제</span>\n        self<span class=\"token punctuation\">.</span>no <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code></pre></div>\n<h3 id=\"이터레이터\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%ED%84%B0%EB%A0%88%EC%9D%B4%ED%84%B0\" aria-label=\"이터레이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이터레이터</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DoubleLinkedListReverseIterator</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"DoubleLinkedList의 내림차순 이터레이터 클래스\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">:</span> Node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> head\n        self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> head<span class=\"token punctuation\">.</span>prev\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> DoubleLinkedListReverseIterator<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__next__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Any<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>current <span class=\"token keyword\">is</span> self<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> StopIteration\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>data\n            self<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>prev\n            <span class=\"token keyword\">return</span> data</code></pre></div>","frontmatter":{"title":"[doit_algorithm] 08-4 원형 이중 연결 리스트-2","date":null,"lang":null}}},{"node":{"id":"03a17fa3-23bd-5f42-b80e-a86d95bfad55","excerpt":"참고: doit…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<h4 id=\"이진-트리\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A7%84-%ED%8A%B8%EB%A6%AC\" aria-label=\"이진 트리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이진 트리</h4>\n<p>노드가 왼쪽 자식과 오른쪽 자식만을 갖는 트리를 이진 트리라고 합니다. 이때 두 자식 가운데 하나 또는 둘다 존재하지 않는 노드가 있어도 상관없습니다.</p>\n<p>왼쪽 자식을 루트로 하는 서브트리를 왼쪽 서브트리, 오른 쪽 자식을 루트로 하는 서브트리를 오른쪽 서브트리라고 합니다.</p>\n<h4 id=\"완전-이진-트리\" style=\"position:relative;\"><a href=\"#%EC%99%84%EC%A0%84-%EC%9D%B4%EC%A7%84-%ED%8A%B8%EB%A6%AC\" aria-label=\"완전 이진 트리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완전 이진 트리</h4>\n<p>루트부터 아래쪽 레벨로 노드가 가득 차 있고, 같은 레벨 안에서 왼쪽부터 오른쪽으로 노드가 채워져 있는 이진 트리를 완전 이진 트리라고 합니다.</p>\n<ul>\n<li>마지막 레벨을 제외하고 모든 레벨에 노드가 가득 차 있습니다.</li>\n<li>마지막 레벨에 한해서 왼쪽부터 오른쪽으로 노드를 채우되 반드시 끝까지 채우지 않아도 됩니다.</li>\n</ul>\n<p>높이가 k인 완전 이진 트리가 가질 수 있는 노드의 수는 최대 2^(k+1)-1개이므로, n개의 노드를 저장할 수 있는 완전 이진 트리의 높이는 log n입니다.</p>\n<h4 id=\"이진-검색-트리\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A7%84-%EA%B2%80%EC%83%89-%ED%8A%B8%EB%A6%AC\" aria-label=\"이진 검색 트리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이진 검색 트리</h4>\n<ul>\n<li>왼쪽 서브트리 노드의 키값은 자신의 노드 키값보다 작아야 합니다.</li>\n<li>오른쪽 서브트리 노드의 키값은 자신의 노드 키값보다 커야 합니다.</li>\n<li>키값이 같은 노드는 복수로 존재하지 않습니다.</li>\n</ul>\n<p>이진 검색 트리는 다음과 같은 특징이 있어서 알고리즘에서 폭 넓게 사용되고 있습니다.</p>\n<ul>\n<li>구조가 단순합니다.</li>\n<li>중위 순회의 깊이 우선 검색을 통하여 노드값을 오름차순으로 얻을 수 있습니다.</li>\n<li>이진 검색과 비슷한 방식으로 아주 빠르게 검색할 수 있습니다.</li>\n<li>노드를 삽입하기 쉽습니다.</li>\n</ul>\n<p><strong>검색</strong></p>\n<ol>\n<li>루트에 주목합니다. 여기서 주목하는 노드를 p</li>\n<li>p가 None이면 검색을 실패하고 종료</li>\n<li>\n<p>검색하는 key와 주목 노드p의 키를 비교합니다.</p>\n<ul>\n<li>key = p: 검색 성공, 종료</li>\n<li>key &#x3C; p: 주목 노드를 왼쪽 자식 노드로 옮김</li>\n<li>key > p: 주목 노드를 오른쪽 자식 노드로 옮김</li>\n</ul>\n</li>\n<li>2번 과정으로 되돌아감</li>\n</ol>\n<p><strong>삽입</strong></p>\n<ul>\n<li>노드를 삽입한 뒤에 트리의 형태가 이진 검색 트리의 조건을 유지해야한다. 따라서 노드를 삽입할 때에는 검색할 때와 마찬가지로 먼저 삽입할 위치를 찾아낸 뒤에 수행해야 합니다.</li>\n<li>루트에 주목합니다. 여기서 주목하는 노드를 node라고 하겠습니다.</li>\n<li>\n<p>삽입하는 key와 주목 노드 node의 키를 비교합니다.</p>\n<ul>\n<li>key = node인 경우: 삽입을 실패하고 종료합니다.</li>\n<li>key &#x3C; node인 경우:</li>\n<li>왼쪽 자식 노드가 없으면, 그 자리에 삽입하고 종료합니다.</li>\n<li>왼쪽 자식 노드가 있으면, 주목 노드를 왼쪽 자식 노드로 옮깁니다.</li>\n<li>key > node인 경우:</li>\n<li>오른쪽 자식 노드가 없으면, 그 자리에 노드를 삽입하고 종료합니다.</li>\n<li>오른쪽 자식 노드가 있으면, 주목 노드를 오른쪽 자식 노드로 옮깁니다.</li>\n<li>2번 과정으로 되돌아 갑니다.</li>\n</ul>\n</li>\n</ul>\n<p><strong>삭제</strong></p>\n<ul>\n<li>\n<p>자식 노드가 없는 노드를 삭제하는 경우</p>\n<ul>\n<li>삭제할 노드가 부모 노드의 왼쪽 자식이면, 부모의 왼쪽 포인터를 None으로 합니다.</li>\n<li>삭제할 노드가 부모 노드의 오른쪽 자식이면, 부모의 오른쪽 포인터를 None으로 합니다.</li>\n</ul>\n</li>\n<li>\n<p>자식 노드가 1개인 노드를 삭제하는 경우</p>\n<ul>\n<li>삭제할 노드가 부모 노드의 왼쪽 자식인 경우</li>\n</ul>\n<p>부모의 왼쪽 포인터가 삭제할 노드의 자식을 가리키도록 업데이트합니다.</p>\n<ul>\n<li>삭제할 노드가 부모 노드의 오른쪽 자식인 경우</li>\n</ul>\n<p>부모의 오른쪽 포인터가 삭제할 노드의 자식을 가리키도록 업데이트합니다.</p>\n</li>\n<li>\n<p>자식 노드가 2개인 노드를 삭제하는 경우</p>\n<ol>\n<li>삭제할 노드의 왼쪽 서브트리에서 키값이 가장 큰 노드를 검색합니다.</li>\n<li>검색한 노드를 삭제 위치로 옮깁니다. 즉, 검색한 노드의 데이터를 삭제할 노드 위치에 복사합니다.</li>\n<li>옮긴 노드를 삭제합니다. 이때 자식 노드의 개수에 따라 다음을 수행합니다.</li>\n<li>옮긴 노드에 자식이 없으면: ‘자식 노드가 없는 노드의 삭제’에 따라 노드를 삭제합니다.</li>\n<li>옮긴 노드에 자식이 1개만 있으면: ‘자식 노드가 1개인 노드의 삭제’에 따라 노드를 삭제합니다.</li>\n</ol>\n</li>\n</ul>\n<p><strong>모든 노드를 오름차순으로 출력</strong></p>\n<p>중위 순회의 깊이 우선 검색으로 스캔</p>","frontmatter":{"title":"[doit_algorithm] 09-2 이진 트리와 이진 검색 트리","date":null,"lang":null}}},{"node":{"id":"71e0cdb5-101c-5cc5-8b3d-bb634760d317","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 27767 11334 8292 40.204% 문제 어떤 자연수 N은 그보다 작거나 같은 제곱수들의 합으로 나타낼 수 있다. 예를 들어 11=32+12+12(…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/1699\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">27767</td>\n<td align=\"left\">11334</td>\n<td align=\"left\">8292</td>\n<td align=\"left\">40.204%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>어떤 자연수 N은 그보다 작거나 같은 제곱수들의 합으로 나타낼 수 있다. 예를 들어 11=32+12+12(3개 항)이다. 이런 표현방법은 여러 가지가 될 수 있는데, 11의 경우 11=22+22+12+12+12(5개 항)도 가능하다. 이 경우, 수학자 숌크라테스는 “11은 3개 항의 제곱수 합으로 표현할 수 있다.”라고 말한다. 또한 11은 그보다 적은 항의 제곱수 합으로 표현할 수 없으므로, 11을 그 합으로써 표현할 수 있는 제곱수 항의 최소 개수는 3이다.</p>\n<p>주어진 자연수 N을 이렇게 제곱수들의 합으로 표현할 때에 그 항의 최소개수를 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 100,000)</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>주어진 자연수를 제곱수의 합으로 나타낼 때에 그 제곱수 항의 최소 개수를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">7</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    j <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">while</span> j<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>j<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">or</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>j<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">)</span></code></pre></div>\n<p>dp[1] = 1</p>\n<p>dp[2] = 1 + 1</p>\n<p>dp[3] = 1 + 1 + 1</p>\n<p>dp[4] = 4</p>\n<p>dp[5] = 4 + 1 -> <code class=\"language-text\">min(dp[4] + 1, dp[1] + 1)</code></p>\n<p>dp[6] = 4 + 1 + 1 -> <code class=\"language-text\">min(dp[5] + 1, dp[2] + 1)</code></p>\n<p>dp[7] = 4 + 1 + 1 + 1 -> <code class=\"language-text\">min(dp[6] + 1, dp[2] + 1)</code></p>\n<p>dp[8] = 4 + 4 -> <code class=\"language-text\">min(dp[7] + 1, dp[4] + 1)</code></p>\n<p>dp[9] = 9</p>\n<p>dp[10] = 9 + 1 -> <code class=\"language-text\">min(dp[9] + 1, dp[6] + 1, dp[1] + 1)</code></p>\n<p>dp[11] = 9 + 1 + 1 -> <code class=\"language-text\">min(dp[10] + 1, dp[7] + 1, dp[2] + 1)</code></p>\n<p>dp[12] = 4 + 4 + 4 -> <code class=\"language-text\">min(dp[11] + 1, dp[8] + 1, dp[3] + 1)</code></p>\n<p>n에서 제곱수를 뺀 값을 만드는데 필요한 횟수 + 1 = 제곱수로 n을 만드는데 필요한 횟수</p>\n<p>하지만 1, 4, 9… 무엇을 뺀 값에서 최솟값이 나올지 알 수 없으므로 제곱값을 빼보면서 나온 값들 중에 최솟값을 찾아서 넣어주어야한다.</p>\n<p>탐색에 필요한 범위는 n보다 작은 제곱수들만 탐색하면 되므로 <code class=\"language-text\">j*j &lt;= i</code> 동안 탐색하면 된다. (J는 뺄 수, i는 최소 제곱수의 합을 구할 값)탐색을 하면서 dp[i]에 제일 작은 값이 들어갈 수 있도록 만들었다.</p>","frontmatter":{"title":"[algorithm]1699 제곱수의 합","date":null,"lang":null}}},{"node":{"id":"b9d0e26c-407e-5620-bcd5-b6b8a926bac2","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 (추가 시간 없음) 128 MB 75354 22753 15693 29.470% 문제 n…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/1912\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초 (추가 시간 없음)</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">75354</td>\n<td align=\"left\">22753</td>\n<td align=\"left\">15693</td>\n<td align=\"left\">29.470%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>n개의 정수로 이루어진 임의의 수열이 주어진다. 우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 단, 수는 한 개 이상 선택해야 한다.</p>\n<p>예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어졌다고 하자. 여기서 정답은 12+21인 33이 정답이 된다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 정수 n(1 ≤ n ≤ 100,000)이 주어지고 둘째 줄에는 n개의 정수로 이루어진 수열이 주어진다. 수는 -1,000보다 크거나 같고, 1,000보다 작거나 같은 정수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 답을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10\n10 -4 3 1 5 6 -35 12 21 -1</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">33</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10\n2 1 -4 3 4 -4 6 5 -5 1</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">14</code></pre></div>\n<h2 id=\"예제-입력-3-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-3-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 3 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 3 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5\n-1 -2 -3 -4 -5</code></pre></div>\n<h2 id=\"예제-출력-3-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-3-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 3 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 3 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">-1</code></pre></div>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnum_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> num_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> num_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>예제 중간에 들어가 있는 음수값 때문에 고민을 많이 했는데 결론은 가장 현재에서의 최선의 값을 구하는 방법이었다.</p>\n<p>n일 때 나올 수 있는 경우는 n이 시작이거나, n-1까지 구한 최댓값에 n을 더한 경우 이렇게 두개만 나올 수 있다.</p>\n<p><code class=\"language-text\">dp[n] = max(dp[n-1] + num_list[n], num_list[n])</code></p>\n<p>점화식을 이용해서 모든 경우의 연속합의 최대값을 구한 후에 리스트의 최댓값을 출력하면 된다.</p>\n<p>여기서 문제의 조건을 제대로 읽지 않고 풀어서 dp의 초기값을 0으로 설정하고 안풀려서 당황했었다. 문제에서 주어진 수의 범위기 -1000부터 1000이기 때문에 최댓값을 담아야하는 dp의 초기값을 -1000으로 넣어주어야 max를 구할 때 알맞는 답을 출력할 수 있다.</p>","frontmatter":{"title":"[algorithm]1912 연속합","date":null,"lang":null}}},{"node":{"id":"a2c1feec-19d5-599d-9e14-5a17c4a64f5c","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 26342 9217 7236 35.189% 문제 3×N 크기의 벽을 2×1, 1×2 크기의 타일로 채우는 경우의 수를 구해보자. 입력 첫째 줄에 N(1 ≤ N ≤ 3…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2133\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">26342</td>\n<td align=\"left\">9217</td>\n<td align=\"left\">7236</td>\n<td align=\"left\">35.189%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>3×N 크기의 벽을 2×1, 1×2 크기의 타일로 채우는 경우의 수를 구해보자.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 N(1 ≤ N ≤ 30)이 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 경우의 수를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3</code></pre></div>\n<h2 id=\"힌트\" style=\"position:relative;\"><a href=\"#%ED%9E%8C%ED%8A%B8\" aria-label=\"힌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힌트</h2>\n<p>아래 그림은 3×12 벽을 타일로 채운 예시이다.</p>\n<p><img src=\"https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/images/2663_1.jpg\" alt=\"img\"></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> j <span class=\"token operator\">==</span> i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>모든 dp문제가 그랬듯 너무 어려웠다… 어려운 것에 비해 나온 코드를 보면 세상 그렇게 깔끔할 수가 없음… 그래도 나중에 익숙해지면 이런 문제는 쉽게 풀 수 있겠지…</p>\n<ul>\n<li>경우의 수를 따져보면 n=2인 경우가 3개가 나온다.</li>\n<li>그리고 n=3을 채울 수 있는 경우는 존재하지 않는다. (1,3,5,7,9… 모두 마찬가지)</li>\n<li>n=4인 경우엔 n=2인 경우를 두번 사용해서 구한 경우 3*3 = 9 + 4에서만 나올 수 있는 경우 2가지로 총 11가지가 나온다.</li>\n<li>이 이후부터는 각 경우에만 나올 수 있는 2가지 경우를 따로 생각하고 계산 해야한다.</li>\n<li>n=6인 경우엔 n=4인 경우에 n=2인 경우를 사용해서 만든 11*3 = 33 + n=6인 경우에만 나오는 2가지 + n=2인 경우에 n=4에서만 나왔던 특별한 경우를 조합한 3 * 2 = 6을 더해주면 41가지가 나올 수 있다.</li>\n</ul>\n<p>정리하면 n에서의 경우의 수를 구하려면</p>\n<ul>\n<li>n-2의 경우 * 3</li>\n<li>그 아래의 나머지 짝수 경우 * 2 (n=2를 제외하고 모든 경우에는 2가지의 특별한 경우가 존재함)</li>\n</ul>\n<p>위의 경우를 모두 더해주면 결과를 얻을 수 있다.</p>","frontmatter":{"title":"[algorithm]2133 타일 채우기","date":null,"lang":null}}},{"node":{"id":"6c0e035b-6725-5bf0-910c-f7ff85e4990c","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 30222 5150 3767 19.31…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2011\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">30222</td>\n<td align=\"left\">5150</td>\n<td align=\"left\">3767</td>\n<td align=\"left\">19.313%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>상근이와 선영이가 다른 사람들이 남매간의 대화를 듣는 것을 방지하기 위해서 대화를 서로 암호화 하기로 했다. 그래서 다음과 같은 대화를 했다.</p>\n<ul>\n<li>상근: 그냥 간단히 암호화 하자. A를 1이라고 하고, B는 2로, 그리고 Z는 26으로 하는거야.</li>\n<li>선영: 그럼 안돼. 만약, “BEAN”을 암호화하면 25114가 나오는데, 이걸 다시 글자로 바꾸는 방법은 여러 가지가 있어.</li>\n<li>상근: 그렇네. 25114를 다시 영어로 바꾸면, “BEAAD”, “YAAD”, “YAN”, “YKD”, “BEKD”, “BEAN” 총 6가지가 나오는데, BEAN이 맞는 단어라는건 쉽게 알수 있잖아?</li>\n<li>선영: 예가 적절하지 않았네 ㅠㅠ 만약 내가 500자리 글자를 암호화 했다고 해봐. 그 때는 나올 수 있는 해석이 정말 많은데, 그걸 언제 다해봐?</li>\n<li>상근: 얼마나 많은데?</li>\n<li>선영: 구해보자!</li>\n</ul>\n<p>어떤 암호가 주어졌을 때, 그 암호의 해석이 몇 가지가 나올 수 있는지 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 5000자리 이하의 암호가 주어진다. 암호는 숫자로 이루어져 있다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>나올 수 있는 해석의 가짓수를 구하시오. 정답이 매우 클 수 있으므로, 1000000으로 나눈 나머지를 출력한다.</p>\n<p>암호가 잘못되어 암호를 해석할 수 없는 경우에는 0을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">25114</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">6</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">code <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> code<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span>\n    dp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        temp1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        temp2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;=</span> temp1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n            dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> <span class=\"token number\">9</span> <span class=\"token operator\">&lt;</span> temp2 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">26</span><span class=\"token punctuation\">:</span>\n            dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n        dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">%=</span> <span class=\"token number\">1000000</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>A ~ Z는 1~26의 암호코드로 바꿀 수 있고 여기서 암호코드의 경우의 수에 영향을 주는 것은 자릿수이므로 1~26의 암호는 한자릿수인 1~9와 10~26으로 나눌 수 있다.</p>\n<ul>\n<li>\n<p>n이 한자릿수 암호인 경우</p>\n<p><code class=\"language-text\">dp[n] = dp[n-1]</code></p>\n</li>\n<li>\n<p>n이 두자릿수에서 일의 자리인 암호인 경우</p>\n<p><code class=\"language-text\">dp[n] = dp[n-2]</code></p>\n</li>\n</ul>\n<p>dp[0] = 1, dp[1] = 1로 넣어놓고 반복문을 돌렸더니 결과를 구할 수 있었다. dp[2]는 경우에 따라 경우의 수가 달라질 수 있기 때문에 임의로 초기값을 정해주면 제대로 된 결과가 나오지 않을 수도 있다.</p>","frontmatter":{"title":"[algorithm]2011 암호코드","date":null,"lang":null}}},{"node":{"id":"84af4d37-ccbd-53c2-9441-77f3a4aac399","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 63513 22599 16152 33.87…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2156\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">63513</td>\n<td align=\"left\">22599</td>\n<td align=\"left\">16152</td>\n<td align=\"left\">33.877%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>효주는 포도주 시식회에 갔다. 그 곳에 갔더니, 테이블 위에 다양한 포도주가 들어있는 포도주 잔이 일렬로 놓여 있었다. 효주는 포도주 시식을 하려고 하는데, 여기에는 다음과 같은 두 가지 규칙이 있다.</p>\n<ol>\n<li>포도주 잔을 선택하면 그 잔에 들어있는 포도주는 모두 마셔야 하고, 마신 후에는 원래 위치에 다시 놓아야 한다.</li>\n<li>연속으로 놓여 있는 3잔을 모두 마실 수는 없다.</li>\n</ol>\n<p>효주는 될 수 있는 대로 많은 양의 포도주를 맛보기 위해서 어떤 포도주 잔을 선택해야 할지 고민하고 있다. 1부터 n까지의 번호가 붙어 있는 n개의 포도주 잔이 순서대로 테이블 위에 놓여 있고, 각 포도주 잔에 들어있는 포도주의 양이 주어졌을 때, 효주를 도와 가장 많은 양의 포도주를 마실 수 있도록 하는 프로그램을 작성하시오.</p>\n<p>예를 들어 6개의 포도주 잔이 있고, 각각의 잔에 순서대로 6, 10, 13, 9, 8, 1 만큼의 포도주가 들어 있을 때, 첫 번째, 두 번째, 네 번째, 다섯 번째 포도주 잔을 선택하면 총 포도주 양이 33으로 최대로 마실 수 있다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 포도주 잔의 개수 n이 주어진다. (1≤n≤10,000) 둘째 줄부터 n+1번째 줄까지 포도주 잔에 들어있는 포도주의 양이 순서대로 주어진다. 포도주의 양은 1,000 이하의 음이 아닌 정수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 최대로 마실 수 있는 포도주의 양을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">6\n6\n10\n13\n9\n8\n1</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">33</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nwine <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    score <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    wine<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> wine<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">if</span> n <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> wine<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> wine<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>wine<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>wine<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>wine<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>포도주 1, 2, 3이 있다고 할 때, 3를 기준으로 모든 경우를 따져보면</p>\n<ul>\n<li>\n<p>3을 마시지 않는 경우 -> 1,2를 마신 경우…</p>\n<p>2의 경우를 그대로 가져옴</p>\n</li>\n<li>\n<p>2,3을 마신 경우 -> 2잔까지만 연속으로 마실 수 있으므로 1을 마시지 않은 경우</p>\n<p>이 경우에는 1을 마시면 안되기 때문에 그 앞의 경우인 0이 필요하다. -> 0의 경우 + 2 + 3</p>\n</li>\n<li>\n<p>1,3을 마신 경우</p>\n<p>1의 경우에 3을 더함</p>\n</li>\n</ul>\n<p>이렇게 세가지 경우로 나눌 수 있다. 이걸 전체로 확장해보면</p>\n<p><code class=\"language-text\">dp[n] = max(dp[n-1], dp[n-2] + wine[n], dp[n-3] + wine[n-1] + wine[n])</code></p>\n<p>으로 표현할 수 있다.</p>","frontmatter":{"title":"[algorithm]2156 포도주 시식","date":null,"lang":null}}},{"node":{"id":"7f5aa363-af91-50a0-bc66-76a28be0d50a","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 55178 21872 16264 37.871% 문제 0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2193\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">55178</td>\n<td align=\"left\">21872</td>\n<td align=\"left\">16264</td>\n<td align=\"left\">37.871%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다.</p>\n<ol>\n<li>이친수는 0으로 시작하지 않는다.</li>\n<li>이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.</li>\n</ol>\n<p>예를 들면 1, 10, 100, 101, 1000, 1001 등이 이친수가 된다. 하지만 0010101이나 101101은 각각 1, 2번 규칙에 위배되므로 이친수가 아니다.</p>\n<p>N(1 ≤ N ≤ 90)이 주어졌을 때, N자리 이친수의 개수를 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 N이 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 N자리 이친수의 개수를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 문제는 모든 경우를 1부터 적다보니 규칙이 눈에 띄어서 바로 풀 수 있었던 문제다.</p>\n<p>먼저 앞의 수가 0이면 1, 0이 올 수 있고, 앞의 수가 1이면 0만 올 수 있다는 규칙을 이용하여 각 경우의 수를 적어봤다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">n = 1 -> 1\nn = 2 -> 10\nn = 3 -> 101, 100\nn = 4 -> 1010, 1001, 1000\nn = 5 -> 10101, 10100, 10010, 10001, 10000</code></pre></div>\n<p>위의 결과를 경우의 수로만 적어보면 1, 1, 2, 3, 5,… 로 늘어난다는 것을 알 수 있는데 <code class=\"language-text\">dp[n] = dp[n-1] + dp[n-2]</code>의 익숙한 규칙을 가진다는 것을 알 수 있다. (피보나치 수열)</p>","frontmatter":{"title":"[algorithm]2193 이친수","date":null,"lang":null}}},{"node":{"id":"106d4dda-1868-5d3d-874a-0ff1d2587c41","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 19582 8519 6138 42.035% 문제 0부터 N까지의 정수 K개를 더해서 그 합이 N이 되는 경우의 수를 구하는 프로그램을 작성하시오. 덧셈의 순서가 바뀐 경우는 다른 경우로 센다(1+…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2225\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">19582</td>\n<td align=\"left\">8519</td>\n<td align=\"left\">6138</td>\n<td align=\"left\">42.035%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>0부터 N까지의 정수 K개를 더해서 그 합이 N이 되는 경우의 수를 구하는 프로그램을 작성하시오.</p>\n<p>덧셈의 순서가 바뀐 경우는 다른 경우로 센다(1+2와 2+1은 서로 다른 경우). 또한 한 개의 수를 여러 번 쓸 수도 있다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 두 정수 N(1 ≤ N ≤ 200), K(1 ≤ K ≤ 200)가 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 답을 1,000,000,000으로 나눈 나머지를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">20 2</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">21</code></pre></div>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span>\n        temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> <span class=\"token number\">1000000000</span>\n    dp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>k = 1인 경우에는 모든 수에서 한가지 경우밖에 나올 수 없다.</p>\n<p>k = 2인 경우에는</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">n = 0 -> 00\nn = 1 -> 01, 10\nn = 2 -> 02, 11, 20\nn = 3 -> 03, 12, 21, 30\n...</code></pre></div>\n<p>각 경우를 표로 만들어서 확인해보면 다음과 같다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">n = 0</th>\n<th align=\"center\">n = 1</th>\n<th align=\"center\">n = 2</th>\n<th align=\"center\">n = 3</th>\n<th align=\"center\">n = 4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">k = 1</td>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">k = 2</td>\n<td align=\"center\"><strong>1</strong></td>\n<td align=\"center\"><strong>2</strong></td>\n<td align=\"center\"><strong>3</strong></td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n</tr>\n<tr>\n<td align=\"center\">k = 3</td>\n<td align=\"center\">1</td>\n<td align=\"center\">3</td>\n<td align=\"center\">‘6’</td>\n<td align=\"center\">10</td>\n<td align=\"center\">15</td>\n</tr>\n<tr>\n<td align=\"center\">k = 4</td>\n<td align=\"center\">1</td>\n<td align=\"center\">4</td>\n<td align=\"center\">10</td>\n<td align=\"center\">20</td>\n<td align=\"center\">35</td>\n</tr>\n</tbody>\n</table>\n<p>0부터 n까지의 수를 k개 뽑아서 만드는 경우의 수를 정리한 것이다.</p>\n<p>각 수열이 서로에게 영향을 주고 있는 것을 확인할 수 있다. (ex. 6 = 1 + 2 + 3 )</p>","frontmatter":{"title":"[algorithm]2225 합분해","date":null,"lang":null}}},{"node":{"id":"da36164f-9982-58d6-a8ad-9a0ed3846f8a","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 52957 33782 22424 61.764% 문제 정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다. 1+1+1+1 1+1+2…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/9095\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">52957</td>\n<td align=\"left\">33782</td>\n<td align=\"left\">22424</td>\n<td align=\"left\">61.764%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다.</p>\n<ul>\n<li>1+1+1+1</li>\n<li>1+1+2</li>\n<li>1+2+1</li>\n<li>2+1+1</li>\n<li>2+2</li>\n<li>1+3</li>\n<li>3+1</li>\n</ul>\n<p>정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다. n은 양수이며 11보다 작다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3\n4\n7\n10</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">7\n44\n274</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">12</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>num<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>num<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token keyword\">case</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>n을 1, 2, 3의 합으로 나타내는 방법의 수를 dp 테이블에 넣어주었다.</p>\n<p>n을 만드는데 마지막에 더해진 수가 1인 경우는 dp[n-1]이고, dp[n-1]의 모든 경우에 1을 더해주면 n이 되므로 dp[n]에 포함된다. 마찬가지로 마지막에 더해진 수가 2인 경우는 dp[n-2]이고, dp[n-2]의 모든 경우에 2를 더해주면 n이 될 수 있으므로 dp[n]에 bp[n-2]가 포함된다. 3도 마찬가지고 dp[n]에 포함된다는 것을 알 수 있다.</p>\n<p>때문에 점화식은 <code class=\"language-text\">dp[n] = dp[n-1] + dp[n-2] + dp[n-3]</code>이 된다.</p>","frontmatter":{"title":"[algorithm]9095 1,2,3 더하기","date":null,"lang":null}}},{"node":{"id":"e09f53dc-a988-5146-9c6f-02abf5ebb12b","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 256 MB 69979 21185 15213 28.399% 문제 45656이란 수를 보자. 이 수는 인접한 모든 자리수의 차이가 1이 난다. 이런 수를 계단 수라고 한다. 세준이는 수의 길이가 N…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/10844\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">256 MB</td>\n<td align=\"left\">69979</td>\n<td align=\"left\">21185</td>\n<td align=\"left\">15213</td>\n<td align=\"left\">28.399%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>45656이란 수를 보자.</p>\n<p>이 수는 인접한 모든 자리수의 차이가 1이 난다. 이런 수를 계단 수라고 한다.</p>\n<p>세준이는 수의 길이가 N인 계단 수가 몇 개 있는지 궁금해졌다.</p>\n<p>N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구하는 프로그램을 작성하시오. (0으로 시작하는 수는 없다.)</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 100보다 작거나 같은 자연수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 정답을 1,000,000,000으로 나눈 나머지를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">9</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">17</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> j <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">elif</span> j <span class=\"token operator\">==</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span>\n            temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    dp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/53068706/107882585-80cc0d80-6f2d-11eb-99d2-fbf36669cb1c.PNG\" alt=\"10844_1\">\n<p>2차원 배열을 사용하였다. <code class=\"language-text\">dp[n][m]</code> n = 자릿수, m=끝자리</p>\n<p>m = 1~8일 때 다음에 올 수 있는 수는 m-1, m+1이다. 나머지는 예외인 숫자인데 m=0인 경우에는 0보다 작은 수는 나올 수 없으므로 다음엔 1밖에 올 수 없고, m=9인 경우에도 9보다 큰 경우는 없으므로 다음에 올 수 있는 수는 8밖에 없다.</p>\n<p>첫자리로 나올 수 없는 0을 제외한 모든 수에 1이 들어간 리스트를 바탕으로 두번쨰 자리 수의 경우를 구하는데 앞자리가 1인 경우 0,2가 나올 수 있으므로 <code class=\"language-text\">dp[1][0] + dp[1][2]</code>를 넣어주었고 앞자리가 2인 경우 <code class=\"language-text\">dp[1][1] + dp[1][3]</code>을, 앞자리가 3인 경우 <code class=\"language-text\">dp[1][2] + dp[1][4]</code>를 넣어주는 식으로 끝자리수의 개수를 원하는 자릿수만큼 계산 한 후 마지막 자릿수의 연산을 마친 후에 마지막 리스트의 합을 구해 출력했다.</p>","frontmatter":{"title":"[algorithm]10844 쉬운 계단 수","date":null,"lang":null}}},{"node":{"id":"b21cf5e5-2a5b-534c-ad3c-48cd60badcb0","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 71605 24602 18019 36.047% 문제 계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다. <그림…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/2579\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">71605</td>\n<td align=\"left\">24602</td>\n<td align=\"left\">18019</td>\n<td align=\"left\">36.047%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다. &#x3C;그림 1>과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데 계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.</p>\n<p><img src=\"https://www.acmicpc.net/upload/images/k64or2GOK1vmpEig7Ud.png\" alt=\"img\"></p>\n<p>예를 들어 &#x3C;그림 2>와 같이 시작점에서부터 첫 번째, 두 번째, 네 번째, 여섯 번째 계단을 밟아 도착점에 도달하면 총 점수는 10 + 20 + 25 + 20 = 75점이 된다.</p>\n<p><img src=\"https://www.acmicpc.net/upload/images/f62omMF2kQYD5rDct.png\" alt=\"img\"></p>\n<p>계단 오르는 데는 다음과 같은 규칙이 있다.</p>\n<ol>\n<li>계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.</li>\n<li>연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.</li>\n<li>마지막 도착 계단은 반드시 밟아야 한다.</li>\n</ol>\n<p>따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.</p>\n<p>각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>입력의 첫째 줄에 계단의 개수가 주어진다.</p>\n<p>둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">6\n10\n20\n15\n25\n10\n20</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">75</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsteps <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> steps<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">if</span> n <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 반복문 밖에서 지정해주어야하는데 조건을 사용하지 않으면 길이가 1일 때 값을 할당할 수 없음</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> steps<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>steps<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>steps<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>steps<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>전에 풀었던 와인문제와 비슷한 문제이다. 그래서 풀이 방식도 와인 문제와 크게 다르지 않다.</p>\n<ul>\n<li>\n<p>계단을 연속해서 밟지 않은 경우</p>\n<p><code class=\"language-text\">dp[n] = dp[n-2] + step[n]</code></p>\n</li>\n<li>\n<p>계단을 2번 연속 밟은 경우</p>\n<p><code class=\"language-text\">dp[n] = dp[n-3] + step[n-1] + step[n]</code></p>\n</li>\n</ul>\n<p>낮은 계단부터 차례대로 위의 두 경우 중에 최댓값을 판단해 연산하면 문제에서 원하는 마지막 계단을 밟았을 때의 최댓값을 구할 수 있다.</p>","frontmatter":{"title":"[algorithm]2579 계단 오르기","date":null,"lang":null}}},{"node":{"id":"cfd4f54d-6369-5f8f-afbe-45a2c9d65bd9","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 39154 16216 13400 40.090% 문제 img 오른쪽 그림과 같이 삼각형이 나선 모양으로 놓여져 있다. 첫 삼각형은 정삼각형으로 변의 길이는…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/9461\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">39154</td>\n<td align=\"left\">16216</td>\n<td align=\"left\">13400</td>\n<td align=\"left\">40.090%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p><img src=\"https://www.acmicpc.net/upload/images/pandovan.png\" alt=\"img\"></p>\n<p>오른쪽 그림과 같이 삼각형이 나선 모양으로 놓여져 있다. 첫 삼각형은 정삼각형으로 변의 길이는 1이다. 그 다음에는 다음과 같은 과정으로 정삼각형을 계속 추가한다. 나선에서 가장 긴 변의 길이를 k라 했을 때, 그 변에 길이가 k인 정삼각형을 추가한다.</p>\n<p>파도반 수열 P(N)은 나선에 있는 정삼각형의 변의 길이이다. P(1)부터 P(10)까지 첫 10개 숫자는 1, 1, 1, 2, 2, 3, 4, 5, 7, 9이다.</p>\n<p>N이 주어졌을 때, P(N)을 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, N이 주어진다. (1 ≤ N ≤ 100)</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>각 테스트 케이스마다 P(N)을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2\n6\n12</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3\n16</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">101</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>우선 수열에 규칙이 있는지 알아보기 위해 결과값의 수열을 적어보았다.</p>\n<p>1, 1, 1, 2, 2, 3, 4, 5, 7, 9…</p>\n<p>2 = 1 + 1</p>\n<p>3 = 1 + 2</p>\n<p>4 = 2 + 2</p>\n<p>5 = 2 + 3</p>\n<p>…</p>\n<p>그 결과 <code class=\"language-text\">dp[n] = dp[n-2] + dp[n-3]</code> 이라는 규칙을 찾을 수 있었고, 이를 바탕으로 문제를 풀었다.</p>","frontmatter":{"title":"[algorithm]9461 파도반 수열","date":null,"lang":null}}},{"node":{"id":"3b1b526b-9f57-59d2-bd59-8e0848b0dffa","excerpt":"참고: 백준 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 256 MB 33000 16714 10944 48.914% 문제 상근이의 여동생 상냥이는 문방구에서 스티커 2n개를 구매했다. 스티커는 그림 (a)와 같이 2행 n…","html":"<p>참고: <a href=\"https://www.acmicpc.net/problem/9465\">백준</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">256 MB</td>\n<td align=\"left\">33000</td>\n<td align=\"left\">16714</td>\n<td align=\"left\">10944</td>\n<td align=\"left\">48.914%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>상근이의 여동생 상냥이는 문방구에서 스티커 2n개를 구매했다. 스티커는 그림 (a)와 같이 2행 n열로 배치되어 있다. 상냥이는 스티커를 이용해 책상을 꾸미려고 한다.</p>\n<p>상냥이가 구매한 스티커의 품질은 매우 좋지 않다. 스티커 한 장을 떼면, 그 스티커와 변을 공유하는 스티커는 모두 찢어져서 사용할 수 없게 된다. 즉, 뗀 스티커의 왼쪽, 오른쪽, 위, 아래에 있는 스티커는 사용할 수 없게 된다.</p>\n<p><img src=\"https://www.acmicpc.net/upload/images/sticker.png\" alt=\"img\"></p>\n<p>모든 스티커를 붙일 수 없게된 상냥이는 각 스티커에 점수를 매기고, 점수의 합이 최대가 되게 스티커를 떼어내려고 한다. 먼저, 그림 (b)와 같이 각 스티커에 점수를 매겼다. 상냥이가 뗄 수 있는 스티커의 점수의 최댓값을 구하는 프로그램을 작성하시오. 즉, 2n개의 스티커 중에서 점수의 합이 최대가 되면서 서로 변을 공유 하지 않는 스티커 집합을 구해야 한다.</p>\n<p>위의 그림의 경우에 점수가 50, 50, 100, 60인 스티커를 고르면, 점수는 260이 되고 이 것이 최대 점수이다. 가장 높은 점수를 가지는 두 스티커 (100과 70)은 변을 공유하기 때문에, 동시에 뗄 수 없다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스의 첫째 줄에는 n (1 ≤ n ≤ 100,000)이 주어진다. 다음 두 줄에는 n개의 정수가 주어지며, 각 정수는 그 위치에 해당하는 스티커의 점수이다. 연속하는 두 정수 사이에는 빈 칸이 하나 있다. 점수는 0보다 크거나 같고, 100보다 작거나 같은 정수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>각 테스트 케이스 마다, 2n개의 스티커 중에서 두 변을 공유하지 않는 스티커 점수의 최댓값을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2\n5\n50 10 100 20 40\n30 50 70 10 60\n7\n10 30 10 50 100 20 40\n20 40 30 50 60 20 80</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">260\n290</code></pre></div>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">t <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    stickers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        row <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        stickers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>\n\n    dp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stickers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stickers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> stickers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> stickers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>첫번째 줄의 첫번째 스티커를 뗐을 경우 바로 옆의 스티커는 사용할 수 없기 때문에 뗄 수 있는 가장 가까운 스티커는 대각선 아래의 스티커이다. 하지만 무조건 대각선의 스티커만 떼는 것은 아니다. 점수에 따라 두 칸 떨어진 대각선에 있는 스티커를 사용하는 경우도 존재하기 때문이다. 이 원리를 이용해서 문제를 풀었다.</p>\n<p>점화식은 각 줄 별로 따로 만들어야한다.</p>\n<p>첫번째 줄 - <code class=\"language-text\">dp[0][m] = max(dp[1][m-1], dp[1][m-2])+ stickers[0][m]</code></p>\n<p>두번째 줄 - <code class=\"language-text\">dp[1][m] = max(dp[0][m-1], dp[0][m-2])+ stickers[1][m]</code></p>\n<p>어느 스티커를 사용했을 때 다음으로 사용할 수 있는 스티커는 한 칸 앞의 대각선에 있는 스티커, 두 칸 앞에 있는 스티커 둘 중 하나이기 때문에, 반대로 어느 스티커를 사용하려고 할 때, 직전에 사용한 스티커는 한칸 뒤 대각선의 스티커, 두 칸 뒤 대각선의 스티커 둘중 하나가 된다.</p>","frontmatter":{"title":"[algorithm]9465 스티커","date":null,"lang":null}}},{"node":{"id":"6a5e46cc-1694-5378-9b40-05a522f40c57","excerpt":"참고: 프로그래머스 문제 설명 정수 n이 매개변수로 주어집니다. 다음 그림과 같이 밑변의 길이와 높이가 n인 삼각형에서 맨 위 꼭짓점부터 반시계 방향으로 달팽이 채우기를 진행한 후, 첫 행부터 마지막 행까지 모두 순서대로 합친 새로운 배열을 return 하도록 solution…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/68645\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>정수 n이 매개변수로 주어집니다. 다음 그림과 같이 밑변의 길이와 높이가 n인 삼각형에서 맨 위 꼭짓점부터 반시계 방향으로 달팽이 채우기를 진행한 후, 첫 행부터 마지막 행까지 모두 순서대로 합친 새로운 배열을 return 하도록 solution 함수를 완성해주세요.</p>\n<p><img src=\"https://grepp-programmers.s3.ap-northeast-2.amazonaws.com/files/production/e1e53b93-dcdf-446f-b47f-e8ec1292a5e0/examples.png\" alt=\"examples.png\"></p>\n<hr>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>n은 1 이상 1,000 이하입니다.</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td><code class=\"language-text\">[1,2,9,3,10,8,4,5,6,7]</code></td>\n</tr>\n<tr>\n<td>5</td>\n<td><code class=\"language-text\">[1,2,12,3,13,11,4,14,15,10,5,6,7,8,9]</code></td>\n</tr>\n<tr>\n<td>6</td>\n<td><code class=\"language-text\">[1,2,15,3,16,14,4,17,21,13,5,18,19,20,12,6,7,8,9,10,11]</code></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 삼각형 형태의 리스트 temp[0] = 1개, temp[1] = 2개, temp[2] = 3개...</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>cnt <span class=\"token keyword\">for</span> cnt <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token comment\"># 방향이 바뀌는 패턴을 넣어준 리스트 n, n-1, n-2... 패턴으로 방향이 바뀌고, 3이 한바퀴</span>\n    count <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>num <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 진행 방향에 따른 인덱스가 바뀌는 패턴을 dict형에 저장</span>\n    move <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'down'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'right'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'up'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    y <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\t<span class=\"token comment\"># 삼각형 배열에서 패턴을 가지고 회전하면서 값을 넣어줄 인덱스</span>\n    number <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\t<span class=\"token comment\"># 리스트에 들어갈 숫자</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> cnt <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                dire <span class=\"token operator\">=</span> <span class=\"token string\">'down'</span>\n            <span class=\"token keyword\">elif</span> i <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                dire <span class=\"token operator\">=</span> <span class=\"token string\">'right'</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                dire <span class=\"token operator\">=</span> <span class=\"token string\">'up'</span>\n            x <span class=\"token operator\">+=</span> move<span class=\"token punctuation\">[</span>dire<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            y <span class=\"token operator\">+=</span> move<span class=\"token punctuation\">[</span>dire<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            temp<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> number\n            number <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> temp<span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">+=</span> t\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/53068706/107882599-8f1a2980-6f2d-11eb-9da6-8c5133224cf8.jpg\" alt=\"snail_1\" style=\"zoom:33%;\">\n<p>회전하는 인덱스의 패턴을 알아내어 삼각형을 달팽이 형태로 돌 수 있게 만들었다. 회전하는 형태로 만들어주기 위해 어떤 방향으로 움직일지, 그 방향을 어떻게, 언제 바꿔줄지를 생각해야했다.</p>\n<p>어떤 방향으로 움직일지 찾아내는 것은 직선으로 움직이기 때문에 알아내기 어렵지 않았다. 이동은 크게 아래로 이동, 오른쪽으로 이동, 대각선 위로 이동 이렇게 세가지로 나뉜다. 어떻게 이동하는지 패턴을 살펴보면 [1, 0], [0, 1], [-1, -1]으로 움직인다는 것을 알 수 있다.(그림 참조) 그리고 방향을 바꿔주기 위해 딕셔너리에 이동방향의 키워드를 key로 가지는 리스트를 넣어주었다.</p>\n<p>방향을 바꿔주는 타이밍은 방향이 바뀌는 패턴이 n, n-1, n-2, n-3…1의 형태를 가진다는 것과 한바퀴가 3개의 패턴을 가지고 반복된다는 것을 이용하였다. 리스트의 인덱스에 나머지 연산을 사용하여 0일 때 n만큼 이동한 후, 1일 때 방향을 바뀌어 n-1만큼 이동하고, 2일 때 n-2를 이동, 다시 0일 때 n-3만큼 이동… 을 반복했고 최종적으로 인덱스가 회전하는 형태를 구현할 수 있었다.</p>","frontmatter":{"title":"[algorithm]level2 소수 찾기","date":null,"lang":null}}},{"node":{"id":"e3df1d6a-00f0-5b31-94a9-b080042784ba","excerpt":"Breadth First Search 줄여서 BFS로 쓰고 한국어로 너비우선탐색. 너비 우선 탐색은 트리나 그래프를 방문 또는 탐색하는 방법이다. 탐색 방법은 다음과 같다. 루트에서 시작한다.0 자식 노드들을 1에 저장한다.…","html":"<p>Breadth First Search 줄여서 BFS로 쓰고 한국어로 너비우선탐색.</p>\n<p>너비 우선 탐색은 트리나 그래프를 방문 또는 탐색하는 방법이다. 탐색 방법은 다음과 같다.</p>\n<ol>\n<li>루트에서 시작한다.0</li>\n<li>자식 노드들을 1에 저장한다.</li>\n<li>1에 저장된 노드들을 차례로 방문한다. 또한 각각의 자식들을 2에 저장한다.</li>\n<li>2에 저장된 노드들을 차례로 방문한다. 또한 각각의 자식들을 3에 저장한다.</li>\n<li>위의 과정을 반복한다.</li>\n<li>모든 노드를 방문하면 탐색을 마친다.</li>\n</ol>\n<p>아래의 움짤을 보면, DFS는 갈림길에서 하나의 길로 들어서서 막다른 길이 나올 때까지 깊게 탐색을 하는 것을 볼 수 있고, BFS는 갈림길에 연결되어 있는 모든 길을 한번씩 탐색한 뒤 다시 연결되어 있는 모든 길을 넓게 탐색하는 것을 볼 수 있다.</p>\n<p><img src=\"https://ww.namu.la/s/1fe9246903b78fae07577b243a0b22791e02cb39640d5cbaae10d9849343b4ea6f162a9a677a5892fbf7819abd4ef7221ebd3608849cfb66793411fb5e643951806167bddcbbdc32f55e7dd09949c27eca5a094c2eac40e93418991b4a305439\" alt=\"external/blog.ha...\"></p>\n<p>DFS와의 가장 큰 차이로, 여러 갈래 중 무한한 길이를 가지는 경로가 존재하고 탐색 목표가 다른 경로에 존재하는 경우 DFS로 탐색할 시에는 무한한 길이의 경로에서 영원히 종료하지 못하지만, BFS의 경우는 모든 경로를 통시에 진행하기 떄문에 탐색이 가능하다는 특징이 있다. 때문에 DFS에서는 너무 깊게 뻗어나가는 것을 막기 위해 때때로 limit을 걸어두는 것이다.</p>\n<p>또한 BFS는 한 갈림길에서 연결되는 모든 길을 한번씩 탐색하기 때문에 가중치가 없는 그래프(모든 간선에 주는 가중치가 같다는 말, 가중치가 있는 그래프에서 최단거리 찾기는 다익스트라 알고리즘)에서는 시작점에서 끝점까지의 최간경로를 알아낼 수 있다. 위 움짤에서 BFS의 탐색 순서를 살펴볼 때 1번 노드에서 직접 연결된 곳은 2번, 3번, 4번 노드이다. 여기 있는 모든 경로의 길이를 1이라고 한다면, 1번에서 2번, 3번, 4번 노드까지의 길이는 1이다. 똑같은 방법으로 모든 노드 사이의 거리를 구할 수 있다. 따라서 시작점과 끝점이 주어진다면 주어진 그래프(네트워크)에서 최단 경로를 알아낼 수 있다.</p>\n<h3 id=\"소스-코드로의-구현\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4-%EC%BD%94%EB%93%9C%EB%A1%9C%EC%9D%98-%EA%B5%AC%ED%98%84\" aria-label=\"소스 코드로의 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스 코드로의 구현</h3>\n<p>재귀 호출을 이용하여 소스 코드를 구현하는 DFS와는 달리 BFS는 자료구조 Queue를 사용하는 경우가 일반적이다. 배열에서 사용하는 경우, 방향 데이터를 이용하여 배열의 시작점에서 범위를 넓혀 가면서 탐색하는 것이다.</p>\n<p>출처: 나무위키</p>","frontmatter":{"title":"[algorithm]너비우선탐색(BFS)란","date":null,"lang":null}}},{"node":{"id":"661151f0-2b7f-5ee2-9ce7-fbd7ee054cdd","excerpt":"참고: 프로그래머스 문제 설명 IT…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/67257\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>IT 벤처 회사를 운영하고 있는 <code class=\"language-text\">라이언</code>은 매년 사내 해커톤 대회를 개최하여 우승자에게 상금을 지급하고 있습니다.\n이번 대회에서는 우승자에게 지급되는 상금을 이전 대회와는 다르게 다음과 같은 방식으로 결정하려고 합니다.\n해커톤 대회에 참가하는 모든 참가자들에게는 숫자들과 3가지의 연산문자(<code class=\"language-text\">+, -, *</code>) 만으로 이루어진 연산 수식이 전달되며, 참가자의 미션은 전달받은 수식에 포함된 연산자의 우선순위를 자유롭게 재정의하여 만들 수 있는 가장 큰 숫자를 제출하는 것입니다.\n단, 연산자의 우선순위를 새로 정의할 때, 같은 순위의 연산자는 없어야 합니다. 즉, <code class=\"language-text\">+</code> > <code class=\"language-text\">-</code> > <code class=\"language-text\">*</code> 또는 <code class=\"language-text\">-</code> > <code class=\"language-text\">*</code> > <code class=\"language-text\">+</code> 등과 같이 연산자 우선순위를 정의할 수 있으나 <code class=\"language-text\">+,*</code> > <code class=\"language-text\">-</code> 또는 <code class=\"language-text\">*</code> > <code class=\"language-text\">+,-</code>처럼 2개 이상의 연산자가 동일한 순위를 가지도록 연산자 우선순위를 정의할 수는 없습니다. 수식에 포함된 연산자가 2개라면 정의할 수 있는 연산자 우선순위 조합은 2! = 2가지이며, 연산자가 3개라면 3! = 6가지 조합이 가능합니다.\n만약 계산된 결과가 음수라면 해당 숫자의 절댓값으로 변환하여 제출하며 제출한 숫자가 가장 큰 참가자를 우승자로 선정하며, 우승자가 제출한 숫자를 우승상금으로 지급하게 됩니다.</p>\n<p>예를 들어, 참가자 중 <code class=\"language-text\">네오</code>가 아래와 같은 수식을 전달받았다고 가정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"100-200*300-500+20\"</code></pre></div>\n<p>일반적으로 수학 및 전산학에서 약속된 연산자 우선순위에 따르면 더하기와 빼기는 서로 동등하며 곱하기는 더하기, 빼기에 비해 우선순위가 높아 <code class=\"language-text\">*</code> > <code class=\"language-text\">+,-</code> 로 우선순위가 정의되어 있습니다.\n대회 규칙에 따라 <code class=\"language-text\">+</code> > <code class=\"language-text\">-</code> > <code class=\"language-text\">*</code> 또는 <code class=\"language-text\">-</code> > <code class=\"language-text\">*</code> > <code class=\"language-text\">+</code> 등과 같이 연산자 우선순위를 정의할 수 있으나 <code class=\"language-text\">+,*</code> > <code class=\"language-text\">-</code> 또는 <code class=\"language-text\">*</code> > <code class=\"language-text\">+,-</code> 처럼 2개 이상의 연산자가 동일한 순위를 가지도록 연산자 우선순위를 정의할 수는 없습니다.\n수식에 연산자가 3개 주어졌으므로 가능한 연산자 우선순위 조합은 3! = 6가지이며, 그 중 <code class=\"language-text\">+</code> > <code class=\"language-text\">-</code> > <code class=\"language-text\">*</code> 로 연산자 우선순위를 정한다면 결괏값은 22,000원이 됩니다.\n반면에 <code class=\"language-text\">*</code> > <code class=\"language-text\">+</code> > <code class=\"language-text\">-</code> 로 연산자 우선순위를 정한다면 수식의 결괏값은 -60,420 이지만, 규칙에 따라 우승 시 상금은 절댓값인 60,420원이 됩니다.</p>\n<p>참가자에게 주어진 연산 수식이 담긴 문자열 expression이 매개변수로 주어질 때, 우승 시 받을 수 있는 가장 큰 상금 금액을 return 하도록 solution 함수를 완성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>[제한사항]</strong></h5>\n<ul>\n<li>expression은 길이가 3 이상 100 이하인 문자열입니다.</li>\n<li>\n<p>expression은 공백문자, 괄호문자 없이 오로지 숫자와 3가지의 연산자(</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">+, -, *</code></pre></div>\n<p>) 만으로 이루어진 올바른 중위표기법(연산의 두 대상 사이에 연산기호를 사용하는 방식)으로 표현된 연산식입니다. 잘못된 연산식은 입력으로 주어지지 않습니다.</p>\n<ul>\n<li>즉, <code class=\"language-text\">\"402+-561*\"</code>처럼 잘못된 수식은 올바른 중위표기법이 아니므로 주어지지 않습니다.</li>\n</ul>\n</li>\n<li>\n<p>expression의 피연산자(operand)는 0 이상 999 이하의 숫자입니다.</p>\n<ul>\n<li>즉, <code class=\"language-text\">\"100-2145*458+12\"</code>처럼 999를 초과하는 피연산자가 포함된 수식은 입력으로 주어지지 않습니다.</li>\n<li><code class=\"language-text\">\"-56+100\"</code>처럼 피연산자가 음수인 수식도 입력으로 주어지지 않습니다.</li>\n</ul>\n</li>\n<li>expression은 적어도 1개 이상의 연산자를 포함하고 있습니다.</li>\n<li>연산자 우선순위를 어떻게 적용하더라도, expression의 중간 계산값과 최종 결괏값은 절댓값이 263 - 1 이하가 되도록 입력이 주어집니다.</li>\n<li>같은 연산자끼리는 앞에 있는 것의 우선순위가 더 높습니다.</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예</strong></h5>\n<table>\n<thead>\n<tr>\n<th>expression</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">\"100-200*300-500+20\"</code></td>\n<td>60420</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\"50*6-3*2\"</code></td>\n<td>300</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n<span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> permutations\n<span class=\"token keyword\">from</span> copy <span class=\"token keyword\">import</span> deepcopy\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># 숫자와 연산자를 나눠서 express_list에 넣어준다</span>\n    express_list <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    num <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> ex <span class=\"token keyword\">in</span> expression<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> ex <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">+=</span> ex\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            express_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n            num <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n            express_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        express_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 연산자의 우선순위에 때라 나올 수 있는 순열을 구한다</span>\n    orders <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>permutations<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 위에서 구한 우선순위들에 따라 모든 값을 계산해본다</span>\n    price <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> order <span class=\"token keyword\">in</span> orders<span class=\"token punctuation\">:</span>\n        temp <span class=\"token operator\">=</span> deepcopy<span class=\"token punctuation\">(</span>express_list<span class=\"token punctuation\">)</span>\n        temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 1</span>\n        <span class=\"token keyword\">for</span> o <span class=\"token keyword\">in</span> order<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">while</span> temp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 2</span>\n                <span class=\"token keyword\">if</span> temp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">:</span>\n                    temp<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    temp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>o<span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> answer<span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 3</span>\n            answer <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ol>\n<li>인덱스 0에는 연산자만 들어있고 숫자를 temp[1]과 temp[-1]에 있게 만들기 위해 제일 앞의 숫자를 pop해서 뒤에 append해주었다. 이렇게 하면 인덱스 0에 숫자가 들어가면 연산이 끝났음을 알 수 있음</li>\n<li>\n<p>연산 순서에 맞는 모든 연산을 수행한다. 순서에 맞는 연산자를 만나면 연산자를 pop한다. 그러면 연산을 할 숫자를 맨 앞과 맨 뒤에 존재하게 되므로, 맨 뒤 숫자와 맨 앞 숫자를 연산하여 -1에 넣어준다.</p>\n<p>만약 순서에 맞지 않은 연산자일 경우에는 연산자와 숫자를 pop해서 맨뒤에 append 해준다.</p>\n<p>while이 다 끝나면 다음 연산에서 0에 연산자가 들어갈 수 있게 다시한번 pop과 append함</p>\n<p>연산이 다 끝나면 temp는 temp[0]에는 연산의 결과값이 들어있는 길이 1의 리스트가 된다.</p>\n</li>\n<li>answer와 temp[0]을 비교해서 answer에 항상 최댓값만 들어갈 수 있게 해준다.</li>\n</ol>","frontmatter":{"title":"[algorithm]level2 수식 최대화","date":null,"lang":null}}},{"node":{"id":"93279808-ec29-55e7-a922-16c6f4518c6d","excerpt":"참고: 프로그래머스 문제 설명 효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는\n(1칸, 1칸, 1칸, 1칸)\n(1칸, 2칸, 1칸)\n(1칸, 1칸, 2칸)\n(2칸, 1칸, 1칸)\n(2칸, 2칸)\n의…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12914\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는\n(1칸, 1칸, 1칸, 1칸)\n(1칸, 2칸, 1칸)\n(1칸, 1칸, 2칸)\n(2칸, 1칸, 1칸)\n(2칸, 2칸)\n의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 예를 들어 4가 입력된다면, 5를 return하면 됩니다.</p>\n<h5 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h5>\n<ul>\n<li>n은 1 이상, 2000 이하인 정수입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>5</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1\n위에서 설명한 내용과 같습니다.</p>\n<p>입출력 예 #2\n(2칸, 1칸)\n(1칸, 2칸)\n(1칸, 1칸, 1칸)\n총 3가지 방법으로 멀리 뛸 수 있습니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1234567</span>\n    <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>다이나믹프로그래밍 알고리즘으로 풀었다.</p>\n<ul>\n<li>\n<p>점화식</p>\n<p><code class=\"language-text\">dp[n] = dp[n-1] + dp[n-2]</code></p>\n<p>n에 도달하는데는 여러가지 경우가 나올 수 있지만 직전의 움직임만을 따지면 1칸 전(n-1)에서 왔거나 2칸 전(n-2)에서 왔거나 두 가지의 경우만 존재한다.</p>\n</li>\n<li>\n<p>점화식을 구한 이후는 쉽다.</p>\n<p>n+1 크기의 dp리스트를 생성하고, <code class=\"language-text\">dp[0] = 1</code>, <code class=\"language-text\">dp[1] = 1</code>을 초기값으로 설정해주었고, 그 후에 점화식을 사용해서 2부터 계산해나가면서 n까지 가는 방법의 경우의 수를 구할 수 있었다.</p>\n</li>\n</ul>","frontmatter":{"title":"[algorithm]level3 멀리 뛰기","date":null,"lang":null}}},{"node":{"id":"ab2590d9-b482-5822-b259-a7929ada9682","excerpt":"출처: BOJ 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 128 MB 54294 24955 17220 44.45…","html":"<p>출처: <a href=\"https://www.acmicpc.net/problem/2606\">BOJ</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">54294</td>\n<td align=\"left\">24955</td>\n<td align=\"left\">17220</td>\n<td align=\"left\">44.451%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>신종 바이러스인 웜 바이러스는 네트워크를 통해 전파된다. 한 컴퓨터가 웜 바이러스에 걸리면 그 컴퓨터와 네트워크 상에서 연결되어 있는 모든 컴퓨터는 웜 바이러스에 걸리게 된다.</p>\n<p>예를 들어 7대의 컴퓨터가 &#x3C;그림 1>과 같이 네트워크 상에서 연결되어 있다고 하자. 1번 컴퓨터가 웜 바이러스에 걸리면 웜 바이러스는 2번과 5번 컴퓨터를 거쳐 3번과 6번 컴퓨터까지 전파되어 2, 3, 5, 6 네 대의 컴퓨터는 웜 바이러스에 걸리게 된다. 하지만 4번과 7번 컴퓨터는 1번 컴퓨터와 네트워크상에서 연결되어 있지 않기 때문에 영향을 받지 않는다.</p>\n<p><img src=\"https://www.acmicpc.net/upload/images/zmMEZZ8ioN6rhCdHmcIT4a7.png\" alt=\"img\"></p>\n<p>어느 날 1번 컴퓨터가 웜 바이러스에 걸렸다. 컴퓨터의 수와 네트워크 상에서 서로 연결되어 있는 정보가 주어질 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 출력하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에는 컴퓨터의 수가 주어진다. 컴퓨터의 수는 100 이하이고 각 컴퓨터에는 1번 부터 차례대로 번호가 매겨진다. 둘째 줄에는 네트워크 상에서 직접 연결되어 있는 컴퓨터 쌍의 수가 주어진다. 이어서 그 수만큼 한 줄에 한 쌍씩 네트워크 상에서 직접 연결되어 있는 컴퓨터의 번호 쌍이 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>1번 컴퓨터가 웜 바이러스에 걸렸을 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 첫째 줄에 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">7\n6\n1 2\n2 3\n1 5\n5 2\n5 6\n4 7</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4</code></pre></div>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\nnumber <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlinks_number <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nnetwork <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>links_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    network<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    network<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    zombie <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\n        parent <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> link <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>network<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> link <span class=\"token keyword\">and</span> i <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> zombie<span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 중복된 링크를 방문하지 않기 위해 zombie 리스트를 만들어줌</span>\n                network<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                network<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n                zombie<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> zombie\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>bfs<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>너비우선탐색 알고리즘을 사용했다. 때문에 큐를 사용해야했고, 파이썬의 덱을 사용하여 구현하였다.</p>\n<p>맨 처음엔 큐에 출발하는 지점의 컴퓨터 번호를 넣었고 그 다음은 출발컴퓨터를 pop하고 출발컴퓨터에 연결되어있는 모든 컴퓨터들을 넣고 연결된 기록을 지우는 식으로 알고리즘을 짰다. 큐가 완전히 빌 때까지 돌고 큐가 방문한 모든 컴퓨터의 수를 계산하면 결과가 나오는 방식이다. 그런데 하다보니 아직 지워지지 않았지만 지워질 예정인 연결에 대해서는 중복으로 계산되는게 확인되었고, 이미 감염된 컴퓨터는 한번 더 감염시키지 않기 위해 zombie 리스트를 새로 만들어서 중복을 관리해주었다.</p>\n<p>이런 방식 말고 더 간단히 다르게 하는 방법도 있을 것 같긴한데.. 잘 모르겠다…</p>","frontmatter":{"title":"[algorithm]2606번 바이러스","date":null,"lang":null}}},{"node":{"id":"12560a14-f266-5a71-973c-8a72cf6986bc","excerpt":"{% raw %}\n참고: 프로그래머스 문제 설명 셀수있는 수량의 순서있는 열거 또는 어떤 순서를 따르는 요소들의 모음을 튜플(tuple)이라고 합니다. n개의 요소를 가진 튜플을 n-튜플(n-tuple)이라고 하며, 다음과 같이 표현할 수 있습니다. (a1, a2, a3, …, an…","html":"<p>{% raw %}\n참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/64065\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>셀수있는 수량의 순서있는 열거 또는 어떤 순서를 따르는 요소들의 모음을 튜플(tuple)이라고 합니다. n개의 요소를 가진 튜플을 n-튜플(n-tuple)이라고 하며, 다음과 같이 표현할 수 있습니다.</p>\n<ul>\n<li>(a1, a2, a3, …, an)</li>\n</ul>\n<p>튜플은 다음과 같은 성질을 가지고 있습니다.</p>\n<ol>\n<li>중복된 원소가 있을 수 있습니다. ex : (2, 3, 1, 2)</li>\n<li>원소에 정해진 순서가 있으며, 원소의 순서가 다르면 서로 다른 튜플입니다. ex : (1, 2, 3) ≠ (1, 3, 2)</li>\n<li>튜플의 원소 개수는 유한합니다.</li>\n</ol>\n<p>원소의 개수가 n개이고, <strong>중복되는 원소가 없는</strong> 튜플 <code class=\"language-text\">(a1, a2, a3, ..., an)</code>이 주어질 때(단, a1, a2, …, an은 자연수), 이는 다음과 같이 집합 기호 ’{’, ’}‘를 이용해 표현할 수 있습니다.</p>\n<ul>\n<li>{{a1}, {a1, a2}, {a1, a2, a3}, {a1, a2, a3, a4}, … {a1, a2, a3, a4, …, an}}</li>\n</ul>\n<p>예를 들어 튜플이 (2, 1, 3, 4)인 경우 이는</p>\n<ul>\n<li>{{2}, {2, 1}, {2, 1, 3}, {2, 1, 3, 4}}</li>\n</ul>\n<p>와 같이 표현할 수 있습니다. 이때, 집합은 원소의 순서가 바뀌어도 상관없으므로</p>\n<ul>\n<li>{{2}, {2, 1}, {2, 1, 3}, {2, 1, 3, 4}}</li>\n<li>{{2, 1, 3, 4}, {2}, {2, 1, 3}, {2, 1}}</li>\n<li>{{1, 2, 3}, {2, 1}, {1, 2, 4, 3}, {2}}</li>\n</ul>\n<p>는 모두 같은 튜플 (2, 1, 3, 4)를 나타냅니다.</p>\n<p>특정 튜플을 표현하는 집합이 담긴 문자열 s가 매개변수로 주어질 때, s가 표현하는 튜플을 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>\n<h4 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>[제한사항]</strong></h4>\n<ul>\n<li>s의 길이는 5 이상 1,000,000 이하입니다.</li>\n<li>s는 숫자와 ’{’, ’}’, ’,’ 로만 이루어져 있습니다.</li>\n<li>숫자가 0으로 시작하는 경우는 없습니다.</li>\n<li>s는 항상 중복되는 원소가 없는 튜플을 올바르게 표현하고 있습니다.</li>\n<li>s가 표현하는 튜플의 원소는 1 이상 100,000 이하인 자연수입니다.</li>\n<li>return 하는 배열의 길이가 1 이상 500 이하인 경우만 입력으로 주어집니다.</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>[입출력 예]</strong></h5>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">\"{{2},{2,1},{2,1,3},{2,1,3,4}}\"</code></td>\n<td>[2, 1, 3, 4]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\"{{1,2,3},{2,1},{1,2,4,3},{2}}\"</code></td>\n<td>[2, 1, 3, 4]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\"{{20,111},{111}}\"</code></td>\n<td>[111, 20]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\"{{123}}\"</code></td>\n<td>[123]</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">\"{{4,2,3},{3},{2,3,4,1},{2,3}}\"</code></td>\n<td>[3, 2, 4, 1]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예에-대한-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88%EC%97%90-%EB%8C%80%ED%95%9C-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예에 대한 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예에 대한 설명</strong></h5>\n<h5 id=\"입출력-예-1\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-1\" aria-label=\"입출력 예 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예 #1</strong></h5>\n<p>문제 예시와 같습니다.</p>\n<h5 id=\"입출력-예-2\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-2\" aria-label=\"입출력 예 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예 #2</strong></h5>\n<p>문제 예시와 같습니다.</p>\n<h5 id=\"입출력-예-3\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-3\" aria-label=\"입출력 예 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예 #3</strong></h5>\n<p>(111, 20)을 집합 기호를 이용해 표현하면 {{111}, {111,20}}이 되며, 이는 {{20,111},{111}}과 같습니다.</p>\n<h5 id=\"입출력-예-4\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-4\" aria-label=\"입출력 예 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예 #4</strong></h5>\n<p>(123)을 집합 기호를 이용해 표현하면 {{123}} 입니다.</p>\n<h5 id=\"입출력-예-5\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-5\" aria-label=\"입출력 예 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예 #5</strong></h5>\n<p>(3, 2, 4, 1)을 집합 기호를 이용해 표현하면 {{3},{3,2},{3,2,4},{3,2,4,1}}이 되며, 이는 {{4,2,3},{3},{2,3,4,1},{2,3}}과 같습니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    s1 <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"},{\"</span><span class=\"token punctuation\">)</span>\n    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    s1<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> answer<span class=\"token punctuation\">:</span>\n                answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ol>\n<li>튜플이 (1,2,3,4)라면 집합은 {1}, {1,2}, {1,2,3},{1,2,3,4}가 주어지게 된다. 저렇게만 주어지면 제일 긴 집합을 찾아서 리턴하면 되겠지만 집합은 순서에 상관이 없다는 조건이 있기 때문에 {2,1}, {3,1,2}, {1}, {4,2,3,1}로 주어질 수 있기 때문에 불가능하다. 때문에 주어진 모든 집합을 이용해야 숫자와 그 숫자가 있어야하는 위치를 알아낼 수 있다.</li>\n<li>\n<p>우선 집합 문자열을 집합별로, 숫자별로 나눠주었다.</p>\n<p>앞뒤에 있는 <code class=\"language-text\">{{</code>, <code class=\"language-text\">}}</code>을 자르기 위해 슬라이스를 사용해 주었고, 문자열에서 반복되고 있는 <code class=\"language-text\">},{</code>을 기준으로 <code class=\"language-text\">split()</code>함수를 사용하여 각각의 집합을 분리해주었다. <code class=\"language-text\">split()</code>의 반환값은 리스트 자료형이기 때문에 현재 s1에는 <code class=\"language-text\">[['2,1'], ['3,1,2'], ['1'], ['4,2,3,1']]</code> 값이 들어가게 된다.</p>\n<p>그 다음엔 집합에 들어 있는 문자열을 숫자로 나눠주기 위해 다시 한번 <code class=\"language-text\">,</code>을 기준으로 <code class=\"language-text\">split()</code>함수를 사용해 주었다.</p>\n</li>\n<li>\n<p>튜플의 순서는 집합들을 길이 순으로 정렬했을 때 알 수 있으므로 길이순으로 정렬해주었다. <code class=\"language-text\">[[1],[2,1],[3,1,2],[4,2,3,1]]</code></p>\n<p>이 때 길이 순으로 정렬하기 위한 <code class=\"language-text\">key</code> 매개변수를 정의해주지 않으면 리스트의 첫번째 원소를 기준으로 정렬하기 때문에 원하는 결과를 얻지 못한다.</p>\n</li>\n<li>\n<p>정렬된 리스트를 앞에서부터 순서대로 반복문을 돌려 확인하면 해당 인덱스에 들어가야할 값을 알 수 있다.</p>\n<p>인덱스에 들어갈 숫자는 직전 리스트에 존재하지 않는 숫자 -> 이번에 새로 생긴 숫자\n{% endraw %}</p>\n</li>\n</ol>","frontmatter":{"title":"[algorithm]level2 튜플","date":null,"lang":null}}},{"node":{"id":"4d641f4a-7d11-5227-9ae9-c0746d7fdfab","excerpt":"출처: BOJ 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 1 초 192 MB 83086 32225 20505 37.517% 문제 N×M크기의 배열로 표현되는 미로가 있다. 1 0 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 미로에서…","html":"<p>출처: <a href=\"https://www.acmicpc.net/problem/2178\">BOJ</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">1 초</td>\n<td align=\"left\">192 MB</td>\n<td align=\"left\">83086</td>\n<td align=\"left\">32225</td>\n<td align=\"left\">20505</td>\n<td align=\"left\">37.517%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>N×M크기의 배열로 표현되는 미로가 있다.</p>\n<table>\n<thead>\n<tr>\n<th>1</th>\n<th>0</th>\n<th>1</th>\n<th>1</th>\n<th>1</th>\n<th>1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>미로에서 1은 이동할 수 있는 칸을 나타내고, 0은 이동할 수 없는 칸을 나타낸다. 이러한 미로가 주어졌을 때, (1, 1)에서 출발하여 (N, M)의 위치로 이동할 때 지나야 하는 최소의 칸 수를 구하는 프로그램을 작성하시오. 한 칸에서 다른 칸으로 이동할 때, 서로 인접한 칸으로만 이동할 수 있다.</p>\n<p>위의 예에서는 15칸을 지나야 (N, M)의 위치로 이동할 수 있다. 칸을 셀 때에는 시작 위치와 도착 위치도 포함한다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 두 정수 N, M(2 ≤ N, M ≤ 100)이 주어진다. 다음 N개의 줄에는 M개의 정수로 미로가 주어진다. 각각의 수들은 <strong>붙어서</strong> 입력으로 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 지나야 하는 최소의 칸 수를 출력한다. 항상 도착위치로 이동할 수 있는 경우만 입력으로 주어진다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4 6\n101111\n101010\n101011\n111011</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">15</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4 6\n110110\n110110\n111111\n111101</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">9</code></pre></div>\n<h2 id=\"예제-입력-3-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-3-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 3 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 3 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2 25\n1011101110111011101110111\n1110111011101110111011101</code></pre></div>\n<h2 id=\"예제-출력-3-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-3-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 3 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 3 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">38</code></pre></div>\n<h2 id=\"예제-입력-4-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-4-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 4 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 4 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">7 7\n1011111\n1110001\n1000001\n1000001\n1000001\n1000001\n1111111</code></pre></div>\n<h2 id=\"예제-출력-4-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-4-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 4 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 4 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">13</code></pre></div>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n\nn<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmat <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    mat<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nqueue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\n    pos_x<span class=\"token punctuation\">,</span> pos_y <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> move <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> move<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> pos_x\n        y <span class=\"token operator\">=</span> move<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> pos_y\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> y <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n        <span class=\"token keyword\">if</span> mat<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            mat<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">[</span>pos_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pos_y<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>큐를 사용해서 bfs 알고리즘을 구현했고, (0, 0)에서 (n-1, m-1)으로 가는 최단 거리를 구했다.</li>\n<li>출발점인 (0, 0)을 큐에 넣어놓고 상하좌우의 길을 확인하면서 길이 1이면 큐에 넣고 길의 값을 현재값에 +1하는 방식으로 진행하면서 (n-1, m-1)까지 이동했다.</li>\n<li>길의 값이 1인지를 확인하면서 이동하기 때문에 제일 먼저 목적지에 도달했을 경우에만 값이 저장되고(최단거리), 그 후에 도달한 값은 저장되지 않는다.</li>\n</ul>","frontmatter":{"title":"[algorithm]2178 미로탐색","date":null,"lang":null}}},{"node":{"id":"cab8875f-c4ea-580e-a954-3cf2c2c5fe49","excerpt":"참고: 프로그래머스 문제 설명 앞뒤를 뒤집어도 똑같은 문자열을 팰린드롬(palindrome)이라고 합니다.\n문자열 s가 주어질 때, s의 부분문자열(Substring)중 가장 긴 팰린드롬의 길이를 return 하는 solution 함수를 완성해 주세요. 예를들면, 문자열 s…","html":"<p>참고: <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12904\">프로그래머스</a></p>\n<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>앞뒤를 뒤집어도 똑같은 문자열을 팰린드롬(palindrome)이라고 합니다.\n문자열 s가 주어질 때, s의 부분문자열(Substring)중 가장 긴 팰린드롬의 길이를 return 하는 solution 함수를 완성해 주세요.</p>\n<p>예를들면, 문자열 s가 abcdcba이면 7을 return하고 abacde이면 3을 return합니다.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>문자열 s의 길이 : 2,500 이하의 자연수</li>\n<li>문자열 s는 알파벳 소문자로만 구성</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>abcdcba</td>\n<td>7</td>\n</tr>\n<tr>\n<td>abacde</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1\n4번째자리 ‘d’를 기준으로 문자열 s 전체가 팰린드롬이 되므로 7을 return합니다.</p>\n<p>입출력 예 #2\n2번째자리 ‘b’를 기준으로 aba가 팰린드롬이 되므로 3을 return합니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> length <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        start <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        end <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span> end <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            end <span class=\"token operator\">=</span> start <span class=\"token operator\">+</span> length <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> length<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n            start <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></code></pre></div>\n<p>제일 긴 펠린드롬을 찾는 문제이므로 문자열의 길이부터 하나씩 빼면서 해당 길이의 펠린드롬이 문자열에 존재하는지 확인하는 방식으로 문제를 풀었습니다.</p>\n<p>for문이 주어진 s의 길이부터 1씩 빼면서 확인할 길이를 length에 넣어주고, while문에서는 length만큼의 문자열을 잘라서 이 문자열이 펠린드롬인지 아닌지를 확인합니다.</p>\n<p>처음에 slice가 느릴줄알고 문자열을 뒤집지 않고 인덱스로 확인하는 방법도 해보고 여러가지 방법으로 해보면서 시간초과에 허우적댔는데, 도저히 못풀겠어서 검색을 해보니 역정렬 slice로도 풀리는 것을 보고 허무했다.</p>\n<ul>\n<li>slice의 시간복잡도: l[a:b]일 때 O(b-a)</li>\n<li>reverse 시간 복잡도: l.reverse()(== l[::-1]) -> O(n)</li>\n</ul>\n<p>더 효율적으로 푸는 방법도 있긴있지 않을까..?ㅠ 프로그래머스 질문게시판에 역정렬로 못푼다는 식으로 써있었던 것 같은데 내가 잘못봤나보다</p>","frontmatter":{"title":"[algorithm]level3 가장 긴 펠린드롬","date":null,"lang":null}}},{"node":{"id":"adc36a13-18e0-56ea-a120-eb933f749402","excerpt":"문제 설명 n개의 섬 사이에 다리를 건설하는 비용(costs)이 주어질 때, 최소의 비용으로 모든 섬이 서로 통행 가능하도록 만들 때 필요한 최소 비용을 return 하도록 solution…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>n개의 섬 사이에 다리를 건설하는 비용(costs)이 주어질 때, 최소의 비용으로 모든 섬이 서로 통행 가능하도록 만들 때 필요한 최소 비용을 return 하도록 solution을 완성하세요.</p>\n<p>다리를 여러 번 건너더라도, 도달할 수만 있으면 통행 가능하다고 봅니다. 예를 들어 A 섬과 B 섬 사이에 다리가 있고, B 섬과 C 섬 사이에 다리가 있으면 A 섬과 C 섬은 서로 통행 가능합니다.</p>\n<p><strong>제한사항</strong></p>\n<ul>\n<li>섬의 개수 n은 1 이상 100 이하입니다.</li>\n<li>costs의 길이는 <code class=\"language-text\">((n-1) * n) / 2</code>이하입니다.</li>\n<li>임의의 i에 대해, costs[i][0] 와 costs[i][1]에는 다리가 연결되는 두 섬의 번호가 들어있고, costs[i][2]에는 이 두 섬을 연결하는 다리를 건설할 때 드는 비용입니다.</li>\n<li>같은 연결은 두 번 주어지지 않습니다. 또한 순서가 바뀌더라도 같은 연결로 봅니다. 즉 0과 1 사이를 연결하는 비용이 주어졌을 때, 1과 0의 비용이 주어지지 않습니다.</li>\n<li>모든 섬 사이의 다리 건설 비용이 주어지지 않습니다. 이 경우, 두 섬 사이의 건설이 불가능한 것으로 봅니다.</li>\n<li>연결할 수 없는 섬은 주어지지 않습니다.</li>\n</ul>\n<p><strong>입출력 예</strong></p>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>costs</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>[[0,1,1],[0,2,2],[1,2,5],[1,3,1],[2,3,8]]</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<p><strong>입출력 예 설명</strong></p>\n<p>costs를 그림으로 표현하면 다음과 같으며, 이때 초록색 경로로 연결하는 것이 가장 적은 비용으로 모두를 통행할 수 있도록 만드는 방법입니다.</p>\n<p><img src=\"https://grepp-programmers.s3.amazonaws.com/files/production/13e2952057/f2746a8c-527c-4451-9a73-42129911fe17.png\" alt=\"image.png\"></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> costs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">union</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> cycle<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n        y <span class=\"token operator\">=</span> cycle<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">:</span>\n            cycle<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x\n            <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> c <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>cycle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> y<span class=\"token punctuation\">:</span>\n                    cycle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            cycle<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y\n            <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> c <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>cycle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> x<span class=\"token punctuation\">:</span>\n                    cycle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y\n\n\n    costs<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    cycle <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> cost <span class=\"token keyword\">in</span> costs<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> cycle<span class=\"token punctuation\">[</span>cost<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> cycle<span class=\"token punctuation\">[</span>cost<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            union<span class=\"token punctuation\">(</span>cost<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cost<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            answer <span class=\"token operator\">+=</span> cost<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\"># print(cycle)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li><a href=\"https://awesomeroo.tistory.com/87\">크루스칼 알고리즘</a>을 사용해서 품</li>\n<li>비용순서을 기준으로 오름차순으로 costs배열을 정렬한 후, 비용이 제일 낮은 다리부터 순서대로 사이클이 되지 않고 트리 형태를 만들도록 확인하며 연결하는 방식</li>\n<li>자신이 연결된 트리의 루트를 저장하는 cycle이라는 리스트를 만들고 초기값은 자신의 값을 넣어줌</li>\n<li>반복문을 돌면서 연결할 두 섬의 루트가 다르면 다리(트리)를 연결하기 위해 서로의 루트를 비교하고 새로운 루트로 업데이트 시켜줌(<code class=\"language-text\">union</code>)</li>\n</ul>","frontmatter":{"title":"[algorithm]level3 섬 연결하기","date":null,"lang":null}}},{"node":{"id":"4f15e1e0-795f-5004-bd56-943287e8eef5","excerpt":"문제 설명 하드디스크는 한 번에 하나의 작업만 수행할 수 있습니다. 디스크 컨트롤러를 구현하는 방법은 여러 가지가 있습니다. 가장 일반적인 방법은 요청이 들어온 순서대로 처리하는 것입니다. 예를들어 와 같은 요청이 들어왔습니다. 이를 그림으로 표현하면 아래와 같습니다.\nScreen…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>하드디스크는 한 번에 하나의 작업만 수행할 수 있습니다. 디스크 컨트롤러를 구현하는 방법은 여러 가지가 있습니다. 가장 일반적인 방법은 요청이 들어온 순서대로 처리하는 것입니다.</p>\n<p>예를들어</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 0ms 시점에 3ms가 소요되는 A작업 요청\n- 1ms 시점에 9ms가 소요되는 B작업 요청\n- 2ms 시점에 6ms가 소요되는 C작업 요청</code></pre></div>\n<p>와 같은 요청이 들어왔습니다. 이를 그림으로 표현하면 아래와 같습니다.\n<img src=\"https://grepp-programmers.s3.amazonaws.com/files/production/b68eb5cec6/38dc6a53-2d21-4c72-90ac-f059729c51d5.png\" alt=\"Screen Shot 2018-09-13 at 6.34.58 PM.png\"></p>\n<p>한 번에 하나의 요청만을 수행할 수 있기 때문에 각각의 작업을 요청받은 순서대로 처리하면 다음과 같이 처리 됩니다.\n<img src=\"https://grepp-programmers.s3.amazonaws.com/files/production/5e677b4646/90b91fde-cac4-42c1-98b8-8f8431c52dcf.png\" alt=\"Screen Shot 2018-09-13 at 6.38.52 PM.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- A: 3ms 시점에 작업 완료 (요청에서 종료까지 : 3ms)\n- B: 1ms부터 대기하다가, 3ms 시점에 작업을 시작해서 12ms 시점에 작업 완료(요청에서 종료까지 : 11ms)\n- C: 2ms부터 대기하다가, 12ms 시점에 작업을 시작해서 18ms 시점에 작업 완료(요청에서 종료까지 : 16ms)</code></pre></div>\n<p>이 때 각 작업의 요청부터 종료까지 걸린 시간의 평균은 10ms(= (3 + 11 + 16) / 3)가 됩니다.</p>\n<p>하지만 A → C → B 순서대로 처리하면\n<img src=\"https://grepp-programmers.s3.amazonaws.com/files/production/9eb7c5a6f1/a6cff04d-86bb-4b5b-98bf-6359158940ac.png\" alt=\"Screen Shot 2018-09-13 at 6.41.42 PM.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- A: 3ms 시점에 작업 완료(요청에서 종료까지 : 3ms)\n- C: 2ms부터 대기하다가, 3ms 시점에 작업을 시작해서 9ms 시점에 작업 완료(요청에서 종료까지 : 7ms)\n- B: 1ms부터 대기하다가, 9ms 시점에 작업을 시작해서 18ms 시점에 작업 완료(요청에서 종료까지 : 17ms)</code></pre></div>\n<p>이렇게 A → C → B의 순서로 처리하면 각 작업의 요청부터 종료까지 걸린 시간의 평균은 9ms(= (3 + 7 + 17) / 3)가 됩니다.</p>\n<p>각 작업에 대해 [작업이 요청되는 시점, 작업의 소요시간]을 담은 2차원 배열 jobs가 매개변수로 주어질 때, 작업의 요청부터 종료까지 걸린 시간의 평균을 가장 줄이는 방법으로 처리하면 평균이 얼마가 되는지 return 하도록 solution 함수를 작성해주세요. (단, 소수점 이하의 수는 버립니다)</p>\n<h5 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h5>\n<ul>\n<li>jobs의 길이는 1 이상 500 이하입니다.</li>\n<li>jobs의 각 행은 하나의 작업에 대한 [작업이 요청되는 시점, 작업의 소요시간] 입니다.</li>\n<li>각 작업에 대해 작업이 요청되는 시간은 0 이상 1,000 이하입니다.</li>\n<li>각 작업에 대해 작업의 소요시간은 1 이상 1,000 이하입니다.</li>\n<li>하드디스크가 작업을 수행하고 있지 않을 때에는 먼저 요청이 들어온 작업부터 처리합니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>jobs</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[0, 3], [1, 9], [2, 6]]</td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>문제에 주어진 예와 같습니다.</p>\n<ul>\n<li>0ms 시점에 3ms 걸리는 작업 요청이 들어옵니다.</li>\n<li>1ms 시점에 9ms 걸리는 작업 요청이 들어옵니다.</li>\n<li>2ms 시점에 6ms 걸리는 작업 요청이 들어옵니다.</li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> heapq\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>jobs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> now <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n    start <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    cnt <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>jobs<span class=\"token punctuation\">)</span>\n\n    heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 모든 작업이 종료될 때까지 반복</span>\n    <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> cnt<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> job <span class=\"token keyword\">in</span> jobs<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># start와 now 사이에서 시작하는 모든 일을 heap에 담음</span>\n            <span class=\"token keyword\">if</span> start <span class=\"token operator\">&lt;</span> job<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> now<span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 작업 수행시간을 기준으로 오름차순 정렬</span>\n                heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>job<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> heap<span class=\"token punctuation\">:</span>\n            current <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span>\n            start <span class=\"token operator\">=</span> now\n            now <span class=\"token operator\">+=</span> current<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> current<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            now <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer<span class=\"token operator\">//</span>cnt</code></pre></div>\n<ul>\n<li>처음애는 작업 시간별로 정렬을 하는 것만 생각하고 연달아서 작업을 진행하는 방향으로 풀면 되겠다고만 생각했어서 좀 애를 먹었다. 좀 찾아보니 작업이 요청되는 시간이 이전 작업이 종료되는 시간보다 늦을 수도 있다는 것과 요청시작 시점에 따라서 작업 시작 시간순으로 정렬하는 것만이 답이 아니라는 그런 복잡한 것을을 생각하지 못했다는 것을 알았다… 다들 어떻게 이런 것들을 고려하고 풀고 있는거지</li>\n<li>\n<p>현재 시점을 담을 변수 now: 0</p>\n<p>다음 범위를 체크할 때 직전에 체크한 범위가 겹치지 않도록 하기 위한 변수 start: -1</p>\n<p>현재 처리한 작업의 개수를 나타내는 i: 0</p>\n</li>\n<li>요청시간이 가장 빠른 작업을 만날 때까지 now를 늘려가면서 작업을 찾는다.</li>\n<li>작업이 존재할 경우 heap에 넣고 start에 now를 넣어주어 다음 요청시간을 찾을 수 있게 하고(현재 고려한 작업은 패스도), now에 작업이 처리되는데 걸리는 시간을 더해주어 다음 작업이 시작될 수 있는 시간을 계산해준다.</li>\n<li>다음 작업은 start와 now 사이에 요청이 온 작업 중 하나가 되고 작업이 여러개일 경우에는 시작시간이 같으므로 작업시간이 짧은 작업을 먼저 수행하게 된다(최소 힙)</li>\n<li>만약 start와 now 사이에 요청이 온 작업이 없다면, now에 1을 더해주면서 처리할 작업을 찾는다.</li>\n<li>모든 작업이 처리되고 나면 answer((작업이 끝난 시간 - 요청시간)들의 합)에 작업의 수를 나눠주어 답을 계산</li>\n</ul>","frontmatter":{"title":"[algorithm]level3 디스크 컨트롤러","date":null,"lang":null}}},{"node":{"id":"5814f4cf-52d0-589d-85c3-43026c64c17f","excerpt":"문제 설명 n명의 권투선수가 권투 대회에 참여했고 각각 1번부터 n번까지 번호를 받았습니다. 권투 경기는 1대1 방식으로 진행이 되고, 만약 A 선수가 B 선수보다 실력이 좋다면 A 선수는 B…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>n명의 권투선수가 권투 대회에 참여했고 각각 1번부터 n번까지 번호를 받았습니다. 권투 경기는 1대1 방식으로 진행이 되고, 만약 A 선수가 B 선수보다 실력이 좋다면 A 선수는 B 선수를 항상 이깁니다. 심판은 주어진 경기 결과를 가지고 선수들의 순위를 매기려 합니다. 하지만 몇몇 경기 결과를 분실하여 정확하게 순위를 매길 수 없습니다.</p>\n<p>선수의 수 n, 경기 결과를 담은 2차원 배열 results가 매개변수로 주어질 때 정확하게 순위를 매길 수 있는 선수의 수를 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>선수의 수는 1명 이상 100명 이하입니다.</li>\n<li>경기 결과는 1개 이상 4,500개 이하입니다.</li>\n<li>results 배열 각 행 [A, B]는 A 선수가 B 선수를 이겼다는 의미입니다.</li>\n<li>모든 경기 결과에는 모순이 없습니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>results</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>[[4, 3], [4, 2], [3, 2], [1, 2], [2, 5]]</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>2번 선수는 [1, 3, 4] 선수에게 패배했고 5번 선수에게 승리했기 때문에 4위입니다.\n5번 선수는 4위인 2번 선수에게 패배했기 때문에 5위입니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    wins<span class=\"token punctuation\">,</span> loses <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        wins<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> loses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> result <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span>\n            a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> result\n            <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> i<span class=\"token punctuation\">:</span>\n                wins<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> b <span class=\"token operator\">==</span> i<span class=\"token punctuation\">:</span>\n                loses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">for</span> win <span class=\"token keyword\">in</span> loses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            wins<span class=\"token punctuation\">[</span>win<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>wins<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">for</span> lose <span class=\"token keyword\">in</span> wins<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            loses<span class=\"token punctuation\">[</span>lose<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>loses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>wins<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>a 선수를 이긴 선수는 a선수에게 진 선수를 이긴다.</li>\n<li>a 선수에게 진 선수는 a선수에게 이긴 선수에게 진다.</li>\n</ul>\n<p>위의 개념까지는 알았는데 코드로 표현할 방법을 찾지를 못해서 좀 찾아보고 풀 수 있었다.</p>\n<ul>\n<li>진 사람 목록이 들어갈 <code class=\"language-text\">loses</code>와 이긴 사람 목록이 들어갈 <code class=\"language-text\">wins</code>을 딕셔너리 형태로 만들고, 선수를 key로 하고 value에 set을 초기화해준다.</li>\n<li>1번부터 차례대로 1이 이기거나 진 경기를 찾아서 wins와 loses에 추가해주고, 1에게 이긴 선수(<code class=\"language-text\">loses[1]</code>)는 1이 이긴 선수들(<code class=\"language-text\">wins[1]</code>)을 이기니까 이긴 선수들의 wins에 1이 이긴 선수들(<code class=\"language-text\">wins[1]</code>)을 업데이트 해준다.</li>\n<li>마찬가지로 1이 이긴 선수들(<code class=\"language-text\">wins[1]</code>)은 1이 진 선수들(<code class=\"language-text\">loses[1]</code>)에게 지니까 1에게 진 선수들의 loses에 1이 이긴 선수들(<code class=\"language-text\">wins[1]</code>)을 업데이트 해준다.</li>\n<li>주어진 경기 결과를 정리한 후, <code class=\"language-text\">wins[i]의 수 + loses[i]의 수</code>가 본인을 제외한 <code class=\"language-text\">n-1</code>과 같다면 정확한 경기 순위를 알 수 있는 것이므로 answer에 1을 더하면서 모든 선수들을 확인하면 결과를 얻을 수 있다.</li>\n</ul>","frontmatter":{"title":"[algorithm]level3 순위","date":null,"lang":null}}},{"node":{"id":"3d009a41-463a-50ee-b989-de5348dd56c1","excerpt":"문제 설명 n…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>n명이 입국심사를 위해 줄을 서서 기다리고 있습니다. 각 입국심사대에 있는 심사관마다 심사하는데 걸리는 시간은 다릅니다.</p>\n<p>처음에 모든 심사대는 비어있습니다. 한 심사대에서는 동시에 한 명만 심사를 할 수 있습니다. 가장 앞에 서 있는 사람은 비어 있는 심사대로 가서 심사를 받을 수 있습니다. 하지만 더 빨리 끝나는 심사대가 있으면 기다렸다가 그곳으로 가서 심사를 받을 수도 있습니다.</p>\n<p>모든 사람이 심사를 받는데 걸리는 시간을 최소로 하고 싶습니다.</p>\n<p>입국심사를 기다리는 사람 수 n, 각 심사관이 한 명을 심사하는데 걸리는 시간이 담긴 배열 times가 매개변수로 주어질 때, 모든 사람이 심사를 받는데 걸리는 시간의 최솟값을 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>입국심사를 기다리는 사람은 1명 이상 1,000,000,000명 이하입니다.</li>\n<li>각 심사관이 한 명을 심사하는데 걸리는 시간은 1분 이상 1,000,000,000분 이하입니다.</li>\n<li>심사관은 1명 이상 100,000명 이하입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>times</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>6</td>\n<td>[7, 10]</td>\n<td>28</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>가장 첫 두 사람은 바로 심사를 받으러 갑니다.</p>\n<p>7분이 되었을 때, 첫 번째 심사대가 비고 3번째 사람이 심사를 받습니다.</p>\n<p>10분이 되었을 때, 두 번째 심사대가 비고 4번째 사람이 심사를 받습니다.</p>\n<p>14분이 되었을 때, 첫 번째 심사대가 비고 5번째 사람이 심사를 받습니다.</p>\n<p>20분이 되었을 때, 두 번째 심사대가 비지만 6번째 사람이 그곳에서 심사를 받지 않고 1분을 더 기다린 후에 첫 번째 심사대에서 심사를 받으면 28분에 모든 사람의 심사가 끝납니다.</p>\n<p><a href=\"http://hsin.hr/coci/archive/2012_2013/contest3_tasks.pdf\">출처</a></p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    start <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    end <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>times<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>n\n\n    <span class=\"token keyword\">while</span> start <span class=\"token operator\">&lt;=</span> end<span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n\n        <span class=\"token comment\"># mid 동안 몇 명의 사람들을 심사할 수 있는지</span>\n        temp <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>mid<span class=\"token operator\">//</span>time <span class=\"token keyword\">for</span> time <span class=\"token keyword\">in</span> times<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 심사할 수 있는 인원이 해야하는 인원보다 적다면 시간을 늘려야하니 start+</span>\n        <span class=\"token keyword\">if</span> temp <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n            start <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token comment\"># 그외 심사할 수 있는 인원이 값과 구해야하는 인원과 같거나 많으면 end--</span>\n        <span class=\"token comment\"># 최소한 n만큼의 인원은 모두 심사를 해야하므로 이 경우에서 나온 mid를 answer에 담아줌(mid 중에서도 최소를 담아줘야함)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            end <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">if</span> answer <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                answer <span class=\"token operator\">=</span> mid\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                answer <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>이분탐색</li>\n<li>0과 (가장 긴 시간 * 인원수) 사이에서 이분탐색을 수행하였다.</li>\n<li>start와 end를 mid를 기준으로 늘이고 줄이고 할 때 기계적으로 외운 알고리즘만 쓰지말고 어떤 경우에서 정답을 넣어야 맞는지 생각해보고 풀어야겠다. 뇌없이 풀려다가 너무 오래 걸렸어..</li>\n</ul>","frontmatter":{"title":"[algorithm]level3 입국심사","date":null,"lang":null}}},{"node":{"id":"6ebbaec4-0503-5d0a-8f8c-70d073f9e72e","excerpt":"참고 Array(배열) 논리적 저장순서와 물리적 저장순서가 일치한다. 로 해당 원소에 접근이 가능하다. 인덱스만 알고 있다면 시간 복잡도 만에 해당 원소로 접근할 수 있다. (즉, Random Access…","html":"<p><a href=\"https://woovictory.github.io/2018/12/27/DataStructure-Diff-of-Array-LinkedList/\">참고</a></p>\n<h3 id=\"array배열\" style=\"position:relative;\"><a href=\"#array%EB%B0%B0%EC%97%B4\" aria-label=\"array배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array(배열)</h3>\n<ul>\n<li>논리적 저장순서와 물리적 저장순서가 일치한다.</li>\n<li><code class=\"language-text\">인덱스</code>로 해당 원소에 접근이 가능하다.</li>\n<li>인덱스만 알고 있다면 시간 복잡도 <code class=\"language-text\">O(1)</code>만에 해당 원소로 접근할 수 있다. (즉, Random Access가 가능하다.)</li>\n<li>배열의 원소를 삭제할 경우 삭제한 원소보다 큰 인덱스를 가진 원소들을 Shift하기 때문에 시간복잡도 <code class=\"language-text\">O(n)</code>이 걸린다.</li>\n<li>삽입의 경우, 새로운 원소를 추가하고 모든 원소들의 인덱스를 1씩 Shift 해줘야 하므로 시간 복잡도 <code class=\"language-text\">O(n)</code>이 걸린다.</li>\n<li>제한적인 크기를 갖는다.</li>\n</ul>\n<p>Array는 삭제 또는 삽입 과정에서 해당 원소에 접근하여 작업을 완료한 뒤 Shift를 해줘야 하는 cost가 발생해 <code class=\"language-text\">O(n)</code>의 시간 복잡도룰 갖는다.</p>\n<h3 id=\"linkedlist\" style=\"position:relative;\"><a href=\"#linkedlist\" aria-label=\"linkedlist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LinkedList</h3>\n<ul>\n<li>자료의 주소 값으로 노드를 이용해 서로 연결되어 있는 구조를 갖는다.</li>\n<li>삽입과 삭제의 경우 LinkedList가 Array보다 속도가 빠르다고 하지만 엄밀히 말하면 경우에 따라 다르다고 하는게 맞다.</li>\n<li>원하는 값을 찾기 위해 최소 한 번은 리스트를 순회하여야 하므로 O(n)의 시간 복잡도를 갖는다.</li>\n</ul>\n<p>LinkedList 역시 삽입과 삭제를 위해서 해당 노드를 찾아가는 동안 O(n)의 시간 복잡도를 갖는다. 추가적으로 데이터를 삽입/삭제하기 위한 시간 복잡도까지 계산하면 결국 <code class=\"language-text\">O(n)</code>의 시간 복잡도를 갖는 셈이다.</p>\n<hr>\n<h3 id=\"linkedlist의-삽입삭제\" style=\"position:relative;\"><a href=\"#linkedlist%EC%9D%98-%EC%82%BD%EC%9E%85%EC%82%AD%EC%A0%9C\" aria-label=\"linkedlist의 삽입삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LinkedList의 삽입/삭제</h3>\n<ul>\n<li>\n<p>삽입</p>\n<p>LinkedList는 어느 곳에 삽입하던지 O(n)의 시간 복잡도를 갖는다.\n중간 삽입이 없으면(맨 앞, 맨 뒤에만) → 시간복잡도 : O(1)</p>\n</li>\n<li>\n<p>삭제</p>\n<p>삭제의 경우도 삽입과 마찬가지이다. 어느 곳에 삽입하던지 O(n)의 시간복잡도를 갖는다.\n중간 삭제가 없다면(맨앞, 먄 뒤에만) → 시간복잡도 : O(1)</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"array-vs-linkedlist\" style=\"position:relative;\"><a href=\"#array-vs-linkedlist\" aria-label=\"array vs linkedlist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array VS LinkedList</h3>\n<p><strong>데이터 접근 속도</strong></p>\n<ul>\n<li><strong>Array</strong>는 인덱스를 사용해 빠르게 원소에 접근할 수 있다. <code class=\"language-text\">시간 복잡도 O(1)</code>\nRandom Access를 지원한다.</li>\n<li><strong>LinkedList</strong>는 순차 접근 방식을 사용한다. 특정 원소에 접근하기 위해서는 처음부터 원소에 도달할 때까지 순차적으로 검색하면서 찾는다. <code class=\"language-text\">시간 복잡도 O(N)</code></li>\n</ul>\n<p><strong>데이터 삽입 속도</strong></p>\n<p>경우에 따라 다르다.\n만약 배열에 공간이 많이 남아있고 맨 끝에 삽입한다면 삽입 속도 역시 O(1)에 가능하다.\n하지만 이런경우는 발생하기 힘든 케이스이다.</p>\n<ul>\n<li><strong>Array</strong>의 경우 데이터를 중간이나 맨 앞에 삽입할 경우 그 이후의 데이터를 한 칸씩 미뤄주는 과정과 시간이 소요된다. 이런 경우 데이터가 많으면 비효율적이기 때문에 LinkedList가 필요하게 되었다.</li>\n<li><strong>LinkedList</strong>는 어느 곳에 삽입하던지 O(n)의 시간 복잡도를 갖는다. (만약, 중간 삽입이 없다면 O(1))\n이유는 삽입할 위치를 찾고 <code class=\"language-text\">O(n)</code> 삽입 연산을 진행하기 때문이다. 그럼에도 Array보다 빠른 성능을 보인다.</li>\n<li>또한, Array의 경우 데이터 삽입 시 모든 공간이 다 차버렸다면 새로운 메모리 공간을 할당받지만 LinkedList는 그럴 필요가 없다.(동적할당)</li>\n</ul>\n<p><strong>데이터 삭제 속도</strong></p>\n<p>이 부분도 경우에 따라 다르다.</p>\n<ul>\n<li><strong>Array</strong>는 데이터 삭제의 경우 그 위치의 데이터를 삭제한 후, 전체적으로 Shift를 해줘야 한다. <code class=\"language-text\">O(n)</code></li>\n<li><strong>LinkedList</strong>의 경우 삭제할 원소를 찾기 위해서 <code class=\"language-text\">O(n)</code>의 시간 복잡도를 갖고 삭제한다. 결국 O(n)의 시간복잡도를 갖지만 Array보다 빠르게 삭제 연산을 수행한다.</li>\n</ul>\n<p><strong>메모리 할당</strong></p>\n<ul>\n<li><strong>Array</strong>에서 메모리는 Array가 선언되자마자 Compile time에 할당되어진다. 이것을 정적 메모리 할당이라고 하고, Stack 영역에 메모리 할당이 이루어진다.</li>\n<li><strong>LinkedList</strong>에서 메모리는 새로운 node가 추가될 때 runtime에 할당되어진다. 이것은 동적 메모리 할당이라고 하고, Heap 영역에 메모리 할당이 이루어진다.</li>\n</ul>\n<p><strong>Size</strong></p>\n<ul>\n<li><strong>Array</strong>의 size는 반드시 선언 시점에 지정되어 있어야 한다.</li>\n<li><strong>LinkedList</strong>의 size는 다양할 수 있다. node들이 추가될 때 runtime 시점에서 LinkedList의 size가 커질 수 있기 때문이다</li>\n</ul>\n<hr>\n<h3 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h3>\n<ul>\n<li>삽입과 삭제가 빈번하다면 LinkedList를 사용하는 것이 좋다.</li>\n<li>데이터의 접근하는게 중요하다면 Array를 사용하는 것이 좋다.</li>\n</ul>\n<p>전반적인 내용을 보면 Array보다 LinkedList의 사용이 훨씬 좋아보인다. 하지만 일반적인 알고리즘 문제를 풀 때는 List보다 Array가 훨씬 빠르고 좋다. 왜냐하면 대부분의 알고리즘 문제는 메모리 공간의 범위를 파악할 수 있도록 N의 크기가 주어지기 때문이다.</p>\n<p>그래서 배열의 크기를 MAX로 초반에 잡을 수 있다면 훨씬 더 편리하고 List와는 다른 속도를 보인다. 왜냐하면 List는 입력마다 메모리의 할당이 일어나고 삭제에서는 메모리 해제가 일어나는데, 이런 작업이 시간복잡도에 포함되지는 않지만 시스템콜을 사용하는 구문으로 시간이 꽤 소요되기 때문이다.</p>","frontmatter":{"title":"[자료구조]Array와 LinkedList의 차이","date":null,"lang":null}}},{"node":{"id":"90d0a739-90d7-5b24-8d5f-479c465f1b5b","excerpt":"문제 설명 주어진 항공권을 모두 이용하여 여행경로를 짜려고 합니다. 항상 “ICN” 공항에서 출발합니다. 항공권 정보가 담긴 2차원 배열 tickets가 매개변수로 주어질 때, 방문하는 공항 경로를 배열에 담아 return 하도록 solution…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>주어진 항공권을 모두 이용하여 여행경로를 짜려고 합니다. 항상 “ICN” 공항에서 출발합니다.</p>\n<p>항공권 정보가 담긴 2차원 배열 tickets가 매개변수로 주어질 때, 방문하는 공항 경로를 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>\n<h5 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h5>\n<ul>\n<li>모든 공항은 알파벳 대문자 3글자로 이루어집니다.</li>\n<li>주어진 공항 수는 3개 이상 10,000개 이하입니다.</li>\n<li>tickets의 각 행 [a, b]는 a 공항에서 b 공항으로 가는 항공권이 있다는 의미입니다.</li>\n<li>주어진 항공권은 모두 사용해야 합니다.</li>\n<li>만일 가능한 경로가 2개 이상일 경우 알파벳 순서가 앞서는 경로를 return 합니다.</li>\n<li>모든 도시를 방문할 수 없는 경우는 주어지지 않습니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>tickets</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[“ICN”, “JFK”], [“HND”, “IAD”], [“JFK”, “HND”]]</td>\n<td>[“ICN”, “JFK”, “HND”, “IAD”]</td>\n</tr>\n<tr>\n<td>[[“ICN”, “SFO”], [“ICN”, “ATL”], [“SFO”, “ATL”], [“ATL”, “ICN”], [“ATL”,“SFO”]]</td>\n<td>[“ICN”, “ATL”, “ICN”, “SFO”, “ATL”, “SFO”]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>예제 #1</p>\n<p>[“ICN”, “JFK”, “HND”, “IAD”] 순으로 방문할 수 있습니다.</p>\n<p>예제 #2</p>\n<p>[“ICN”, “SFO”, “ATL”, “ICN”, “ATL”, “SFO”] 순으로 방문할 수도 있지만 [“ICN”, “ATL”, “ICN”, “SFO”, “ATL”, “SFO”] 가 알파벳 순으로 앞섭니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> defaultdict\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>tickets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ICN\"</span><span class=\"token punctuation\">]</span>\n        answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">while</span> temp<span class=\"token punctuation\">:</span>\n            port <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n            <span class=\"token keyword\">if</span> port <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> routes <span class=\"token keyword\">or</span> routes<span class=\"token punctuation\">[</span>port<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>routes<span class=\"token punctuation\">[</span>port<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n\n    routes <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> ticket <span class=\"token keyword\">in</span> tickets<span class=\"token punctuation\">:</span>\n        key<span class=\"token punctuation\">,</span> value <span class=\"token operator\">=</span> ticket\n        routes<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> key <span class=\"token keyword\">in</span> routes<span class=\"token punctuation\">:</span>\n        routes<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    answer <span class=\"token operator\">=</span> dfs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>주어진 티켓들의 출발지와 도착지를 lise가 value인 dict형으로 재구성하고 list는 사전 순서로 정렬해주었다.</li>\n<li>첫 출발지인 ICN부터 순서대로 temp에 넣어주면서 temp이후에 갈 수 있는 티켓이 있는지 확인한 후에 갈 수 있다면 temp에 다음 공항을 넣어주고 그렇지 않다면 answer에 temp의 값을 pop 하는 식으로 값을 구했다. 이 때 answer에는 값이 거꾸로 들어가므로 역정렬해준 후에 답을 출력해준다.</li>\n</ul>","frontmatter":{"title":"[algorithm]level3 여행경로","date":null,"lang":null}}},{"node":{"id":"1f568c62-b097-596b-9e05-74ee2efa3813","excerpt":"출처 : https://www.acmicpc.net/problem/14888 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 512 MB 41776 22033 13762 49.379% 문제 N개의 수로 이루어진 수열 A1, A2, …, AN…","html":"<p>출처 : <a href=\"https://www.acmicpc.net/problem/14888\">https://www.acmicpc.net/problem/14888</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">512 MB</td>\n<td align=\"left\">41776</td>\n<td align=\"left\">22033</td>\n<td align=\"left\">13762</td>\n<td align=\"left\">49.379%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p>N개의 수로 이루어진 수열 A1, A2, …, AN이 주어진다. 또, 수와 수 사이에 끼워넣을 수 있는 N-1개의 연산자가 주어진다. 연산자는 덧셈(+), 뺄셈(-), 곱셈(×), 나눗셈(÷)으로만 이루어져 있다.</p>\n<p>우리는 수와 수 사이에 연산자를 하나씩 넣어서, 수식을 하나 만들 수 있다. 이때, 주어진 수의 순서를 바꾸면 안 된다.</p>\n<p>예를 들어, 6개의 수로 이루어진 수열이 1, 2, 3, 4, 5, 6이고, 주어진 연산자가 덧셈(+) 2개, 뺄셈(-) 1개, 곱셈(×) 1개, 나눗셈(÷) 1개인 경우에는 총 60가지의 식을 만들 수 있다. 예를 들어, 아래와 같은 식을 만들 수 있다.</p>\n<ul>\n<li>1+2+3-4×5÷6</li>\n<li>1÷2+3+4-5×6</li>\n<li>1+2÷3×4-5+6</li>\n<li>1÷2×3-4+5+6</li>\n</ul>\n<p>식의 계산은 연산자 우선 순위를 무시하고 앞에서부터 진행해야 한다. 또, 나눗셈은 정수 나눗셈으로 몫만 취한다. 음수를 양수로 나눌 때는 C++14의 기준을 따른다. 즉, 양수로 바꾼 뒤 몫을 취하고, 그 몫을 음수로 바꾼 것과 같다. 이에 따라서, 위의 식 4개의 결과를 계산해보면 아래와 같다.</p>\n<ul>\n<li>1+2+3-4×5÷6 = 1</li>\n<li>1÷2+3+4-5×6 = 12</li>\n<li>1+2÷3×4-5+6 = 5</li>\n<li>1÷2×3-4+5+6 = 7</li>\n</ul>\n<p>N개의 수와 N-1개의 연산자가 주어졌을 때, 만들 수 있는 식의 결과가 최대인 것과 최소인 것을 구하는 프로그램을 작성하시오.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 수의 개수 N(2 ≤ N ≤ 11)가 주어진다. 둘째 줄에는 A1, A2, …, AN이 주어진다. (1 ≤ Ai ≤ 100) 셋째 줄에는 합이 N-1인 4개의 정수가 주어지는데, 차례대로 덧셈(+)의 개수, 뺄셈(-)의 개수, 곱셈(×)의 개수, 나눗셈(÷)의 개수이다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 만들 수 있는 식의 결과의 최댓값을, 둘째 줄에는 최솟값을 출력한다. 연산자를 어떻게 끼워넣어도 항상 -10억보다 크거나 같고, 10억보다 작거나 같은 결과가 나오는 입력만 주어진다. 또한, 앞에서부터 계산했을 때, 중간에 계산되는 식의 결과도 항상 -10억보다 크거나 같고, 10억보다 작거나 같다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2\n5 6\n0 0 1 0</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">30\n30</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3\n3 4 5\n1 0 1 0</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">35\n17</code></pre></div>\n<h2 id=\"예제-입력-3-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-3-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 3 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 3 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">6\n1 2 3 4 5 6\n2 1 1 1</code></pre></div>\n<h2 id=\"예제-출력-3-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-3-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 3 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 3 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">54\n-24</code></pre></div>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnums <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nopers <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nmax_val <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1e10</span><span class=\"token punctuation\">)</span>\nmin_val <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># num_idx - 지금 계산할 숫자</span>\n<span class=\"token comment\"># opers - 남은 연산자 개수 리스트</span>\n<span class=\"token comment\"># result - 직전에 계산된 결과</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>num_idx<span class=\"token punctuation\">,</span> opers<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> max_val<span class=\"token punctuation\">,</span> min_val\n\n    <span class=\"token comment\"># opers가 모두 0일 경우 (= 남은 연산자가 없을 경우)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>opers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        max_val <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>max_val<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        min_val <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>min_val<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token comment\"># 남은 연산자를 사용해서 하나씩 계산</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>oper<span class=\"token punctuation\">,</span> o_cnt<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"+\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"//\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> opers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 연산자가 있을 경우</span>\n        <span class=\"token keyword\">if</span> o_cnt <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># result와 num[num_idx]를 사용해서 연산하고 사용한 연산은 -1</span>\n\n            <span class=\"token comment\"># result가 음수이고 연산자가 //일 때 원하는 값이 나오지 않으므로(올림값에 -가 붙여서 나옴)</span>\n            <span class=\"token comment\"># 원하는 값을 얻기 위해 조건문을 사용하여 따로 연산</span>\n            <span class=\"token keyword\">if</span> oper <span class=\"token operator\">==</span> <span class=\"token string\">\"//\"</span> <span class=\"token keyword\">and</span> result <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                temp <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> oper <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>num_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                temp <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> oper <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>num_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            opers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n            <span class=\"token comment\"># 다음 연산을 위해 num_idx+1, 남은 연산자 개수 리스트 opers, 지금 연산의 결과 temp를 사용해서 재귀</span>\n            dfs<span class=\"token punctuation\">(</span>num_idx<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> opers<span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span>\n\n            opers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n\ndfs<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> opers<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>max_val<span class=\"token punctuation\">,</span> min_val<span class=\"token punctuation\">)</span></code></pre></div>\n<p>식의 결과가 최소인 것과 최대인 것을 구하려면 모든 경우를 계산해봐야 알 수 있으므로 <code class=\"language-text\">DFS 알고리즘</code>을 사용하여 풀었다.</p>\n<p>매개변수로 현재 사용할 숫자의 인덱스(<code class=\"language-text\">num_idx</code>), 남은 연산자의 개수 리스트(<code class=\"language-text\">opers</code>), 지금까지 계산된 결과(<code class=\"language-text\">result</code>)를 가지는 dfs 함수를 반복하면서 <code class=\"language-text\">opers</code>의 값들이 전부 0이 될 때 최솟값과 최댓값 연산을 하도록 했다.</p>\n<p>n = 3\nnums = [3, 4, 5]\nopers = [1, 0, 1, 0]</p>\n<p>dfs(두번째 수의 인덱스, opers, 첫 번째 수) -> <code class=\"language-text\">dfs(1, [1, 0, 1, 0], 3)</code></p>\n<ol>\n<li>\n<p><code class=\"language-text\">dfs(1, [1, 0, 1, 0], 3)</code></p>\n<p><code class=\"language-text\">not any([1,0,1,0])</code>는 <code class=\"language-text\">False</code>이므로 return이 실행되지 않음</p>\n<p>그 다음 <code class=\"language-text\">opers</code>에 for문을 돌면서 0이 아닌 값을 찾는다. 현재 opers[0] = 1 이므로 ”+” 연산을 수행하고 수행한 횟수는 업데이트 해준다.\nopers = [0,0,1,0]\ntemp = 3 + nums[1] = 3 + 4 = 7</p>\n</li>\n<li>\n<p><code class=\"language-text\">dfs(2, [0, 0, 1, 0], 7)</code></p>\n<p><code class=\"language-text\">not any([0,0,1,0])</code>는 <code class=\"language-text\">False</code>이므로 return이 실행되지 않음</p>\n<p>”*“연산을 수행하고 수행한 횟수를 업데이트\nopers = [0,0,0,0]\ntemp = 7*num[2] = 7*5 = 35</p>\n</li>\n<li>\n<p><code class=\"language-text\">dfs(3, [0, 0, 0, 0], 35)</code></p>\n<p><code class=\"language-text\">not any([0,0,0,0])</code>는 <code class=\"language-text\">True</code>이므로 조건문이 실행</p>\n<p>max<em>val = 35\nmin</em>val = 35</p>\n</li>\n<li><code class=\"language-text\">2번</code>으로 돌아간다. 사용한 연산자의 횟수를 되돌려두고 반복문을 계속한다. opers = [0, 0, 1, 0]\n2번에서 사용한 ”*” 연산 이후로는 더이상 남은 연산자가 없으므로 그냥 종료</li>\n<li>\n<p><code class=\"language-text\">1번</code>으로 돌아간다. 사용한 연산자의 횟수를 돌려두고 반복문을 계속한다. opers = [1, 0, 1, 0]</p>\n<p>”+“연산 이후에 반복문을 돌면서 사용하지 않은 ”*“연산을 수행하고 수행한 횟수를 업데이트 해준다.\nopers = [1,0,0,0]\ntemp = 3 * 4 = 12</p>\n</li>\n<li>\n<p><code class=\"language-text\">dfs(2, [1, 0, 0, 0], 12)</code></p>\n<p>남은 연산자를 찾음 ”+” 연산을 수행하고 사용한 횟수를 업데이트\nopsers = [0,0,0,0]\ntemp = 12 + 5 = 17</p>\n</li>\n<li>\n<p><code class=\"language-text\">dfs(3, [0, 0, 0, 0], 17)</code></p>\n<p><code class=\"language-text\">not any([0,0,0,0])</code>는 <code class=\"language-text\">True</code>이므로 조건문이 실행</p>\n<p>max<em>val = 35\nmin</em>val = 17</p>\n</li>\n<li><code class=\"language-text\">1번</code>으로 돌아간다. 더이상 확인해야할 연산이 없으므로 종료</li>\n<li>max<em>val과 min</em>val을 출력 (35, 17)</li>\n</ol>","frontmatter":{"title":"[algorithm]연산자 끼워넣기","date":null,"lang":null}}},{"node":{"id":"b8793e74-e359-54ac-a62e-ab972d1f5aef","excerpt":"출처 : https://www.acmicpc.net/problem/18428 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 256 MB 2707 1133 769 42.253% 문제 NxN 크기의 복도가 있다. 복도는 1x…","html":"<p>출처 : <a href=\"https://www.acmicpc.net/problem/18428\">https://www.acmicpc.net/problem/18428</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">256 MB</td>\n<td align=\"left\">2707</td>\n<td align=\"left\">1133</td>\n<td align=\"left\">769</td>\n<td align=\"left\">42.253%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<p><em>N</em>x<em>N</em> 크기의 복도가 있다. 복도는 1x1 크기의 칸으로 나누어지며, 특정한 위치에는 선생님, 학생, 혹은 장애물이 위치할 수 있다. 현재 몇 명의 학생들은 수업시간에 몰래 복도로 빠져나왔는데, 복도로 빠져나온 학생들은 선생님의 감시에 들키지 않는 것이 목표이다.</p>\n<p>각 선생님들은 자신의 위치에서 상, 하, 좌, 우 4가지 방향으로 감시를 진행한다. 단, 복도에 장애물이 위치한 경우, 선생님은 장애물 뒤편에 숨어 있는 학생들은 볼 수 없다. 또한 선생님은 상, 하, 좌, 우 4가지 방향에 대하여, 아무리 멀리 있더라도 장애물로 막히기 전까지의 학생들은 모두 볼 수 있다고 가정하자.</p>\n<p>다음과 같이 3x3 크기의 복도의 정보가 주어진 상황을 확인해보자. 본 문제에서 위치 값을 나타낼 때는 (행,열)의 형태로 표현한다. 선생님이 존재하는 칸은 T, 학생이 존재하는 칸은 S, 장애물이 존재하는 칸은 O로 표시하였다. 아래 그림과 같이 (3,1)의 위치에는 선생님이 존재하며 (1,1), (2,1), (3,3)의 위치에는 학생이 존재한다. 그리고 (1,2), (2,2), (3,2)의 위치에는 장애물이 존재한다.</p>\n<p><img src=\"https://upload.acmicpc.net/c513ebb1-7a89-42c1-8d69-63b66b5d7dca/-/preview/\" alt=\"img\"></p>\n<p>이 때 (3,3)의 위치에 존재하는 학생은 장애물 뒤편에 숨어 있기 때문에 감시를 피할 수 있다. 하지만 (1,1)과 (2,1)의 위치에 존재하는 학생은 선생님에게 들키게 된다.</p>\n<p>학생들은 복도의 빈 칸 중에서 장애물을 설치할 위치를 골라, 정확히 3개의 장애물을 설치해야 한다. 결과적으로 3개의 장애물을 설치하여 모든 학생들을 감시로부터 피하도록 할 수 있는지 계산하고자 한다. <em>N</em>x<em>N</em> 크기의 복도에서 학생 및 선생님의 위치 정보가 주어졌을 때, 장애물을 정확히 3개 설치하여 모든 학생들이 선생님들의 감시를 피하도록 할 수 있는지 출력하는 프로그램을 작성하시오.</p>\n<p>예를 들어 <em>N</em>=5일 때, 다음과 같이 선생님 및 학생의 위치 정보가 주어졌다고 가정하자.</p>\n<p><img src=\"https://upload.acmicpc.net/1c939daa-993c-43e7-8cdc-579d65bef994/-/preview/\" alt=\"img\"></p>\n<p>이 때 다음과 같이 3개의 장애물을 설치하면, 모든 학생들을 선생님의 감시로부터 피하도록 만들 수 있다.</p>\n<p><img src=\"https://upload.acmicpc.net/c752987a-3b50-4d94-8a8a-932d0e65dffe/-/preview/\" alt=\"img\"></p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 자연수 <em>N</em>이 주어진다. (3 ≤ <em>N</em> ≤ 6) 둘째 줄에 <em>N</em>개의 줄에 걸쳐서 복도의 정보가 주어진다. 각 행에서는 <em>N</em>개의 원소가 공백을 기준으로 구분되어 주어진다. 해당 위치에 학생이 있다면 S, 선생님이 있다면 T, 아무것도 존재하지 않는다면 X가 주어진다.</p>\n<p>단, 전체 선생님의 수는 5이하의 자연수, 전체 학생의 수는 30이하의 자연수이며 항상 빈 칸의 개수는 3개 이상으로 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 정확히 3개의 장애물을 설치하여 모든 학생들을 감시로부터 피하도록 할 수 있는지의 여부를 출력한다. 모든 학생들을 감시로부터 피하도록 할 수 있다면 ”<code class=\"language-text\">YES</code>”, 그렇지 않다면 ”<code class=\"language-text\">NO</code>“를 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5\nX S X X T\nT X S X X\nX X X X X\nX T X X X\nX X T X X</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">YES</code></pre></div>\n<h2 id=\"예제-입력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4\nS S S T\nX X X X\nX X X X\nT T T X</code></pre></div>\n<h2 id=\"예제-출력-2-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-2-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 2 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 2 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NO</code></pre></div>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 입력값</span>\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nhallway <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nteachers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    hallway<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 선생님 위치는 따로 저장</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> hallway<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"T\"</span><span class=\"token punctuation\">:</span>\n            teachers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># answer를 플래그 변수로 사용해서 한번이라도 성공한 경우가 나오면 불필요한 연산은 돌지 않도록 함</span>\nanswer <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token comment\"># dfs 알고리즘을 사용해서 장애물 3개를 설치하는 모든 경우를 계산</span>\n<span class=\"token comment\"># dfs 알고리즘의 결과로 나온 hallway리스트를 확인해서 선생이 볼 수 있는 시야에 학생이 있는지 확인 ( 선생이 한 명이라도 학생을 마주친다면 실패한 경우 )</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>hallway<span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> answer\n\n    <span class=\"token keyword\">if</span> answer<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">if</span> cnt <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> check<span class=\"token punctuation\">(</span>hallway<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> hallway<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"X\"</span><span class=\"token punctuation\">:</span>\n                hallway<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"O\"</span>\n                dfs<span class=\"token punctuation\">(</span>hallway<span class=\"token punctuation\">,</span> cnt <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                hallway<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"X\"</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>hallway<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> tx<span class=\"token punctuation\">,</span> ty <span class=\"token keyword\">in</span> teachers<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> dx<span class=\"token punctuation\">,</span> dy <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            x <span class=\"token operator\">=</span> tx <span class=\"token operator\">+</span> dx\n            y <span class=\"token operator\">=</span> ty <span class=\"token operator\">+</span> dy\n\n            <span class=\"token keyword\">while</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> y <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> hallway<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"S\"</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n                <span class=\"token keyword\">elif</span> hallway<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"O\"</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">break</span>\n                x <span class=\"token operator\">+=</span> dx\n                y <span class=\"token operator\">+=</span> dy\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\ndfs<span class=\"token punctuation\">(</span>hallway<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> answer<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YES\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NO\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">DFS 알고리즘</code>을 사용해서 장애물을 세우는 모든 경우를 계산함</li>\n<li>\n<p>DFS로 장애물을 설치한 복도를 가지고 선생님을 중심으로 상하좌우를 확인한다.</p>\n<ul>\n<li>이때, 학생을 먼저 만나면 실패, 장애물을 먼저 만나면 패스</li>\n</ul>\n</li>\n<li>\n<p>answer 변수를 플래그로 사용하여 한번이라도 성공한 경우가 나온다면 그 이후는 더이상 연산하지 않고 넘어감</p>\n<ul>\n<li>경우에 따라 다르긴 하겠지만 그냥 끝까지 도는 것보다는 효율적이지 않을까…?</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[algorithm]감시 피하기","date":null,"lang":null}}},{"node":{"id":"3358f76c-ec77-5868-ad3e-3da2fbebfbb4","excerpt":"출처 : https://www.acmicpc.net/problem/1932 시간 제한 메모리 제한 제출 정답 맞은 사람 정답 비율 2 초 128 MB 45964 27409 20270 59.574% 문제 위 그림은 크기가 5인 정수 삼각형의 한 모습이다. 맨 위층…","html":"<ul>\n<li>출처 : <a href=\"https://www.acmicpc.net/problem/1932\">https://www.acmicpc.net/problem/1932</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">시간 제한</th>\n<th align=\"left\">메모리 제한</th>\n<th align=\"left\">제출</th>\n<th align=\"left\">정답</th>\n<th align=\"left\">맞은 사람</th>\n<th align=\"left\">정답 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2 초</td>\n<td align=\"left\">128 MB</td>\n<td align=\"left\">45964</td>\n<td align=\"left\">27409</td>\n<td align=\"left\">20270</td>\n<td align=\"left\">59.574%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">        7\n      3   8\n    8   1   0\n  2   7   4   4\n4   5   2   6   5</code></pre></div>\n<p>위 그림은 크기가 5인 정수 삼각형의 한 모습이다.</p>\n<p>맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하라. 아래층에 있는 수는 현재 층에서 선택된 수의 대각선 왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있다.</p>\n<p>삼각형의 크기는 1 이상 500 이하이다. 삼각형을 이루고 있는 각 수는 모두 정수이며, 범위는 0 이상 9999 이하이다.</p>\n<h2 id=\"입력\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5\" aria-label=\"입력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력</h2>\n<p>첫째 줄에 삼각형의 크기 n(1 ≤ n ≤ 500)이 주어지고, 둘째 줄부터 n+1번째 줄까지 정수 삼각형이 주어진다.</p>\n<h2 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h2>\n<p>첫째 줄에 합이 최대가 되는 경로에 있는 수의 합을 출력한다.</p>\n<h2 id=\"예제-입력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%9E%85%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 입력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 입력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5\n7\n3 8\n8 1 0\n2 7 4 4\n4 5 2 6 5</code></pre></div>\n<h2 id=\"예제-출력-1-복사\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%B6%9C%EB%A0%A5-1-%EB%B3%B5%EC%82%AC\" aria-label=\"예제 출력 1 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 출력 1 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">30</code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.acmicpc.net/category/2\">Olympiad</a> > <a href=\"https://www.acmicpc.net/category/99\">International Olympiad in Informatics</a> > <a href=\"https://www.acmicpc.net/category/detail/541\">IOI 1994</a> 1번</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ntriangle <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    triangle<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>triangle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> j <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 인덱스가 0일 때</span>\n            triangle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> triangle<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">elif</span> j <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>triangle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 인덱스가 맨 끝일 때(n-1)</span>\n            triangle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> triangle<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\t<span class=\"token comment\"># 그 외의 경우</span>\n            triangle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>triangle<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> triangle<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>triangle<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>아래층에서 윗층의 가까운 숫자 두개 중 큰 수를 더하는 과정이 반복하면 마지막 층에서 최댓값을 구할 수 있다. 여기서 두 수 중 큰 수를 더하는 작은 과정이 반복되므로 다이나믹 프로그래밍 알고리즘을 사용했다.</p>\n<p>점화식은 <code class=\"language-text\">dp[i][j] = dp[i][j] + max(dp[i-1][j], dp[i-1][j-1])</code> 이다.</p>\n<p>하지만 양 끝에 위치한 숫자의 윗층 숫자는 두개가 아니므로 <code class=\"language-text\">i==0</code> 일 때와 <code class=\"language-text\">i==n-1</code>일 때는 예외로 처리해주었고 나머지 인덱스는 점화식으로 처리했다.</p>","frontmatter":{"title":"[algorithm]정수삼각형","date":null,"lang":null}}},{"node":{"id":"d5b72c27-f6e7-5aff-abc2-7824b16f1117","excerpt":"2, 3, 5의 배수 변수와 각각 몇 번 곱해졌는지(i2, i3, i5)를 나타낼 인덱스 변수를 만듦 배수 변수들 중 제일 작은 수를 골라 그 수와 지금까지의 배수가 같다면 dpim애 (2.3.5) 중 해당하는 수를 곱해주면서 못생긴 수를 찾아서 ~dpn까지 넣어줌","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token comment\"># 각 몇배수 했는지 저장할 변수</span>\ni2 <span class=\"token operator\">=</span> i3 <span class=\"token operator\">=</span> i5 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token comment\"># 배수 한 결과가 얼마인지 저장할 변수</span>\nnext2<span class=\"token punctuation\">,</span> next3<span class=\"token punctuation\">,</span> next5 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>next2<span class=\"token punctuation\">,</span> next3<span class=\"token punctuation\">,</span> next5<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> next2<span class=\"token punctuation\">:</span>\n        i2 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        next2 <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n\n    <span class=\"token keyword\">if</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> next3<span class=\"token punctuation\">:</span>\n        i3 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        next3 <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i3<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n\n    <span class=\"token keyword\">if</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> next5<span class=\"token punctuation\">:</span>\n        i5 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        next5 <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i5<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>2, 3, 5의 배수 변수와 각각 몇 번 곱해졌는지(i2, i3, i5)를 나타낼 인덱스 변수를 만듦</li>\n<li>배수 변수들 중 제일 작은 수를 골라 그 수와 지금까지의 배수가 같다면 dp[im]애 (2.3.5) 중 해당하는 수를 곱해주면서 못생긴 수를 찾아서 ~dp[n]까지 넣어줌</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">                      2 3 5\n          dp[0] = 1 / 0 0 0\n2 3 5  -> dp[1] = 2 / 1 0 0\n4 3 5  -> dp[2] = 3 / 1 1 0\n4 6 5  -> dp[3] = 4 / 2 1 0\n6 6 5  -> dp[4] = 5 / 2 1 1\n6 6 10 -> dp[5] = 6 / 3 2 1\n8 9 10 -> dp[6] = 8 / 4 2 1</code></pre></div>","frontmatter":{"title":"[algorithm]못생긴 수","date":null,"lang":null}}},{"node":{"id":"45ecc080-2685-5b62-ba68-8dfe12a08e46","excerpt":"알고리즘이 얼마나 빠른지 표시하는 특별한 방법이다. 속도를 시간으로 나타내지 않고 연산횟수로 나타낸다. O(n) 과 같은 형태로 알고리즘의 연산횟수를 표현한다. 이 때 대문자 O를 사용하기 때문에 빅오표기법임 최악의 실행시간을 나타낸다. 선형탐색의 경우 배열 인덱스…","html":"<ul>\n<li>알고리즘이 얼마나 빠른지 표시하는 특별한 방법이다.</li>\n<li>속도를 시간으로 나타내지 않고 연산횟수로 나타낸다.</li>\n<li>O(n) 과 같은 형태로 알고리즘의 연산횟수를 표현한다. 이 때 대문자 O를 사용하기 때문에 빅오표기법임</li>\n<li>최악의 실행시간을 나타낸다. 선형탐색의 경우 배열 인덱스 0에서 검색이 완료된다고 하더라도 <code class=\"language-text\">O(1)</code>이라고 표기하지 않는다. 알고리즘의 속도는 데이터의 크기에 따른 연산 횟수가 어떻게 증가하는지 측정하는 것이기 때문에, 선형 탐색의 실행시간은 <code class=\"language-text\">O(n)</code>이다. <code class=\"language-text\">O(n)</code>보다 느려지지 않는다는 일종의 보장이다.</li>\n<li>때문에 <code class=\"language-text\">O(log n)</code>의 속도는 <code class=\"language-text\">O(n)</code>보다 빠르고, 리스트의 원소의 개수가 증가하면 증가할수록 상대적으로 더 빨라진다.</li>\n</ul>\n<h3 id=\"code-classlanguage-textoncode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textoncode\" aria-label=\"code classlanguage textoncode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">O(n!)</code></h3>\n<ul>\n<li>외판원 문제</li>\n<li>데이터의 크기에 따른 실행속도의 증가가 엄청나고, 똑똑한 사람들도 더 이상 알고리즘을 향상시키는 것을 포기한 문제</li>\n<li>\n<p>한 외판원이 있다. 이 외판원은 가장 짧은 거리를 통해 다섯 개의 도시를 모두 방문하려고 한다.</p>\n<p>도시를 방문하는 모든 경로를 따져보고 전체 거리를 더해서 가장 짧은 경로를 택함\n도시가 5개면 120가지, 6개면 720가지, 7개면 5040가지…! 연산횟수의 증가 속도가 어마무시함 n개의 도시가 있다면 n!의 연산이 필요한 것</p>\n<p>도시가 100개 이상이라면 사실상 계산이 불가능한 수준임(태양이 먼저 사라질 정도) 때문에 다른 알고리즘을 찾아야 하는데, 더 빠른 알고리즘은 아직 알려져 있지 않다.</p>\n</li>\n</ul>\n<p>출처: 그림으로 개념을 이해하는 알고리즘</p>","frontmatter":{"title":"[algorithm] 빅오 표기법","date":null,"lang":null}}},{"node":{"id":"4277844f-079f-533b-a434-82e12cc17e3c","excerpt":"…","html":"<ul>\n<li>\n<p>재귀</p>\n<ul>\n<li>함수가 자기 자신을 호출하는 것</li>\n<li>대신 반복문으로 구현할 수 있음</li>\n<li>재귀는 풀이를 더 명확하게 만들어 주지만 성능을 향상시키지는 않는다. 오히려 반복문을 사용하는 것이 더 성능이 좋을 때도 많음</li>\n<li>기본단계와 재귀단계로 구성되어있다. 재귀 함수는 재귀단계에서 자기 자신을 호출하기 떄문에 탈출 조건이 주어지지 않으면 무한 반복을 하게 된다. 기본 단계는 자기 자신을 호출하지 않는 단계로 재귀함수가 무한 반복에 빠지는 것을 막아준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">countdown</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    countdown<span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>스택(stack)</p>\n<ul>\n<li>후입선출 구조</li>\n<li>가장 나중에 추가된 항목이 제일 먼저 삭제됨</li>\n</ul>\n</li>\n<li>\n<p>호출스택(call stack)</p>\n<ul>\n<li>컴퓨터가 함수를 호출하는 방식</li>\n<li>여러 개의 함수를 호출하면서 함수에 사용되는 변수를 저장하는 스택</li>\n<li>너무 커져서 메모리가 과하게 소비될 수 있다. 컴퓨터가 감당할 수 없을 정도가 되면 스택오버플로우 오류가 발생함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>`Hi<span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span>!`<span class=\"token punctuation\">)</span>\n  greet2<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getting ready to say bye...\"</span><span class=\"token punctuation\">)</span>\n  bye<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">greet2</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>`How are you<span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span>?`<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ok, bye!\"</span><span class=\"token punctuation\">)</span>\n\ngreet<span class=\"token punctuation\">(</span><span class=\"token string\">\"Anne\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">greet(\"Anne\")</code>이 호출되면 컴퓨터는 함수호출을 위한 메모리를 할당하고 거기에 함수 greet와 인수 “Anne”을 저장함</li>\n<li>“Hi, Anne!”을 출력 후, greet2(name)로 다른 함수를 호출, 컴퓨터는 다시 함수 호출을 위해 메모리를 할당하는데, 이 때 스택을 사용한다. 두번째 메모리는 첫번째 메모리의 위에 올려지게 된다. 이 때 첫번째 함수는 중지된 상태로 대기하게 됨</li>\n<li>greet2에 의해 “How are you, Anne?”이 출력되고 실행이 끝난 greet2함수는 함수 호출 상태에서 반환되어 돌아온다. 함수가 반환되면 가장 위에 있던 메모리상자는 pop연산으로 인해 없어진다.</li>\n<li>가장 위에 있는 함수가 greet함수가 되고, greet함수는 중지되어 있던 자리에서부터 다시 이어서 실행된다. “getting ready to say bye…”가 출력되고 bye() 명령으로 다른 함수가 호출됨, 다시 greet는 정지</li>\n<li>bye함수는 greet함수 위에 쌓임, “Ok, bye!”출력 후 bye가 pop되고 다시 greet함수로 돌아감</li>\n<li>이제 greet함수에 더이상 실행할 것이 없으므로 greet함수도 pop됨</li>\n</ol>\n</li>\n</ul>\n<p>출처: 그림으로 개념을 이해하는 알고리즘</p>","frontmatter":{"title":"[algorithm] 재귀","date":null,"lang":null}}},{"node":{"id":"ea555cac-2fe9-57ec-ab6e-0573a96f254d","excerpt":"배열 원소들이 메모리에 줄지어 공간을 차지한다. 원하는 원소를 읽는데 O(…","html":"<ul>\n<li>\n<p>배열</p>\n<ul>\n<li>원소들이 메모리에 줄지어 공간을 차지한다.</li>\n<li>원하는 원소를 읽는데 O(1)의 시간이 걸린다. (줄지어 있기 때문에 몇번째인지만 알면 바로 찾을 수 있음)</li>\n<li>배열에 새로운 원소를 삽입하는데 다음 메모리가 사용중이라면 삽입이 불가능하기 때문에 배열 전체를 새로운 메모리 공간으로 옮겨야 한다. 시간복잡도(O(n))</li>\n<li>삭제할 때 최악의 경우는 첫 번째 원소를 삭제하는 경우인데, 이 경우 뒤 원소들의 주소를 1씩 앞으로 옮겨야 하기 때문에 시간복잡도 O(n)을 가진다.</li>\n</ul>\n</li>\n<li>\n<p>연결 리스트</p>\n<ul>\n<li>원소들이 순서대로 저장될 필요가 없다. 각각의 원소들은 다음 원소의 주소를 값과 같이 저장하고 있다.</li>\n<li>배열과는 다르게 원하는 원소를 바로 찾을 수 없다. 4번쨰 원소의 주소를 알려면 3번쨰 원소의 주소를 알아야하고, 3번쨰 원소의 주소를 알려면 2번쨰 원소의 주소를 알아야 하고, 2번쨰 원소의 주소를 알려면 1번째 원소의 주소를 알아야 한다. 결국 4번쨰 원소를 읽으려면 1번째 원소부터 차례대로 연결된 주소를 따라가면서 확인해야 한다. 때문에 연결 리스트의 시간복잡도는 O(n)</li>\n<li>삽입하는 경우는 원소의 위치, 순서에 상관없이 삽입할 위치의 앞 원소에 저장된 주소를 바꿔주고, 뒤 원소의 주소를 삽입하는 원소에 저장하면 된다. 시간복잡도 O(1)</li>\n<li>삭제하는 경우도 삭제할 원소의 앞 원소에 저장된 주소를 삭제할 원소의 뒷 원소의 주소로 변경하면 간단히 삭제할 수 있으므로 시간복잡도 O(1)을 가진다.</li>\n<li>삽입, 삭제에 O(1)의 시간이 걸리는 경우는 원소에 바로 접근이 가능한 경우인 첫번쨰 원소나 마지막 원소를 삽입, 삭제하는 경우이다. 중간 원소를 찾아 삭제하는 경우에는 달라질 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>더 많이 쓰는 구조</p>\n<ul>\n<li>보통 임의의 원소에 접근이 가능한 배열을 많이 사용한다.</li>\n<li>자료에 접근하는 방식에는 임의 접근, 순차 접근 두 가지 방법이 있다.</li>\n<li>연결 리스트는 순차접근 밖에 할 수 없다. 10번째 원소를 찾으려면 앞의 9개의 원소를 읽어서 찾아내야함</li>\n<li>임의 접근은 10번째 원소를 찾는데 바로 10번쨰 원소로 찾아가면 된다. 임의 접근이 가능한 배열은 읽기 속도가 빠르다는 특징을 가진다.</li>\n<li>이 임의 접근을 사용하는 경우가 많기 때문에 배열이 더 많이 사용되는 것임</li>\n</ul>\n</li>\n</ul>\n<p>출처: 그림으로 개념을 이해하는 알고리즘</p>","frontmatter":{"title":"[algorithm] 배열과 연결 리스트","date":null,"lang":null}}},{"node":{"id":"c9b93f7c-de16-52ef-826d-93e99788d177","excerpt":"…","html":"<ol>\n<li>기본단계를 해결한다. 가능한한 작은 문제여야 한다.</li>\n<li>문제가 기본단계가 될 때까지 나누거나 작게 만든다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function F(x):\n  if F(x)의 문제가 간단 then:\n    return F(x)을 직접 계산한 값\n  else:\n    x 를 y1, y2로 분할\n    F(y1)과 F(y2)를 호출\n    return F(y1), F(y2)로부터 F(x)를 구한 값</code></pre></div>\n<h3 id=\"유클리드-호제법\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95\" aria-label=\"유클리드 호제법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유클리드 호제법</h3>\n<ul>\n<li>두 수의 최대 공약수를 구하는 알고리즘</li>\n<li>한 수가 다른 한 수의 약수가 될 때(기본단계)까지 나누는 방식(재귀)으로 동작한다.</li>\n</ul>\n<h3 id=\"배열을-사용한-분할-정복\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%B6%84%ED%95%A0-%EC%A0%95%EB%B3%B5\" aria-label=\"배열을 사용한 분할 정복 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열을 사용한 분할 정복</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 재귀</span>\n    <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 기본단게, nums가 빈 배열일 때</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></code></pre></div>\n<ul>\n<li>분할 정복을 사용해서 배열의 합을 구하는 함수이다.</li>\n<li>배열을 포함한 재귀함수를 만들 때는 기본단계를 빈 배열이나 원소가 하나뿐인 배열로 정한다.</li>\n<li>\n<p>반복문으로 할 수 있는데 재귀를 사용하는 이유</p>\n<ul>\n<li>하스켈과 같은 함수형 프로그래밍 언어에는 반복문이 존재하지 않는다. 때문에 무조건 재귀함수를 사용해야 한다.</li>\n<li>반복문을 사용할 수 있는데 재귀함수를 사용하는 것은, 이런 함수형 프로그래밍 언어를 살짝 맛보는 것이라고 할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p>출처: 그림으로 개념을 이해하는 알고리즘, <a href=\"https://ko.wikipedia.org/wiki/%EB%B6%84%ED%95%A0_%EC%A0%95%EB%B3%B5_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">분할정복알고리즘</a>, <a href=\"https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95\">유클리드 호제법</a></p>","frontmatter":{"title":"[algorithm] 분할정복","date":null,"lang":null}}},{"node":{"id":"d2a0dcd1-8b62-5db6-951c-01a250413c33","excerpt":"문제 설명 본 문제는 정확성과 효율성 테스트 각각 점수가 있는 문제입니다. 카카오는 하반기 경력 개발자 공개채용을 진행 중에 있으며 현재 지원서 접수와 코딩테스트가 종료되었습니다. 이번 채용에서 지원자는 지원서 작성 시 아래와 같이…","html":"<h3 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>문제 설명</strong></h3>\n<p><strong>[본 문제는 정확성과 효율성 테스트 각각 점수가 있는 문제입니다.]</strong></p>\n<p>카카오는 하반기 경력 개발자 공개채용을 진행 중에 있으며 현재 지원서 접수와 코딩테스트가 종료되었습니다. 이번 채용에서 지원자는 지원서 작성 시 아래와 같이 4가지 항목을 반드시 선택하도록 하였습니다.</p>\n<ul>\n<li>코딩테스트 참여 개발언어 항목에 cpp, java, python 중 하나를 선택해야 합니다.</li>\n<li>지원 직군 항목에 backend와 frontend 중 하나를 선택해야 합니다.</li>\n<li>지원 경력구분 항목에 junior와 senior 중 하나를 선택해야 합니다.</li>\n<li>선호하는 소울푸드로 chicken과 pizza 중 하나를 선택해야 합니다.</li>\n</ul>\n<p>인재영입팀에 근무하고 있는 <code class=\"language-text\">니니즈</code>는 코딩테스트 결과를 분석하여 채용에 참여한 개발팀들에 제공하기 위해 지원자들의 지원 조건을 선택하면 해당 조건에 맞는 지원자가 몇 명인 지 쉽게 알 수 있는 도구를 만들고 있습니다.예를 들어, 개발팀에서 궁금해하는 문의사항은 다음과 같은 형태가 될 수 있습니다.<code class=\"language-text\">코딩테스트에 java로 참여했으며, backend 직군을 선택했고, junior 경력이면서, 소울푸드로 pizza를 선택한 사람 중 코딩테스트 점수를 50점 이상 받은 지원자는 몇 명인가?</code></p>\n<p>물론 이 외에도 각 개발팀의 상황에 따라 아래와 같이 다양한 형태의 문의가 있을 수 있습니다.</p>\n<ul>\n<li>코딩테스트에 python으로 참여했으며, frontend 직군을 선택했고, senior 경력이면서, 소울푸드로 chicken을 선택한 사람 중 코딩테스트 점수를 100점 이상 받은 사람은 모두 몇 명인가?</li>\n<li>코딩테스트에 cpp로 참여했으며, senior 경력이면서, 소울푸드로 pizza를 선택한 사람 중 코딩테스트 점수를 100점 이상 받은 사람은 모두 몇 명인가?</li>\n<li>backend 직군을 선택했고, senior 경력이면서 코딩테스트 점수를 200점 이상 받은 사람은 모두 몇 명인가?</li>\n<li>소울푸드로 chicken을 선택한 사람 중 코딩테스트 점수를 250점 이상 받은 사람은 모두 몇 명인가?</li>\n<li>코딩테스트 점수를 150점 이상 받은 사람은 모두 몇 명인가?</li>\n</ul>\n<p>즉, 개발팀에서 궁금해하는 내용은 다음과 같은 형태를 갖습니다.</p>\n<ul>\n<li><code class=\"language-text\">[조건]을 만족하는 사람 중 코딩테스트 점수를 X점 이상 받은 사람은 모두 몇 명인가?</code></li>\n</ul>\n<hr>\n<h3 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>[문제]</strong></h3>\n<p>지원자가 지원서에 입력한 4가지의 정보와 획득한 코딩테스트 점수를 하나의 문자열로 구성한 값의 배열 info, 개발팀이 궁금해하는 문의조건이 문자열 형태로 담긴 배열 query가 매개변수로 주어질 때,각 문의조건에 해당하는 사람들의 숫자를 순서대로 배열에 담아 return 하도록 solution 함수를 완성해 주세요.</p>\n<h3 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>[제한사항]</strong></h3>\n<ul>\n<li>info 배열의 크기는 1 이상 50,000 이하입니다.</li>\n<li>\n<p>info 배열 각 원소의 값은 지원자가 지원서에 입력한 4가지 값과 코딩테스트 점수를 합친 “개발언어 직군 경력 소울푸드 점수” 형식입니다.</p>\n<ul>\n<li>개발언어는 cpp, java, python 중 하나입니다.</li>\n<li>직군은 backend, frontend 중 하나입니다.</li>\n<li>경력은 junior, senior 중 하나입니다.</li>\n<li>소울푸드는 chicken, pizza 중 하나입니다.</li>\n<li>점수는 코딩테스트 점수를 의미하며, 1 이상 100,000 이하인 자연수입니다.</li>\n<li>각 단어는 공백문자(스페이스 바) 하나로 구분되어 있습니다.</li>\n</ul>\n</li>\n<li>query 배열의 크기는 1 이상 100,000 이하입니다.</li>\n<li>\n<p>query의 각 문자열은 ”[조건] X” 형식입니다.</p>\n<ul>\n<li>[조건]은 “개발언어 and 직군 and 경력 and 소울푸드” 형식의 문자열입니다.</li>\n<li>언어는 cpp, java, python, - 중 하나입니다.</li>\n<li>직군은 backend, frontend, - 중 하나입니다.</li>\n<li>경력은 junior, senior, - 중 하나입니다.</li>\n<li>소울푸드는 chicken, pizza, - 중 하나입니다.</li>\n<li>’-’ 표시는 해당 조건을 고려하지 않겠다는 의미입니다.</li>\n<li>X는 코딩테스트 점수를 의미하며 조건을 만족하는 사람 중 X점 이상 받은 사람은 모두 몇 명인 지를 의미합니다.</li>\n<li>각 단어는 공백문자(스페이스 바) 하나로 구분되어 있습니다.</li>\n<li>예를 들면, “cpp and - and senior and pizza 500”은 “cpp로 코딩테스트를 봤으며, 경력은 senior 이면서 소울푸드로 pizza를 선택한 지원자 중 코딩테스트 점수를 500점 이상 받은 사람은 모두 몇 명인가?”를 의미합니다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>[입출력 예]</strong></h5>\n<table>\n<thead>\n<tr>\n<th>info</th>\n<th>query</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">[\"java backend junior pizza 150\",\"python frontend senior chicken 210\",\"python frontend senior chicken 150\",\"cpp backend senior pizza 260\",\"java backend junior chicken 80\",\"python backend senior chicken 50\"]</code></td>\n<td><code class=\"language-text\">[\"java and backend and junior and pizza 100\",\"python and frontend and senior and chicken 200\",\"cpp and - and senior and pizza 250\",\"- and backend and senior and - 150\",\"- and - and - and chicken 100\",\"- and - and - and - 150\"]</code></td>\n<td>[1,1,1,1,2,4]</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예에-대한-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88%EC%97%90-%EB%8C%80%ED%95%9C-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예에 대한 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>입출력 예에 대한 설명</strong></h5>\n<p>지원자 정보를 표로 나타내면 다음과 같습니다.</p>\n<table>\n<thead>\n<tr>\n<th>언어</th>\n<th>직군</th>\n<th>경력</th>\n<th>소울 푸드</th>\n<th>점수</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>java</td>\n<td>backend</td>\n<td>junior</td>\n<td>pizza</td>\n<td>150</td>\n</tr>\n<tr>\n<td>python</td>\n<td>frontend</td>\n<td>senior</td>\n<td>chicken</td>\n<td>210</td>\n</tr>\n<tr>\n<td>python</td>\n<td>frontend</td>\n<td>senior</td>\n<td>chicken</td>\n<td>150</td>\n</tr>\n<tr>\n<td>cpp</td>\n<td>backend</td>\n<td>senior</td>\n<td>pizza</td>\n<td>260</td>\n</tr>\n<tr>\n<td>java</td>\n<td>backend</td>\n<td>junior</td>\n<td>chicken</td>\n<td>80</td>\n</tr>\n<tr>\n<td>python</td>\n<td>backend</td>\n<td>senior</td>\n<td>chicken</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><code class=\"language-text\">\"java and backend and junior and pizza 100\"</code> : java로 코딩테스트를 봤으며, backend 직군을 선택했고 junior 경력이면서 소울푸드로 pizza를 선택한 지원자 중 코딩테스트 점수를 100점 이상 받은 지원자는 1명 입니다.</li>\n<li><code class=\"language-text\">\"python and frontend and senior and chicken 200\"</code> : python으로 코딩테스트를 봤으며, frontend 직군을 선택했고, senior 경력이면서 소울 푸드로 chicken을 선택한 지원자 중 코딩테스트 점수를 200점 이상 받은 지원자는 1명 입니다.</li>\n<li><code class=\"language-text\">\"cpp and - and senior and pizza 250\"</code> : cpp로 코딩테스트를 봤으며, senior 경력이면서 소울푸드로 pizza를 선택한 지원자 중 코딩테스트 점수를 250점 이상 받은 지원자는 1명 입니다.</li>\n<li><code class=\"language-text\">\"- and backend and senior and - 150\"</code> : backend 직군을 선택했고, senior 경력인 지원자 중 코딩테스트 점수를 150점 이상 받은 지원자는 1명 입니다.</li>\n<li><code class=\"language-text\">\"- and - and - and chicken 100\"</code> : 소울푸드로 chicken을 선택한 지원자 중 코딩테스트 점수를 100점 이상을 받은 지원자는 2명 입니다.</li>\n<li><code class=\"language-text\">\"- and - and - and - 150\"</code> : 코딩테스트 점수를 150점 이상 받은 지원자는 4명 입니다.</li>\n</ul>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">info<span class=\"token punctuation\">,</span> query</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">const</span> combination <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 지원자가 지원자격에 만족할 수 있는 모든 경우를 만들어서 객체에 배열로 점수를 넣음</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">combi</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">idx<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">,</span> subCombi</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">===</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>combination<span class=\"token punctuation\">[</span>subCombi<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                combination<span class=\"token punctuation\">[</span>subCombi<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            combination<span class=\"token punctuation\">[</span>subCombi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token function\">combi</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">,</span> subCombi <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">combi</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">,</span> subCombi <span class=\"token operator\">+</span> info<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token keyword\">of</span> info<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">combi</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>   \n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// 지원 자격 검색을 할 때 이분 탐색을 위해 각 점수 배열을 정렬</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> combination<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        combination<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// 지원자의 조건으로 만든 객체를 확인하면서</span>\n    <span class=\"token comment\">// 지원 조건에 해당하는 지원자들의 코테 점수를 확인</span>\n    query<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">q</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> qData <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> and </span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> qScore <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>qData<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> qString <span class=\"token operator\">=</span> qData<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> passArr <span class=\"token operator\">=</span> combination<span class=\"token punctuation\">[</span>qString<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 조건에 해당하는 지원자가 있을 경우 이분탐색으로 코테 점수를 넘는지 확인</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>passArr <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token keyword\">let</span> passIdx <span class=\"token operator\">=</span> passArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> right <span class=\"token operator\">=</span> passArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> mid <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>qScore <span class=\"token operator\">&lt;=</span> passArr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    passIdx <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span>\n                    right <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">let</span> cnt <span class=\"token operator\">=</span> passArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> passIdx<span class=\"token punctuation\">;</span>\n            answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 지원 조건에 해당하는 사람이 없을 경우에는 0</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h3>\n<ul>\n<li>처음 풀었을 때는 전부 일일이 확인해서 시간복잡도가 O(N^2)로 풀었다. 정확성은 모두 통과를 했지만 효율성은 당연히 하나도 통과를 하지 못했고, 거기서 시간이 엄청 오래 걸렸던 것 같다.</li>\n<li>결국에는 카카오 테크 블로그에 올라온 풀이 글을 보고 풀 수 있었다.</li>\n<li>이 문제를 풀어보니까 내가 문제를 작게 나누어 생각하는 능력이 부족하다는 생각이 들었다. 당장 정답을 내려고 노력하지 않고 문제를 작게 나누어 하나하나 해결하는 버릇을 들여야 할 것 같다.</li>\n</ul>\n<h3 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h3>\n<ul>\n<li><a href=\"https://programmers.co.kr/learn/courses/30/lessons/72412\">프로그래머스 순위검색</a></li>\n</ul>","frontmatter":{"title":"[algorithm] level2. 순위 검색","date":"November 14, 2021","lang":null}}},{"node":{"id":"55824e2e-0df8-5a67-86c9-3f555070bfa6","excerpt":"…","html":"<p>재귀 함수는 자기 자신을 호출하는 함수를 말한다. 코드가 간단하고 직관적이기 때문에 가독성이 좋아진다는 장점도 있지만, 함수를 많이 호출할 경우 스택을 많이 사용하기 때문에 스택오버플로우 에러가 발생할 수 있다는 단점도 있다.\n이런 재귀의 단점을 해결하기 위해 꼬리 재귀라는 방법을 사용한다.</p>\n<h3 id=\"일반-재귀\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98-%EC%9E%AC%EA%B7%80\" aria-label=\"일반 재귀 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반 재귀</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> <span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token function\">recsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span>\n<span class=\"token number\">15</span></code></pre></div>\n<p>일반 재귀함수는 함수가 호출된 후 값을 받아 추가 연산을 진행하기 때문에 성능저하가 발생된다. 함수 호출이 끝난 후에 연산을 진행하기 때문에 모든 재귀 호출이 끝나야 최종 연산 결과를 알 수 있다. 때문에 재귀가 깊어지면 스택을 너무 많이 사용하는 문제가 발생한다.</p>\n<h3 id=\"꼬리-재귀\" style=\"position:relative;\"><a href=\"#%EA%BC%AC%EB%A6%AC-%EC%9E%AC%EA%B7%80\" aria-label=\"꼬리 재귀 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>꼬리 재귀</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> running_total <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> running_total<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> running_total <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">tailrecsum</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">15</span></code></pre></div>\n<p>꼬리 재귀은 연산을 먼저 한 후에 함수에게 연산의 결과를 전달한다. 그리고 함수들이 값을 반환할 때는 이미 결과가 계산되어 있기 때문에 동일한 값을 전달하므로써 일반 재귀의 단점을 보완한다.</p>\n<p>자바스크립트는 ECMAScript 6에서 Tail Call Optimization을 지원한다. 하지만 현재까지 Tail Call Optimization을 지원하는 브라우저가 거의 없어 최적화의 의미가 없다.</p>\n<p>참고: </p>\n<ul>\n<li><a href=\"https://ko.wikipedia.org/wiki/%EA%BC%AC%EB%A6%AC_%EC%9E%AC%EA%B7%80\">꼬리 재귀 - 위키백과</a></li>\n<li><a href=\"https://stackoverflow.com/questions/33923/what-is-tail-recursion\">What is tail recursion?</a></li>\n<li><a href=\"https://homoefficio.github.io/2015/07/27/%EC%9E%AC%EA%B7%80-%EB%B0%98%EB%B3%B5-Tail-Recursion/\">재귀, 반복, Tail Recursion</a></li>\n</ul>","frontmatter":{"title":"꼬리 재귀(Tail Recursion)","date":"October 07, 2021","lang":null}}},{"node":{"id":"14eec4dd-7749-530c-9255-70654d23f415","excerpt":"…","html":"<blockquote>\n<p>이번에 새로 프로젝트를 진행하면서 현재는 데이터베이스를 설계하는 단계에 있다. 그런데 프로젝트를 진행하다보니 프로젝트 각 단계에서 이걸 왜 하는지, 어떻게 해야하는지는 잘 모르고 있다는 생각이 들었다. 그래서 프로젝트를 진행하면서 각 단계에서 궁금한 것들, 모르겠는 것들을 찾아서 정리하고 공부해보려고 한다.</p>\n</blockquote>\n<p>일단 데이터베이스 설계 전에 UI 설계를 대략 만들었고, 그걸 보면서 어떤 기능이 들어가야할지 정리했다. 그걸 바탕으로 데이터베이스를 설계하는 중인데, 정작 데이터베이스에 대해서는 아는게 너무 없는 것 같아 데이터베이스부터 공부하려고 한다.</p>\n<ol>\n<li>\n<p>데이터베이스 설계의 개념</p>\n<p>데이터베이스 설계란 사용자의 요구를 분석하여 그것들을 컴퓨터에 저장할 수 있는 데이터베이스의 구조에 맞게 변형한 후 특정 DBMS로 데이터베이스를 구현하여 일반 사용자들이 사용하게 하는 것</p>\n</li>\n<li>\n<p>데이터베이스 설계 시 고려사항</p>\n<ul>\n<li>무결성: 삽입, 삭제, 갱신 등의 연상 후에도 데이터베이스에 저장된 데이터가 정해진 제약 조건을 항상 만족해야 한다.</li>\n<li>일관성: 데이터베이스에 저장된 데이터들 사이나, 특정 질의에 대한 응답이 처음부터 끝까지 변함없이 일정해야 한다.</li>\n<li>회복: 시스템에 장애가 발생했을 때 장애 발생 직전의 상태로 복구할 수 있어야 한다.</li>\n<li>보안: 불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야 한다.</li>\n<li>효율성: 응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야 한다.</li>\n<li>데이터베이스 확장: 데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야 한다.</li>\n</ul>\n</li>\n<li>\n<p>데이터베이스 설계 순서</p>\n<ul>\n<li>요구 조건 분석: 요구 조건 명세서 작성</li>\n<li>개념적 설계: 개념 스키마, 트랜잭션 모델링, E-R 모델</li>\n<li>논리적 설계: 목표 DBMS에 맞는 논리 스키마 설계, 트랜잭션 인터페이스 설계</li>\n<li>물리적 설계: 목표 DBMS에 맞는 물리적 구조의 데이터로 변환</li>\n<li>구현: 목표 DBMS의 DDL(데이터 정의어)로 데이터베이스 생성, 트랜잭션 작성</li>\n</ul>\n</li>\n<li>\n<p>요구 조건 분석</p>\n<ul>\n<li>요구 조건 분석은 데이터베이스를 사용할 사람들로부터 필요한 용도를 파악하는 것이다.</li>\n<li>데이터베이스 사용자에 따른 수행 업무와 필요한 데이터의 종류, 용도, 처리 형태, 흐름, 제약 조건 등을 수집한다.</li>\n<li>수집된 정보를 바탕으로 요구 조건 명세를 작성한다.</li>\n</ul>\n</li>\n<li>\n<p>개념적 설계(정보 모델링, 개념화)</p>\n<p>개념적 설계란 정보의 구조를 얻기 위하여 현실 세계의 무한성과 계속성을 이해하고, 다른 사람과 통신하기 위해서 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정이다.</p>\n<ul>\n<li>개념적 설계 단계에서는 개념 <a href=\"https://ko.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4_%EC%8A%A4%ED%82%A4%EB%A7%88\">스키마</a> 모델링과 <a href=\"https://ko.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4_%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98\">트랜잭션</a> 모델링을 병행 수행한다.</li>\n<li>개념적 설계 단계에서는 요구 분석 단계에서 나온 결과인 요구 조건 명세를 DBMS에 독릭적인 E-R 다이어그램으로 작성한다.</li>\n<li>DBMS에 독립적인 개념 스키마를 설계한다.</li>\n</ul>\n</li>\n<li>\n<p>논리적 설계(데이터 모델링)</p>\n<p>논리적 설계 단계란 현실 세계에서 발생하는 자료를 컴퓨터가 이해하고 처리할 수 있는 물리적 저장장치에 저장할 수 있도록 변환하기 위해 특정 DBMS가 지원하는 논리 자료 구조로 변환시키는 과정</p>\n<ul>\n<li>개념 세계의 데이터를 필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계로 표현되는 논리적 구조의 데이터로 모델화한다.</li>\n<li>개념적 설계가 개념 스키마를 설계하는 단계라면 논리적 설계에서는 개념 스키마를 평가 및 정제하고 DBMS에 따라 서로 다른 논리적 스키마를 설계하는 단계이다.</li>\n<li>트랜잭션의 인터페이스를 설계한다.</li>\n<li>관계형 데이터베이스라면 테이블을 설계하는 단계이다.</li>\n</ul>\n</li>\n<li>\n<p>물리적 설계(데이터 구조화)</p>\n<p>물리적 설계란 논리적 설계 단계에서 논리적 구조로 표현된 데이터를 디스크 등의 물리적 저장장치에 저장할 수 있는 물리적 구조의 데이터로 변환하는 과정이다.</p>\n<ul>\n<li>물리적 설계 단계에서는 다양한 데이터베이스 응용에 대해 처리 성능을 얻기 위해 데이터베이스 파일의 저장 구조 및 액세스 경로를 결정한다.</li>\n<li>저장 레코드의 형식, 순서, 접근 경로와 같은 정보를 사용하여 데이터가 컴퓨터에 저장되는 방법을 묘사한다.</li>\n</ul>\n</li>\n<li>\n<p>데이터베이스 구현</p>\n<p>데이터베이스 구현 단계란 논리적 설계 단계와 물리적 설계 단계에서 도출된 데이터베이스 스키마를 파일로 생성하는 과정이다.</p>\n<ul>\n<li>사용하려는 특정 DBMS의 DDL(데이터 정의어)을 이용하여 데이터베이스 스키마를 긱술한 후 컴파일하여 빈 데이터베이스 파일을 생성한다.</li>\n<li>응용 프로그램을 위한 트랜잭션을 작성한다.</li>\n<li>데이터베이스 접근을 위한 응용 프로그램을 작성한다.</li>\n</ul>\n</li>\n</ol>\n<p>출처: 시나공 정보처리기사 필기</p>","frontmatter":{"title":"[DB]데이터베이스 설계","date":null,"lang":null}}},{"node":{"id":"6b4a24e0-9247-5e6b-b8a9-ce2d3d2c8e34","excerpt":"…","html":"<ol>\n<li>\n<p>데이터 모델의 정의</p>\n<ul>\n<li>현실 세계의 정보들을 컴퓨터에 표현하기 위해서 단순화, 추상화하여 체계적으로 표현한 개념적 모형</li>\n<li>데이터, 데이터의 관계, 데이터의 의미 및 일관성, 제약 조건 등을 기술하기 위한 개념적 도구들의 모임</li>\n<li>현실 세계를 데이터베이스에 표현하는 중간 과정</li>\n<li>데이터베이스 설계 과정에서 데이터의 구조(Schema)를 논리적으로 표현하기 위해 사용되는 지능적 도구</li>\n<li><strong>구성요소</strong>: 개체, 속성, 관계</li>\n<li><strong>종류</strong>: 개념적 데이터 모델, 논리적 데이터 모델, 물리적 데이터 모델</li>\n<li><strong>표시할 요소</strong>: 구조, 연산, 제약 조건</li>\n</ul>\n</li>\n<li>\n<p>데이터 모델의 구성 요소</p>\n<ul>\n<li><strong>개체(Entity)</strong>: 데이터베이스에 표현하려는 것, 사람이 생각하는 개념이나 정보 단위 같은 현실 세계의 대상체</li>\n<li><strong>속성(Attribute)</strong>: 데이터의 가장 작은 논리적 단위로서 파일 구조상의 데이터 항목 또는 데이터 필드에 해당한다.</li>\n<li><strong>관계(Relationship)</strong>: 개체 간의 관계 도는 속성 간의 논리적인 연결을 의미한다.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"개념적-데이터-모델\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%85%90%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8\" aria-label=\"개념적 데이터 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개념적 데이터 모델</h3>\n<ul>\n<li>현실 세계에 대한 인간의 이해를 돕기 위해 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정</li>\n<li>속성들로 기술된 개체 타입과 이 개체 타입들 간의 관계를 이용하여 현실 세계를 표현한다.</li>\n<li>현실 세계에 존재하는 개체를 인간이 이해할 수 있는 정보 구조로 표현하기 때문에 정보 모델이라고도 한다.</li>\n<li>대표적인 개념적 데이터 모델로는 E-R 모델이 있다.</li>\n</ul>\n<h3 id=\"논리적-데이터-모델\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8\" aria-label=\"논리적 데이터 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리적 데이터 모델</h3>\n<ul>\n<li>개념적 모델링 과정에서 얻은 개념적 구조를 컴퓨터가 이해하고 처리할 수 있는 컴퓨터 세계의 환경에 맞도록 변환하는 과정</li>\n<li>필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계를 이용하여 현실 세계를 표현</li>\n<li>단순히 데이터 모델이라고 하면 논리적 데이터 모델을 의미한다.</li>\n<li>특정 DBMS는 특정 논리적 데이터 모델 하나만 선정하여 사용한다.</li>\n<li>논리적 데이터 모델은 데이터 간의 관계를 어떻게 표현하느냐에 따라 <code class=\"language-text\">관계 모델</code>, <code class=\"language-text\">계층 모델</code>, <code class=\"language-text\">네트워크 모델</code>로 구분한다.</li>\n</ul>\n<h3 id=\"데이터-모델에-표시할-요소\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EC%97%90-%ED%91%9C%EC%8B%9C%ED%95%A0-%EC%9A%94%EC%86%8C\" aria-label=\"데이터 모델에 표시할 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 모델에 표시할 요소</h3>\n<ul>\n<li><strong>구조(Structure)</strong>: 논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질을 표현</li>\n<li><strong>연산(Operation)</strong>: 데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로서 데이터베이스를 조작하는 기본 도구</li>\n<li><strong>제약조건(Constraint)</strong>: 데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약조건</li>\n</ul>\n<p>출처: 시나공 정보처리기사 필기</p>","frontmatter":{"title":"[DB]데이터 모델","date":null,"lang":null}}},{"node":{"id":"e06d7f13-4497-5a47-8749-b3d63887c89f","excerpt":"참고: 생활코딩 MySQL 강의 CREATE TABLE 테이블 생성 id는 자동으로 증가하며, 중복을 허용하지 않는 Primary key로 설정하였다. CREATE 데이터 생성 자동으로 증가하는 id는 insert시에 따로 넣어주지 않아도 된다. READ…","html":"<p>참고: 생활코딩 MySQL 강의</p>\n<h3 id=\"create-table\" style=\"position:relative;\"><a href=\"#create-table\" aria-label=\"create table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CREATE TABLE</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token constant\">CREATE</span> <span class=\"token constant\">TABLE</span> <span class=\"token function\">topic</span><span class=\"token punctuation\">(</span>\n    id <span class=\"token constant\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">NOT</span> <span class=\"token constant\">NULL</span> <span class=\"token constant\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n    title <span class=\"token constant\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">NOT</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>\n    description <span class=\"token constant\">TEXT</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>\n    created <span class=\"token constant\">DATETIME</span> <span class=\"token constant\">NOT</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>\n    author <span class=\"token constant\">VARCHAR</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>\n\tprofile <span class=\"token constant\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PRIMARY</span> <span class=\"token constant\">KEY</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>테이블 생성</li>\n<li>id는 자동으로 증가하며, 중복을 허용하지 않는 Primary key로 설정하였다.</li>\n</ul>\n<h2 id=\"create\" style=\"position:relative;\"><a href=\"#create\" aria-label=\"create permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CREATE</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">INSERT INTO topic<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">,</span> created<span class=\"token punctuation\">,</span> author<span class=\"token punctuation\">,</span> profile<span class=\"token punctuation\">)</span> VALUES<span class=\"token punctuation\">(</span><span class=\"token string\">'Oracle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Oracle is...'</span><span class=\"token punctuation\">,</span> NOW<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'engineer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>데이터 생성</li>\n<li>자동으로 증가하는 id는 insert시에 따로 넣어주지 않아도 된다.</li>\n</ul>\n<h2 id=\"read\" style=\"position:relative;\"><a href=\"#read\" aria-label=\"read permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>READ</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> topic<span class=\"token punctuation\">;</span>\n<span class=\"token function\">SELECT</span> id<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> created <span class=\"token keyword\">FROM</span> topic<span class=\"token punctuation\">;</span>\n<span class=\"token function\">SELECT</span> id as <span class=\"token string\">'아이디'</span><span class=\"token punctuation\">,</span> title as <span class=\"token string\">'제목'</span><span class=\"token punctuation\">,</span> created as <span class=\"token string\">'작성일'</span> <span class=\"token keyword\">FROM</span> topic<span class=\"token punctuation\">;</span>\n<span class=\"token function\">SELECT</span> id<span class=\"token punctuation\">,</span> title <span class=\"token keyword\">FROM</span> topic WHERE author = <span class=\"token string\">'a'</span> ORDER BY id desc<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>데이터 조회</li>\n<li><code class=\"language-text\">as</code>를 사용하면 조회되는 컬럼의 이름을 테이블에 설정된 이름과 다른 이름으로 보여줄 수 있다.</li>\n<li><code class=\"language-text\">where</code>를 사용하면 원하는 데이터만 걸러서 볼 수 있고, <code class=\"language-text\">order by</code>를 사용하면 뒤에 작성한 컬럼을 기준으로 정렬하여 조회된다. 기본값은 오름차순이고 내림차순으로 보고싶다면 컬럼 뒤에 <code class=\"language-text\">desc</code>을 붙여주면 된다.</li>\n</ul>\n<h2 id=\"update\" style=\"position:relative;\"><a href=\"#update\" aria-label=\"update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UPDATE</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">UPDATE topic <span class=\"token function\">SET</span> title=<span class=\"token string\">'Oracle'</span> WHERE id=2<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"delete\" style=\"position:relative;\"><a href=\"#delete\" aria-label=\"delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DELETE</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">DELETE <span class=\"token keyword\">FROM</span> topic WHERE id = 5<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>update, delete는 where을 사용하지 않으면 모든 데이터를 바꿔버리거나 모든 데이터를 지워버릴 수 있으므로 조심해서 사용해야한다.</li>\n</ul>","frontmatter":{"title":"[DB]MySQL CRUD 문법","date":null,"lang":null}}},{"node":{"id":"096680d0-e8e1-5663-8ae1-2f219d266d9c","excerpt":"출처: 위키백과 데이터베이스 관리 시스템(Database Management System…","html":"<p>출처: <a href=\"https://namu.wiki/w/DBMS\">위키백과</a></p>\n<ul>\n<li>데이터베이스 관리 시스템(Database Management System)</li>\n<li>다수의 사용자들이 데이터베이스 내의 데이터를 접근할 수 있도록 해주는 소프트웨어 도구의 집합</li>\n<li>사용자 또는 다른 프로그램의 요구를 처리하고 적절히 응답하여 데이터를 사용할 수 있도록 해준다.</li>\n</ul>\n<h3 id=\"기능\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5\" aria-label=\"기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능</h3>\n<ul>\n<li>중복 제어: 동일한 데이터가 여러 위치에 중복 저장되는 현상을 방지한다. 데이터가 중복되면, 저장 공간이 낭비되고 데이터의 일관성이 깨질 수 있다.</li>\n<li>접근 통제: DBMS는 사용자마다 다양한 권한을 부여할 수 있으며, 권한에 따라 데이터에 대한 접근을 제어할 수 있다.</li>\n<li>인터페이스 제공: DBMS는 사용자에게 SQL 및 CLI, GUI 등 다양한 인터페이스를 제공한다.</li>\n<li>\n<p>관계 표현: 서로 다른 데이터간의 다양한 관계를 표현할 수 있는 기능을 제공한다.</p>\n<ul>\n<li>샤딩/파티셔딩: 구조 취적화를 위해 작은 단위로 쪼개는 기능을 제공한다.</li>\n</ul>\n</li>\n<li>무결성 제약 조건: 무결성에 관한 제약 조건을 정의/검사하는 기능을 제공한다. 데이터베이스는 반드시 무결정 제약조건을 통과한 데이터만을 저장하고 있어야 한다.</li>\n<li>백업</li>\n</ul>\n<h3 id=\"한계\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EA%B3%84\" aria-label=\"한계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한계</h3>\n<ul>\n<li>DBMS는 모든 종류의 데이터를 관리하는 최선의 방법이 아니다.</li>\n<li>복잡한 DBMS일수록 트랜잭션, ACID(Atomicity, Consistency, Isolation, Durability) 등의 많은 컨셉을 지원하기 위한 오버헤드가 발생한다. 때문에 휴대폰 등의 임베디드 기기 같은 단순한 데이터베이스(예를 들어 전화번호부 등)의 경우는 다중 사용자나 회복 기능 등을 뺀 가벼운 DBMS를 만들어 사용하기도 한다.</li>\n<li>대다수의 DBMS는 비교적 크기가 작은 레코드를 수백만개씩 저장하는 것에 특화되어있다. 반대로 하나의 레코드가 몇십MB에서 GB급인 경우 데이터를 DB에 저장하면 쿼리 시 오버헤드가 클 수 있다. 이 경우 원래 파일은 파일 시스템에 직접 저장하거나 파일 시스템 스타일의 클라우드를 사용하고 그 경로만 DB에 저장하는게 바람직하다</li>\n<li>실시간 데이터 처리가 필요한 경우(예를 들어 군용, 항공우주용 등)에도 일반적으로 복잡한 기능을 제공하는 DBMS가 적합하지 않다. 다만 통신망, 금융권 등에서의 실시간 데이터 처리 개념에서는 오라클의 타임스텐이나 알티베이스의 ALTIBASE HDB와 같은 인 메모리 데이터베이스를 실시간 데이터 처리가 요구되는 구간에 사용하고, 이력 데이터와 같은 안정성이 중요시되는 데이터는 back-end 구간에 전통적인 디스크 기반 DBMS를 사용하는 방식으로 시스템을 구성하기도 한다.</li>\n<li>검색 엔진 등 극단적으로 데이터가 크며, READ/WRITE 간의 격차가 큰 경우에도 일반적인 DBMS를 사용하지 않는다. 이러한 경우 MM DBMS와 NoSQL 기술을 혼용하여 서비스를 구축한다. NoSQL 기술이 응용된 사례가 페이스북의 쪽지 기능이다.</li>\n</ul>\n<p><del>뭐지…무슨 뜻인지 모르겠네</del></p>\n<blockquote>\n<p><strong>오버헤드</strong> - overhead, 어떤 처리를 하기 위해 들어가는 간접적인 처리 시간, 메모리 등을 말한다. 예를 들어 A라는 처리를 단순하게 실행한다면 10초 걸리는데, 안정성을 고려하고 부가적인 B라는 처리를 추가한 결과 처리시간이 15초 걸렸다면, 오버헤드는 5초가 된다. 또한, 이 처리 B를 개선해 B’라는 처리를 한 결과, 처리시간이 12초가 되었다면, 이 경우 오버헤드가 3초 단축되었다고 말한다.</p>\n<p><strong>트랜잭션</strong> - transcation, 데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산들을 의미한다.</p>\n</blockquote>\n<h3 id=\"rdbms\" style=\"position:relative;\"><a href=\"#rdbms\" aria-label=\"rdbms permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RDBMS</h3>\n<ul>\n<li>관계형 데이터베이스 관리 시스템(relationship database management system)</li>\n<li>\n<p>DBMS의 한 종류로, 관계형 데이터 베이스를 생성, 수정, 관리할 수 있는 소프트웨어이다.</p>\n<ul>\n<li><strong>관계형 데이터베이스(RDB)</strong> - Relationship Database, 관계형 데이터 모델에 기초를 둔 데이터베이스이다.</li>\n<li>관계형 데이터 모델이란 데이터를 구성하는데 필요한 방법 중 하나로, 모든 데이터를 2차원 데이블 형태로 표현한다.</li>\n<li>데이터의 독립성이 높고, 고수준의 데이터 조작언어(DML-Data Manipulation Language)을 사용하여 결합, 제약, 투영 등의 관계 조작에 의해 비약적으로 표현능력을 높일 수 있다. 또한 이들의 관계 조작에 의해 자유롭게 구조를 변경할 수 있다는 것이 특징이다.</li>\n</ul>\n</li>\n<li>RDBMS의 테이블은 서로 연관되어 있어 일반 DBMS보다 효율적으로 데이터를 저장, 구성 및 관리할 수 있다</li>\n<li>정규화를 통해 데이터의 중복성을 최소화하며 트랜잭션을 수행하는 것이 더 쉽다</li>\n<li>데이터의 원자성, 일관성, 격리 및 내구성을 유지하며 데이터 무결성을 높인다.</li>\n<li>MSSQL, MySQL, Oracle 등이 있다</li>\n<li>\n<p>ER모델에 따라, 데이터베이스가 만들어지며, 데이터베이스는 하나 이상의 테이블로 구성된다.</p>\n<ul>\n<li><strong>ER모델</strong> - Entity Relationship Model</li>\n<li>요구사항으로부터 얻어낸 정보들을 개체(Entity), 속성(Attribute), 관계성(Relation)으로 기술하는 데이터 모델을 말한다.</li>\n<li>개체란 단독으로 존재하는 개체를 의미하며, 동일한 개체는 존재하지 않는다.</li>\n<li>속성이란, 개체가 갖는 속성을 의미한다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[DB]DBMS와 RDBMS","date":null,"lang":null}}},{"node":{"id":"fb2beb55-55d5-59de-adca-26a852a6d433","excerpt":"NoSQL이란? SQL은 관계형 데이터베이스에서 데이터를 다루기 위해 사용된다. 관계형 데이터베이스는 정해진 구조에 맞는 일관된 데이터를 적재되기 때문에 SQL…","html":"<h2 id=\"nosql이란\" style=\"position:relative;\"><a href=\"#nosql%EC%9D%B4%EB%9E%80\" aria-label=\"nosql이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NoSQL이란?</h2>\n<p>SQL은 관계형 데이터베이스에서 데이터를 다루기 위해 사용된다. 관계형 데이터베이스는 정해진 구조에 맞는 일관된 데이터를 적재되기 때문에 SQL을 사용하여 다루기에 용이한데, 일정한 규칙을 가지고 있어 편리할 수 있지만, 데이터에 비해 불필요하게 복잡한 구조를 가지게 될 수도 있다. 이럴 때는 NoSQL을 사용하여 더 간단한 구조로 데이터를 관리할 수 있는 경우도 있다.</p>\n<p>NoSQL은 데이터를 테이블화하여 관리하지 않는 모든 방식에 사용되는 용어이다. 넓은 범위를 아우르는 개념이긴 하지만 공통적으로 SQL의 단점을 보완할 수 있는 장점을 가지고 있다.</p>\n<h2 id=\"nosql을-사용하는-이유\" style=\"position:relative;\"><a href=\"#nosql%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"nosql을 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NoSQL을 사용하는 이유</h2>\n<ol>\n<li>\n<p>비구조적인 대용량 데이터를 저장하는 경우</p>\n<p>데이터 사이에 관계를 중점을 둔 SQL 데이터베이스와 달리 자유로운 형태로 데이터를 저장할 수 있어 필요에 따라 새로운 데이터 유형을 추가할 수 있다.</p>\n<p>→ <strong>소프트웨어 개발에 정형화되지 않은 많은 양의 데이터가 필요한 경우 NoSQL이 효율적일 수 있음</strong></p>\n</li>\n<li>\n<p>클라우드 컴퓨팅 및 저장 공간을 최대한 활용하는 경우</p>\n<p>NoSQL 데이터베이스는 DB를 클라우드 기반으로 쉽게 분리할 수 있도록 지원하기 때문에 저장공간을 효율적으로 사용할 수 있습니다.</p>\n<p>관계형 데이터베이스는 시스템이 커져서 DB를 증설해야하는 시점이 오면, 수직적 형태로 확장하게 됩니다. 수직적으로 확장된 DB는 관리가 어렵고, 비용도 기하급수적으로 늘어나는데에 반해 NoSQL은 수평적 확장의 형태로 증설하므로, 비교적 적은 비용으로 증설이 가능하고, 이론적으로는 무한대로 서버를 계속 분산시켜 DB를 증설할 수 있습니다.</p>\n</li>\n<li>\n<p>빠르게 서비스를 구축하고 데이터 구조를 자주 업데이트하는 경우</p>\n<p>NoSQL 데이터베이스는 스키마를 미리 설계할 필요가 없어 개발을 빠르게 해야 하는 경우에 매우 적합합니다. 시장에 빠르게 프로토타입을 출시해야하는 경우에 적합하고, 소프트웨어 버전별로 많은 다운타임없이 데이터베이스의 구조를 업데이트해야 하는 경우에는 업데이트를 할 때마다 스키마를 일일이 수정해주어야 하는 관계형 데이터베이스보다 NoSQL 기반의 데이터베이스가 더 효율적입니다.</p>\n</li>\n</ol>","frontmatter":{"title":"[DB] SQL?NoSQL?","date":"November 21, 2021","lang":null}}},{"node":{"id":"8e25a4b7-a9e5-522b-ac8f-d5276235113c","excerpt":"여러 번 메이븐 때문에 고생을 했었는데 그 동안 고생한 것도 이 방법으로 해결할 수 있지 않았을까 싶어서 나중에 이 문제로 또 고생할 나를 위해 기록해놓으려고 한다. 현상 메이븐으로 받아와야하는 jar를 찾지 못함 pom.xml에 필요한 dependency는 잘 들어가 있음 .m…","html":"<p>여러 번 메이븐 때문에 고생을 했었는데 그 동안 고생한 것도 이 방법으로 해결할 수 있지 않았을까 싶어서 나중에 이 문제로 또 고생할 나를 위해 기록해놓으려고 한다.</p>\n<h3 id=\"현상\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%83%81\" aria-label=\"현상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현상</h3>\n<ul>\n<li>메이븐으로 받아와야하는 jar를 찾지 못함</li>\n<li>pom.xml에 필요한 dependency는 잘 들어가 있음</li>\n<li>.m/repository~~ 에 확인해봐도 잘 들어가 있음</li>\n<li>maven update, clean 수십번 해봐도 안됨</li>\n<li>pom.xml이 똑같은 다른 프로젝트는 잘 실행되는데 어떤건 또 안됨</li>\n</ul>\n<h3 id=\"해결\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0\" aria-label=\"해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결</h3>\n<ul>\n<li>프로젝트가 저장되어있는 워크스페이스 폴더 내부에서 <code class=\"language-text\">\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp1\\wtpwebapps</code> 여기서 문제가 발생한 프로젝트 폴더를 클릭</li>\n<li>안에서 <code class=\"language-text\">WEB-INF\\lib</code> 로 이동하면 현재 프로젝트에 적용된 jar 파일들이 쭉 나오는데, 오류가 발생한 jar가 존재하지 않는다면 jar 파일을 찾아서 복붙</li>\n<li><code class=\"language-text\">C:\\Users\\사용자이름\\.m2\\repository</code> 경로로 들어가면 메이븐이 저장한 jar 파일을 찾을 수 있음</li>\n</ul>\n<blockquote>\n<p>이렇게 해도 되는건지 모르겠지만.. 일단 실행이 되니까 너무 속시원하다😝</p>\n</blockquote>","frontmatter":{"title":"메이븐으로 넣은 jar를 프로젝트가 찾지 못할 때","date":null,"lang":null}}},{"node":{"id":"36ae0157-21ab-54f4-9eff-5a25f7ea5c44","excerpt":"SQL 실행 cmd 창에서 sqlplus 실행 사용자명 , 비밀번호  비밀번호를 까먹었으면 재설정해주어야함 image DB에 생성된 계정 확인 sql 사용자 계정 생성 계정 생성 후 계정이 생성됐는지 확인 계정 비밀번호 변경 계정 권한 할당 DB…","html":"<h3 id=\"sql-실행\" style=\"position:relative;\"><a href=\"#sql-%EC%8B%A4%ED%96%89\" aria-label=\"sql 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL 실행</h3>\n<ol>\n<li>cmd 창에서 sqlplus 실행</li>\n<li>\n<p>사용자명 <code class=\"language-text\">system</code>, 비밀번호 <code class=\"language-text\">설치시 입력했던 비밀번호</code></p>\n<ul>\n<li>비밀번호를 까먹었으면 재설정해주어야함</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/113149743-4fee3080-926e-11eb-9771-85a27346ed37.png\" alt=\"image\"></p>\n<h3 id=\"db에-생성된-계정-확인\" style=\"position:relative;\"><a href=\"#db%EC%97%90-%EC%83%9D%EC%84%B1%EB%90%9C-%EA%B3%84%EC%A0%95-%ED%99%95%EC%9D%B8\" aria-label=\"db에 생성된 계정 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB에 생성된 계정 확인</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> all_users<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 모든 계정에 대한 정보 확인</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dba_users<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 모든 계정에 대한 정보 확인</span>\n<span class=\"token keyword\">select</span> username <span class=\"token keyword\">from</span> all_users<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 모든 계정에 대한 이름 확인</span>\n<span class=\"token keyword\">select</span> username <span class=\"token keyword\">from</span> dba_users<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 모든 계정에 대한 이름 확인</span></code></pre></div>\n<h3 id=\"sql-사용자-계정-생성\" style=\"position:relative;\"><a href=\"#sql-%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B3%84%EC%A0%95-%EC%83%9D%EC%84%B1\" aria-label=\"sql 사용자 계정 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sql 사용자 계정 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span> identified <span class=\"token keyword\">by</span> <span class=\"token punctuation\">[</span>password<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>계정 생성 후 계정이 생성됐는지 확인</p>\n<h3 id=\"계정-비밀번호-변경\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%A0%95-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD\" aria-label=\"계정 비밀번호 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계정 비밀번호 변경</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">]</span> identified <span class=\"token keyword\">by</span> <span class=\"token punctuation\">[</span>new password<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"계정-권한-할당\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%A0%95-%EA%B6%8C%ED%95%9C-%ED%95%A0%EB%8B%B9\" aria-label=\"계정 권한 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계정 권한 할당</h3>\n<ul>\n<li>DB설치시 자동으로 생성되어있는 관리자 계정으로만 권한을 줄 수 있음(sys, system)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> 권한명 <span class=\"token keyword\">to</span> 계정<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>create user: 데이터 베이스 유저 생성 권한</li>\n<li>select any table: 모든 유저의 테이블 조회 권한</li>\n<li>create any table: 모든 유저의 테이블 생성 권한</li>\n<li>create session: 데이터베이스 접속 권한</li>\n<li>create table: 테이블 생성 권한</li>\n<li>create view: 뷰 생성 권한</li>\n<li>create proced user: 프로시저 생성 권한</li>\n<li>create sequence: 시퀀스 생성 권한</li>\n<li>sysdba: 데이터베이스를 관리하는 최고 권한</li>\n<li>sysoper: 데이터베이스를 관리하는 권한</li>\n</ul>\n<h3 id=\"revoke-권한-제거\" style=\"position:relative;\"><a href=\"#revoke-%EA%B6%8C%ED%95%9C-%EC%A0%9C%EA%B1%B0\" aria-label=\"revoke 권한 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>revoke 권한 제거</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">revoke</span> 권한명 <span class=\"token punctuation\">(</span>시스템명령 또는 <span class=\"token keyword\">SQL</span> 명령<span class=\"token punctuation\">)</span> <span class=\"token keyword\">on</span> 테이블명 <span class=\"token keyword\">from</span> 계정<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"계정-삭제\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%A0%95-%EC%82%AD%EC%A0%9C\" aria-label=\"계정 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계정 삭제</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">user</span> 계정명 <span class=\"token keyword\">cascade</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/113153701-52eb2000-9272-11eb-9b3a-613994fd8821.png\" alt=\"image\"></p>\n<ol>\n<li>사용자 계정 만들기(위 사진에 없음)</li>\n<li>권한 부여</li>\n<li>사용자 계정에 테이블 공간 설정</li>\n<li>\n<p>테이블 공간에 쿼터 할당</p>\n<blockquote>\n<p>quota: 테이블 스페이스 할당량 지정</p>\n<p>사용하고자 하는 테이블 스페이스 전체 용량 중 유저가 사용할 수 있는 양을 지정해 주는 옵션</p>\n</blockquote>\n</li>\n</ol>\n<p>출처: <a href=\"https://m.blog.naver.com/PostView.nhn?blogId=isaac7263&#x26;logNo=221359434614&#x26;proxyReferer=https:%2F%2Fwww.google.com%2F\">https://m.blog.naver.com/PostView.nhn?blogId=isaac7263&#x26;logNo=221359434614&#x26;proxyReferer=https:%2F%2Fwww.google.com%2F</a></p>","frontmatter":{"title":"[oracle]오라클DB 계정 생성","date":null,"lang":null}}},{"node":{"id":"c73b6570-cd45-5551-b3e7-74bc082b06ed","excerpt":"React Hook useEffect has a missing dependency: ***. Either include it or remove the dependency array. React.js에서 Hooks를 사용하다보면 위와 같은 warning…","html":"<blockquote>\n<p>React Hook useEffect has a missing dependency: ***. Either include it or remove the dependency array.</p>\n</blockquote>\n<p>React.js에서 Hooks를 사용하다보면 위와 같은 warning를 자주 만나게 된다. 대부분의 warning들과 동일하게 고치지 않는다고 리액트가 멈추거나 제대로 된 동작을 하지 않는건 아니었다.</p>\n<h2 id=\"원인\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EC%9D%B8\" aria-label=\"원인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원인</h2>\n<blockquote>\n<p>This is a new ESLint rule that verifies the list of dependencies for Hooks like useEffect and similar, protecting against the stale closure pitfalls.</p>\n</blockquote>\n<p>react repo에 따르면 이 waring은 useEffect 같은 Hooks에 대한 종속성 목록을 확인하여 오래된 클로저 함정에 빠지지 않도록 방지하기 위한 ESLINT 규칙에 의해 발생한다고 한다. </p>\n<h3 id=\"오래된-클로저-the-stale-closure\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%9E%98%EB%90%9C-%ED%81%B4%EB%A1%9C%EC%A0%80-the-stale-closure\" aria-label=\"오래된 클로저 the stale closure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오래된 클로저 (the stale closure)</h3>\n<p>다음은 1초 마다 count의 값을 콘솔에 기록하는 컴포넌트이다. 버튼을 클릭하면 count의 값을 증가시킬 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">counter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Count is: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              Increment\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> </code></pre></div>\n<p>이 컴포넌트의 클로저로 인해 useEffect는 처음 실행될 때의 count만 기억하고 있다. count의 값이 변화해도 최신 count의 값은 사용하지 않고 처음 값만을 가지고 있다. 이것이 오래된 클로저이다.\n오래된 클로저를 해결하기 위해서는 useEffect의 종속성 목록에 count를 추가하면 된다.</p>\n<p>정말 경고에서 말하는 그대로 useEffect의 종속성 목록에 있어야 할 값이 없어서 발생하는 경고인 것이다. 그런데 문제는 이 경고가 상수, 함수, dispatch 같은 변경될 일이 없는 값을 사용했을 경우에도 발생한다는 것이다. 작성하는 우리야 이 값들이 변경될 일이 없다는 것을 알고 있지만 lint는 이를 모르기 때문에 ‘어! 이거 외부 스코프에서 오는 값인데 종속성에서 누락됐네!’ 하는 것이다.</p>\n<h2 id=\"해결-방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법</h2>\n<blockquote>\n<p>Either include it or remove the dependency array.</p>\n</blockquote>\n<p>해결 방법은 간단하다. warning에 적혀있는 말 그대로 *** 자리에 있는 값을 종속성 배열에 넣어주거나 종속성 배열을 아예 지워주면 된다. 만약 문제가 발생한 값이 함수이고 그 함수가 useEffect 내부에서만 사용된다면 useEffect 내부에서 정의를 해주어도 warning은 사라진다.</p>\n<p>참고:</p>\n<ul>\n<li><a href=\"https://github.com/facebook/react/issues/14920\">[ESLint] Feedback for ‘exhaustive-deps’ lint rule</a></li>\n<li><a href=\"https://medium.com/edonec/useeffect-and-stale-closures-ea74df7ac452\">UseEffect And Stale Closures</a></li>\n<li><a href=\"https://jong-hui.github.io/devlog/2021/01/08/(React)%ED%9B%85%EC%9D%B4-%EC%8B%A4%ED%8C%A8%ED%95%9C-%EC%84%A4%EA%B3%84%EC%9D%B8-%EC%9D%B4%EC%9C%A0-4%EA%B0%80%EC%A7%80/\">[React] 리액트 훅이 실패한 설계인 이유 네가지</a></li>\n</ul>","frontmatter":{"title":"React - exhaustive-deps 원인과 해결 방법","date":"November 05, 2021","lang":null}}},{"node":{"id":"eeb62cb7-4672-5a03-9f3e-88d73d43b052","excerpt":"참고: 장고걸스 가상환경 (Virtual environment) 개발환경으로 깔끔하게 관리하는 데 도움됨 디렉토리명에 악센트, 특수문자가 포함되지 않도록 주의 를 실행하라고 되어있었는데 라고 쳐야 진행됐다 사용하기 이부분은 왠지 모르겠는데 windows terminal…","html":"<p>참고: <a href=\"https://tutorial.djangogirls.org/ko/installation/\">장고걸스</a></p>\n<h3 id=\"가상환경-virtual-environment\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-virtual-environment\" aria-label=\"가상환경 virtual environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상환경 (Virtual environment)</h3>\n<ul>\n<li>개발환경으로 깔끔하게 관리하는 데 도움됨</li>\n<li>디렉토리명에 악센트, 특수문자가 포함되지 않도록 주의</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir djangogirls\ncd djangogirls\npython -m venv myvenv</code></pre></div>\n<ul>\n<li><code class=\"language-text\">python3 -m venv myvenv</code>를 실행하라고 되어있었는데 <code class=\"language-text\">python -m venv myvenv</code>라고 쳐야 진행됐다</li>\n</ul>\n<h4 id=\"사용하기\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\Users\\Name\\djangogirls> myvenv\\Scripts\\activate</code></pre></div>\n<ul>\n<li>이부분은 왠지 모르겠는데 windows terminal에서는 안되고 PowerShell에서는 잘 됐음</li>\n<li>\n<p>PowerShell에서 ‘이 스크립트는 이 시스템에서 실행되지 않습니다’어쩌고 하는 오류 메세지가 뜰 경우 PowerShell을 관리자권한으로 실행하고</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\WINDOWS\\system32> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned</code></pre></div>\n<p>을 해줬더니 해결됐음</p>\n</li>\n<li>콘솔 프롬프트 앞에 <code class=\"language-text\">(myvenv)</code> 가 붙어있다면 가상환경이 시작된 것이다.</li>\n</ul>\n<h3 id=\"설치하기\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치하기</h3>\n<ul>\n<li>\n<p>그 전에 장고를 설지하는데 필요한 pip가 최신 버전인지 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(myvenv) ~$ python3 -m pip install --upgrade pip</code></pre></div>\n</li>\n<li>\n<p>확인이 끝나면 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pip install django~=2.0.0</code></pre></div>\n</li>\n<li>코드에디터</li>\n<li>GitHub 계정</li>\n<li>PythonAnywhere 계정 -> 무료계정</li>\n</ul>\n<p>위의 세개 필요</p>","frontmatter":{"title":"[django]1. 설치하기","date":null,"lang":null}}},{"node":{"id":"9dc3a91a-83fc-5837-a680-5f7313dda49f","excerpt":"참고: 장고걸스 Django는 파이썬으로 만들어진 무료 오픈소스 웹 애플리케이션 프레임워크(web application framework)이다. 쉽고 빠르게 웹 사이트를 개발할 수 있도록 돕는 구성요소로 이루어진 웹 프레임워크 urlresolver…","html":"<p>참고: <a href=\"https://tutorial.djangogirls.org/ko/django/\">장고걸스</a></p>\n<ul>\n<li>Django는 파이썬으로 만들어진 무료 오픈소스 웹 애플리케이션 프레임워크(web application framework)이다.</li>\n<li>쉽고 빠르게 웹 사이트를 개발할 수 있도록 돕는 구성요소로 이루어진 웹 프레임워크</li>\n</ul>\n<h4 id=\"urlresolver\" style=\"position:relative;\"><a href=\"#urlresolver\" aria-label=\"urlresolver permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>urlresolver</h4>\n<ul>\n<li>웹서버에 요청이 오면 장고로 전달되고 장고 urlresolver는 웹페이지의 주소를 가져와 무엇을 할지 확인한다.</li>\n<li>urlresolver는 패턴 목록을 가져와 URL과 맞는지 처음부터 하나씩 대조해 식별하고 맞는 패턴이 있으면 장고는 해당 요청을 관련된 함수(view)에 넘겨준다.</li>\n<li>주소와 번지가 일치하면 그곳에 편지를 배달하는 집배원과 같은 역할</li>\n</ul>\n<h4 id=\"view-함수\" style=\"position:relative;\"><a href=\"#view-%ED%95%A8%EC%88%98\" aria-label=\"view 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>view 함수</h4>\n<ul>\n<li>특정 정보를 데이터베이스에서 찾을 수 있다.</li>\n<li>수정: 수정권한이 있는지 확인 후, 수정, 알림</li>\n<li>장고는 그 알림을 받아서 사용자의 웹 브라우저로 보내주는 역할을 한다.</li>\n</ul>","frontmatter":{"title":"[django]2. 장고란?","date":null,"lang":null}}},{"node":{"id":"799b52d9-04a2-5105-ac6b-248390601736","excerpt":"…","html":"<ul>\n<li>장고에서 디렉토리와 파일명은 매우 중요하다. 파일명을 마음대로 변경해서도 이동해서도 안된다. 장고는 중요한 것들을 찾을 수 있게 특정한 구조를 유지해야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PS C:\\~~~\\djangogirls> myvenv\\Scripts\\activate\n(myvenv) PS C:\\~~~\\djangogirls> django-admin.py startproject mysite .</code></pre></div>\n<ul>\n<li><code class=\"language-text\">.</code>을 붙여주어야 실행된다. 현재 디렉토리에 장고를 설치하라고 스크립트에 알려줌(축약된 표시)</li>\n<li><code class=\"language-text\">manage.py</code>: 스크립트인데 사이트 관리를 도와주는 역할 이 스크립트를 사용하여 다른 설치 없이, 컴퓨터에서 웹 서버를 시작할 수 있다.</li>\n<li><code class=\"language-text\">setting.py</code>: 웹 사이트 설정이 있는 파일</li>\n<li><code class=\"language-text\">urls.py</code>: <code class=\"language-text\">urlresolver</code>가 사용하는 패턴 목록을 포함</li>\n</ul>\n<h3 id=\"설정-변경\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%EB%B3%80%EA%B2%BD\" aria-label=\"설정 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 변경</h3>\n<p><code class=\"language-text\">mysite/setting.py</code>의 <code class=\"language-text\">TIME_ZONE</code> 수정 <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">위키피디아 타임존 리스</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">TIME_ZONE <span class=\"token operator\">=</span> <span class=\"token string\">'Asia/Seoul'</span></code></pre></div>\n<h4 id=\"정적파일-경로-추가\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81%ED%8C%8C%EC%9D%BC-%EA%B2%BD%EB%A1%9C-%EC%B6%94%EA%B0%80\" aria-label=\"정적파일 경로 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적파일 경로 추가</h4>\n<p>맨 아래 <code class=\"language-text\">STATIC_URL</code>아래에</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">STATIC_ROOT <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"allowed_hosts\" style=\"position:relative;\"><a href=\"#allowed_hosts\" aria-label=\"allowed_hosts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ALLOWED_HOSTS</h4>\n<p><code class=\"language-text\">DEBUG</code>가 <code class=\"language-text\">True</code>이고 <code class=\"language-text\">ALLOWED_HOSTS</code>가 비어 있으면, 호스트는 <code class=\"language-text\">['localhost','127.0.0.1', '[::1]']</code>에 대해 유효하다. 애플리케이션을 배포할 때 PythonAnywhere의 호스트 이름과 일치하지 않으므로 설정을 바꿔 주어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">ALLOWED_HOSTS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.pythonanywhere.com'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"데이터베이스-설정하기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"데이터베이스 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 설정하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">DATABASES <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'ENGINE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'django.db.backends.sqlite3'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'NAME'</span><span class=\"token punctuation\">:</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'db.sqlite3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>블로그에 데이터베이스를 생성하기 위해 아래 코드를 콘솔에 입력한다. 명령을 실행하기 위해서는 <code class=\"language-text\">djangogirls</code>디렉터리 안에 있는 <code class=\"language-text\">magange.py</code>가 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python manage.py migrate</code></pre></div>\n<h4 id=\"웹서버-시작\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%EC%84%9C%EB%B2%84-%EC%8B%9C%EC%9E%91\" aria-label=\"웹서버 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹서버 시작</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(myvenv) ~/djangogirls$ python manage.py runserver</code></pre></div>\n<p>브라우저에 <code class=\"language-text\">http://127.0.0.1:8000/</code>로 이동하여 잘 실행됐는지 확인</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/107882446-bae8df80-6f2c-11eb-896d-1bb9e2bd4034.png\" alt=\"django_runserver\"></p>\n<p>잘된다! 신기해!</p>","frontmatter":{"title":"[django]3. 나의 첫 번째 장고 프로젝트","date":null,"lang":null}}},{"node":{"id":"b8afaac3-45a7-51d3-911a-005950e1b78d","excerpt":"참고: 장고걸스 객체(Object…","html":"<p>참고: <a href=\"https://tutorial.djangogirls.org/ko/django_models/\">장고걸스</a></p>\n<h3 id=\"객체object\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4object\" aria-label=\"객체object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체(Object)</h3>\n<p>프로그래밍 개발 방법 중에 하나인<code class=\"language-text\">객체 지향 프로그래밍(Object oriented programming)</code>은 프로그램이 어떻게 작동해야 하는지 모든 것을 하나하나 지시하는 것 대신, 모델을 만들어 그 모델이 어떤 역할을 가지고 어떻게 행동해야 하는지 정의하여 서로 알아서 상호작용할 수 있도록 만드는 것이다.</p>\n<p>여기서 객체란 속성과 행동을 모아놓은 것이라고 할 수 있다.</p>\n<h3 id=\"장고-모델\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EA%B3%A0-%EB%AA%A8%EB%8D%B8\" aria-label=\"장고 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장고 모델</h3>\n<p>장고 안의 모델은 객체의 특별한 종류이다. 이 모델을 저장하면 그 내용이 데이터베이스에 저장된다.</p>\n<p><code class=\"language-text\">데이터베이스</code>란 데이터의 집합, 데이터들이 모여 있는 곳\n사용자에 대한 정보나 블로그의 글 등등이 저장된다.</p>\n<p>여기서 사용할 건 <code class=\"language-text\">SQLite</code>데이터 베이스: 기본 장고 데이터베이스 어댑터이다.</p>\n<p>쉽게 말해 데이터베이스 안의 모델이란 엑셀 스프레드시트라고 말할 수 있다.(모델도 열(필드)과 행(데이터)로 구성되어있다)</p>\n<h3 id=\"어플리케이션-만들기\" style=\"position:relative;\"><a href=\"#%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"어플리케이션 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어플리케이션 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(myvenv) PS C:\\Users\\doyeon\\djangogirls> python manage.py startapp blog</code></pre></div>\n<p>blog 디렉토리가 생성되고 그 안에 여러 파일도 세팅된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    djangogirls\n    ├── mysite\n    |       __init__.py\n    |       settings.py\n    |       urls.py\n    |       wsgi.py\n    ├── manage.py\n    └── blog\n        ├── migrations\n        |       __init__.py\n        ├── __init__.py\n        ├── admin.py\n        ├── models.py\n        ├── tests.py\n        └── views.py</code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">mysite/setting.py</code>안에 <code class=\"language-text\">INSTALLED_APPS</code>설정 추가하기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'django.contrib.admin'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'django.contrib.auth'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'django.contrib.contenttypes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'django.contrib.sessions'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'django.contrib.messages'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'django.contrib.staticfiles'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'blog'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"블로그-글-모델-만들기\" style=\"position:relative;\"><a href=\"#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B8%80-%EB%AA%A8%EB%8D%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"블로그 글 모델 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블로그 글 모델 만들기</h3>\n<p>모든 <code class=\"language-text\">Model</code>객체는 <code class=\"language-text\">blog/models.py</code>파일에 선언하여 모델을 만든다. 파일을 열어서 안에 있는 모든 내용을 삭제한 후</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>conf <span class=\"token keyword\">import</span> settings\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> timezone\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    author <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>AUTH_USER_MODEL<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    created_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>\n            default<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">)</span>\n    published_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span>\n            blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>published_date <span class=\"token operator\">=</span> timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>title</code></pre></div>\n<ul>\n<li><code class=\"language-text\">models</code>\nPost가 장고 모델임을 의미, 이 코드로 장고는 Post가 데이터베이스에 저장되어야 한다는걸 알게 된다.</li>\n<li><code class=\"language-text\">models.CharField</code>\n글자 수가 제한된 텍스트를 정의할 때 사용\n글 제목같이 짧은 문자열 정보를 저장할 때 사용한다.</li>\n<li><code class=\"language-text\">models.TextField</code>\n글자 수 제한이 없는 긴 텍스트를 정의할 때 사용한다. 블로그 콘텐츠 같은</li>\n<li><code class=\"language-text\">models.DateTimeField</code>\n날짜와 시간을 의미한다.</li>\n<li><code class=\"language-text\">models.ForeignKey</code>\n다른 모델에 대한 링크를 의미한다.</li>\n<li><a href=\"https://docs.djangoproject.com/en/2.0/ref/models/fields/#field-types\">장고문서</a></li>\n</ul>\n<h3 id=\"데이터베이스에-모델을-위한-테이블-만들기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%97%90-%EB%AA%A8%EB%8D%B8%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"데이터베이스에 모델을 위한 테이블 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스에 모델을 위한 테이블 만들기</h3>\n<p>먼저 장고 모델에 몇 가지 변경사항이 있다는 것을 알게 해줘야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python manage.py makemigrations blog</code></pre></div>\n<p>장고는 데이터베이스에 지금 반영할 수 있도록 <code class=\"language-text\">migration file</code>이라는 것을 준비해 두었습니다. 위의 명령을 실행해 실제 데이터베이스에 모델 추가를 반영합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python manage.py migrate blog</code></pre></div>\n<p>명령이 실행되면 <code class=\"language-text\">Post</code> 모델이 데이터 베이스에 저장된다.</p>","frontmatter":{"title":"[django]4. 장고 모델","date":null,"lang":null}}},{"node":{"id":"7a6dc624-d73d-57ed-8f2f-1074f5ef241d","excerpt":"언어 설정 에서 장고 관리자에서는 글을 추가, 수정, 삭제할 수 있다. 에서 앞에서 정의했던 모델을  관리자 페이지에서 만든 모델을 보려면 로 모델 등록 관리자 페이지는 를 실행후 브라우저에서 http://127.0.0.1:8000/admin/로 이동하여 확인 django…","html":"<h4 id=\"언어-설정\" style=\"position:relative;\"><a href=\"#%EC%96%B8%EC%96%B4-%EC%84%A4%EC%A0%95\" aria-label=\"언어 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>언어 설정</h4>\n<p><code class=\"language-text\">settings.py</code>에서</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">LANGUAGE_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'ko'</span> <span class=\"token comment\"># en-us</span></code></pre></div>\n<p>장고 관리자에서는 글을 추가, 수정, 삭제할 수 있다.</p>\n<p><code class=\"language-text\">blog/admin.py</code>에서</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Post\n\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>앞에서 정의했던 <code class=\"language-text\">Post</code>모델을 <code class=\"language-text\">import</code></li>\n<li>관리자 페이지에서 만든 모델을 보려면 <code class=\"language-text\">admin.site.register(Post)</code>로 모델 등록</li>\n<li>관리자 페이지는 <code class=\"language-text\">python manage.py runserver</code>를 실행후 브라우저에서 <a href=\"http://127.0.0.1:8000/admin/%EB%A1%9C\">http://127.0.0.1:8000/admin/로</a> 이동하여 확인</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/107882460-d3f19080-6f2c-11eb-8341-2181c6ebb356.png\" alt=\"django_runserver_admin\"></p>\n<p>( 된다! 신기해! )</p>\n<ul>\n<li>\n<p>로그인을 하려면 모든 권한을 가진 superuser를 생성해야한다.</p>\n<p>커맨드라인으로 돌아가서 <code class=\"language-text\">python manage.py createsuperuser</code>실행, 사용자이름, 이메일, 암호 입력</p>\n</li>\n<li>관리자 페이지에서 방금 만든 계정으로 로그인을 해보면 블로그 포스팅, 등등 여러가지 관리자 기능을 사용할 수 있다.</li>\n</ul>","frontmatter":{"title":"[django]5. 장고 관리자","date":null,"lang":null}}},{"node":{"id":"add3de50-ba60-5a51-a2b5-aec6a11d38dc","excerpt":"로컬컴퓨터: 개발 및 테스트 수행 GitHub: 개발이 완료되면 프로그램 복사본 저장 PythonAnywhere: 웹사이트 배포 Git 저장소 만들기 아래의 내용을 저장하고 이름을 로 생성, 폴더 맨 위에 저장 은 모든 게시물이 저장된 로컬 데이터베이스\nPythonAnywhere…","html":"<ul>\n<li>로컬컴퓨터: 개발 및 테스트 수행</li>\n<li>GitHub: 개발이 완료되면 프로그램 복사본 저장</li>\n<li><a href=\"https://www.pythonanywhere.com/\">PythonAnywhere</a>: 웹사이트 배포</li>\n</ul>\n<h3 id=\"git-저장소-만들기\" style=\"position:relative;\"><a href=\"#git-%EC%A0%80%EC%9E%A5%EC%86%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"git 저장소 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git 저장소 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git init\ngit config --global user.name \"Your Name\"\ngit config --global user.email you@example.com</code></pre></div>\n<p>아래의 내용을 저장하고 이름을 <code class=\"language-text\">.gitignore</code>로 생성, 폴더 맨 위에 저장</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*.pyc\n*~\n__pycache__\nmyvenv\ndb.sqlite3\n/static\n.DS_Store</code></pre></div>\n<ul>\n<li><code class=\"language-text\">db.splite3</code>은 모든 게시물이 저장된 로컬 데이터베이스\nPythonAnywhere는 다른 데이터베이스를 사용하기 때문에 저장소에 추가될 필요 없다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git status // 미추척, 수정된, 스테이지된 파일, 프렌치 상태와 그 외 많은 정보를 보여준다</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git commit -m 'My Django Girls app, first commit'\ngit remote add origin http://repoURL\ngit push -u origin master</code></pre></div>\n<h4 id=\"github에서-pythonanywhere로-코드-가져오기\" style=\"position:relative;\"><a href=\"#github%EC%97%90%EC%84%9C-pythonanywhere%EB%A1%9C-%EC%BD%94%EB%93%9C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"github에서 pythonanywhere로 코드 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub에서 PythonAnywhere로 코드 가져오기</h4>\n<p>PythonAnywhere Bash에서</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone http://repoURL\ntree my-first-blog //파일 확인</code></pre></div>\n<h4 id=\"pythonanywhere에서-가상환경virtualenv-생성하기\" style=\"position:relative;\"><a href=\"#pythonanywhere%EC%97%90%EC%84%9C-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BDvirtualenv-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"pythonanywhere에서 가상환경virtualenv 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PythonAnywhere에서 가상환경(virtualenv) 생성하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd my-first-blog\nvirtualenv --python=python3.6 myvenv\nsource myvenv/bin/activate\n\n(myvenv) $ pip install django~=2.0</code></pre></div>\n<h4 id=\"pythonanywhere에서-데이터베이스-생성하기\" style=\"position:relative;\"><a href=\"#pythonanywhere%EC%97%90%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"pythonanywhere에서 데이터베이스 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PythonAnywhere에서 데이터베이스 생성하기</h4>\n<p>로컬 컴퓨터와는 다른 별도의 데이터베이스를 사용할 수 있다.\n앞에서 했던 것처럼 <code class=\"language-text\">migrate</code>와 <code class=\"language-text\">createsuperuser</code>를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(myvenv) $ python manage.py migrate\n(myvenv) $ python manage.py createsuperuser</code></pre></div>\n<h4 id=\"web-app으로-블로그-배포하기\" style=\"position:relative;\"><a href=\"#web-app%EC%9C%BC%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\" aria-label=\"web app으로 블로그 배포하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>web app으로 블로그 배포하기</h4>\n<p>PythonAnywhere 대시보드에서 <strong>Web</strong>클릭 -> <strong>Add a new web app</strong> 선택\n도메인 설정(무료버전은 도메인 맘대로 안됨) -> manual configuration(수동설정) -> Python3.6</p>\n<p>Django가 아니라 manual configuration으로 선택해야함</p>\n<h4 id=\"가상환경virtualenv-설정하기\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BDvirtualenv-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"가상환경virtualenv 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상환경(virtualenv) 설정하기</h4>\n<p><code class=\"language-text\">virtualenv</code> 섹션에서 <code class=\"language-text\">Enter the path to a virtualenv</code>를 클릭하고 <code class=\"language-text\">/home/username/my-first-blog/myvenv/</code>입력</p>\n<p>입력하면 맞았는지 틀렸는지 확인할 수 있음</p>\n<h4 id=\"wsgi-파일-설정하기\" style=\"position:relative;\"><a href=\"#wsgi-%ED%8C%8C%EC%9D%BC-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"wsgi 파일 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WSGI 파일 설정하기</h4>\n<p>장고는 <code class=\"language-text\">WSGI 프로토콜</code>을 사용해 작동한다. 이 프로토콜은 파이썬을 이용한 웹사이트를 서비스하기 위한 표준으로 PythonAnywhere에서도 지원합니다. WSGI 설정파일을 수정해 내가 만든 장고 블로그를 PythonAnywhere가 인식하게 만들 수 있다. <strong>Web</strong>탭 내의 <strong>code</strong>섹션을 찾아서 <code class=\"language-text\">/var/www/yeon_pythonanywhere_com_wsgi.py</code>의 모든 내용을 지우고 아래의 코드를 입력</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> sys\n\npath <span class=\"token operator\">=</span> <span class=\"token string\">'/home/name/my-first-blog'</span>\n<span class=\"token keyword\">if</span> path <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">:</span>\n    sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n\nos<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'DJANGO_SETTINGS_MODULE'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'mysite.settings'</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>wsgi <span class=\"token keyword\">import</span> get_wsgi_application\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>staticfiles<span class=\"token punctuation\">.</span>handlers <span class=\"token keyword\">import</span> StaticFilesHandler\napplication <span class=\"token operator\">=</span> StaticFilesHandler<span class=\"token punctuation\">(</span>get_wsgi_application<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>PythonAnywhere에게 웹 애틀리케이션의 위치와 Django설정 파일명을 알려주는 역할</li>\n<li><code class=\"language-text\">StaticFileHandler</code>는 CSS를 위한 것, <code class=\"language-text\">runserver</code>명령을 로컬 개발 중에 자동을 처리된다.</li>\n</ul>\n<h4 id=\"디버깅-팁\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%B2%84%EA%B9%85-%ED%8C%81\" aria-label=\"디버깅 팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디버깅 팁</h4>\n<p>본인의 사이트에 접속할 때 오류가 보이면 제일 먼저 <strong>error log</strong>(Web tab)에서 디버깅 정보를 찾는다. 여기서 오류메세지를 확인한다. (최근의 오류 메세지는 맨 하단)</p>\n<ul>\n<li>virtualenv를 생성하고 활성화할 때, Django를 설치할 때, Collestac을 돌릴 때, 데이터베이스를 설치할 때 같은 각 단계를 위한 콘솔 작업을 할 때 한 단계를 빼먹는 경우</li>\n<li>web tab에서 virtualenv 경로를 쓸 때 오타 -> 이런 경우 작은 빨간 에러메세지가 뜰 것</li>\n<li>WSGI 설정 파일에서 실수가 있었을 때 ex) 경로</li>\n<li>Web app에서 그랬듯, virtualenv에서도 같은 파이썬 버전이 선택됐는지. 모두 버전이 <code class=\"language-text\">3.4</code> ->?3.6만 눌렀던거같은데</li>\n<li>만약 <code class=\"language-text\">Invalid HTTP_HOST header: &lt;your-site-name> . You may need to add &lt;your-site-name> to ALLOWED_HOSTS.</code> 라는 오류메세지가 나온다면 <code class=\"language-text\">/mysite/settings.py</code>의 마지막 줄에 <code class=\"language-text\">ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]', '.pythonanywhere.com']</code> 를 추가 한 뒤에 다시 <strong>Web</strong> 탭에서 <code class=\"language-text\">Reload &lt;your-site-name</code>이라는 녹색 버튼을 눌러 주세요.</li>\n</ul>\n<h3 id=\"배포-끝\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%ED%8F%AC-%EB%81%9D\" aria-label=\"배포 끝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포 끝!</h3>\n<p>로컬 컴퓨터에서와 똑같은 페이지를 보여줍니다. URL끝에 <code class=\"language-text\">/admin/</code>을 추가하면 관리자 사이트로 이동합니다. 데이터베이스를 생성하면서 만든 superuser 계정으로 로그인하면 서버에 새 게시물을 추가할 수 있습니다.</p>","frontmatter":{"title":"[django]6. 배포하기","date":null,"lang":null}}},{"node":{"id":"45b23d57-46a3-5c5d-bf64-bf20e1ff2c0b","excerpt":"참고: 장고걸스 디렉토리에 템플릿이 저장됨, 없다면 만들어주기, 안에는 이라는 새 파일 만들기 넣고싶은 HTML을 작성한 후 깃허브에 커밋푸쉬하기 를 열고 배시 콘솔아래서 URL로 이동해서 적용이 완료되었는지 확인","html":"<p>참고: <a href=\"https://tutorial.djangogirls.org/ko/html/\">장고걸스</a></p>\n<p><code class=\"language-text\">blog/templates/blog</code>디렉토리에 템플릿이 저장됨, 없다면 만들어주기, 안에는 <code class=\"language-text\">post_list.html</code>이라는 새 파일 만들기</p>\n<p>넣고싶은 HTML을 작성한 후 깃허브에 커밋푸쉬하기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git status\ngit add --all .\ngit status\ngit commit -m 'Changed the HTML for the site.'\ngit push</code></pre></div>\n<p><code class=\"language-text\">pythonanywhere 콘솔페이지</code>를 열고 배시 콘솔아래서</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd ~/my-first-blog\ngit pull</code></pre></div>\n<p>URL로 이동해서 적용이 완료되었는지 확인</p>","frontmatter":{"title":"[django]9. HTML","date":null,"lang":null}}},{"node":{"id":"13783baf-1a4d-5de5-9858-678d3f7eecdc","excerpt":"참고: 장고걸스 인터넷의 모든 페이지는 고유한 URL을 가지고 있어야한다. 애플리케이션은 사용자가 URL을 입력하면 어떤 내용을 보여줘야하는지 알고 있다. 장고는 을 사용한다.\n는 장고에서 URL과 일치하는 뷰를 찾기 위한 패턴들의 집합이다. 장고 URL…","html":"<p>참고: <a href=\"https://tutorial.djangogirls.org/ko/django_urls/\">장고걸스</a></p>\n<p>인터넷의 모든 페이지는 고유한 URL을 가지고 있어야한다. 애플리케이션은 사용자가 URL을 입력하면 어떤 내용을 보여줘야하는지 알고 있다.</p>\n<p>장고는 <code class=\"language-text\">URLconf (URL configuration)</code>을 사용한다.\n<code class=\"language-text\">URLconf</code>는 장고에서 URL과 일치하는 뷰를 찾기 위한 패턴들의 집합이다.</p>\n<h4 id=\"장고-url-동작-방법\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EA%B3%A0-url-%EB%8F%99%EC%9E%91-%EB%B0%A9%EB%B2%95\" aria-label=\"장고 url 동작 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장고 URL 동작 방법</h4>\n<p><code class=\"language-text\">mysite/urls.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">\"\"\"mysite URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/2.0/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span><span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>장고는 <code class=\"language-text\">admin/</code>로 시작하는 모든 URL을 view와 대조해 찾아냅니다. 무수히 많은 URL이 <code class=\"language-text\">admin URL</code>에 포함될 수 있어 일일이 모두 쓸 수 없기 때문에 정규 표현식을 사용한 것</li>\n</ul>\n<h3 id=\"나의-첫-번째-django-url\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%EC%B2%AB-%EB%B2%88%EC%A7%B8-django-url\" aria-label=\"나의 첫 번째 django url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 첫 번째 Django url!</h3>\n<p><code class=\"language-text\">mysite/urls.py</code>파일을 깨끗한 상태로 유지하기 위해 <code class=\"language-text\">blog</code>애플리케이션에서 메인 <code class=\"language-text\">mysite/urls.py</code>파일로 url들을 가져온다.</p>\n<p><code class=\"language-text\">mysite/urls.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path<span class=\"token punctuation\">,</span> include\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span><span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span><span class=\"token string\">'blog.urls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">blog.urls</code>를 가져오는 행을 추가</p>\n<ul>\n<li><code class=\"language-text\">blog.urls</code>를 가져오려면 <code class=\"language-text\">include</code>함수가 필요하다.</li>\n<li><code class=\"language-text\">from django.urls</code>행을 찾아 import에 <code class=\"language-text\">include</code>를 추가</li>\n</ul>\n</li>\n<li>이제 장고는 <a href=\"http://127.0.0.1:8000/%EC%9C%BC%EB%A1%9C\">http://127.0.0.1:8000/으로</a> 들어오는 모든 접속 요청을 <code class=\"language-text\">blog.urls</code>로 전송해 추가 명령을 찾는다.</li>\n</ul>\n<h4 id=\"blogurls\" style=\"position:relative;\"><a href=\"#blogurls\" aria-label=\"blogurls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>blog.urls</h4>\n<p><code class=\"language-text\">blog.urls.py</code>라는 새 파일 생성, 아래의 두 줄을 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> impoer views</code></pre></div>\n<p>장고 함수인 <code class=\"language-text\">path</code>와 <code class=\"language-text\">blog</code> 애플리케이션에서 사용할 모든 <code class=\"language-text\">views</code>를 가져온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_list<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p><code class=\"language-text\">post_list</code>라는 <code class=\"language-text\">views</code>가 루트 URL에 할당되었다. 이 URL 패턴은 빈 문자열에 매칭되며 장고 URL 확인자(resolver)는 전체 URL경로에서 접두어(prefix)에 포함되는 도메인 이름(<a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>)을 무시하고 받아드린다.</p>\n<p>이 패턴은 장고에게 누군가 웹사이트에 ’<a href=\"http://127.0.0.1:8000/&#x27;%EC%A3%BC%EC%86%8C%EB%A1%9C\">http://127.0.0.1:8000/‘주소로</a> 들어왔을 때 <code class=\"language-text\">views.post_list</code>를 보여주라고 말해주는 것이다.</p>\n<p>마지막 부분인 <code class=\"language-text\">name='post_list'</code>는 URL에 이름을 붙인 것으로 뷰를 식별합니다. 뷰의 이름과 같을 수도 완전히 다를 수도 있습니다. (이름을 붙인 URL은 프로젝트의 후반에 사용할 것)</p>\n<p><a href=\"https://docs.djangoproject.com/en/2.0/topics/http/urls/\">장고 URL 설정 관련 장고 공식문서</a></p>","frontmatter":{"title":"[django]7. Django urls","date":null,"lang":null}}},{"node":{"id":"abecb370-a7bb-59d4-a657-eed4ef067863","excerpt":"참고: 장고걸스 ORM 각 언어별로 있는 기능 원래 데이터베이스 서버의 어떤 데이터를 조회, 추가, 수정, 삭제 등을 할 때는 sql이라는 언어를 사용해야하는데 sql을 사용하지 않고 파이썬이라면 파이썬 코드로, 자바라면 자바 코드로, 각 언어 그대로를 활용해서 sql…","html":"<ul>\n<li>참고: <a href=\"https://tutorial.djangogirls.org/ko/django_orm/\">장고걸스</a></li>\n</ul>\n<h3 id=\"orm\" style=\"position:relative;\"><a href=\"#orm\" aria-label=\"orm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORM</h3>\n<ul>\n<li>각 언어별로 있는 기능</li>\n<li>원래 데이터베이스 서버의 어떤 데이터를 조회, 추가, 수정, 삭제 등을 할 때는 sql이라는 언어를 사용해야하는데 sql을 사용하지 않고 파이썬이라면 파이썬 코드로, 자바라면 자바 코드로, 각 언어 그대로를 활용해서 sql 코드를 만들어 내는 라이브러리가 있다. 그걸 ORM이라고 한다.</li>\n<li><code class=\"language-text\">Django Model</code>이 장고의 ORM이다.</li>\n</ul>\n<h3 id=\"쿼리셋\" style=\"position:relative;\"><a href=\"#%EC%BF%BC%EB%A6%AC%EC%85%8B\" aria-label=\"쿼리셋 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿼리셋</h3>\n<ul>\n<li>전달받은 모델의 객체 목록</li>\n<li>쿼리셋은 데이터베이스로부터 데이터를 읽고, 필터를 걸거나 정렬한다.</li>\n</ul>\n<h3 id=\"장고-쉘\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EA%B3%A0-%EC%89%98\" aria-label=\"장고 쉘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장고 쉘</h3>\n<p>로컬 콘솔에서</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">myvenv/Scripts/activate\n(myvenv) python manage.py shell\n.\n.\n.\n(InteractiveConsole)\n>>></code></pre></div>\n<p>위와 같은 문자열이 뜨면 장고 인터렉티브 콘솔(interactive console)로 들어온 것이다. 파이썬 프롬프트와 비슷하지만 장고만의 기능을 사용할 수 있는 곳이기도 하다. 파이썬의 모든 명령어도 사용할 수 있음</p>\n<h3 id=\"모든-객체-조회하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EA%B0%9D%EC%B2%B4-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0\" aria-label=\"모든 객체 조회하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 객체 조회하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> blog<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Post\nPost<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"객체-생성하기\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"객체 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 생성하기</h3>\n<p>데이터베이스에 새 글 객체를 저장하는 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> User\nUser<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># &lt;QuerySet [&lt;User: doyeon>, &lt;User: yeon>]></span>\nme <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>username<span class=\"token operator\">=</span><span class=\"token string\">'doyeon'</span><span class=\"token punctuation\">)</span>\nPost<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>auther<span class=\"token operator\">=</span>me<span class=\"token punctuation\">,</span> title<span class=\"token operator\">=</span><span class=\"token string\">'Sample title'</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">=</span><span class=\"token string\">'Text'</span><span class=\"token punctuation\">)</span>\nPost<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 게시물이 만들어졌는지 확인</span></code></pre></div>\n<h3 id=\"필터링하기\" style=\"position:relative;\"><a href=\"#%ED%95%84%ED%84%B0%EB%A7%81%ED%95%98%EA%B8%B0\" aria-label=\"필터링하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필터링하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>auther<span class=\"token operator\">=</span>me<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 작성자가 me인 게시글</span>\nPost<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>title__contains<span class=\"token operator\">=</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>title과 contains 사이에는 언더바 2개가 들어간다.</p>\n<p>장고 ORM은 필드 이름(‘title’)과 연산자와 필터(‘contains’)를 언더바 두개를 사용하여 구분한다.</p>\n</blockquote>\n<ul>\n<li>\n<p>게시일(<code class=\"language-text\">published_date</code>)로 과거에 작성한 글을 필터링</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> timezone\n\npost <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'Sample title'</span><span class=\"token punctuation\">)</span>\npost<span class=\"token punctuation\">.</span>publish<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 게시</span>\n\nPost<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>published_date__lte<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 먼저 게시하려는 게시물의 인스턴스를 얻어야한다.</span>\n<span class=\"token comment\"># lte = less than equal 작거나 같다</span>\n<span class=\"token comment\"># published_date__lte = timezone.now() 발생된 시간이 현재 시간보다 작거나 같은 경우를 필터링해서 보여준다.</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"정렬하기\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0\" aria-label=\"정렬하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정렬하기</h3>\n<p><code class=\"language-text\">created_date</code>를 사용하여 필드를 정렬</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'created_date'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 오름차순 정렬</span>\nPost<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-created_date'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># '-'를 붙여줄 경우 내림차순 정렬</span></code></pre></div>\n<h3 id=\"쿼리셋-연결하기\" style=\"position:relative;\"><a href=\"#%EC%BF%BC%EB%A6%AC%EC%85%8B-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\" aria-label=\"쿼리셋 연결하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿼리셋 연결하기</h3>\n<p>쿼리셋들을 함께 연결(chaining)하여 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>published_date__lte<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>oreder_by<span class=\"token punctuation\">(</span><span class=\"token string\">'published_date'</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[django]10. 장고 ORM과 쿼리셋(QuertSets)","date":null,"lang":null}}},{"node":{"id":"cfca8924-0aa2-529c-ae99-1984ecf3ded6","excerpt":"참고: 장고걸스 데이터를 보여주기 위해 장고는 내장된 템플릿 태그(template tags)라는 기능을 사용한다. 브라우저는 정적인 HTML만 이해할 수 있고 동적인 파이썬 코드는 이해할 수 없다. 탬플릿 태그는 파이썬을 HTML…","html":"<p>참고: <a href=\"https://tutorial.djangogirls.org/ko/django_templates/\">장고걸스</a></p>\n<p>데이터를 보여주기 위해 장고는 내장된 <strong>템플릿 태그(template tags)</strong>라는 기능을 사용한다.</p>\n<p>브라우저는 정적인 HTML만 이해할 수 있고 동적인 파이썬 코드는 이해할 수 없다. 탬플릿 태그는 파이썬을 HTML로 바꿔주어 빠르고 쉽게 동적인 웹 사이트를 만들 수 있게 도와준다!</p>\n<h3 id=\"post-목록-템플릿-보여주기\" style=\"position:relative;\"><a href=\"#post-%EB%AA%A9%EB%A1%9D-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B8%B0\" aria-label=\"post 목록 템플릿 보여주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>post 목록 템플릿 보여주기</h3>\n<p>이전에 글 목록이 들어있는 <code class=\"language-text\">posts</code>변수를 템플릿에 넘겨주었다. 이제 넘겨진 <code class=\"language-text\">posts</code>변수를 받아 HTML에 나타나도록 해볼 차례이다.</p>\n<ul>\n<li>\n<p>장고 템플릿 안에 있는 값을 출력하려면 변수 이름 안에 중괄호를 넣어 표시해야 한다.\n<code class=\"language-text\">blog/templates/blog/post_list.html</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> raw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endraw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span> <span class=\"token comment\"># &lt;QuerySet [&lt;Post: 신기하구만>, &lt;Post: Sample title>]></span></code></pre></div>\n</li>\n<li>\n<p>목록 보여주기 ( for )</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> raw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> posts <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> post <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endfor <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endraw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>HTML과 template tags를 섞어서 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> raw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> posts <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>published<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>published_date<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>text<span class=\"token operator\">|</span>linebreaksbr<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endfor <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endraw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-{\"> raw </code>와 <code class=\"language-{\"> raw </code> 사이에 넣은 모든 것은 목록의 모든 객체를 반복하게 된다.</p>\n<p><code class=\"language-text\">Post</code>모델에서 정의한 각 필드의 데이터에 접근하기 위해 <code class=\"language-{\"> raw </code>, <code class=\"language-{\"> raw </code>와 같은 표기법을 사용한다. 또한 <code class=\"language-text\">|linebreaker</code>와 같은 파이프문자 (<code class=\"language-text\">|</code>)도 사용한다. <code class=\"language-text\">|linebreaker</code>는 블로그 글 텍스트에서 행이 바뀌면 문잔으로 변환하도록 하라는 의미이다. 행바뀜을 문단으로 변환하는 필터를 적용한다는 표현으로 쓰기도 합니다.</p>\n</li>\n<li>\n<p>이제 github에 push하고 pythonanywhere에서 pull을 받고 web 탭에서 리로드후 변경이 적용되었는지 확인한다.</p>\n<ul>\n<li>로컬서버에서 확인한 게시물과 동일하지 않은 것이 정상임 로컬 컴퓨터와 파이썬에니웨어의 데이터베이스는 동기화 되지 않는다.</li>\n<li>url에 <code class=\"language-text\">/admin</code>을 추가하여 관리자페이지로 이동 후 게시물을 추가하면 올바르게 작동하는 것을 볼 수 있다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[django]12. 장고 템플릿","date":null,"lang":null}}},{"node":{"id":"1749ab19-b4be-5426-9b0f-591886bc8e79","excerpt":"참고: 장고걸스 CSS(Cascading Style Sheets): HTML과 같이 마크업언어로 작성된 웹사이트의 외관을 꾸미기 위해 사용되는 언어 부트스트랩(bootstrap) 설치하기 파일 내 에 아래의 링크를 넣어야한다. 정적파일 (static files) CSS…","html":"<ul>\n<li>참고: <a href=\"https://tutorial.djangogirls.org/ko/css/\">장고걸스</a></li>\n</ul>\n<p>CSS(Cascading Style Sheets): HTML과 같이 마크업언어로 작성된 웹사이트의 외관을 꾸미기 위해 사용되는 언어</p>\n<h3 id=\"부트스트랩bootstrap\" style=\"position:relative;\"><a href=\"#%EB%B6%80%ED%8A%B8%EC%8A%A4%ED%8A%B8%EB%9E%A9bootstrap\" aria-label=\"부트스트랩bootstrap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부트스트랩(bootstrap)</h3>\n<ul>\n<li>\n<p>설치하기</p>\n<p><code class=\"language-text\">html</code>파일 내 <code class=\"language-text\">&lt;head></code>에 아래의 링크를 넣어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n<span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n<span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n<li>\n<p>정적파일 (static files)</p>\n<ul>\n<li>CSS와 이미지파일이 해당됩니다. 이 컨텐츠는 요청 내용에 따라 바뀌는 것이 아니기 때문에 모든 사용자들이 동일한 내용을 볼 수 있습니다.</li>\n</ul>\n<p>서버에서 <code class=\"language-text\">collectstatic</code>을 실행할 때처럼 장고는 admin에서 정적 파일을 어디서 찾아야하는지 이미 알고있습니다. 때문에 <code class=\"language-text\">blog</code>에 정적파일을 추가하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  djangogirls\n  ├── blog\n  │   ├── migrations\n  │   ├── static\n  │   └── templates\n  └── mysite</code></pre></div>\n<p>장고는 app폴더 안에 있는 <code class=\"language-text\">static</code>폴더를 자동을 찾을 수 있고 이 안에 들어있는 컨텐츠를 정적 파일로 사용합니다.</p>\n</li>\n<li>\n<p>CSS파일 만들기</p>\n<ul>\n<li><code class=\"language-text\">django/blog/static/css/blog.css</code></li>\n<li>제목 색상 바꾸기</li>\n</ul>\n<p>색상은 <code class=\"language-text\">#</code>으로 시작해서 알파벳과 숫자 중 6개를 조합해 헥사코드(hexacode)로 나타냅니다. 인터넷에서 원하는 색상을 검색해 사용하거나 <code class=\"language-text\">red</code>나 <code class=\"language-text\">green</code>같이 <a href=\"https://www.w3schools.com/colors/colors_names.asp\">이미 정해진 색</a>을 사용할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1 a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fca205<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">h1 a</code>: CSS 셀렉터(selector)라고 한다. <code class=\"language-text\">h1</code>요소 안의 <code class=\"language-text\">a</code>요소에 스타일을 적용한다는 뜻</li>\n<li>CSS파일에서는 HTML 파일에 있는 각 요소들에 스타일을 정의할 때 요소를 식별하는 방법</li>\n<li>요소의 이름 사용하기(태그 이름): <code class=\"language-text\">a</code>, <code class=\"language-text\">h1</code>, <code class=\"language-text\">body</code></li>\n<li>\n<p><code class=\"language-text\">class</code>속성이나 <code class=\"language-text\">id</code>속성(요소에 부여된 이름)</p>\n<p><code class=\"language-text\">class</code>는 요소 그룹을 정의하고, <code class=\"language-text\">id</code>는 특정 요소를 가리킵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://en.wikipedia.org/wiki/Django<span class=\"token punctuation\">\"</span></span>\n <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>external_link<span class=\"token punctuation\">\"</span></span>\n <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>link_to_wiki_page<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<p><a href=\"https://www.w3schools.com/cssref/css_selectors.asp\">CSS Selctor 참고</a></p>\n<ul>\n<li>HTML에 CSS 추가하기</li>\n<li>\n<p><code class=\"language-text\">blog/templates/blog/post_list.html</code>파일 맨 처음에 아래 코드를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{% raw %}{% load static %}</code></pre></div>\n<p>여기서 정적파일을 로딩</p>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;head></code>안에 부트스트랩 CSS파일 링크 다음에 아래에 코드를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% static <span class=\"token punctuation\">'</span>css/blog.css<span class=\"token punctuation\">'</span> %}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>{% endraw %}</code></pre></div>\n<p>브라우저는 위에서부터 순서대로 파일을 읽으므로 파일이 올바른 위치에 있는지 확인해야합니다. 그렇지 않으면 파일 코드가 부트스트랩 파일의 코드를 무시할 수 있습니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">static</code>파일 정보 인식 <code class=\"language-text\">collectstatic</code></p>\n<p>아래의 명령어를 실행하면 <code class=\"language-text\">djangogirls/static</code>의 하위로 복사된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python manage.py collectstatic</code></pre></div>\n<p>흩어져있는 static 파일들을 모아 특정 디렉터리로 옮기는 작업을 한다. <code class=\"language-text\">setting.py</code>파일 안에 정의되어 있는 <code class=\"language-text\">STATIC_ROOT</code>디렉터리로 옮겨진다.</p>\n</li>\n<li>\n<p>제목 폰트 바꾸기</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n<span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>//fonts.googleapis.com/css?family=Lobster&amp;subset=latin,latin-ext<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>Google Fonts에서 가져온 <a href=\"https://fonts.google.com/specimen/Lobster?query=lob&#x26;sidebar.open=true&#x26;selection.family=Roboto\"><em>Lobster</em> </a></p>\n<ul>\n<li><code class=\"language-text\">head</code>에 추가</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1 a</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fca205<span class=\"token punctuation\">;</span>\n<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Lobster'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<p>CSS는 클래스 개념을 가지고 있습니다. 클래스는 HTML의 코드 일부에 이름을 붙이고 그 부분만 특정 스타일을 사용할 수 있게 해줍니다. 각기 다른 div 구분할 때 유용하게 쓰입니다.</p>\n<ul>\n<li>\n<p>태그에 이름 지정</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>태그에 스타일 지정, 클래스셀렉터는 <code class=\"language-text\">.</code></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.page-header</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ff9400<span class=\"token punctuation\">;</span>\n<span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px 20px 20px 40px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.page-header h1,\n.page-header h1 a,\n.page-header h1 a:visited,\n.page-header h1 a:active</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 36pt<span class=\"token punctuation\">;</span>\n<span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.content</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h1,\nh2,\nh3,\nh4</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Lobster'</span><span class=\"token punctuation\">,</span> cursive<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.date</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #828282<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.save</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.post-form textarea,\n.post-form input</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.top-menu,\n.top-menu:hover,\n.top-menu:visited</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffffff<span class=\"token punctuation\">;</span>\n<span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 26pt<span class=\"token punctuation\">;</span>\n<span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.post</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 70px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.post h1 a,\n.post h1 a:visited</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Django Girls Blog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>row<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>col-md-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      {% for post in posts %}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>published: {{post.published_date}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{post.title}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{post.text|linebreaksbr}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      {% endfor %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<p><a href=\"https://www.codecademy.com/catalog/all\">CSS 추천 강의</a></p>","frontmatter":{"title":"[django]13. CSS","date":null,"lang":null}}},{"node":{"id":"5420b26a-68c4-588a-90bb-8a8298f10ec2","excerpt":"…","html":"<ul>\n<li>참고: <a href=\"https://tutorial.djangogirls.org/ko/dynamic_data_in_templates/\">장고걸스</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/2.0/ref/models/querysets/\">쿼리셋에 대한 장고 공식문서</a></li>\n</ul>\n<p>블로그의 글들은 각각 다른 장소에 나누어져서 저장되어있다.</p>\n<ul>\n<li><code class=\"language-text\">Post</code> 모델 - <code class=\"language-text\">models.py</code></li>\n<li><code class=\"language-text\">post_list</code> 모델 - <code class=\"language-text\">views.py</code></li>\n</ul>\n<p>각각 파일에 위처럼 들어있고, 앞으로는 템플릿도 추가해야한다. 이 장에서는 데이터베이스 안에 저장되어 있는 모델을 가져와 템플릿에 보여주는 걸 할 것이다.</p>\n<p><strong>뷰(view)</strong>는 모델과 템플릿을 연결하는 역할을 한다. <code class=\"language-text\">post_list</code>를 뷰에 보여주고 이를 템플릿에 전달하기 위해서 모델을 가져와야한다. ( 뷰가 템플릿에서 모델을 선택하도록 만들어야 한다. )</p>\n<ol>\n<li>\n<p><code class=\"language-text\">blog/views.py</code>파일을 열고 <code class=\"language-text\">post_list</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Post\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">post_list</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_list.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">models</code>앞에 <code class=\"language-text\">.</code>은 현재 디렉토리 또는 애플리케이션을 의미한다. 동일 디렉터리 내에 <code class=\"language-text\">views.py</code>와 <code class=\"language-text\">models.py</code>가 있기 때문에 <code class=\"language-text\">.파일명</code>으로 내용을 가져올 수 있다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Post</code>모델 불러오기, <code class=\"language-text\">Post</code> 모델에서 블로그 글을 가져오기 위해서는 <code class=\"language-text\">QuerySet</code>이 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 글 목록을 게시일`published_date` 기준으로 정렬</span>\nPost<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>published_date__lte<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'published_date'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> timezone <span class=\"token comment\"># timezone 모듈을 사용하기 위해</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Post\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">post_list</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   posts <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>published_date__lte<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'published_date'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_list.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>아직 <code class=\"language-text\">posts</code> QuerySet을 템플릿으로 보내지 않았다. (다음 장에서 할 것)</p>\n<p><code class=\"language-text\">render</code>함수에는 매개변수 <code class=\"language-text\">request</code>와 <code class=\"language-text\">blog/post_list.html</code>템플릿이 들어있다. 맨 마지막에 있는 <code class=\"language-text\">{}</code>에 템플릿을 사용하기 위한 매개변수를 추가할 것이다.<code class=\"language-text\">{'posts': posts}</code> <code class=\"language-text\">:</code>이전엔 문자열이 와야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_list.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">:</span> posts<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>","frontmatter":{"title":"[django]11. 템플릿 동적 데이터","date":null,"lang":null}}},{"node":{"id":"83de52e8-e394-549e-8da7-4ddf93c5283d","excerpt":"참고: 장고걸스 템플릿 확장(template extending) 웹사이트 안의 서로 다른 페이지에서 HTML…","html":"<ul>\n<li>참고: <a href=\"https://tutorial.djangogirls.org/ko/template_extending/\">장고걸스</a></li>\n</ul>\n<h3 id=\"템플릿-확장template-extending\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%ED%99%95%EC%9E%A5template-extending\" aria-label=\"템플릿 확장template extending permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 확장(template extending)</h3>\n<ul>\n<li>웹사이트 안의 서로 다른 페이지에서 HTML의 일부를 동이랗게 재사용 할 수 있다.</li>\n<li>동일한 정보/레이아웃을 사용하고자 할 때, 모든 파일마다 같은 내용을 반복해서 입력할 필요가 없게된다.</li>\n<li>뭔가 수정할 부분이 생겼을 때 모든 파일을 수정할 필요 없이 한번만 수정하면 된다.</li>\n</ul>\n<p>{% raw %}</p>\n<h4 id=\"기본-템플릿-생성하기\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"기본 템플릿 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 템플릿 생성하기</h4>\n<ul>\n<li>웹사이트 내 모든 페이지에 확장되어 사용되는 가장 기본적인 템플릿 생성</li>\n</ul>\n<p><code class=\"language-text\">blog/templates/blog/base.html</code>파일 만들기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">blog\n└───templates\n    └───blog\n            base.html\n            post_list.html</code></pre></div>\n<p><code class=\"language-text\">base.html</code>에 <code class=\"language-text\">post_list.html</code>의 내용을 복붙하고 <code class=\"language-text\">&lt;body></code>를 수정해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Django Girls Blog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>row<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>col-md-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        {% block content %} {% endblock %}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-{\"> block </code>으로 HTML 내에 들어갈 수 있는 공간을 만든 것이다. <code class=\"language-text\">base.html</code>을 확장해 다른 템플릿에도 가져다 쓸 수 있게 한 것</p>\n<ul>\n<li>\n<p>동작 방법</p>\n<p><code class=\"language-text\">post_list.html</code>에서 <code class=\"language-{\"> for post in posts </code>부터 <code class=\"language-{\"> endfor </code>를 제외하고 모두 지운다. 그리고 이 코드는 컨텐츠 블록에 대한 템플릿의 일부로 쓰이게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% extends 'blog/base.html' %} {% block content %} {% for post in posts %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>published: {{post.published_date}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{post.title}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{post.text|linebreaksbr}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n{% endfor %} {% endblock %}</code></pre></div>\n<p><code class=\"language-{\"> extends &#39;blog/base.html&#39; </code>는 파일에 제일 첫줄에 작성해야한다. 실행해보면 잘 되는 것을 확인할 수 있음{% endraw %}</p>\n</li>\n</ul>","frontmatter":{"title":"[django]14. 템플릿 확장하기","date":null,"lang":null}}},{"node":{"id":"bab6b469-59a0-576d-93ce-25a5a3ec89f4","excerpt":"참고: 장고걸스 {% raw %} 지금까지 웹 사이트 제작단계를 모두 마쳤습니다. model, url, view, template…","html":"<ul>\n<li>참고: <a href=\"https://tutorial.djangogirls.org/ko/extend_your_application/\">장고걸스</a></li>\n</ul>\n<p>{% raw %}</p>\n<ul>\n<li>지금까지 웹 사이트 제작단계를 모두 마쳤습니다. model, url, view, template을 만드는 방법을 알게 되었고 웹사이트를 꾸미는 방법도 알게 되었어요!</li>\n<li>이제 블로그 게시글이 각 페이지마다 보이게 만들어 봅시다!</li>\n<li>이미 앞에서 <code class=\"language-text\">Post</code>모델은 만들었으니 <code class=\"language-text\">models.py</code>에 새로 추가할 내용은 없어요</li>\n</ul>\n<h3 id=\"post에-템플릿-링크-만들기\" style=\"position:relative;\"><a href=\"#post%EC%97%90-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A7%81%ED%81%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"post에 템플릿 링크 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Post에 템플릿 링크 만들기</h3>\n<p><code class=\"language-text\">blog/templates/blog/post_list.html</code>파일에 링크를 추가한다. (제목부분)</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_detail<span class=\"token punctuation\">'</span> pk=post.pk %}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ post.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-{\"> url &#39;post_detail&#39; pk=post.pk </code>에서 <code class=\"language-{\"> </code>는 장고 탬플릿 태그를 말합니다.</p>\n<p><code class=\"language-text\">blog.views.post_detail</code>는 <code class=\"language-text\">post_detail</code> view의 경로입니다. 여기서 <code class=\"language-text\">blog</code>는 응용프로그램의 이름이고, <code class=\"language-text\">views</code>는 <code class=\"language-text\">views.py</code> 파일 명, <code class=\"language-text\">post_detail</code>은 view의 이름입니다.</p>\n<p><code class=\"language-text\">pk = post.pk</code>에서 <code class=\"language-text\">pk</code>는 데이터베이스의 각 레코드를 식별하는 기본키 (<code class=\"language-text\">Primary Key</code> )의 줄임말 입니다. Post 모델에서 기본 키를 지정하지 않았기 때문에 장고는 <code class=\"language-text\">pk</code>라는 필드를 추가해 새로운 게시글이 추가 될 때마다 그 값이 1,2,3,,, 으로 증가하게 됩니다. Post 객체의 다른 필드 (제목, 작성자 등)에 엑세스하는 것과 같은 방식으로 post.pk를 작성하여 기본 키에 엑세스 합니다. <code class=\"language-text\">post.pk</code>를 써서 기본키에 접근할 수 있고 같은 방법으로 다른 필드 (<code class=\"language-text\">title</code>, <code class=\"language-text\">auther</code>)에도 접근할 수 있다. (? 앞 문장이랑 같은 말?)</p>\n<ul>\n<li>이대로 실행을 할 경우 <code class=\"language-text\">post_detail</code> view를 만들지 않았기 때문에 오류 메세지가 나옵니다.</li>\n</ul>\n<h3 id=\"post-상세-페이지-url-만들기\" style=\"position:relative;\"><a href=\"#post-%EC%83%81%EC%84%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-url-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"post 상세 페이지 url 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Post 상세 페이지 URL 만들기</h3>\n<p><code class=\"language-text\">blog/urls.py</code> 파일에 URL을 만들어 장고가 <code class=\"language-text\">post_detail</code> view로 보내 게시글이 보일 수 있게 해봅시다. 파일 안에 <code class=\"language-text\">urlpatterns</code> 안에 아래 코드를 추가해준다. <code class=\"language-text\">views.post_detail</code>이라는 뷰를 <code class=\"language-text\">post_detail</code>이라 이름붙이도록 하는 코드, 이는 장고가 <code class=\"language-text\">post_detail</code>이라는 이름을 해석할 떄, <code class=\"language-text\">post/views.py</code> 파일 내부의 <code class=\"language-text\">post_detail</code>이라는 뷰 함수로 이해할 수 있도록 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">path<span class=\"token punctuation\">(</span><span class=\"token string\">'post/&lt;int:pk>/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_detail<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_detail'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">post/&lt;int:pk>/</code>는 URL 패턴을 나타낸다.</p>\n<ul>\n<li><code class=\"language-text\">post/</code>는 URL이 post 문자를 포함해야한다는 것을 말합니다.</li>\n<li><code class=\"language-text\">&lt;int:pk></code>: 장고가 정수 값을 기대하고 이를 <code class=\"language-text\">pk</code>라는 변수로 뷰로 전송한다는 것을 의미함</li>\n<li><code class=\"language-text\">/</code>는 다음에 /가 한 번 더 와야 한다는 의미</li>\n</ul>\n<p>브라우저에 <code class=\"language-text\">http://127.0.0.1:8000/post/5/</code>라고 입력하면 장고는 <code class=\"language-text\">post_detail</code> 뷰를 찾아 매개변수 <code class=\"language-text\">pk</code>가 <code class=\"language-text\">5</code>인 값을 찾고 뷰로 전달합니다.</p>\n<ul>\n<li>이대로 실행할 경우 뷰가 없기 때문에 에러가 남!</li>\n</ul>\n<h3 id=\"post-상세-페이지-내-뷰-추가하기\" style=\"position:relative;\"><a href=\"#post-%EC%83%81%EC%84%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%82%B4-%EB%B7%B0-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"post 상세 페이지 내 뷰 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Post 상세 페이지 내 뷰 추가하기</h3>\n<p><code class=\"language-text\">blog/views.py</code>에 매개변수 <code class=\"language-text\">pk</code>를 포함하는 함수를 추가해봅시다. <code class=\"language-text\">def post_detail(request, pk):</code>라고 정의합니다. urls(<code class=\"language-text\">pk</code>)와 동일하게 이름을 사용해야 합니다. 변수를 생략할 경우에도 오류 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>pk<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 블로그 게시물 한 개만 볼 경우 쿼리셋</span></code></pre></div>\n<p>만약 해당 <code class=\"language-text\">primary key( pk )</code>의 <code class=\"language-text\">Post</code>를 찾지 못하면 오류가 날 거에요 장고에서는 이를 해결하기 위해 <code class=\"language-text\">get_object_or_404</code>라는 기능을 제공해요 <code class=\"language-text\">pk</code>에 해당하는 <code class=\"language-text\">Post</code>가 없을 경우 <code class=\"language-text\">404</code>페이지를 보여주는 기능이에요 이 페이지는 원하는 대로 꾸미는 것도 가능해요</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render<span class=\"token punctuation\">,</span> get_object_or_404\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> timezone\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Post\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">post_list</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    posts <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>published_date__lte<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'published_date'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_list.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">:</span>posts<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">post_detail</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    post <span class=\"token operator\">=</span> get_object_or_404<span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>pk<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_detail.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">:</span> Post<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>메인 페이지는 실행되지만 게시글의 제목을 클릭할 경우 템플릿이 없기 때문에 오류남!</li>\n</ul>\n<h3 id=\"post-상세-페이지-템플릿-만들기\" style=\"position:relative;\"><a href=\"#post-%EC%83%81%EC%84%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"post 상세 페이지 템플릿 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Post 상세 페이지 템플릿 만들기</h3>\n<p><code class=\"language-text\">blog/templates/blog</code> 디렉터리 안에 <code class=\"language-text\">post_detail,html</code>파일을 생성하고 아래의 코드를 작성해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% extends 'blog/base.html' %} {% block content %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  {% if post.published_date %}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    {{ post.published_date }}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  {% endif %}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>{{ post.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ post.text|linebreaksbr }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n{% endblock %}</code></pre></div>\n<p><code class=\"language-text\">base.html</code>을 다시 한 번 확장 한 것이다. <code class=\"language-text\">content</code> 블록에서 블로그 글의 게시일, 제목, 내용을 보이게 만들었다.</p>\n<p>가장 중요한 부분은 <code class=\"language-{\"> if ... </code>라는 템플릿 태그인데, 내용이 있는지 확인할 때 사용한다. (<code class=\"language-text\">post</code>의 <code class=\"language-text\">published_date</code>가 있는지)</p>\n<ul>\n<li>이제 실행되는 것을 확인할 수 있다! pythonanywhere로 보내서 배포해보자!</li>\n</ul>\n<p>{% endraw %}</p>","frontmatter":{"title":"[django]15. 프로그램 애플리케이션 확장하기","date":null,"lang":null}}},{"node":{"id":"0d3d71c3-2ca2-5fda-a188-f2c12713c34a","excerpt":"참고: 장고걸스 {% raw %} 관리자 기능을 거치지 않고 바로 글을 추가하거나 수정하는 기능 추가 () 장고는 아무런 준비 없이도 을 만들 수 있고, 을 생성해 자동을 모델에 결과물을 저장할 수 있다. 폼을 만들어서 모델에 적용해보기 폼만의 생성 forms model을 import…","html":"<ul>\n<li>참고: <a href=\"https://tutorial.djangogirls.org/ko/django_forms/\">장고걸스</a></li>\n</ul>\n<p>{% raw %}</p>\n<ul>\n<li>관리자 기능을 거치지 않고 바로 글을 추가하거나 수정하는 기능 추가 (<code class=\"language-text\">form</code>)</li>\n<li>장고는 아무런 준비 없이도 <code class=\"language-text\">form</code>을 만들 수 있고, <code class=\"language-text\">ModelForm</code>을 생성해 자동을 모델에 결과물을 저장할 수 있다.</li>\n<li>\n<p>폼을 만들어서 <code class=\"language-text\">Post</code>모델에 적용해보기</p>\n<ol>\n<li>폼만의 <code class=\"language-text\">forms.py</code>생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">blog\n └── forms.py</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django <span class=\"token keyword\">import</span> forms\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Post\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PostForm</span><span class=\"token punctuation\">(</span>forms<span class=\"token punctuation\">.</span>ModelForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Post\n        fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>forms model을 import하고 <code class=\"language-text\">Post</code> model도 import함</li>\n<li><code class=\"language-text\">PostForm</code> - 폼의 이름</li>\n<li><code class=\"language-text\">forms.ModelForm</code> - 장고에 이 폼이 <code class=\"language-text\">ModelForm</code>인 것을 알려줌</li>\n<li><code class=\"language-text\">class Meta</code> - 이 폼을 만들기 위해서 어떤 model이 쓰여야 하는지 장고에 알려줌 (<code class=\"language-text\">model = post</code>)</li>\n<li><code class=\"language-text\">fields = ('title','text',)</code> - 폼에 필드를 넣어줌, <code class=\"language-text\">title</code>, <code class=\"language-text\">text</code>만 보여지게 됨 <code class=\"language-text\">author</code>는 현재 로그인 하고 있는 사람이 될 것이고, <code class=\"language-text\">created_date</code>는 글이 등록되는 시간이 될 것이다.</li>\n</ul>\n<p> 이제 뷰에서 이 폼을 사용해 템플릿에 보여주기만 하면 됩니다. (링크, URL, 뷰, 템플릿 만들기)</p>\n</li>\n</ul>\n<h3 id=\"폼과-페이지-링크\" style=\"position:relative;\"><a href=\"#%ED%8F%BC%EA%B3%BC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%81%ED%81%AC\" aria-label=\"폼과 페이지 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폼과 페이지 링크</h3>\n<p><code class=\"language-text\">blog/templates/blog/base.html</code>에서 class가 <code class=\"language-text\">page-header</code>인 <code class=\"language-text\">div</code>에 링크를 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_new<span class=\"token punctuation\">'</span> %}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-menu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-plus<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>새로운 뷰 <code class=\"language-text\">post_vew</code>이고 부트스트랩 테마에 있는 <code class=\"language-text\">glyphicon glyphicon-plus</code>클래스로 더하기 기호가 보이게 된다.</p>\n<ul>\n<li>이 상태로 실행하면 <code class=\"language-text\">NoReverseMatch</code>에러 발생</li>\n</ul>\n<h3 id=\"url\" style=\"position:relative;\"><a href=\"#url\" aria-label=\"url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URL</h3>\n<p><code class=\"language-text\">blog/urls.py</code>에 코드 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> views\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_list<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'post/&lt;int:pk>/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_detail<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_detail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'post/new/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_new<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_new'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>사이트를 다시 불러오면 <code class=\"language-text\">AttributeError</code>가 발생하는데 <code class=\"language-text\">post_new</code> 뷰를 구현하지 않았기 때문에 발생한다.</li>\n</ul>\n<h3 id=\"code-classlanguage-textpost_newcode-view\" style=\"position:relative;\"><a href=\"#code-classlanguage-textpost_newcode-view\" aria-label=\"code classlanguage textpost_newcode view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">post_new</code> view</h3>\n<p><code class=\"language-text\">blog/views.py</code>에서 from 줄 아래 코드 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">from django.shortcuts import render, get_object_or_404 from django.utils import\ntimezone from .models import Post from .forms import PostForm def\npost_list(request): posts =\nPost.objects.filter(published_date__lte=timezone.now()).order_by('published_date')\nreturn render(request, 'blog/post_list.html', {'posts':posts}) def\npost_detail(request, pk): post = get_object_or_404(Post, pk=pk) return\nrender(request, 'blog/post_detail.html', {'post': post}) def post_new(request):\nform = PostForm() return render(request, 'blog/post_edit.html', {'form': form})</code></pre></div>\n<h3 id=\"템플릿\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\"템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿</h3>\n<p><code class=\"language-text\">blog/templates/blog/post_edit.html</code>파일을 생성해 폼이 작동할 수 있게 만든다.</p>\n<ul>\n<li>머저 폼이 보여야 합니다. <code class=\"language-text\">{{ form.as_p }}</code></li>\n<li>위 코드를 HTML <code class=\"language-text\">form</code> 태그로 감싼다. <code class=\"language-text\">&lt;form method=\"POST\">...&lt;/form></code></li>\n<li><code class=\"language-text\">Save</code>버튼 - <code class=\"language-text\">&lt;button type=\"submit\">Save&lt;/button></code></li>\n<li>\n<p>마지막으로 <code class=\"language-text\">&lt;form ...></code>에 <code class=\"language-{\"> csrf_token </code>을 추가한다. 이 작업은 폼 보안을 위해 중요합니다! 이 작업을 빼놓고 저장하면 장고는 아래와 같은 에러를 발생시킬거에요 (로컬에서는 발생시키지 못함…)</p>\n<p>`<img src=\"https://tutorial.djangogirls.org/ko/django_forms/images/csrf2.png\" alt=\"CSFR Forbidden page\"></p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% extends 'blog/base.html' %} {% block content %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>New post<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  {% csrf_token %} {{ form.as_p}}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save btn btn-default<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Save<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n{% endblock %}</code></pre></div>\n<ul>\n<li>여기서 화면을 다시 불러올 경우 화면은 나오지만 저장해도 새 글은 추가되지 않습니다! - <code class=\"language-text\">view 추가작업 필요!</code></li>\n</ul>\n<h3 id=\"폼-저장하기\" style=\"position:relative;\"><a href=\"#%ED%8F%BC-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B8%B0\" aria-label=\"폼 저장하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폼 저장하기</h3>\n<p><code class=\"language-text\">blog/views.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">post_new</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    form <span class=\"token operator\">=</span> PostForm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_edit.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">:</span> form<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>폼을 제출할 때 같은 뷰를 불러온다. 이 때 <code class=\"language-text\">request</code>에는 우리가 입력한 데이터가 있는데, <code class=\"language-text\">request.POST</code>가 가지고 있습니다. ( <code class=\"language-text\">POST</code>는 글 데이터를 등록하는(posting)하는 것을 의미한다. 블로그 글을 의미하는 post와는 관련 없음) HTML의 <code class=\"language-text\">&lt;form></code> 태그의 <code class=\"language-text\">method = \"POST\"</code>속성에 따라 POST로 넘겨진 폼 필드의 값들은 <code class=\"language-text\">request.POST</code>에 저장됩니다.</p>\n<p>이제 view에서 두 상황을 나누어 처리해볼 것이다.</p>\n<ol>\n<li>처음 페이지에 접속했을 때: 새 글을 쓸 수 있게 폼이 비어있어야한다.</li>\n<li>폼에 입력된 데이터를 view 페이지로 가지고 올 때: 조건문을 추가시켜야한다.(<code class=\"language-text\">if</code>)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">:</span>\n    form <span class=\"token operator\">=</span> PostForm<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    form <span class=\"token operator\">=</span> PostForm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>만약 <code class=\"language-text\">method</code>가 <code class=\"language-text\">POST</code>라면, 폼에서 받은 데이터를 <code class=\"language-text\">PostForm</code>으로 넘겨줘야하므로 <code class=\"language-text\">form = PostForm(request.POST)</code></li>\n</ul>\n<p>이제 폼에 들어있는 값들이 올바른지 확인해야한다. (모든 필드에는 값이 있어야 하고 잘못된 값이 있다면 저장되지 않아야한다) - <code class=\"language-text\">form.is_valid()</code> 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> form<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    post <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>commit<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    post<span class=\"token punctuation\">.</span>author <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>user\n    post<span class=\"token punctuation\">.</span>published_date <span class=\"token operator\">=</span> timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    post<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>여기서의 작업은 일반적으로 두 단계로 나눌 수 있다. 하나는 <code class=\"language-text\">form.save()</code>로 폼을 저장하는 작업, 나머지 하나는 작성자를 추가하는 작업이다. (<code class=\"language-text\">PostForm</code>에는 작성자 필드가 없지만, 필드 값은 필요함!)</li>\n<li><code class=\"language-text\">commit=False</code>란 넘겨진 데이터를 바로 <code class=\"language-text\">Post</code> 모델에 저장하지는 말라는 뜻입니다. (작성자를 추가한 후 저장해야하기 때문) 대부분의 경우에는 <code class=\"language-text\">commit=False</code>를 사용하지 않고 <code class=\"language-text\">form.save()</code>를 사용해서 저장한다. 다만 여기서는 작성자 정보를 추가하고 저장해야 하므로 <code class=\"language-text\">commit=False</code>를 사용하는 것입니다.</li>\n<li><code class=\"language-text\">post.save()</code>는 변경사항(작성자정보가 포함된)을 유지할 것이고 새 블로그 글이 만들어 질것이다.</li>\n</ul>\n<p>끝으로 새 블로그 글을 작성한 다음에 <code class=\"language-text\">post_detail</code>페이지로 이동하기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> redirect\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t\t\t<span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span><span class=\"token string\">'post_detail'</span><span class=\"token punctuation\">,</span>pk<span class=\"token operator\">=</span>post<span class=\"token punctuation\">.</span>pk<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>새로 작성한 글을 볼 수 있도록 <code class=\"language-text\">post_detail</code>페이지로 가라고 수정한다.</li>\n<li><code class=\"language-text\">post_detail</code>은 이동해야한 뷰 이름</li>\n<li><code class=\"language-text\">post_detail</code>에는 <code class=\"language-text\">pk</code>가 필요하기 때문에 <code class=\"language-text\">pk=post.pk</code>를 사용하여 뷰에게 값을 넘겨준다. 여기서 <code class=\"language-text\">post</code>는 새로 생성한 블로그 글</li>\n</ul>\n<p>{% endraw %}</p>","frontmatter":{"title":"[django]16. 장고 폼-1","date":null,"lang":null}}},{"node":{"id":"48d8f198-c347-539b-b7ae-a734aa1ab800","excerpt":"참고: 장고걸스 {% raw…","html":"<ul>\n<li>참고: <a href=\"https://tutorial.djangogirls.org/ko/django_forms/\">장고걸스</a></li>\n</ul>\n<p>{% raw %}</p>\n<h3 id=\"폼-검증하기\" style=\"position:relative;\"><a href=\"#%ED%8F%BC-%EA%B2%80%EC%A6%9D%ED%95%98%EA%B8%B0\" aria-label=\"폼 검증하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폼 검증하기</h3>\n<p>블로그 글은 <code class=\"language-text\">title</code>과 <code class=\"language-text\">text</code> 필드가 반드시 있어야 해요. 우리가 만든 <code class=\"language-text\">Post</code> 모델에서는 이 필드 값들이 필요 없다고 했지만 (<code class=\"language-text\">published_date</code> 제외) 장고는 모두 기본 값을 설정되어 있다고 생각합니다. 폼에 값을 입력하지 않고 저장할 경우 값이 넘어가지 않음</p>\n<h3 id=\"폼-수정하기\" style=\"position:relative;\"><a href=\"#%ED%8F%BC-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"폼 수정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폼 수정하기</h3>\n<ul>\n<li><code class=\"language-text\">blog/templates/blog/post_detail.html</code> 파일에 다음 코드를 추가 - 수정 버튼</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-default<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_edit<span class=\"token punctuation\">'</span> pk=post.pk %}<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-pencil<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">blog/urls.py</code>에 다음 코드를 추가 - 수정 url</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">path<span class=\"token punctuation\">(</span><span class=\"token string\">'post/&lt;int:pk>/edit/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_edit<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_edit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ul>\n<li>템플릿은 <code class=\"language-text\">blog/templates/blog/post_edit.html</code>템플릿을 재사용</li>\n<li>\n<p>view 만들기 : <code class=\"language-text\">blog/views.py</code>에 파일 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">post_edit</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  post <span class=\"token operator\">=</span> get_object_or_404<span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>pk<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">==</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">:</span>\n      form <span class=\"token operator\">=</span> PostForm<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> instance<span class=\"token operator\">=</span>post<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> form<span class=\"token punctuation\">.</span>is_valid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n          post <span class=\"token operator\">=</span> form<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>commit<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n          post<span class=\"token punctuation\">.</span>author <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>user\n          post<span class=\"token punctuation\">.</span>published_date <span class=\"token operator\">=</span> timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          post<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span><span class=\"token string\">'post_detail'</span><span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>post<span class=\"token punctuation\">.</span>pk<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      form <span class=\"token operator\">=</span> PostForm<span class=\"token punctuation\">(</span>instance<span class=\"token operator\">=</span>post<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_edit.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">:</span> form<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">post_new</code>와 거의 비슷해보이지만 완전히 같지는 않아요</p>\n<ol>\n<li>url로부터 추가로 <code class=\"language-text\">pk</code>매개변수를 받아서 처리합니다.</li>\n<li><code class=\"language-text\">get_object_or_404(Post, pk=pk)</code>를 호출하여 수정하고자 하는 글의 <code class=\"language-text\">Post</code> 모델 <code class=\"language-text\">instance</code>로 가져옵니다. (<code class=\"language-text\">pk</code>로 원하는 글을 찾습니다.) 이렇게 가져온 데이터는 폼을 만들 때(수정하려면 이미 저장된 글을 가져와야됨)와 폼을 저장할 때 사용하게 됩니다.</li>\n</ol>\n</li>\n</ul>\n<p><a href=\"https://docs.djangoproject.com/en/2.0/topics/forms/\">장고 폼 관련 공식 문서</a></p>\n<h3 id=\"보안\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%95%88\" aria-label=\"보안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보안</h3>\n<p>지금은 웹사이트를 방문하는 누구든지 글을 쓸 수 있어요. 이번엔 나에게만 보이고 다른 사람에게는 보이지 않는 버튼을 만들어 볼게요</p>\n<p><code class=\"language-text\">blog/templates/blog/base.html</code>파일에서 <code class=\"language-text\">page-header div</code>를 찾아 다래와 같이 작성된 a태그를 찾습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_new<span class=\"token punctuation\">'</span> %}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-menu<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-plus<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>여기에 <code class=\"language-{\"> if </code>태그를 추가해 관리자로 로그인한 유저들만 링크가 보일 수 있게 만들거에요</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% if user.is_authenticated %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_new<span class=\"token punctuation\">'</span> %}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-menu<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-plus<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n{% endif %}</code></pre></div>\n<p>이 <code class=\"language-{\"> if </code>는 브라우저에 페이지를 요청하는 사용자가 로그인상태일 경우 링크가 나타나게 만듭니다. 이것은 새 게시글을 완전히 보호해주는 것은 아니지만, 바람직한 방법입니다.</p>\n<p><code class=\"language-text\">blog/templates/blog/post_detail.html</code> 파일을 열어 다음 코드를 찾습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-default<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_edit<span class=\"token punctuation\">'</span> pk=post.pk %}<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-pencil<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>다음 코드로 수정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% endif %} {% if user.is_authenticated %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-default<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_edit<span class=\"token punctuation\">'</span> pk=post.pk %}<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-pencil<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n{% endif %}</code></pre></div>\n<p>새 브라우저나 시크릿창을 실행해보면 게시글 추가, 수정 링크가 뜨지 않는 것을 볼 수 있어요!</p>\n<h3 id=\"배포\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%ED%8F%AC\" aria-label=\"배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포</h3>\n<p>{% endraw %}</p>","frontmatter":{"title":"[django]17. 장고 폼-2","date":null,"lang":null}}},{"node":{"id":"1116d660-7643-507a-90ab-af803770259f","excerpt":"참고: 장고걸스 {% raw…","html":"<ul>\n<li>참고: <a href=\"https://tutorial-extensions.djangogirls.org/ko/homework\">장고걸스</a></li>\n</ul>\n<p>{% raw %}</p>\n<h3 id=\"미리보기로-블로그-글-저장하기\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B8%80-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B8%B0\" aria-label=\"미리보기로 블로그 글 저장하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미리보기로 블로그 글 저장하기</h3>\n<p>지금은 새 글을 작성하면 바로 발행이 된다. 미리보기로 글을 저장하려면 <code class=\"language-text\">blog/views.py</code>파일에서 <code class=\"language-text\">post_new</code>와 <code class=\"language-text\">post_edit</code> 메소드에 다음 줄을 삭제하세요</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">post<span class=\"token punctuation\">.</span>published_date <span class=\"token operator\">=</span> timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이렇게 하면 새로 작성한 글이 바로 게시되지 않고 미리 볼 수 있는 초안으로 저장됩니다.</p>\n<p>이제부터 작성된 글과 목록을 미리 볼 수 있도록 해봅시다!</p>\n<h3 id=\"게시되지-않은-블로그-글-목록-페이지-만들기\" style=\"position:relative;\"><a href=\"#%EA%B2%8C%EC%8B%9C%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%80-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B8%80-%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"게시되지 않은 블로그 글 목록 페이지 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>게시되지 않은 블로그 글 목록 페이지 만들기</h3>\n<p>기본 튜토리얼에서 배웠던 QuerySet을 사용할거에요. 기본 튜토리얼에서는 블로그 게시물만 보여주는 <code class=\"language-text\">post_list</code>를 만들었다. (기본값이 들어가는 <code class=\"language-text\">publisged_date</code>도 포함)</p>\n<p>이번에도 비슷한 것을 해볼 건데 임시저장(draft) 기능을 구현할거에요</p>\n<p>새 글 추가하기 버튼 근처에 <code class=\"language-text\">blog/templates/blog/base.html</code>링크를 추가하세요(<code class=\"language-text\">&lt;h1></code>태그 위)</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_draft_list<span class=\"token punctuation\">'</span> %}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>top-menu<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-edit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>\n<p>url <code class=\"language-text\">blog/urls.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">path<span class=\"token punctuation\">(</span><span class=\"token string\">'drafts/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_draft_list<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"post_draft_list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\"># django1.x일 경우</span>\n<span class=\"token comment\"># url(r'^drafts/$', views.post_draft_list, name='post_draft_list'),</span></code></pre></div>\n</li>\n<li>\n<p>view <code class=\"language-text\">blog/views.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">post_draft_list</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  posts <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>published_date__isnull<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'created_date'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_draft_list.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">:</span>posts<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">published_date__isnull=True</code> - 발행되지 않은 글 목록을 가져옴</p>\n<p><code class=\"language-text\">order_by('created_date')</code>- <code class=\"language-text\">created_date</code> 필드에 대해 오름차순 정렬을 수행</p>\n</li>\n<li>\n<p>template <code class=\"language-text\">blog/templates/blog/post_draft_list.html</code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% extends 'blog/base.html' %} {% block content %} {% for post in posts %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>created: {{ post.created_date|date:'d-m-Y' }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_detail<span class=\"token punctuation\">'</span> pk=post.pk %}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ post.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>{{ post.text|truncatechars:200 }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n{% endfor %} {% endblock %}</code></pre></div>\n</li>\n</ul>\n<h3 id=\"게시-버튼-추가하기\" style=\"position:relative;\"><a href=\"#%EA%B2%8C%EC%8B%9C-%EB%B2%84%ED%8A%BC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"게시 버튼 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>게시 버튼 추가하기</h3>\n<p><code class=\"language-text\">blog/templates/blog/post_detail_list.html</code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% if post.published_date %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  {{ post.published_date }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n{% else %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-default<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_publish<span class=\"token punctuation\">'</span> pk=post.pk %}<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span>Publish<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span>\n<span class=\"token punctuation\">></span></span>\n{% endif %}</code></pre></div>\n<ul>\n<li><code class=\"language-text\">published_date</code>필드가 비었을 때, <code class=\"language-text\">&lt;a></code>태그의 내용으로 실행됩니다. pk가 넘어감</li>\n<li>\n<p>url <code class=\"language-text\">blog/urls.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">path<span class=\"token punctuation\">(</span><span class=\"token string\">'post/&lt;pk>/publish/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>post_publish<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_publish'</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>view <code class=\"language-text\">blog/views.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">post_publish</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  post <span class=\"token operator\">=</span> get_object_or_404<span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>pk<span class=\"token punctuation\">)</span>\n  post<span class=\"token punctuation\">.</span>publish<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span><span class=\"token string\">'post_detail'</span><span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>pk<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>model <code class=\"language-text\">blog/models.py</code>에서 <code class=\"language-text\">Post</code>모델을 만들 때 다음과 같이 작성했었음!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  self<span class=\"token punctuation\">.</span>published_date <span class=\"token operator\">=</span> timezone<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  self<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"게시글-삭제하기\" style=\"position:relative;\"><a href=\"#%EA%B2%8C%EC%8B%9C%EA%B8%80-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0\" aria-label=\"게시글 삭제하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>게시글 삭제하기</h3>\n<p><code class=\"language-text\">blog/templates/blog/post_detail.html</code>을 열어 다음 코드를 추가한다. edit 버튼 아래에 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-default<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>post_remove<span class=\"token punctuation\">'</span> pk=post.pk %}<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glyphicon glyphicon-remove<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이제 URL이 필요하다(<code class=\"language-text\">blog/urls.py</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">path<span class=\"token punctuation\">(</span><span class=\"token string\">'post/&lt;pk>/remove/'</span><span class=\"token punctuation\">,</span>views<span class=\"token punctuation\">.</span>post_remove<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'post_remove'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>이젠 <code class=\"language-text\">view</code>를 만들어보자! <code class=\"language-text\">blog/views.py</code>를 열고 다음 코드를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">post_remove</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> pk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    post <span class=\"token operator\">=</span> get_object_or_404<span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>pk<span class=\"token punctuation\">)</span>\n    post<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span><span class=\"token string\">'post_list'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 블로그 게시글을 지울 수 있다. 모든 장고 모델은 <code class=\"language-text\">.delete()</code>를 사용하면 지울 수 있다!</p>\n<p><code class=\"language-text\">redirect</code>를 사용하여 게시글이 삭제된 후에 <code class=\"language-text\">post_list</code>페이지로 이동하게 만들었다.</p>\n<p>{% endraw %}</p>","frontmatter":{"title":"[django]18. 미리보기로 블로그 글 저장하기","date":null,"lang":null}}},{"node":{"id":"f316e67f-6098-5d1e-862c-b305116f967c","excerpt":"출처: 첫번째 장고앱 작성하기 간단한 설문조사 어플리케이션 만들기 사람들이 설문 내용을 보고 직접 투표할 수 있는 개방된 사이트 관리자가 설문을 추가, 변경, 삭제할 수 있는 관리용 사이트 django 설치되어있는지, 버전 확인하기 프로젝트 만들기 Django…","html":"<p>출처: <a href=\"https://docs.djangoproject.com/ko/3.1/intro/tutorial01/\">첫번째 장고앱 작성하기</a></p>\n<p>간단한 설문조사 어플리케이션 만들기</p>\n<ul>\n<li>사람들이 설문 내용을 보고 직접 투표할 수 있는 개방된 사이트</li>\n<li>관리자가 설문을 추가, 변경, 삭제할 수 있는 관리용 사이트</li>\n</ul>\n<h4 id=\"django-설치되어있는지-버전-확인하기\" style=\"position:relative;\"><a href=\"#django-%EC%84%A4%EC%B9%98%EB%90%98%EC%96%B4%EC%9E%88%EB%8A%94%EC%A7%80-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\" aria-label=\"django 설치되어있는지 버전 확인하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>django 설치되어있는지, 버전 확인하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python <span class=\"token operator\">-</span>m django <span class=\"token operator\">--</span>version</code></pre></div>\n<h3 id=\"프로젝트-만들기\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"프로젝트 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 만들기</h3>\n<p>Django를 처음 사용한다면 초기 설정에 주의를 기울여야한다. Django project를 구성하는 코드를 자동으로 생성해야 하는데, 이 과정에서 데이터베이스 설정, Django를 위한 옵션들, 어플리케이션을 위한 설정들과 같은 Django 인스턴스를 구성하는 수많은 설정들이 생성되기 때문입니다.</p>\n<ul>\n<li>\n<p>커맨드라인에서 cd 명령어로 코드를 저장할 디렉터리로 이동 후 다음의 명령을 수행</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ django-admin startproject mysite</code></pre></div>\n<p>이 명령은 현재 디렉토리에 mysite라는 디렉토리를 생성할 것입니다.</p>\n<blockquote>\n<p>프로젝트를 생성할 때는 Python 또는 Django에서 사용 중인 이름은 피해야합니다. 예를 들어 django(Django와 충돌), test(Python 패키지 이름 중 하나) 같은 이름</p>\n</blockquote>\n<blockquote>\n<p>작성한 코드는 DocumentRoot의 바깥에 두는 것을 추천합니다. 웹서버의 DocumentRoot에 존재할 경우 웹을 통해 외부의 사람들이 Python 코드를 직접 열어볼 수 있는 위험이 있기 때문에 보안에 좋지 않습니다.</p>\n</blockquote>\n</li>\n<li>\n<p><code class=\"language-text\">startproject</code>에서 생성되는 것</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysite/\n\tmanage.py\n\tmysite/\n\t\t__init__.py\n\t\tsettings.py\n\t\turls.py\n\t\tasgi.py\n\t\twsgi.py</code></pre></div>\n<ul>\n<li>바깥 mysite 폴더는 프로젝트를 위한 공간으로 이것의 이름은 Django와 상관이 없습니다. 아무거나 원하는 이름으로 변경해도 됩니다.</li>\n<li><code class=\"language-text\">manage.py</code> Django 프로젝트와 다양한 방법으로 상호작용하는 커맨드라인의 유틸리티입니다.<a href=\"https://docs.djangoproject.com/ko/3.1/ref/django-admin/\">참고</a></li>\n<li><code class=\"language-text\">mysite/</code> 디렉토리 내부에는 프로젝트를 위한 실제 python 패키지들이 저장됩니다. 이 디렉토리 내의 이름을 이용하여, (mysite.urls와 같은 식으로) 프로젝트 어디에서나 python 패키지들을 임포트 할 수 있습니다.</li>\n<li><code class=\"language-text\">mysite/__init__.py</code>\npython으로 하여금 이 디렉토리를 패키지처럼 다루라고 알려주는 용도의 단순한 빈 파일</li>\n<li><code class=\"language-text\">mysite/settings.py</code> 현재 Django 프로젝트의 환경 및 구성을 저장합니다. 어떻게 작동하는지 확인하고 싶으면 <a href=\"https://docs.djangoproject.com/ko/3.1/topics/settings/\">여기</a></li>\n<li><code class=\"language-text\">mysite/urls.py</code> 현재 Django project의 URL 선언을 저장합니다. Django로 저장된 사이트의 목차라고 할 수 있습니다. URL에 대한 <a href=\"https://docs.djangoproject.com/ko/3.1/topics/http/urls/\">자세한 내용</a></li>\n<li><code class=\"language-text\">mysite/asgi.py</code> 프로젝트를 제공하기 위한 ASGI 호환 웹 서버의 진입점 <a href=\"https://docs.djangoproject.com/ko/3.1/howto/deployment/asgi/\">자세히</a></li>\n<li><code class=\"language-text\">mysite/wsgi.py</code> 현재 프로젝트를 서비스하기 위한 WSGI 호환 웹 서버의 진입점 <a href=\"https://docs.djangoproject.com/ko/3.1/howto/deployment/wsgi/\">자세히</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"개발서버\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C%EC%84%9C%EB%B2%84\" aria-label=\"개발서버 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발서버</h3>\n<h4 id=\"django-프로젝트가-제대로-작동하는지-확인\" style=\"position:relative;\"><a href=\"#django-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EA%B0%80-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9E%91%EB%8F%99%ED%95%98%EB%8A%94%EC%A7%80-%ED%99%95%EC%9D%B8\" aria-label=\"django 프로젝트가 제대로 작동하는지 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django 프로젝트가 제대로 작동하는지 확인</h4>\n<p>mysite 디렉토리로 이동하고, 다음 명령어를 입력</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py runserver</code></pre></div>\n<p>서버를 동작시켰으니 <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a> 을 통해 접속할 수 있습니다.</p>\n<blockquote>\n<p>runserver의 자동 변경 기능</p>\n<p>개발 서버는 요청이 돌어올 때마다 자동으로 Python 코드를 다시 불러옵니다. 코드의 변경사항을 반영하기 위해서 굳이 서버를 재가동 하지 않아도 됩니다. 그러나, 파일을 추가하는 등의 몇몇의 동작은 개발 서버가 자동으로 인식하지 못하기 때문에, 이런 상황에서는 서버를 재가동 해야 적용됩니다.</p>\n</blockquote>\n<h3 id=\"설문조사-앱-만들기\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AC%B8%EC%A1%B0%EC%82%AC-%EC%95%B1-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"설문조사 앱 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설문조사 앱 만들기</h3>\n<p>앱을 생성하기 위헤 manage.py가 존재하는 디렉토리에서 다음의 명령어를 입력</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py startapp polls</code></pre></div>\n<p>polls라는 디렉토리가 생깁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">polls\n\t__init__.py\n\tadmin.py\n\tapps.py\n\tmigrations/\n\t\t__init__.py\n\tmodels.py\n\ttests.py\n\tviews.py</code></pre></div>\n<h3 id=\"첫번째-뷰-작성하기\" style=\"position:relative;\"><a href=\"#%EC%B2%AB%EB%B2%88%EC%A7%B8-%EB%B7%B0-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"첫번째 뷰 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫번째 뷰 작성하기</h3>\n<p><code class=\"language-text\">polls/view.py</code>를 열고 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world. You're at the polls index.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Django에서 가장 간단한 형태의 뷰입니다. 뷰를 호출하려면 이와 연결된 url이 있어야하는데, 이를 위해 URLconf가 사용됩니다.</p>\n<p>polls 디렉토리에서 URLconf를 생성하려면 <code class=\"language-text\">urls.py</code>라는 파일을 생성해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> views\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>그런 다음, 최상위 URLconf에서 polls.urls 모듈을 바라보게 설정합니다.</p>\n<p><code class=\"language-text\">mysite/urls.py</code> 파일을 열고, <code class=\"language-text\">django.urls.include</code>를 import하고, urlpatterns 리스트에 include()함수를 다음과 같이 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> include<span class=\"token punctuation\">,</span> path\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'polls/'</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span><span class=\"token string\">'polls.urls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span><span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p><code class=\"language-text\">include()</code>함수는 다른 URLconf들을 참조할 수 있도록 도와줍니다. Django가 함수 <code class=\"language-text\">include()</code>를 만나게 되면, URL의 그 시점까지 일치하는 부분을 잘라내고, 남은 문자열 부분을 후속처리를 위해 include된 URLconf로 전달합니다.</p>\n<p>polls 앱에 그 자체의 URLconf(polls/urls.py)가 존재하는 한, <code class=\"language-text\">/polls/</code>, <code class=\"language-text\">/fun_polls/</code>, <code class=\"language-text\">/content/polls/</code>와 같은 경로, 또는 다른 root 경로에 연결하더라도, 앱은 여전히 잘 동작할 것입니다.</p>\n<blockquote>\n<p>include()를 사용하는 경우</p>\n<p>다른 URL 패턴을 포함할 때마다 사용해야합니다. admin.site.urls가 유일한 예외</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py runserver</code></pre></div>\n<p><a href=\"http://localhost:8000/polls/\">http://localhost:8000/polls/</a> -> index 뷰에서 정의한 텍스트가 보임</p>\n<p><code class=\"language-text\">path()</code>함수에는 2개의 필수 인수인 route와 view, 2개의 선택 가능한 인수 kwargs, name까지 모두 4개의 인수가 전달되었습니다.</p>\n<h3 id=\"path-인수-route\" style=\"position:relative;\"><a href=\"#path-%EC%9D%B8%EC%88%98-route\" aria-label=\"path 인수 route permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path() 인수: route</h3>\n<p>route는 URL 패턴을 가진 문자열입니다. 요청이 처리될 때, DJango는 urlpatterns의 첫 번째 패턴부터 시작하여, 일치하는 패턴을 찾을 때까지 요청된 URL을 각 패턴과 리스트의 순서대로 비교합니다.</p>\n<p>패턴들은 GET이나 POST의 매개변수들, 혹은 도메인 이름을 검색하지 않습니다. 예를 들어 <a href=\"http://www.example.com/myapp/%EC%9D%B4\">http://www.example.com/myapp/이</a> 요청된 경우, URLconf는 오직 myapp/부분만 바라봅니다. <a href=\"http://www.example.com/myapp/?app=3\">http://www.example.com/myapp/?app=3</a> 같은 요청에도, URLconf는 역시 myapp/부분만 신경씁니다.</p>\n<hr>\n<h3 id=\"path-인수-view\" style=\"position:relative;\"><a href=\"#path-%EC%9D%B8%EC%88%98-view\" aria-label=\"path 인수 view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path() 인수: view</h3>\n<p>Django에서 일치하는 패턴을 찾으면, HttpRequest 객체를 첫번째 인수로 하고, 경로로부터 캡쳐된(가져온 값을 말하는 건가?) 값을 키워드 인수로하여 특정 view 함수를 호출합니다.</p>\n<hr>\n<h3 id=\"path-인수-kwargs\" style=\"position:relative;\"><a href=\"#path-%EC%9D%B8%EC%88%98-kwargs\" aria-label=\"path 인수 kwargs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path() 인수: kwargs</h3>\n<p>임의의 키워드 인수들은 목표한 view에 dict 형으로 전달됩니다. 그러나 튜토리얼에서는 사용하지 않음</p>\n<hr>\n<h3 id=\"path-인수-name\" style=\"position:relative;\"><a href=\"#path-%EC%9D%B8%EC%88%98-name\" aria-label=\"path 인수 name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path() 인수: name</h3>\n<p>URL에 이름을 지으면, 템플릿을 포함한 Django 어디에서나 명확하게 참조할 수 있습니다. 이 기능을 이용하면, 단 하나의 파일만 수정해도 project 내의 모든 URL패턴을 바꿀 수 있도록 도와줍니다.</p>","frontmatter":{"title":"[Django]장고튜토리얼-장고앱작성하기 part1","date":null,"lang":null}}},{"node":{"id":"2383e563-5728-5c35-99bc-bbdf4cb70348","excerpt":"출처: 첫번째 장고앱 작성하기 데이터베이스 설치  -> Django 설정을 모듈 변수로 표현한 Python 모듈 기본적으로는 SQLite을 사용하도록 구성되어 있습니다. SQLite는 Python…","html":"<p>출처: <a href=\"https://docs.djangoproject.com/ko/3.1/intro/tutorial02/\">첫번째 장고앱 작성하기</a></p>\n<h3 id=\"데이터베이스-설치\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%84%A4%EC%B9%98\" aria-label=\"데이터베이스 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 설치</h3>\n<p><code class=\"language-text\">mysite/settings.py</code> -> Django 설정을 모듈 변수로 표현한 Python 모듈</p>\n<p>기본적으로는 SQLite을 사용하도록 구성되어 있습니다. SQLite는 Python에서 기본으로 제공되기 떄문에 별도로 설치할 필요가 없습니다. 그러나 실제 프로젝트를 시작할 때에는, 나중에 데이터베이스를 교체하느라 골치 아파질 일을 피하기 위해서라도 좀 더 확장성 있는 데이터베이스를 사용하는 것이 좋습니다.</p>\n<p>다른 데이터베이스를 사용해보고 싶다면, 적절한 <a href=\"https://docs.djangoproject.com/ko/3.1/topics/install/#database-installation\">데이터베이스 바인딩</a>을 설치하고, 데이터베이스 연결 설정과 맞게끔 DATABASES ‘default’ 항목의 값을 해당하는 키 값으로 바꿔준다.</p>\n<ul>\n<li>\n<p>ENGINE</p>\n<ul>\n<li>django.db.backends.sqlite3</li>\n<li>django.db.backends.postgresql</li>\n<li>django.db.backends.mysql</li>\n<li>django.db.backends.oracle</li>\n</ul>\n</li>\n<li>\n<p>NAME</p>\n<ul>\n<li>db의 이름, 기본으로 설정된 경우 프로젝트 파일 안에 저장됨</li>\n</ul>\n</li>\n</ul>\n<p>SQLite를 데이터베이스로 사용하지 않는 경우, USER, PASSWORD, HOST 같은 추가 설정이 반드시 필요합니다.</p>\n<ul>\n<li>자신의 시간대에 맞춰 TIME_ZONE 값을 설정</li>\n<li>\n<p>INSTALLED_APPS</p>\n<ul>\n<li>현재 Django 인스턴스에서 활성화된 모든 Django 어플리케이션들의 이름이 담겨 있습니다. 앱들은 다수의 프로젝트에서 사용될 수 있고, 다른 프로벡트에서 쉽게 사용될 수 있도록 패키징하여 배포할 수 있습니다.</li>\n<li>django.contrib.admin - 관리용 사이트</li>\n<li>django.contrib.auth - 인증 시스템</li>\n<li>django.contrib.contenttypes - 컨텐츠 타입을 위한 프레임 워크</li>\n<li>django.contrib.sessions - 세션 프레임워크</li>\n<li>django.contrib.messages - 메세징 프레임워크</li>\n<li>django.contrib.staticfiles - 정적 파일을 관리하는 프레임워크</li>\n</ul>\n<p>이 어플리케이션들은 사용하기 편리하도록 기본으로 제공됩니다.</p>\n<p>이러한 기본 어플리케이션들 중 몇몇은 최소 하나 이상의 데이터베이스 테이블을 사용하는데, 그러기 위해서는 데이터베이스에서 테이블을 미리 만들 필요가 있습니다. 이를 위해서 다음 명령을 실행해봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py migrate</code></pre></div>\n<p>migrate 명령어는 INSTALLED_APPS 설정을 보고 mysite/settings.py파일의 데이터베이스 설정과 앱과 함께 제공되는 데이터베이스 마이그레이션에 때라 필요한 데이터베이스 테이블을 만듭니다.</p>\n</li>\n</ul>\n<h3 id=\"모델-만들기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"모델 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델 만들기</h3>\n<p>모델이란 부가적인 메타데이터를 가진 데이터베이스의 구조를 말합니다.</p>\n<p>설문조사 앱에서는 Question, Choice 두개의 모델을 만듭니다. Question은 질문과 등록일을 가지고 Choice는 선택 문자열과 투표 집계, 두개의 필드를 가집니다. 각각의 Choice는 Question과 관련되어 있습니다.</p>\n<p>이러한 개념들은 파이썬 클래스들을 통해 보여집니다. <code class=\"language-text\">polls/models.py</code>파일을 아래와 같이 수정하세요</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    question_text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateTimeField<span class=\"token punctuation\">(</span><span class=\"token string\">'date published'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Choice</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    question <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">)</span>\n    choice_text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    votes <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>각 모델은 하위 클래스 <code class=\"language-text\">django.db.models.Model</code>로 만든 클래스로 표현되며, 각 변수는 모델의 데이터베이스 필드를 나타냅니다.</p>\n<p>데이터베이스의 각 필드는 Field클래스의 인스턴스로서 표현됩니다. 이것은 각 필드가 어떤 자료형을 가질 수 있는지를 Django에게 말해줍니다.</p>\n<ul>\n<li>CharField는 문자 필드를 표현</li>\n<li>DateTimeField는 날짜와 시간 필드를 표현</li>\n</ul>\n<p>각각의 Field인스턴스의 이름(question<em>text, pub</em>date)은 기계가 읽기 좋은 형식(machine-friendly format)의 데이터베이스 필드 이름입니다. 이 필드명을 Python 코드에서 사용할 수 있으며, 데이터베이스에서는 컬럼명으로 사용할 것입니다.</p>\n<p>Field 클래스의 생성자에 선택적인 첫번째 위치 인수를 전달하여 사람이 읽기 좋은(human-readable) 이름을 지정할 수도 있습니다. 이 방법은 Django의 내부를 설명하는 용도로 종종 사용되는데, 이는 문서가 늘어나는 것 같은 효과를 가집니다. 만약 이 선택적인 첫번째 위치 인수를 사용하지 않으면 Django는 기계가 읽기 좋은 형식의 이름을 사용합니다. 위 코드에서는 <code class=\"language-text\">Question.pub_date</code>에 한해서만 인산이 읽기 좋은 형태의 이름을 정의하였습니다. 그 외의 다른 필드들은, 기계가 읽기 좋은 형태의 이름이라도 사람이 읽기에 충분합니다.</p>\n<p>몇몇 Field 클래스들은 필수 인수가 필요합니다.</p>\n<ul>\n<li><code class=\"language-text\">CharField</code>의 경우 <code class=\"language-text\">max_lenth</code>를 입력해 주어야 합니다</li>\n</ul>\n<p>이것은 데이터베이스 스키마에서만 필요한 것이 아닌 값을 검증할 때도 쓰입니다.</p>\n<p>또한 Field는 다양한 선택적 인수들을 가질 수 있습니다.</p>\n<ul>\n<li><code class=\"language-text\">default</code>를 사용하여 votes의 기본값을 0으로 설정</li>\n</ul>\n<p><strong><code class=\"language-text\">ForeignKey</code>를 사용한 관계설정</strong></p>\n<ul>\n<li>각각의 Choice가 하나의 Question에 관계된다는 것을 장고에게 알려줍니다. Django는 다대일(many-to-one), 다대다(many-to-many) 일대일(one-to-one)과 같은 모든 일반 데이터베이스의 관계들을 지원합니다.</li>\n</ul>\n<h3 id=\"모델의-활성화\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8%EC%9D%98-%ED%99%9C%EC%84%B1%ED%99%94\" aria-label=\"모델의 활성화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델의 활성화</h3>\n<p>모델에 대한 코드들이 Django에 정보를 전달하고, Django는 이 정보를 가지고 다음과 같은 일을 할 수 있습니다.</p>\n<ul>\n<li>이 앱을 위한 데이터베이스 스키마 생성(CREATE TABLE 문)</li>\n<li>Question과 Chice 객체에 접근하기 위한 Python 데이터베이스 접근 API를 생성</li>\n</ul>\n<p>그러나 가장 먼져 현재 프로젝트에게 polls 앱이 설치되어 있다는 것을 알려야 합니다.</p>\n<p>앱을 현대의 프로젝트에 포함시키기 위해서는, 앱의 구성 클래스에 대한 참조를 INSTALLED<em>APPS 설정에 추가해야 합니다. PollsConfig 클래스는 polls/apps.py 파일 내에 존재합니다. 따라서, 점으로 구분된 경로는 <code class=\"language-text\">polls.apps.PollsConfig</code>가 됩니다. 이 경로를 <code class=\"language-text\">mysite/settings.py</code>파일을 편집하여 INSTALLED</em>APPS 설정에 추가하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'polls.apps.PollsConfig'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.admin'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.auth'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.contenttypes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.sessions'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.staticfiles'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>이제 Django는 polls앱이 포함된 것을 알게 되었습니다. 다음 명령을 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py makemigrations polls</code></pre></div>\n<p><code class=\"language-text\">makemigrations</code>를 실행시킴으로서, 내가 모델을 변경시킨 사실과 이 변경사항을 migration으로 저장시키고 싶다는 것을 Django에게 알려줍니다.</p>\n<p><code class=\"language-text\">migration</code>은 Django가 모델 및 데이터베이스 스키마(디스크의 파일들임)에 대한 변경 사항을 저장하는 방법입니다. 원하는 경우 새 모델에 대한 마이그레이션을 읽을 수 있습니다. (polls/migrations/0001_initial.py) 이것은 Django가 만들 때마다 읽어야하는 것은 아니지만, Django가 변경하는 방식을 수동으로 조정하려는 경우 사람이 편집할 수 있도록 설계되어있습니다.</p>\n<p>당신을 위해 migration들을 실행시켜주고, 자동으로 데이터베이스 스키마를 관리해 주는 <code class=\"language-text\">migratie</code>명령어가 있습니다. 이 명령어를 알아보기 전에 migration이 내부적으로 어떤 SQL 문장을 실행하는지 살펴봅시다. <code class=\"language-text\">sqlmigrate</code> 명령은 migration이름을 인수로 받아, 실행하는 SQL 문장을 보여줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py sqlmigrate polls 0001</code></pre></div>\n<p>실행 결과를 확인하면 다음을 알 수 있습니다.</p>\n<ul>\n<li>테이블 이름은 앱의 이름과 모델의 이름(소문자)이 조합되어 자동으로 생성됩니다. 이 경우, 앱의 이름 polls와 소문자로 표기된 모델의 이름 question과 choice가 합쳐집니다. (이 동작을 재지정하여 수정할 수 있습니다.(override))</li>\n<li>기본 키(ID)가 자동으로 추가됩니다.(이 동작 역시 재지정할 수 있습니다.)</li>\n<li>관례에 따라 Django는 외래 키 필드명에 ’_id’가 자동으로 추가됩니다.(재지정 가능)</li>\n<li>외래키 관계는 제약 조건에 의해 명시됩니다. <code class=\"language-text\">DEFERRABLE</code>은 걱정하지 않아도 됩니다. PostgreSQL에 트랜잭션이 끝날 때까지 외래 키를 적용하지 않도록 지시합니다.(<code class=\"language-text\">FOREIGN KEYDEFERRABLE</code>)</li>\n<li>사용하는 데이터베이스에 따라 데이터베이스 고유의 필드타입이 조정됩니다. 따라서, 자동 증가 필드를 생성할 경우 <code class=\"language-text\">auto_increment</code>(MySQL), <code class=\"language-text\">serial</code>(PostgreSQL), (SQLite)와 같이 사용하는 데이터베이스에 따라 적절한 필드타입이 자동으로 선택됩니다. 필드 명에 사용되는 인용부호도 상황에 따라 겹따옴표나 홑따옴표가 적절히 선택됩니다.<code class=\"language-text\">integer primary key autoincrement</code></li>\n<li><code class=\"language-text\">sqlmigrate</code> 명령은 실제로 데이터베이스에서 마이그레이션을 실행하지 않습니다. 대신 SQL Django가 필요하다고 생각하는 것을 볼 수 있도록 화면에 출력합니다. Django가 수행 할 작업을 확인하거나 변경하기 위해 SQL 스크립트가 필요한 데이터베이스 관리자가 있는 경우 유용합니다.</li>\n<li>명령을 통해 마이그레이션을 수행하거나 데이터베이스를 건들이지 않고도 프로젝트의 문제를 확인할 수 있습니다. <code class=\"language-text\">python manage.py check</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py migrate</code></pre></div>\n<p>데이터베이스에 모델과 관련된 테이블을 생성한다.</p>\n<p><code class=\"language-text\">migrate</code> 명령은 아직 적용되지 않은 마이그레이션을 모두 수집해 이를 실행하며 이 과정을 통해 모델에서의 변경 사항들과 데이터베이스의 스키마의 동기화가 이루어집니다.(Django는 <code class=\"language-text\">django_migrations</code>테이블을 두어 마이그레이션 적용 여부를 추적합니다.)</p>\n<p>마이그레이션은 기능이 매우 강력하여 마치 프로젝트를 개발할 때처럼 데이터베이스나 테이블에 손대지 않고도 모델의 반복적인 변경을 가능하게 해줍니다. 동작 중인 데이터베이스를 자료 손실 없이 업그레이드 하는 데 최적화 되어 있습니다.</p>\n<p>모델의 변경을 만드는 세단계</p>\n<ol>\n<li>models.py 에서 모델을 변경합니다.</li>\n<li><code class=\"language-text\">python manage.py makemigrations</code>을 통해 이 변경사항에 대한 마이그레이션을 만듭니다.</li>\n<li><code class=\"language-text\">python manage.py migrate</code> 명령을 통해 변경사항을 데이터베이스에 적용합니다.</li>\n</ol>\n<p>마이그레이션을 만드는 명령과 적용하는 명령이 분리된 것은 버전 관리 시스템에 마이그레이션을 커밋하고 앱과 함께 출시할 수 있도록 하기 위해서 입니다. 이는 개발을 쉽게 해줄 뿐아니라, 다른 개발자가 프로덕션에서 사용할 수 있게 해줍니다.</p>\n<p>manage.py 유틸리티로 <a href=\"https://docs.djangoproject.com/ko/3.1/ref/django-admin/\">어떤 일을 할 수 있는지</a></p>\n<h4 id=\"api-가지고-놀기\" style=\"position:relative;\"><a href=\"#api-%EA%B0%80%EC%A7%80%EA%B3%A0-%EB%86%80%EA%B8%B0\" aria-label=\"api 가지고 놀기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://docs.djangoproject.com/ko/3.1/intro/tutorial02/#playing-with-the-api\">API 가지고 놀기</a></h4>\n<h3 id=\"관리자-페이지\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC%EC%9E%90-%ED%8E%98%EC%9D%B4%EC%A7%80\" aria-label=\"관리자 페이지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리자 페이지</h3>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ python manage<span class=\"token punctuation\">.</span>py createsuperuser</code></pre></div>\n<p>위 명령을 실행하여 username과 password를 설정한다.</p>\n<h4 id=\"서버-개발-시작\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-%EA%B0%9C%EB%B0%9C-%EC%8B%9C%EC%9E%91\" aria-label=\"서버 개발 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 개발 시작</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">$ python manage<span class=\"token punctuation\">.</span>py runserver</code></pre></div>\n<p><a href=\"http://127.0.0.1:8000/admin/\">http://127.0.0.1:8000/admin/</a> 으로 이동하여 앞에서 설정한 username과 password를 치고 로그인한다.</p>\n<p>첫번쨰 화면에서는 편집가능한 그룹과 사용자아 같은 몇 종류의 컨텐츠를 볼 수 있습니다. 이것들은 <code class=\"language-text\">django.contrib.auth</code>모듈에서 제공되는데, DJango에서 제공되는 인증 프레임워크입니다.</p>\n<h4 id=\"언어-설정-및-지역-시간-설정\" style=\"position:relative;\"><a href=\"#%EC%96%B8%EC%96%B4-%EC%84%A4%EC%A0%95-%EB%B0%8F-%EC%A7%80%EC%97%AD-%EC%8B%9C%EA%B0%84-%EC%84%A4%EC%A0%95\" aria-label=\"언어 설정 및 지역 시간 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>언어 설정 및 지역 시간 설정</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">LANGUAGE_CODE <span class=\"token operator\">=</span> <span class=\"token string\">'ko-kr'</span>\n\nTIME_ZONE <span class=\"token operator\">=</span> <span class=\"token string\">'Asia/Seoul'</span></code></pre></div>\n<h4 id=\"관리-사이트에서-poll-app-변경가능하도록-만들기\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC-%EC%82%AC%EC%9D%B4%ED%8A%B8%EC%97%90%EC%84%9C-poll-app-%EB%B3%80%EA%B2%BD%EA%B0%80%EB%8A%A5%ED%95%98%EB%8F%84%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"관리 사이트에서 poll app 변경가능하도록 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리 사이트에서 poll app 변경가능하도록 만들기</h4>\n<p><code class=\"language-text\">polls.admin.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/107882535-3cd90880-6f2d-11eb-8f0a-73c5f9ba8541.PNG\" alt=\"django_poll_app_등록\"></p>\n<h4 id=\"관리-기능-탐색하기\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC-%EA%B8%B0%EB%8A%A5-%ED%83%90%EC%83%89%ED%95%98%EA%B8%B0\" aria-label=\"관리 기능 탐색하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리 기능 탐색하기</h4>\n<p>Question에 들어가면 이전에 등록한 질문 리스트를 볼 수 있고, 수정할 수 있다.</p>\n<p>여기서 알아둘 것들</p>\n<ul>\n<li>이 서식은 Question 모델에서 자동을 생성되었습니다.</li>\n<li>모델의 각 필드 유형들은 (<code class=\"language-text\">DateTimeField</code>, <code class=\"language-text\">CharField</code>) 적절한 HTML 입력 위젯으로 표현됩니다. Django 관리사이트는 각각의 필드가 어떻게 표현되어야할지 알고 있습니다.<img src=\"https://user-images.githubusercontent.com/53068706/107882547-49f5f780-6f2d-11eb-9c7e-6ef6f0f1b98d.PNG\" alt=\"django_필드에_맞는_HTML_표현\"></li>\n<li>각각 <code class=\"language-text\">DateTimeField</code>는 JavaScript로 작성된 단축 기능과 연결됩니다. 날짜는 ‘오늘’ 버튼과 달력 팝업에서 입력할 수 있으며, 시간은 ‘지금’ 버튼과 일반적으로 입력하는 시간들을 제공하는 팝업을 통해서 입력할 수 있습니다.</li>\n</ul>\n<p>페이지 아래 부분에서 다음과 같은 몇 가지 옵션을 제공합니다.</p>\n<ul>\n<li>저장(Save) - 이 유형의 객체에 대한 변경사항을 저장하고, 변경된 목록 페이지를 보여줍니다.</li>\n<li>저장 및 편집 계속 (Save and continue editing) - 이 객체에 대한 변경사항을 저장하고, 현재 편집창을 갱신합니다.</li>\n<li>저장 및 다른 이름으로 추가(Save and add another) - 변경사항을 저장하고, 이 유형의 객체에 대한 비어있는 새로운 입력창을 불러옵니다.</li>\n<li>삭제(delete) - 삭제를 확인하는 페이지를 띄웁니다.</li>\n</ul>\n<p>위쪽의 히스토리에서는 관리사이트를 통해 누가 언제 무엇을 바꾸었는지 목록을 확인할 수 있습니다.</p>","frontmatter":{"title":"[Django]장고튜토리얼-장고앱작성하기 part2","date":null,"lang":null}}},{"node":{"id":"8acbf095-8154-58d1-a83f-47596fcd5b4a","excerpt":"constant 변수 변수를 상수처럼 사용할 때 -> 가독성은 올리고 값은 변경할 수 없게 기준값으로 사용할 때 사용할 때는 constant명 또는 class명.constant명으로 쓴다 public: 클래스 외부에서 접근가능 static…","html":"<ul>\n<li>\n<p><strong>constant 변수</strong></p>\n<ul>\n<li>변수를 상수처럼 사용할 때 -> 가독성은 올리고 값은 변경할 수 없게</li>\n<li>기준값으로 사용할 때</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> 데이터형 상수명 <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span><span class=\"token comment\">//작성위치가 고정되어있다( 클래스 선언 바로 아래에 )</span></code></pre></div>\n<p>사용할 때는 <strong>constant명</strong> 또는 <strong>class명.constant명</strong>으로 쓴다</p>\n<ul>\n<li><strong>public</strong>: 클래스 외부에서 접근가능</li>\n<li><strong>static</strong>: 모든 메모리에서 접근 가능 / 공용 메모리</li>\n<li><strong>final</strong>: 값 변경 불가</li>\n<li>\n<p><strong>tilde연산</strong> ( ~ )</p>\n<ul>\n<li>-(n+1)의 결과를 출력한다</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"wrapper-class\" style=\"position:relative;\"><a href=\"#wrapper-class\" aria-label=\"wrapper class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wrapper Class</h2>\n<ul>\n<li>기본형 데이터형과 같은 이름을 가진 클래스(byte Byte 둘이 다름)</li>\n<li>\n<p>기본형 데이터형을 감싸서 객체로 만들어 여러가지 기능을 사용할 수 있도록 만들어준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">byte</span> b<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Byte</span> bObj<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Byte</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbObj<span class=\"token punctuation\">.</span><span class=\"token function\">intValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//int형 값으로 변환된 값을 반환</span>\nbObj<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//바이트 값을 비교</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"연산자--operator-\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90--operator-\" aria-label=\"연산자  operator  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자 ( Operator )</h2>\n<p>최단산쉬관리삼대콤마</p>\n<ol>\n<li>최우선 ()</li>\n<li>단항 ~ ! + - ++ —</li>\n<li>산술</li>\n<li>쉬프트</li>\n<li>관계</li>\n<li>논리</li>\n<li>삼항</li>\n<li>대입</li>\n<li>콤마</li>\n</ol>\n<h2 id=\"접근지정자\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC%EC%A7%80%EC%A0%95%EC%9E%90\" aria-label=\"접근지정자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근지정자</h2>\n<ul>\n<li>\n<p>static method</p>\n<ul>\n<li>constant 형태로 쓸 수 있는 메소트</li>\n<li>객체화를 하지 않고 쓸 수 있는 메소드</li>\n</ul>\n</li>\n<li>\n<p>instance method</p>\n<ul>\n<li>객체화를 하여 사용하는 메소드</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Java1","date":null,"lang":null}}},{"node":{"id":"f1ce193f-ef72-517e-a8ef-ba22a31d01ca","excerpt":"강의 링크 : 생활코딩 HTML 인생은 태그를 배우기 전과 후로 나뉜다? 아무것도 모르는 상태에서 뭘 어떻게 공부하고 검색해야하는지 아는 상태가 됨 ‘HTML h1 tag…","html":"<p>강의 링크 : <a href=\"https://opentutorials.org/course/3084\">생활코딩</a></p>\n<h3 id=\"html\" style=\"position:relative;\"><a href=\"#html\" aria-label=\"html permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML</h3>\n<ul>\n<li>인생은 태그를 배우기 전과 후로 나뉜다?</li>\n<li>아무것도 모르는 상태에서 뭘 어떻게 공부하고 검색해야하는지 아는 상태가 됨</li>\n<li>‘HTML h1 tag’ 검색</li>\n<li>궁금한 것을 검색하면서 추론하여 지식을 얻으면 더 오래남는다.</li>\n</ul>\n<h3 id=\"통계를-기반한-학습\" style=\"position:relative;\"><a href=\"#%ED%86%B5%EA%B3%84%EB%A5%BC-%EA%B8%B0%EB%B0%98%ED%95%9C-%ED%95%99%EC%8A%B5\" aria-label=\"통계를 기반한 학습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>통계를 기반한 학습</h3>\n<ul>\n<li>태그들은 검색을 통해서 사용해도 되지만 모두 검색을 하여 사용하기엔 너무 번거롭다</li>\n<li><a href=\"advancedwebranking.com\">advancedwebranking.com</a> 전세계 페이지들이 어떤 태그로 이루어져있는지 랭킹을 제공</li>\n<li>쉬운 것들이 창조성의 원천이다</li>\n</ul>\n<h3 id=\"tag\" style=\"position:relative;\"><a href=\"#tag\" aria-label=\"tag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>tag</strong></h3>\n<ul>\n<li><code class=\"language-text\">&lt;h1>&lt;/h1></code> : 제목표시 (1~6)</li>\n<li><code class=\"language-text\">&lt;br></code> : 줄바꿈</li>\n<li><code class=\"language-text\">&lt;p>&lt;/p></code> : css를 사용하여 스타일을 바꿀 쑤 있음</li>\n</ul>\n<h3 id=\"html이-중요한-이유\" style=\"position:relative;\"><a href=\"#html%EC%9D%B4-%EC%A4%91%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"html이 중요한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML이 중요한 이유</h3>\n<ul>\n<li>현대사회에서 검색엔진에 노출된다는 것은 매우 중요함</li>\n<li>모양만 제목인 페이지와 태그로 제목이 설정되있는 페이지 중에 어떤 페이지가 검색 엔진에게 선택받을까?</li>\n<li>웹의 핵심 철학은 접근성, 웹은 저작권이 없는 공공재</li>\n<li>접근성 accessibility 신체적인 장애가 있는 사람들도 접근이 쉬워야함</li>\n<li>비지니스적뿐만 아니라 휴머니즘적 측면에서도 중요함</li>\n</ul>\n<h3 id=\"속성\" style=\"position:relative;\"><a href=\"#%EC%86%8D%EC%84%B1\" aria-label=\"속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>속성</h3>\n<ul>\n<li>이미지 태그 : <code class=\"language-text\">&lt;img src=\"xxx.jpg\"></code></li>\n<li><a href=\"unsplash.com\">저작권없는 이미지 사이트</a></li>\n<li><code class=\"language-<img src=\"\" width=\"100\">&quot;&gt;</code> : 알아서 너비에 맞춰서 배치됨</li>\n</ul>\n<h3 id=\"목록\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EB%A1%9D\" aria-label=\"목록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목록</h3>\n<ul>\n<li><code class=\"language-text\">&lt;ul>&lt;li>&lt;/li>&lt;/ul></code> : unordered list</li>\n<li><code class=\"language-text\">&lt;ol>&lt;li>&lt;/li>&lt;/ol></code> : ordered list</li>\n</ul>\n<h3 id=\"링크\" style=\"position:relative;\"><a href=\"#%EB%A7%81%ED%81%AC\" aria-label=\"링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>링크</h3>\n<ul>\n<li><code class=\"language-text\">&lt;a href=\"http://doyeon311.github.io\">&lt;/a></code></li>\n</ul>\n<h3 id=\"구조\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0\" aria-label=\"구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조</h3>\n<ul>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!DOCTYPE html>\n&lt;html>\n\t&lt;head>\n\t\t&lt;meta charset=\"utf-8\">\n\t\t&lt;titie>&lt;/title>\n\t&lt;/head>\n\t&lt;body>\n\t&lt;/body>\n&lt;/html></code></pre></div>\n</li>\n</ul>\n<h3 id=\"웹의-역사\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%EC%9D%98-%EC%97%AD%EC%82%AC\" aria-label=\"웹의 역사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹의 역사</h3>\n<ul>\n<li>웹이 시작된 1990년 이후로 웹은 가장 중요한 정보기술로 군리하면서 복잡해짐</li>\n<li>그결과 웹을 처음 공부하는 사람들은 전체가 보이지 않게됨</li>\n<li>웹과 인터넷, 인터넷이 도시라면 웹은 도시의 건물 하나, 인터넷이 포함하는 수많은 기술 중에 하나가 웹</li>\n<li>웹 때문에 사람들이 인터넷을 쓰기 시작함</li>\n<li><a href=\"http://info.cern.ch/\">http://info.cern.ch/</a> 세계 최초의 웹사이트 - 팀버너스리가 만듦</li>\n</ul>\n<h3 id=\"서버와-클라이언트\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EC%99%80-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8\" aria-label=\"서버와 클라이언트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버와 클라이언트</h3>\n<ul>\n<li>웹서버, 웹브라우저(클라이언트)</li>\n<li>수학은 이해하는 것이 아니라 익숙해지는 것이다. - 폰노이만</li>\n<li>\n<p>다른 사람들에게 내가 만든 컨텐츠를 인터넷을 사용하는 모든 사람들이 사용할 수 있도록 하는 방법</p>\n<ul>\n<li>웹호스팅 ex) GitHub pages</li>\n<li>웹서버를 컴퓨터에 직접 설치</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"HTML1","date":null,"lang":null}}},{"node":{"id":"7c944d76-0d04-5df8-a7c9-50452c02040f","excerpt":"출처: 첫번째 장고앱 작성하기 뷰(view) 뷰는 Django…","html":"<p>출처: <a href=\"https://docs.djangoproject.com/ko/3.1/intro/tutorial03/\">첫번째 장고앱 작성하기</a></p>\n<h3 id=\"뷰view\" style=\"position:relative;\"><a href=\"#%EB%B7%B0view\" aria-label=\"뷰view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰(view)</h3>\n<p>뷰는 Django 어플리케이션이 일반적으로 특정 기능과 템플릿을 제공하는 웹 페이지의 한 종류입니다. 예를 들어 블로그 어플리케이션의 경우 다음과 같은 뷰를 가질 수 있습니다.</p>\n<ul>\n<li>블로그 홈페이지 - 가장 최근의 항목들을 보여줍니다.</li>\n<li>세부페이지 = 하나의 항목에 연결하는 영구적인 링크를 제공합니다.</li>\n<li>년도별 축적 페이지 - 주어진 연도의 모든 월별 항목들을 표시합니다.</li>\n<li>월별 축적 페이지 - 주어진 월의 날짜 별 항목들을 표시합니다.</li>\n<li>날짜별 축적 페이지 = 주어진 난ㄹ짜의 모든 항목들을 표시합니다.</li>\n<li>댓글 기능 - 특정 항목의 댓글을 다룰 수 있는 기능</li>\n</ul>\n<p>poll 어플리케이션에서는 다음 네개의 view를 만들어 보겠습니다.</p>\n<ul>\n<li>질문 &#x3C;색인> 페이지 - 최근의 질문들을 표시합니다.</li>\n<li>질문 &#x3C;세부> 페이지 - 질문 내용과, 투표할 수 있는 서식을 표시합니다.</li>\n<li>질문 &#x3C;결과> 페이지 - 특정 질문에 대한 결과를 표시합니다.</li>\n<li>투표 기능 - 측정 질문에 대해 특정 선택을 할 수 있는 투표 기능을 제공합니다.</li>\n</ul>\n<p>장고에서 웹 페이지들, 컨텐츠는 뷰에 의해 전달된다. 각각의 뷰는 파이썬 함수(또는 클래스 기반의 뷰일 경우엔 메소드 )에 의해 표현된다. 장고는 요청된 URL(정확히 말하자면 도메인 이름 뒤에 있는 URL)을 검사하여 뷰를 고른다.</p>\n<p>URL로부터 뷰를 얻기 위해, Django는 URLconfs 라는 것을 사용합니다. URLconf는 URL 패턴을 뷰에 연결합니다.</p>\n<p>좀 더 자세한 정보는 <a href=\"https://docs.djangoproject.com/ko/3.1/topics/http/urls/\">URL dispatcher</a></p>\n<hr>\n<h3 id=\"뷰-추가하기\" style=\"position:relative;\"><a href=\"#%EB%B7%B0-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"뷰 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰 추가하기</h3>\n<p><code class=\"language-text\">polls/urls.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token comment\"># /polls/5/</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\"># /polls/5/results/</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/results/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'results'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\"># /polls/5/vote/</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/vote/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>vote<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'vote'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">polls/views.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">detail</span><span class=\"token punctuation\">(</span>reqeust<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">\"You're looking at question %s.\"</span> <span class=\"token operator\">%</span> question_id<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">results</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    response <span class=\"token operator\">=</span> <span class=\"token string\">\"You're looking at the results of question %s.\"</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>response <span class=\"token operator\">%</span> question_id<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">vote</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">\"You're voting on question %s.\"</span> <span class=\"token operator\">%</span> question_id<span class=\"token punctuation\">)</span></code></pre></div>\n<p>사용자가 웹사이트의 페이지를 요청할 때, <code class=\"language-text\">polls/34/</code>를 요청했다고 하면, Django는 <strong>mysite.urls</strong> 파이썬 모듈을 불러오게 됩니다. <strong>ROOT_URLCONF</strong>설정에 의해 해당 모듈을 바라보도록 지정되어 있기 때문입니다. <strong>mysite.urls</strong>에서 <strong>urlpatterns</strong>라는 변수를 찾고, 순서대로 패턴을 따라갑니다. <strong>polls/</strong>를 찾은 후엔, 일치하는 텍스트(<strong>polls/</strong>)를 버리고, 남은 텍스트인 <strong>34/</strong>를 polls.urls URLconf로 전달하여 남은 처리를 진행합니다. 거기에 <strong><code class=\"language-text\">&lt;int:question_id>/</code></strong>와 일치하여, 결과적으로 <strong>detail()</strong>뷰 함수가 호출됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">detail<span class=\"token punctuation\">(</span>request<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>HttpRequest <span class=\"token builtin\">object</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> question_id<span class=\"token operator\">=</span><span class=\"token number\">34</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">question_id=34</code>는 <code class=\"language-text\">&lt;int:question_id></code>에서 왔습니다. 괄호를 사용하여 URL의 일부를 캡쳐하고, 해당 내용을 keyword 인수로서 뷰 함수로 전달합니다. 문자열의 <code class=\"language-text\">:question_id></code>부분은 일치하는 패턴을 구별하기 위해 정의한 이름이며 <code class=\"language-text\">&lt;int:</code>부분은 어느 패턴이 해당 URL 경로에 일치되어야 하는지를 결정하는 컨버터입니다.</p>\n<hr>\n<h3 id=\"뷰가-실제로-뭔가를-하도록-만들기\" style=\"position:relative;\"><a href=\"#%EB%B7%B0%EA%B0%80-%EC%8B%A4%EC%A0%9C%EB%A1%9C-%EB%AD%94%EA%B0%80%EB%A5%BC-%ED%95%98%EB%8F%84%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"뷰가 실제로 뭔가를 하도록 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰가 실제로 뭔가를 하도록 만들기</h3>\n<p>각 뷰는 두 가지 중 하나를 하도록 되어 있습니다.</p>\n<ul>\n<li>요청된 페이지의 내용이 담긴 HttpResponse 객체를 반환</li>\n<li>Http04 같은 예외를 발생</li>\n</ul>\n<p>당신이 작성한 뷰는 데이터베이스의 레코드를 읽을 수 있습니다. 또한 뷰는 Django나 Python에서 서드파티로 제공되는 템플릿 시스템을 사용할 수도 있습니다. 뷰는 PDF를 생성하거나, XML을 출력하거나, 실시간으로 ZIP파일을 만들 수 있습니다.뷰는 당신이 원하는 무엇이든, Python의 어떤 라이브러리라도 사용할 수 있습니다.</p>\n<p>Django에 필요한 것은 HttpResponse 객체 혹은 예외 입니다. 그렇게 다루는 게 편리하기 때문입니다.</p>\n<p>뷰에서 사용할 수 있는 템플릿을 작성하여 Python코드로부터 디자인을 분리하도록 Django의 템플릿 시스템을 사용해 봅시다.</p>\n<p>우선 <strong>polls</strong> 디렉토리에 <strong>templates</strong>라는 디렉토리를 만듭니다. Django는 여기서 템플릿을 찾게 될 것입니다.</p>\n<p>프로젝트의 <strong>TEMPLATES</strong>설정은 Django가 어떻게 템플릿을 불러오고 랜더링 할 것인지 기술합니다. 기본 설정 파일 <strong>APP_DIRS</strong>옵션이 <strong>True</strong>로 설정된 <strong>DjangoTemplates</strong> 백앤드를 구성합니다. 관례에 따라 <strong>DjangoTemplates</strong>dms rkr <strong>INSTALLED_APPS</strong>디렉토리의 templates 하위 디렉토리를 탐색합니다.</p>\n<p>실제로 index.html 파일의 경로는 polls/templates/polls/index.html이 됩니다. templates 아래에 파일을 만들 수도 있지만 장고는 찾는 이름과 일치하는 첫번째 템플릿을 읽기 때문에, 다른 애플리케이션에 이름이 중복되는 템플릿이 있을 경우 올바르지 않게 동작할 수 있습니다. 때문에 장고가 올바른 것을 가르킬 수 있도록 만들어주기 위해 네임 스페이스를 지정하여 해당 템플릿을 응용 프로그램 자체의 이름이 지정된 디렉토리에 넣어주는 방법을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>template <span class=\"token keyword\">import</span> loader\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    latest_question_list <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-pub_date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    template <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span>get_template<span class=\"token punctuation\">(</span><span class=\"token string\">'polls/index.html'</span><span class=\"token punctuation\">)</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'lastest_question_list'</span><span class=\"token punctuation\">:</span>\n        latest_question_list<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>My test page<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    {% if lastest_question_list %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n      {% for question in lastest_question_list %}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/polls/{{question.id}}/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{question.question_text}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      {% endfor %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n    {% else %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>No polls are available.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    {% endif %}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/107882568-67c35c80-6f2d-11eb-942d-1cc51f32c8f2.PNG\" alt=\"django_poll_question_list\"></p>\n<h4 id=\"render\" style=\"position:relative;\"><a href=\"#render\" aria-label=\"render permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>render()</strong></h4>\n<p>템플릿에 context를 채워넣어 표현한 결과를 HttpResponse 객체와 함께 돌려주는 구문은 자주 쓰는 용법입니다. 따라서 Django는 이런 표현을 쉽게 표현할 수 있도록 단축기능을 제공합니다. <strong>index()</strong>뷰를 단축기능으로 작성하면 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    latest_question_list <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>order_by<span class=\"token punctuation\">(</span><span class=\"token string\">'-pub_date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'lastest_question_list'</span><span class=\"token punctuation\">:</span>\n        latest_question_list<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/index.html'</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span></code></pre></div>\n<p>모든 뷰에 적용한다면, 더이상 loader와 HttpResponse를 임포트하지 않아도 됩니다. (만약 detail, results, vote에서 stub 메소드를 가지고 있다면, HttpResponse를 유지해야합니다.)</p>\n<p><strong>render()</strong> 함수는 request 객체를 첫번째 인수로 받고 템플릿 이름을 두번째 인수로 받으며, context 사전형 객체를 세번째 선택적(optional)인수로 받습니다. 인수로 지정된 context로 표현된 템플릿의 <strong>HttpResponse</strong>객체가 반환됩니다.</p>\n<hr>\n<h3 id=\"404-에러-일으키기\" style=\"position:relative;\"><a href=\"#404-%EC%97%90%EB%9F%AC-%EC%9D%BC%EC%9C%BC%ED%82%A4%EA%B8%B0\" aria-label=\"404 에러 일으키기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>404 에러 일으키기</h3>\n<p>뷰는 요청된 질문의 ID가 없을 경우 <strong>Http404</strong>예외를 발생시킵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">detail</span><span class=\"token punctuation\">(</span>reqeust<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        question <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>question_id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Question<span class=\"token punctuation\">.</span>DoesNotExist<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> Http404<span class=\"token punctuation\">(</span><span class=\"token string\">\"Question does not exist\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/detail.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'question'</span><span class=\"token punctuation\">:</span> question<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"getobjector_404\" style=\"position:relative;\"><a href=\"#getobjector_404\" aria-label=\"getobjector_404 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>get<em>object</em>or_404()</h4>\n<p>만약 객체가 존재하지 않을 때 get()을 사용하여 Http404 예외를 발생시키는 것은 자주 쓰이는 용법입니다. Django에서 이 기능에 대한 단축 기능을 제공합니다.</p>\n<p>detail() 뷰를 단축 기능으로 작성하면 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> get_object_or_404<span class=\"token punctuation\">,</span> render\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">detail</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    question <span class=\"token operator\">=</span> get_object_or_404<span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>question_id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/detail.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'question'</span><span class=\"token punctuation\">:</span> question<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>get<em>object</em>or_404()</strong> 함수는 Django 모델을 첫번째 인자로 받고, 몇 개의 키워드 인수를 모델 관리자의 <strong>get()</strong>함수에 넘깁니다. 만약 객체가 존재하지 않을 경우, <strong>Http404</strong> 예외가 발생합니다.</p>\n<blockquote>\n<p><strong>ObjectDoesNotExist</strong> 예외를 자동으로 잡아내는 대신 <strong>get<em>object</em>or_404()</strong> 도움 한수를 사용하거나, <strong>ObjectDoesNotExist</strong> 예외를 사용하는 대신 <strong>Http404</strong>를 사용하는 이유는 무엇일까요?</p>\n<p>모델 계층에 연결하는 방법이기 때문입니다.</p>\n<p>Django의 중요한 설계 목표는 약결합(loose coupling)을 관리하는데에 있습니다. 일부 제어된 결합이 <strong>django.shortcuts</strong> 모듈에도 도입되었습니다.</p>\n</blockquote>","frontmatter":{"title":"[Django]장고튜토리얼-장고앱작성하기 part3","date":null,"lang":null}}},{"node":{"id":"8cb257bc-7fc4-50dd-9765-814f2f52eaf7","excerpt":"정리되어 있지 않음 HTML 영역나누기 : 브라우저의 전체를 나눈다. 자동 줄변경, 페이지의 전체 디자인을 만들 때 사용한다 : 데이터가 존재하는 영역만 나눈다. 자동줄변경X , 페이지의 부분 디자인을 만들 때 사용한다 ML의 특수문자 ( escape character…","html":"<ul>\n<li>정리되어 있지 않음</li>\n</ul>\n<h1 id=\"html\" style=\"position:relative;\"><a href=\"#html\" aria-label=\"html permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML</h1>\n<ul>\n<li>\n<p>영역나누기</p>\n<ul>\n<li><code class=\"language-text\">&lt;div></code>: 브라우저의 전체를 나눈다. 자동 줄변경, 페이지의 전체 디자인을 만들 때 사용한다</li>\n<li>\n<p><code class=\"language-text\">&lt;span></code>: 데이터가 존재하는 영역만 나눈다. 자동줄변경X , 페이지의 부분 디자인을 만들 때 사용한다</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--header에서 제공할 내용--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--사용자에게 제공할 내용--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--footer에서 제공할 내용--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>ML의 특수문자 ( escape character )</p>\n<p>기능을 가진 문자열</p>\n<ul>\n<li>문법 <code class=\"language-text\">&amp;..;</code></li>\n<li>공백한칸 <code class=\"language-text\">&amp;nbsp;</code></li>\n<li>&#x3C; <code class=\"language-text\">&amp;lt;</code></li>\n<li>> <code class=\"language-text\">&amp;gt;</code></li>\n<li>&#x26; <code class=\"language-text\">&amp;amp;</code></li>\n<li>” <code class=\"language-text\">&amp;quot;</code></li>\n</ul>\n</li>\n<li>media 재생</li>\n<li>\n<p>HTML5 이전</p>\n<ul>\n<li><code class=\"language-text\">&lt;embed></code> - 동영상, mp3 등 재생</li>\n<li><code class=\"language-text\">html&lt;embed src=\"미디어 경로\" controls=\"controls\" autoplay=\"true\"></code></li>\n</ul>\n</li>\n<li>\n<p>HTML5 이후</p>\n<ul>\n<li>동영상 <code class=\"language-text\">&lt;video></code>로 음악은 <code class=\"language-text\">&lt;audio></code>로 구분하여 재생한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>controls<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>음악경로<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>controls<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>경로<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!--브라우저마다 지원하는 코덱이 다른다--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"html-form-control\" style=\"position:relative;\"><a href=\"#html-form-control\" aria-label=\"html form control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control</h3>\n<ul>\n<li>사용자가 입력하는 값을 받기 위한 HTML의 Object들</li>\n<li><code class=\"language-text\">&lt;input></code> <code class=\"language-text\">&lt;select></code> <code class=\"language-text\">&lt;textarea></code> 3가지 제공</li>\n<li><code class=\"language-text\">&lt;form></code>태그 안에 존재해야 서버로 값 전달 할 수 있다.</li>\n</ul>\n<p><code class=\"language-text\">&lt;input></code></p>\n<ul>\n<li>\n<p>한줄로 입력가능한 칸</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">&lt;input type=\"text\" size=\"보여줄 글자수\" maxlength=\"최대 입력 가능한 글자 수\"\nname=\"이름(유일)\" //javascript나 backend로 전송할 때 사용 id=\"아이디(유일)\"\n//CSS에서 사용 javascript value=\"보여줄 글자(클릭해도 글자가 사라지지 않음)\"\nreadonly=\"readonly\" placeholder=\"보여줄글자(클릭하면 글자가 사라짐 - HTML5에서\n지원속성)\" > &lt;input type=\"password\" //비밀번호 입력(****로 나옴) >\n<span class=\"token comment\">&lt;!-- 라디오 버튼 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름(그룹이름)<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>서버로 전송할 값<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checked<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>사용자에게 보여줄 값\n<span class=\"token comment\">&lt;!-- check box --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token comment\">&lt;!-- hidden: 사용자에게 값을 노출시키지 않고 서버로 값을 전달한다. --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>서버로 전송할 값<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n<li>\n<p>버튼</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 버튼 모양 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>버튼에 들어갈 label<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span class=\"token comment\">&lt;!-- Javascript와 같이 사용 --></span>\n<span class=\"token comment\">&lt;!-- 전송버튼 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span class=\"token comment\">&lt;!--&lt;form>태그에 설정된 페이지로 HTML Form Control에 있는 값을 전송한다. --></span>\n<span class=\"token comment\">&lt;!-- 취소버튼 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reset<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span class=\"token comment\">&lt;!--&lt;form> 태그안에 HTML Form Control의 값들을 초기화한다. --></span></code></pre></div>\n</li>\n</ul>\n<p><code class=\"language-text\">&lt;select></code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- combobox --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>보여줄 옵션의 개수<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>서버로 전송할 값<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">selected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selected<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    사용자에게 보여줄 값\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-text\">&lt;textarea></code> : 메모장처럼 생김</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>한줄에 쓸 글자수<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>보여 줄 줄 수<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n초기값<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<h4 id=\"form\" style=\"position:relative;\"><a href=\"#form\" aria-label=\"form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Form</h4>\n<ul>\n<li>서버로 값을 전달할 때 사용하는 tag</li>\n<li>\n<p>HTML Form Control들을 자식태그로 가지고 있어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- form안에 form이 있으면 안된다 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span>\n<span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Form Coltrol의 값을 받을 Back-End page ex)a.jsp, 서블릿 path, a.asp, a.php<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>전송방식 get / post<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form을 구분하기 위한 이름(javascript)<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n. .\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>전송은 <code class=\"language-text\">&lt;input type=\"submit\"></code>을 사용했을 때 전송한다.</li>\n</ul>\n<h4 id=\"html5에서-추가된-form-control\" style=\"position:relative;\"><a href=\"#html5%EC%97%90%EC%84%9C-%EC%B6%94%EA%B0%80%EB%90%9C-form-control\" aria-label=\"html5에서 추가된 form control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML5에서 추가된 Form Control</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tel/email/date/month/datetime-local/color/number/range<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>\n<p>front-end</p>\n<ol>\n<li>HTML: 페이지 구조</li>\n<li>CSS: 디자인</li>\n<li>Javascript: 연산</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"css\" style=\"position:relative;\"><a href=\"#css\" aria-label=\"css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS</h2>\n<ul>\n<li>Cascading Hakon Wium Lie 제안 (하콤 비움 리)</li>\n<li>웹디자이너가 주로 사용하는 언어</li>\n<li>웹페이지의 통일성 있는 디자인을 제공</li>\n<li>HTML5에서는 CSS의 기능이 제외되서 CSS의 필요성이 높아졌다</li>\n<li>css 문법: <code class=\"language-text\">속성:값;속성:값;</code></li>\n<li>작성법</li>\n<li>\n<p>inline 방식</p>\n<ul>\n<li>HTML Tag에 직접 정의하는 방식</li>\n<li>적용 우선 순위가 가장 높다</li>\n<li>동일 디자인의 재활용성이 매우 낮다</li>\n<li>구조와 디자인의 결합도가 높아진다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>태그명</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">속성명</span><span class=\"token punctuation\">:</span>값<span class=\"token punctuation\">;</span><span class=\"token property\">속성명</span><span class=\"token punctuation\">:</span>값<span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>embed 방식</p>\n<ul>\n<li>HTML의 head 태그에 넣어 정의하는 방식</li>\n<li>inline 방식보다 재사용성이 좋다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\">#id</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">속성</span><span class=\"token punctuation\">:</span> 값<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.class명</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">속성</span><span class=\"token punctuation\">:</span> 값<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">태그명</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">속성</span><span class=\"token punctuation\">:</span> 값<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>external file 방식</p>\n<ul>\n<li>확장자가 css인 파일을 만들고 디자인 코드를 정의하는 방식</li>\n<li>디자인 코드에 대한 재사용성이 가장 높다</li>\n<li>파일관리가 어렵다</li>\n<li>디자인 코드가 필요한 파일에서</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css파일url<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n<li>기본문법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">selector { 속성:값;속성:값; }</code></pre></div>\n<ul>\n<li>\n<p>selector: 정의한 Design 속성을 적용 받는 대상</p>\n<ul>\n<li>id selector : 디자인을 적용받는 태그가 HTML 내에서 유일할 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">#id명,,, { 속성:값;속성:값; }\n&lt;!-- 태그에서 적용 --&gt;\n&lt;태그명 id=&quot;id명&quot;,,,&gt; &lt;!-- #제외하고 입력, 유일하게 하나의 태그에만 적용 --&gt;</code></pre></div>\n<ul>\n<li>class selector: 디자인을 적용받을 태그가 HTML 내에서 여러 개 일 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">.class명,,, { 속성:값;속성:값; }\n&lt;!--태그에 적용--&gt;\n&lt;태그명 class=&quot;class명&quot;,,,&gt; &lt;!-- .제외하고 입력, 클래스명은 여러번 사용될 수 있다 --&gt;</code></pre></div>\n<ul>\n<li>tag seletor: HTML 내에서 모든 태그가 디자인을 적용받아야 할 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">태그명,,, { 속성:값;속성:값; }\n&lt;!-- HTML 내의 모든 태그가 적용받는다 --&gt;\n&lt;태그명&gt;</code></pre></div>\n</li>\n<li>\n<p>subselector</p>\n<ul>\n<li>특정 태그의 자식 태그만 디자인 적용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">태그명>자식태그명 { 속성:값;속성:값 } div>p {,,,}</code></pre></div>\n</li>\n<li>\n<p>글 흘러가게 만들 때</p>\n<p><code class=\"language-text\">&lt;></code></p>\n</li>\n</ul>\n<h2 id=\"font\" style=\"position:relative;\"><a href=\"#font\" aria-label=\"font permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>font</h2>\n<p>글자관련 속성</p>\n<ul>\n<li>글꼴: <code class=\"language-text\">{ font-family: 글꼴, 다른 글꼴,,,}</code></li>\n<li>진하게: 일반글자 <code class=\"language-text\">{ font-weight: bold/nomal }</code></li>\n<li>이텔릭 <code class=\"language-text\">{ font-style: italic/nomal }</code></li>\n<li>글자크기 <code class=\"language-text\">{ font-size: 숫자px }</code></li>\n<li>글자 색 <code class=\"language-text\">{ color: red/#rgb }</code></li>\n<li>줄긋기 <code class=\"language-text\">{ text-decoration: none/underline/overline/line-through}</code></li>\n</ul>\n<h2 id=\"border\" style=\"position:relative;\"><a href=\"#border\" aria-label=\"border permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>border</h2>\n<ul>\n<li>table, td, img, div…</li>\n<li>\n<p><code class=\"language-text\">border: 테두리선두께 선종류 선색;</code></p>\n<ul>\n<li>모든 테두리에 적용된다.</li>\n<li>선종류: solid, dotted, dashed, double(테두리선의 두께가 3px이상일 때부터 적용)</li>\n</ul>\n</li>\n<li>\n<p>특정위치만</p>\n<ul>\n<li><code class=\"language-text\">{ border-left: 두께 선종류 선색; border-right: border-left: border-top: border-bottom: }</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"design\" style=\"position:relative;\"><a href=\"#design\" aria-label=\"design permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Design</h2>\n<h3 id=\"색\" style=\"position:relative;\"><a href=\"#%EC%83%89\" aria-label=\"색 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>색</h3>\n<ul>\n<li>바닥색: <code class=\"language-text\">{ background-color: RGB }</code></li>\n<li>전경색: <code class=\"language-text\">{ color: RGB }</code></li>\n</ul>\n<h3 id=\"이미지\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80\" aria-label=\"이미지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지</h3>\n<ul>\n<li><code class=\"language-text\">{ background: 바닥색 url(\"이미지경로\") 이미지설정 }</code></li>\n<li>\n<p>이미지 설정</p>\n<ul>\n<li>default: 바둑판</li>\n<li>repeat-x: x좌표로 반복</li>\n<li>repeat-y: y좌표로 반복</li>\n<li>no-repeat: 이미지 반복x</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"정렬\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A0%AC\" aria-label=\"정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정렬</h3>\n<ul>\n<li>글자정렬: text-align: left/right/center</li>\n<li>\n<p>여백</p>\n<ul>\n<li>margin: 기준선 바깥쪽 여백</li>\n</ul>\n<p><code class=\"language-text\">{ margin: 여백픽셀; }</code> 모든 방향의 여백</p>\n<p><code class=\"language-text\">{ margin-left: 여백픽셀; }</code></p>\n<p><code class=\"language-text\">{ margin-right: 여백픽셀; }</code></p>\n<ul>\n<li>padding: 기준선 안쪽 여백</li>\n</ul>\n<p><code class=\"language-text\">{ padding: 여백필셀; }</code> 모든 방향의 여백 -> 자체 크기가 변경된다</p>\n<p><code class=\"language-text\">{ padding-left: 여백필셀; }</code></p>\n<p><code class=\"language-text\">{ padding-right: 여백필셀; }</code></p>\n</li>\n<li>\n<p>float : text-align으로 정렬되지 않는 객체를 정렬할 때</p>\n<ul>\n<li>float left right</li>\n<li>float을 설정하면 하위의 객체들이 정렬을 적용받는 버그가 존재</li>\n<li>이전 정렬을 초기화 할 때에는 <code class=\"language-text\">clear: both</code> 속성을 사용</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"사용자의-동작이-있을-때-css적용하기\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EC%9D%98-%EB%8F%99%EC%9E%91%EC%9D%B4-%EC%9E%88%EC%9D%84-%EB%95%8C-css%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"사용자의 동작이 있을 때 css적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자의 동작이 있을 때 CSS적용하기</h3>\n<ul>\n<li>\n<p>behavior selector</p>\n<p><code class=\"language-text\">태그명: hover{속성: 값;,,,}</code></p>\n</li>\n</ul>\n<h4 id=\"div에-스크롤바-생성\" style=\"position:relative;\"><a href=\"#div%EC%97%90-%EC%8A%A4%ED%81%AC%EB%A1%A4%EB%B0%94-%EC%83%9D%EC%84%B1\" aria-label=\"div에 스크롤바 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>div에 스크롤바 생성</h4>\n<ul>\n<li><code class=\"language-text\">overflow: auto</code></li>\n<li>설정한 크기보다 데이터가 많다면 스코롤바를 생성하여 데이터를 정해진 크기 내에서 보여준다</li>\n</ul>\n<h2 id=\"디자인\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8\" aria-label=\"디자인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인</h2>\n<ul>\n<li>div와 CSS를 복합적으로 사용</li>\n<li>div : 사용자에 제공할 내용 정의</li>\n<li>CSS: div를 배치하기 위한 크기, 위치 설정</li>\n<li>크기설정: <code class=\"language-text\">width:너비px</code> <code class=\"language-text\">height:높이px</code></li>\n<li>\n<p>위치설정: <code class=\"language-text\">position: absolute(절대좌표),relative(상대좌표),fixed(고정좌표)</code></p>\n<ul>\n<li>절대 좌표: 스크롤바가 움직여도 좌표가 변하지 않는 좌표(스크롤바가 움직이면 위치가 이동)</li>\n<li>상대좌표: 시작점 위치를 변경할 때</li>\n<li>고정좌표: 스크롤바가 움직이면 좌표가 수정됨 (스크롤바가 움직여도 항상 설정한 자리에 위치)</li>\n<li>좌표: <code class=\"language-text\">top:y좌표,left:x좌표</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">&lt;style type=&quot;text/css&quot;&gt;\n&lt;/style&gt;\n&lt;body&gt;\n  &lt;div id=&quot;a&quot;&gt;\n  &lt;/div&gt;\n&lt;/body&gt;</code></pre></div>\n</li>\n</ul>\n<h3 id=\"영역태그\" style=\"position:relative;\"><a href=\"#%EC%98%81%EC%97%AD%ED%83%9C%EA%B7%B8\" aria-label=\"영역태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>영역태그</h3>\n<p>사용자에게 보여지지 않고, 영역의 의미로 사용되는 태그</p>\n<p><code class=\"language-text\">&lt;header></code> 웹페이지에서 header부분 의미</p>\n<p><code class=\"language-text\">&lt;footer></code> 웹페이지에서 footer부분 의미</p>\n<p><code class=\"language-text\">&lt;navi></code> navigator bar를 묶을 때 사용</p>\n<p><code class=\"language-text\">&lt;section></code> 서비스 제공하기위한 하나의 영역</p>\n<p><code class=\"language-text\">&lt;article></code> 게시물의 리스트, 뉴스의 리스트</p>\n<p><code class=\"language-text\">&lt;aside></code> 부가적인 서비스를 나타내는 영역 (Side Bar)</p>\n<h3 id=\"css3-속성\" style=\"position:relative;\"><a href=\"#css3-%EC%86%8D%EC%84%B1\" aria-label=\"css3 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS3 속성</h3>\n<ul>\n<li>테두리 선을 곡선</li>\n</ul>\n<p><code class=\"language-text\">border-radius:px;</code> 4개의 모서리 모두 동일한 호를 적용</p>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">border-radius:10px\n\nborder-radius: LI RI RB LB;</code></pre></div>\n<ul>\n<li>\n<p>shadow</p>\n<ul>\n<li>글자그림자 설정 : <code class=\"language-text\">text-shadow: x좌표 y좌표 번짐 그림자색</code></li>\n<li>box그림자 설정: <code class=\"language-text\">box-shadow: x좌표 y좌표 번짐 그림자색</code></li>\n</ul>\n</li>\n<li>\n<p>마우스 포인터 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">cursor: default,pointer,crosshair, loading;</code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"HTML","date":null,"lang":null}}},{"node":{"id":"92884d5e-db74-5406-94ea-650c0cfa055d","excerpt":"정리되어 있지 않음 멱등성: 모든 접속자에게 동일하게 서비스됨 JavaScript 1996년에 brendan Eich가 제작하여 발표한 Script언어 C언어로 만들어진 언어 Web browser에서 JavaScript Engine을 사용하여 실행되는 언어 inline, embed…","html":"<ul>\n<li>정리되어 있지 않음</li>\n</ul>\n<p>멱등성: 모든 접속자에게 동일하게 서비스됨</p>\n<h1 id=\"javascript\" style=\"position:relative;\"><a href=\"#javascript\" aria-label=\"javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript</h1>\n<ul>\n<li>1996년에 brendan Eich가 제작하여 발표한 Script언어</li>\n<li>C언어로 만들어진 언어</li>\n<li>Web browser에서 JavaScript Engine을 사용하여 실행되는 언어</li>\n<li>inline, embed, external file 방식 3가지로 사용</li>\n<li>동적 데이터형/동적할당 ( 값이 할당될 때 변수의 데이터형이 설정되는 것 )</li>\n<li>JavaScript를 기반으로한 다양한 library들이 제공 ( JQuery Angular.js, Node.js, View.js, React 등 )</li>\n<li>\n<p>inline: 태그에 직접 정의하여 사용하는 방식</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>태그명 onXXX<span class=\"token operator\">=</span><span class=\"token string\">\"javascript코드\"</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n<li>\n<p>embed: HTML <code class=\"language-text\">&lt;head></code>태그의 자식태그로 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  javascript code\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>external file 방식</p>\n<p>확장자는 .js</p>\n<p>필요한 HTML에서 <code class=\"language-text\">&lt;script src=\"xxx.js\" type=\"text/javascript\">&lt;/script></code></p>\n</li>\n<li>작성방법, 변수, 연산자, 제어문, function, JavaScript 객체들, HTML, Form Control 처리, closure, prototype</li>\n</ul>\n<h3 id=\"코딩-주의\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%94%A9-%EC%A3%BC%EC%9D%98\" aria-label=\"코딩 주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코딩 주의</h3>\n<ul>\n<li>대소문자를 구분</li>\n<li>괄호는 짝으로</li>\n<li>;은 생략할 수 있다.</li>\n</ul>\n<h3 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//HTML &lt;body> 태그 출력: 이전의 &lt;body> 내용을 삭제하고 출력</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>출력할 내용<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//경고창 출력: 코드의 실행을 멈춤</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>출력내용<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//console 출력 (debug 시)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>출력내용<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"variable\" style=\"position:relative;\"><a href=\"#variable\" aria-label=\"variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable</h3>\n<ul>\n<li>필요한 값을 일시적으로 저장하기 위해</li>\n<li>가독성 향상</li>\n<li>데이터형을 개발자가 설정할 수 없다.(값 할당 시에 데이터형이 설정된다)</li>\n<li>\n<p>지역변수와 전역변수가 지원 -> 변수 작성하는 문법 구분</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">지역변수\n<span class=\"token number\">1.</span> 선언<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> 변수명<span class=\"token punctuation\">;</span> 변수를 재선언<span class=\"token punctuation\">,</span> 값 재할당\n\t<span class=\"token keyword\">let</span> 변수명<span class=\"token punctuation\">;</span> 변수를 재선언 할 수 없다<span class=\"token punctuation\">.</span> 값 재할당 가능\n\t<span class=\"token keyword\">const</span> 변수명<span class=\"token punctuation\">;</span> 변수를 재선언 할 ㅜ 없다<span class=\"token punctuation\">.</span> 값을 재할당 할 수 없다<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span> 배열<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> 생성하는 변수 예외적 가능 <span class=\"token punctuation\">)</span>\n<span class=\"token number\">2.</span> <span class=\"token function\">값할당</span> <span class=\"token punctuation\">(</span>데이터형이 결정됨<span class=\"token punctuation\">)</span>\n\t변수명 <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span>\n<span class=\"token number\">3.</span> 값 사용\n\t출력<span class=\"token punctuation\">,</span> 연산<span class=\"token punctuation\">,</span> 재할당</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">전역변수\n<span class=\"token number\">1.</span> 선언<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">var</span>를 사용하지 않고 변수를 선언하면서 값 할당\n\t변수명 <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span>\n위치에 따라서 <span class=\"token keyword\">var</span>를 붙여서 선언해도 전역변수로 사용할 수 있다<span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"변수에-할당할-수-있는-값의-종류\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%97%90-%ED%95%A0%EB%8B%B9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EA%B0%92%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"변수에 할당할 수 있는 값의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수에 할당할 수 있는 값의 종류</h3>\n<ul>\n<li>\n<p>문자가 없음</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//String</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"문자열...\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"문자열...\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>숫자는 정수, 실수를 모두 포함한다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//Number</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">6.4</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"연산자\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자</h3>\n<ul>\n<li>\n<p>최단산쉬 관리 삼대 콤마</p>\n<ol>\n<li>단항</li>\n</ol>\n<p> ~ ! + - *</p>\n<p> ~ : 1의 보수연산</p>\n<p> ! : not</p>\n<ol start=\"2\">\n<li>산술</li>\n<li>쉬프트 <code class=\"language-text\">&lt;&lt;</code> <code class=\"language-text\">>></code> <code class=\"language-text\">>>></code></li>\n<li>관계 <code class=\"language-text\">&lt;</code> <code class=\"language-text\">></code> <code class=\"language-text\">&lt;=</code> <code class=\"language-text\">>=</code> <code class=\"language-text\">==</code> <code class=\"language-text\">===</code> <code class=\"language-text\">!=</code> <code class=\"language-text\">!==</code></li>\n</ol>\n<p> <code class=\"language-text\">==</code>: 값이 같은지 비교</p>\n<p> <code class=\"language-text\">===</code>: 값과 데이터형이 모두 같은지 비교</p>\n<ol start=\"5\">\n<li>논리</li>\n</ol>\n<p>여러개의 관계연산자를 묶을때</p>\n<ul>\n<li>일반 논리</li>\n</ul>\n<p>&#x26;&#x26; : 모두 참일 때 참</p>\n<p>||: 모두 거짓일 때 거짓</p>\n<ul>\n<li>비트 논리</li>\n</ul>\n<p>&#x26; | ^</p>\n<ol start=\"6\">\n<li>삼항</li>\n<li>대입</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"제어문\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EB%AC%B8\" aria-label=\"제어문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어문</h3>\n<ul>\n<li>\n<p>프로그램의 순차적인 흐름을 변경해줄 수 있는 문장</p>\n<h4 id=\"조건문\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%AC%B8\" aria-label=\"조건문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건문</h4>\n<ul>\n<li>if 다중if</li>\n<li>if~ else</li>\n<li>switch~ case: 값이 같은지 비교하여 실행할 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">상수</span><span class=\"token operator\">:</span>수행문장들<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">상수</span><span class=\"token operator\">:</span>\n     <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> 일치하는 상수가 없을때 수행할 문장들<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"반복문\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복문</h4>\n<ul>\n<li>for문: 시작과 끝을 알 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>while문: 시작과 끝을 모를 때</li>\n<li>do ~ while문:</li>\n<li>break;</li>\n<li>continue;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"javascript의-proposal-기능사용하기-위한-plugin-tern\" style=\"position:relative;\"><a href=\"#javascript%EC%9D%98-proposal-%EA%B8%B0%EB%8A%A5%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-plugin-tern\" aria-label=\"javascript의 proposal 기능사용하기 위한 plugin tern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript의 proposal 기능사용하기 위한 plugin: Tern</h4>\n<h2 id=\"array\" style=\"position:relative;\"><a href=\"#array\" aria-label=\"array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array</h2>\n<ul>\n<li>일괄처리에 사용</li>\n<li>일차원 배열만 지원</li>\n<li>\n<p>가변길이형( 값을 추가하면 방의 갯수가 증가한다. )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">1.</span> 배열생성\n<span class=\"token keyword\">var</span> 배열명<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">2.</span> 값할당\n배열명<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>값<span class=\"token punctuation\">;</span>\n<span class=\"token number\">3.</span> 방의  개수\n배열명<span class=\"token punctuation\">.</span>length\n<span class=\"token number\">4.</span> 값얻기\n배열명<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span>\n모든 방의 값 출력\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>배열명<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  배열명<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n배열의 초기화\n<span class=\"token keyword\">let</span> 배열명<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>값<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"함수--function-\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98--function-\" aria-label=\"함수  function  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 ( function )</h3>\n<ul>\n<li>일을 구분하여 만들 때</li>\n<li>중복코드를 최소화</li>\n<li>\n<p>호출하여 사용한다. ( 사용자 동작에 의해 )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  코드작성\n\n  <span class=\"token keyword\">return</span> 값<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>호출 다른함수 호출: <code class=\"language-text\">함수명(값,,,);</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>동작</th>\n<th>속성</th>\n<th>주적용태그</th>\n<th>사용예</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>클릭</td>\n<td>onclick</td>\n<td><code class=\"language-text\">&lt;input type=\"button\"></code> <br/><code class=\"language-text\">&lt;img></code> <br/><code class=\"language-text\">&lt;td></code></td>\n<td><code class=\"language-text\">&lt;input type=\"button\"onclick=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>body 로딩</td>\n<td>onload</td>\n<td><code class=\"language-text\">&lt;body></code></td>\n<td><code class=\"language-text\">&lt;body onload=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>마우스포인터가 <br/>특정위치에 들어갔을 때</td>\n<td>onmouseover<br/>onmouseenter</td>\n<td>모든 태그</td>\n<td><code class=\"language-text\">&lt;img onmouseover=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>마우스포인터가 <br/>특정 위치에서 나갔을 때</td>\n<td>onmouseout</td>\n<td>모든 태그</td>\n<td><code class=\"language-text\">&lt;img onmouseout=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>포인터가 <br/>움직였을 때</td>\n<td>onmousemove</td>\n<td>모든 태그</td>\n<td><code class=\"language-text\">&lt;img onmousemove=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>키가 눌릴 때</td>\n<td>onkeydown</td>\n<td><code class=\"language-text\">&lt;input type=\"text, password\"></code> <br/><code class=\"language-text\">&lt;textarea></code></td>\n<td><code class=\"language-text\">&lt;input type=\"text\" onkeydown=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>키가 올라올 때</td>\n<td>onkeyup</td>\n<td><code class=\"language-text\">&lt;input type=\"text, password\"></code><br/> <code class=\"language-text\">&lt;textarea></code></td>\n<td><code class=\"language-text\">&lt;input type=\"text\" onkeyup=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>값이 변경될 때</td>\n<td>onchange</td>\n<td><code class=\"language-text\">&lt;select></code><br/> <code class=\"language-text\">&lt;input type=\"text, password\"></code></td>\n<td><code class=\"language-text\">&lt;select onchange=\"함수명(값,,,)\"></code>: 다른 옵션이 선택되었을 때 함수가 호출<br> <code class=\"language-text\">&lt;input type=\"text\" onchange=\"함수명(값,,,)\"></code>: 커서가 들어갔을 때의 값과 커서가 나갔을 때의 값이 다르다면 호출</td>\n</tr>\n<tr>\n<td>커서가 <br/>빠져나갔을 때</td>\n<td>onblur</td>\n<td>커서를 가지는 모든 태그</td>\n<td><code class=\"language-text\">&lt;input type=\"text\" onblur=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>더블클릭</td>\n<td>ondblclick</td>\n<td>모든 클릭</td>\n<td><code class=\"language-text\">&lt;input type=\"button\" ondblclick=\"함수명(값,,,)\"></code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"이차원-배열\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4\" aria-label=\"이차원 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이차원 배열</h3>\n<ul>\n<li>\n<p>일차원 배열 방안에 일차원 배열이 정의</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//작성법)</span>\n<span class=\"token comment\">//1. 일차원 배열 생성</span>\n\t<span class=\"token keyword\">var</span> arr2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. 일차원 배열 방에 일차원 배열 생성</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3. 값 할당</span>\n\t배열명<span class=\"token punctuation\">[</span>바깥배열 인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>안쪽배열인덱스<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n<h3 id=\"내장함수\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98\" aria-label=\"내장함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내장함수</h3>\n<p>​`<code class=\"language-text\"></code>javascript\n//수학함수\nMath.round(실수); //반올림\nMath.ceil(실수); //올림\nMath.floor(실수); //내림\nparseInt(값); //문자열,실수 -> 정수\nMath.random(); //난수 0.000000…1~ 0.999999999 중 하나\nMath.abs(); //절댓값 음수 -> 양수</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```javascript\n//문자열 함수\n문자열변수.toUpperCase()//대문자로\n문자열변수.toLowerCase()//소문자로\n문자열.length//길이 함수가 아니므로 ()를 붙이지 않는다.\n문자열.indexOf(찾을 문자열);//문자열의 인덱스\n문자열.charAt(인덱스)//특정 인덱스의 문자\n자를 문자열.substring(시작인덱스, 보고싶은 문자 끝인덱스+1)//문자열 자르기\n문자열.replace(찾을문자,바꿀문자); //문자열 찾아서 바꾸기\n문자열.trim(); //앞뒤공백제거\n문자열.concat(\"붙일문자열\");//문자열 붙이기\n자를문자열.split('기준');//문자열 잘라서 배열에 넣기</code></pre></div>\n<h3 id=\"날짜정보얻기\" style=\"position:relative;\"><a href=\"#%EB%82%A0%EC%A7%9C%EC%A0%95%EB%B3%B4%EC%96%BB%EA%B8%B0\" aria-label=\"날짜정보얻기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>날짜정보얻기</h3>\n<ul>\n<li>객체를 생성 ( Date )</li>\n<li>접속자 컴퓨터의 날짜 정보가 얻어진다. ( 동일날짜 x )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//1. 생성</span>\n<span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. 함수 호출</span>\n<span class=\"token comment\">//년:</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1900</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//월:</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//0월부터 나옴으로 +1을 해주어야한다.</span>\n<span class=\"token comment\">//일</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//시</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getHour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//분</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getMinute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"html-form-control의-값-받기\" style=\"position:relative;\"><a href=\"#html-form-control%EC%9D%98-%EA%B0%92-%EB%B0%9B%EA%B8%B0\" aria-label=\"html form control의 값 받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control의 값 받기</h2>\n<p>HTML Form Control: 사용자가 입력한 값을 받기위한 HTML</p>\n<ul>\n<li>\n<p>id 로 받기 (form 태그가 없어도 된다.)</p>\n<ul>\n<li>id만 존재하는 경우에는 back-end로 값이 전달되지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">//1. Form Control에 id를 부여\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n//2. script에서 id에 해당하는 control얻기\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//2-1. id에 해당하는 Control얻기</span>\n  <span class=\"token keyword\">var</span> input <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//2-2. 얻어낸 HTML Form Control에서 값 얻기(value속성 사용)</span>\n  <span class=\"token keyword\">var</span> val <span class=\"token operator\">=</span> 변수명<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//사용자가 입력한 값</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;form></code>태그 사용</p>\n<ol>\n<li>form 태그에 name 설정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">&lt;form name = &quot;frm&quot;&gt;</code></pre></div>\n<ol start=\"2\">\n<li>control에 name 설정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;\n.\n.\n&lt;/form&gt;</code></pre></div>\n<ol start=\"3\">\n<li>javascript에서 값을 얻는다.</li>\n</ol>\n<p>3-1. form태그를 name 속성을 사용하여 얻는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>form이름<span class=\"token punctuation\">;</span></code></pre></div>\n<p>3-2. 얻어진 form객체를 사용하여 Control에 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">obj<span class=\"token punctuation\">.</span>접근할 control명<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>3-3. 값얻기</p>\n<ul>\n<li>이름 속성이 유일할 때 <code class=\"language-text\">폼 이름.control이름.value;</code></li>\n<li>이름 속성이 중복될 때 ( 배열 ) <code class=\"language-text\">폼이름.control이름[인덱스].value;</code></li>\n<li>인덱스는 control이 정의된 순서</li>\n</ul>\n</li>\n<li>\n<p>radio, checkbox 는 사용자가 확인한 값만 얻는다.</p>\n<ul>\n<li>폼이름.control명[인덱스].checked -> true/false</li>\n</ul>\n</li>\n<li>\n<p>select는 사용자가 선택한 값만 얻는다.</p>\n<ul>\n<li>선택한 옵션의 인덱스 얻기</li>\n<li>폼이름.control명.selectedIndex</li>\n<li>옵션이 선택된 상태인지?</li>\n<li>폼이름.control명[인덱스].selected</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"div에-html을-설정\" style=\"position:relative;\"><a href=\"#div%EC%97%90-html%EC%9D%84-%EC%84%A4%EC%A0%95\" aria-label=\"div에 html을 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>div에 HTML을 설정</h4>\n<ul>\n<li>\n<p>동적으로 화면 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//1. div 얻기(div 속성)</span>\n<span class=\"token keyword\">var</span> divNode<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. HTML 생성</span>\n<span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span>\n<span class=\"token comment\">//3. 생성 HTML 을 div 객체 생성</span>\n  divNode<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token punctuation\">;</span>\n              <span class=\"token comment\">//HTML을 생성하며 설정</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"html-form-control에-값-설정\" style=\"position:relative;\"><a href=\"#html-form-control%EC%97%90-%EA%B0%92-%EC%84%A4%EC%A0%95\" aria-label=\"html form control에 값 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control에 값 설정</h4>\n<ul>\n<li>\n<p>이름 유일</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>이름 중복( 배열 )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>check 상태변경 ( radio, checkbox )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">/</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>selected 상태변경(select)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>selected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">/</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h2>\n<ul>\n<li>\n<p>기명함수</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>무기명함수: 자동호출(이벤트 처리)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//문법)</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">변수명</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  코딩<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//호출</span>\n<span class=\"token function\">변수명</span><span class=\"token punctuation\">(</span>값<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"이벤트-처리\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC\" aria-label=\"이벤트 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 처리</h4>\n<ol>\n<li>\n<p>HTML Tag에 속성으로 처리</p>\n<ul>\n<li><code class=\"language-text\">&lt;태그명 onXXX=\"이벤트처리할함수명(...)\"></code></li>\n</ul>\n</li>\n<li>\n<p>무기명 함수를 이용하여 처리 ( 자동호출 )</p>\n<ul>\n<li>코드의 재사용성이 매우 떨어진다.</li>\n<li>이벤트를 발생시킬 tag를 찾아</li>\n</ul>\n<p>  <code class=\"language-text\">document.getElementById(\"id명\")</code></p>\n<ol start=\"2\">\n<li>이벤트 속성에</li>\n</ol>\n<p>  <code class=\"language-text\">.onxxx</code></p>\n<ol start=\"3\">\n<li>무기명 함수로 처리</li>\n</ol>\n<p>  <code class=\"language-text\">= function(){ 이벤트가 발생했을 때 처리할 코드 }</code></p>\n</li>\n<li>\n<p>이벤트에 등록하여 처리</p>\n<ol>\n<li>이벤트를 발생시킬 tag를 찾아</li>\n</ol>\n<p>  <code class=\"language-text\">document.getElementById(\"id명\")</code></p>\n<ol start=\"2\">\n<li>이벤트에 등록시킬 이벤트 종류와 처리함수를 등록시켜 처리</li>\n</ol>\n<p>  <code class=\"language-text\">.addEventListener(\"이벤트종류\",\"처리할 함수명\");</code></p>\n<ul>\n<li>함수는 이벤트가 발생하명 자동호출됨으로 ()를 쓰면 안된다.</li>\n<li>이벤트 종류는 on을 제외하고 작성 ex) onclick이면 click으로</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ol>\n<h2 id=\"팝업창\" style=\"position:relative;\"><a href=\"#%ED%8C%9D%EC%97%85%EC%B0%BD\" aria-label=\"팝업창 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팝업창</h2>\n<ul>\n<li>정보제공용으로 사용</li>\n<li>\n<p>비모달</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//window는 javascript 객체의 최상위 객체</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>\n<span class=\"token string\">\"팝업창에 넣을 HTML\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"창id\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"width:넓이,height:높이,top=x좌표,left=y좌표\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"window\" style=\"position:relative;\"><a href=\"#window\" aria-label=\"window permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window</h4>\n<ul>\n<li>javascript객체의 최상위 객체</li>\n<li>\n<p>document</p>\n<ul>\n<li>HTML문서에 접근</li>\n</ul>\n</li>\n<li>\n<p>event</p>\n<ul>\n<li>event 발생(키코드값)</li>\n</ul>\n</li>\n<li>\n<p>location</p>\n<ul>\n<li>페이지 이동</li>\n<li>browser 가 제공하는 Storage를 사용( HTML5 )</li>\n</ul>\n</li>\n<li>\n<p>history</p>\n<ul>\n<li>브라우저에 로딩되었던 페이지들로 이동</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"값전달\" style=\"position:relative;\"><a href=\"#%EA%B0%92%EC%A0%84%EB%8B%AC\" aria-label=\"값전달 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값전달</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">opner<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>부모창으로 전달할 값<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"이벤트키이벤트\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%ED%82%A4%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"이벤트키이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트(키이벤트)</h2>\n<ul>\n<li>\n<p>키코드 얻기</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>keyCode<span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>which<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"페이지-이동javascript\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99javascript\" aria-label=\"페이지 이동javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이지 이동(javascript)</h2>\n<ul>\n<li>\n<p>단순 페이지 이동</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">\"이동페이지url\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//HTML  jsp</span></code></pre></div>\n</li>\n<li>\n<p>URL 치환(뒤로가기가 X)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이동한페이지url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;form></code>태그의 전송 (submit()함수 사용)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">&lt;meta></code>: HTML의 정보설정하는 일</li>\n</ul>\n<p><code class=\"language-text\">&lt;meta charset=\"UTF-8\"></code> -> HTML page의 charset 설정</p>\n<p><code class=\"language-text\">&lt;meta name=\"description\" content=\"페이지설명\"/></code></p>\n<p><code class=\"language-text\">&lt;meta http-equiv=\"refresh\" content=\"대기할초;이동할url\"></code></p>\n</li>\n<li>\n<p>confirm Dialog</p>\n<ul>\n<li>사용자의 의향을 물어볼 때 사용</li>\n</ul>\n<p><code class=\"language-text\">confirm(\"메세지\")</code></p>\n</li>\n<li>\n<p>HTML</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>URL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>//다른 JSP, HTML 페이지와 연결\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>JSPURL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>//\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>태그안에 HTML Form Control에 입력된 값들이 JSP로 전달<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>java.sql 패키지에서 디비연동하고 인터페이스 : 4.class</li>\n<li>로딩된 드라이버 Connection : 2</li>\n<li>쿼리문 생성하고 실행하는 : 3. createstatement</li>\n<li>객체는 쿼리문을 알수 없으면 쿼리문을 실행하는 단계 : statement sql</li>\n<li>오토커밋을 해제하기 위해 개발자가 호출해야하는 커넥션 : setAutoCommit(false)</li>\n<li>java에서 여러개의 쿼리문으로 트랜잭션이 구성되어 있다면 method안에서 connection들의 연결을 끊는다.</li>\n<li>바인드 변수를 이용하여 값만 추후에 입력 : 2</li>\n<li>DBMS의 프로시저 : 1</li>\n<li>조회 쿼리문을 수행한 테이블에 정보를 얻는 작업 1.ResultSet</li>\n<li>다음중 DB 벤더사가 제공하는 것 : Driver</li>\n<li>이해관계자들에게 서비스 품질에 대한 정보를 제공하기 위한 : 소프트웨어 테스트</li>\n<li>테스팅 개념으로 올바른것 : 1 - 일반적으로 작업이 끝난 후 처음에 요구된것과 현재 상태의 차이</li>\n<li>자바에서 가장 많이 사용하는 : 4. JUnit</li>\n<li>단위 테스트의 단위 : method</li>\n<li>equal : 예상값과 실제값이 같은</li>\n<li>2 : Test</li>\n<li>Junit에서 제공하는 ~ : 4번.</li>\n<li>제이유닛에서 제공하는 테으스 메소드로 ㅂ로 수 없는것 : 1. 5번 반복하여 테스트 진행</li>\n<li>제이유닛에서 지원하는 테스트메소드로 볼수 없는것 : 4. assertInnull</li>\n<li>enableOnjre</li>\n</ul>\n<h3 id=\"history\" style=\"position:relative;\"><a href=\"#history\" aria-label=\"history permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>history</h3>\n<ul>\n<li>web browser가 가동된 후 방문했던 site의 기록을 사용하는 객체</li>\n<li>서버에서 변경된 내용을 확인할 수 없다.</li>\n<li>\n<p>웹 브라우저가 종료되면 history는 사라진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>hisotry<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>나 <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>사용</code></pre></div>\n</li>\n<li>생성된 history의 수는 history.length로 얻을 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//사용법></span>\n<span class=\"token comment\">//뒤로</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//앞으로</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span>이동할 단계<span class=\"token punctuation\">)</span><span class=\"token comment\">//1,2,3, -1 (back과 같음)</span></code></pre></div>\n<h2 id=\"storage\" style=\"position:relative;\"><a href=\"#storage\" aria-label=\"storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storage</h2>\n<ul>\n<li>HTML5에서 제공되는 browser 내 저장공간</li>\n<li>Cookie 의 대체기술</li>\n<li>\n<p>Cookie</p>\n<ul>\n<li>접속자정보를 접속자의 HDD에 File로 생성하여 저장하는 기술</li>\n<li>문자열만 저장가능</li>\n<li>키와 값의 쌍으로 이루어진 데이터</li>\n<li>최대 1Mbyte정보</li>\n</ul>\n</li>\n<li>localStorage, sesssionStorage 두가지 제공</li>\n<li>\n<p>localStorage</p>\n<ul>\n<li>웹서버와 접속이 끊어져도 정보를 사용할 수 있는 storage</li>\n</ul>\n</li>\n<li>\n<p>sessionStorage</p>\n<ul>\n<li>웹 서버에 연결되어있을 때에만 정보를 저장하고 사용할 수 있는 Storage</li>\n<li>session: 컴퓨터끼리의 연결</li>\n</ul>\n</li>\n<li>window에서 제공</li>\n<li>문자열, 다른 데이터형을 저장할 수 있다</li>\n<li>5Mbyte 정보를 저장할 수 있다.</li>\n<li>접속자의 정보를 저장할 떄 사용( ID저장, 팝업창 제어 )</li>\n<li>웹 비연결성(웹서버는 접속자에게 정보를 제공항 후 연결을 끊는다)</li>\n<li>\n<p>서버의 자원소모가 적다(H/W가 고사양X)</p>\n<ul>\n<li>서버는 접속자의 상태를 알 수 없다.(연결유지 기술: session, cookie)</li>\n<li>실시간으로 변경된 정보를 모든 접속자에게 반영할 수 없다.( client pull로 해결 )-> 실시간 정보반영이 어렵다</li>\n</ul>\n<h4 id=\"session\" style=\"position:relative;\"><a href=\"#session\" aria-label=\"session permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>session</h4>\n<p> 접속자의 정보를 웹서버의 memory에 저장(해킹안전)</p>\n<h4 id=\"cookie\" style=\"position:relative;\"><a href=\"#cookie\" aria-label=\"cookie permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cookie</h4>\n<p> 접속자의 정보를 접속자의 HDD에 저장 ( 해킹위험 )</p>\n</li>\n<li>사용법)</li>\n<li>\n<p>값 설정</p>\n<ul>\n<li>서버에 연결되어 있을 때에만 사용</li>\n</ul>\n<p> window.sessionStorage</p>\n<ul>\n<li>서버와 연결을 끊었을 떄에도 유지</li>\n</ul>\n<p> window.localStorage</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ss <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ls <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n\nls<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">,</span> 값<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nss<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">,</span> 값<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>값 얻기</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ls<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>값 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ls<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>모든 Stotage</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ls<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"json\" style=\"position:relative;\"><a href=\"#json\" aria-label=\"json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON</h1>\n<p>javascript object notation</p>\n<ul>\n<li>이름과 값의 쌍으로 데이터를 사용할 때</li>\n<li>간단한 형태로 값을 저장하고, 전달하는 객체</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//문법</span>\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">이름</span><span class=\"token operator\">:</span> 값<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">이름</span><span class=\"token operator\">:</span> 값 <span class=\"token punctuation\">}</span><span class=\"token comment\">//값: 문자열 숫자 boolean function</span>\n\n<span class=\"token comment\">//사용법</span>\n<span class=\"token comment\">//1. 값을 가진 JSON을 변수에 담는다</span>\n<span class=\"token comment\">//문자열</span>\n<span class=\"token keyword\">var</span> data<span class=\"token operator\">=</span><span class=\"token string\">\"{이름:값,이름 값,,,}\"</span>\n<span class=\"token comment\">//2. JSON Object으로 생성</span>\n<span class=\"token keyword\">var</span> json_obj<span class=\"token operator\">=</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span><span class=\"token operator\">+</span>data<span class=\"token operator\">+</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3. 값얻기</span>\njson객체명<span class=\"token punctuation\">.</span>이름\n<span class=\"token comment\">//4. 값 삭제</span>\n<span class=\"token keyword\">delete</span> json객체명<span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"json-array\" style=\"position:relative;\"><a href=\"#json-array\" aria-label=\"json array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON Array</h2>\n<ul>\n<li>\n<p>JSON으로 배열을 만드는 것</p>\n<ol>\n<li>JSON Object을 배열에 넣는다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token string\">\"[{이름: 값,,,},{이름: 값,,,},,]\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>JSON Array 객체를 만든다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> jsonArr <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> d <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>반복</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> jsonArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  jsonArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"복합json\" style=\"position:relative;\"><a href=\"#%EB%B3%B5%ED%95%A9json\" aria-label=\"복합json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>복합JSON</h2>\n<ul>\n<li>\n<p>JSON Object 안에 JSON Array를 가진 경우</p>\n<p>“{이름:값,이름:[{이름:값,,,},{이름:값,,,},,,,],,,,,}”\n정보--- 데이터-----------------------------</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span>\n<span class=\"token string\">\"{writer:'송유빈',pubData:'2020-07-06',data:[{img:'daram.jpg',desc:'설명'},,,]}\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> JSONObj <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> data <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> jsonArr <span class=\"token operator\">=</span> jsonObj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\njsonArr<span class=\"token punctuation\">.</span>writer <span class=\"token operator\">=</span> <span class=\"token string\">\"송유빈\"</span><span class=\"token punctuation\">;</span>\njsonArr<span class=\"token punctuation\">.</span>pubData <span class=\"token operator\">=</span> <span class=\"token string\">\"2020-07-06\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> jsonArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\njsonArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">;</span>\njsonArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>desc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"재귀호출함수\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EA%B7%80%ED%98%B8%EC%B6%9C%ED%95%A8%EC%88%98\" aria-label=\"재귀호출함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재귀호출함수</h3>\n<ul>\n<li>\n<p>일정시간마다 함수를 호출하는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>호출할함수명<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"closure\" style=\"position:relative;\"><a href=\"#closure\" aria-label=\"closure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closure</h3>\n<ul>\n<li>접근권한 변경</li>\n<li>\n<p>함수안에 함수 정의</p>\n<ul>\n<li>세부업무를 묶어 하나의 업무를 구현할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//형식)</span>\n<span class=\"token comment\">//무기명함수형식: 처리해야할 일이 많은 경우</span>\n<span class=\"token comment\">//() 형식: 처리해야할 일이 적은 경우</span>\n\n<span class=\"token keyword\">var</span> 변수명 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> 변수명<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">//업무를 위한 세부업무</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//하나의 업무</span></code></pre></div>\n</li>\n<li>객체생성없이 사용할 수 있다. new없이 직접호출이 가능하다</li>\n<li>\n<p>내부함수는 함수 밖에서 호출할 수 없다.</p>\n<ul>\n<li>closure를 사용하면 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//작성법</span>\n\n<span class=\"token comment\">//무기명함수형식: 처리해야할 일이 많은 경우</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>외부에서 호출할 이름<span class=\"token operator\">:</span> 내부함수<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">외부호출이름</span><span class=\"token operator\">:</span> 내부함수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//호출</span>\n변수명<span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">;</span>\n변수명<span class=\"token punctuation\">.</span><span class=\"token function\">이름</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>//() 형식: 처리해야할 일이 적은 경우\nvar 변수명=({이름:값,이름:fucntion(){…}…});\n//호출\n변수명.이름;\n변수명.이름();</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n</li>\n</ul>\n<h2 id=\"class-작성\" style=\"position:relative;\"><a href=\"#class-%EC%9E%91%EC%84%B1\" aria-label=\"class 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class 작성</h2>\n<ul>\n<li>업무를 구분하여 만들기 위해 사용</li>\n<li>참조형 데이터형: new 사용하여 객치를 생성한 후 사용</li>\n<li>사용자정의 자료형: 제공되는 데이터형을 묶어 사용하는 것</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//작성법</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">생성자</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> 변수명<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//closure가 필요</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>변수명<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">변수명</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//closure가 필요없음</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//사용</span>\n<span class=\"token comment\">//1. 생성</span>\n<span class=\"token keyword\">var</span> 객체명<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">생성자</span><span class=\"token punctuation\">(</span>값<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. 변수호출</span>\n객체명<span class=\"token punctuation\">.</span>변수명<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3. 함수호출</span>\n객체명<span class=\"token punctuation\">.</span><span class=\"token function\">무기명함수저장변수명</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"상속\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D\" aria-label=\"상속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속</h2>\n<ul>\n<li>코드의 재사용성 향상</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">부모</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">자식</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>상속의 문법</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">자식</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">부모</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>자식클래스 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> 변수명 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">자식</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"정규식\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C%EC%8B%9D\" aria-label=\"정규식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규식</h2>\n<ul>\n<li>많은 문자열에서 원하는 문자열이 있는지 찾기 위한 식</li>\n<li>replace사용, match 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//순환 /[  범위  ]/g</span>\n<span class=\"token keyword\">var</span> test <span class=\"token operator\">=</span> <span class=\"token string\">\"AbaZt10~가나하Te!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[a-zA-Z0-9]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>범위(시작-끝)</p>\n<ul>\n<li>한글 ㄱ-힣</li>\n<li>영어 A-Z a-z</li>\n<li>숫자 0-9</li>\n<li>특수문자는 범위가 없다. 없애고 싶은 문자를 모두 입력해주어야함</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"JavaScript","date":null,"lang":null}}},{"node":{"id":"da0b1fab-1981-5a55-93df-a3b7660987d2","excerpt":"정리되어 있지 않음 jQuery 2006년 John Resig가 발표한 Javascript Library jQuery.com 배포 적게쓰고 많은 일을 하도록 만들어진 library library 자주 사용될 기능을 미리 구현해놓은 것 animation, event, effect…","html":"<ul>\n<li>정리되어 있지 않음</li>\n</ul>\n<h1 id=\"jquery\" style=\"position:relative;\"><a href=\"#jquery\" aria-label=\"jquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery</h1>\n<ul>\n<li>2006년 John Resig가 발표한 Javascript Library</li>\n<li>jQuery.com 배포</li>\n<li>적게쓰고 많은 일을 하도록 만들어진 library</li>\n<li>\n<p>library</p>\n<ul>\n<li>자주 사용될 기능을 미리 구현해놓은 것</li>\n<li>animation, event, effect, Ajax 등 기능 구현</li>\n</ul>\n</li>\n<li>모든 브라우저에 동작하도록 웹 표준을 준수하여 구현 -> cross browser</li>\n<li>plugin 지원</li>\n<li>jQueryObject 최상위객체 ( $ )</li>\n<li>간결한 문법을 지원</li>\n<li>\n<p>2가지 종류의 파일 배포 ( 확장자.js )</p>\n<ol>\n<li>compressed version( 서비스용 ):enter, whitespace, comment 을 없애버려 파일크기의 크기를 줄인 배포판( 파일명에 min이 붙어있다. )</li>\n<li>uncompressed version( 개발용 ):enter, whitespace, comment가 들어있는 배포판</li>\n</ol>\n</li>\n<li>\n<p>selector를 사용한다.</p>\n<ul>\n<li>selector: 태그를 찾아가기 위해 작성하는 문자열</li>\n<li>behavior selector / class selector / id selector / sub selector / name selector 지원</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">함수</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  작성하는 코드<span class=\"token punctuation\">;</span><span class=\"token comment\">//javascript 문법</span>\n\t\t\t\t<span class=\"token comment\">//jQuery 문법</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">//1.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>JS<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n//2.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h5 id=\"cdn-contents-delivery-network-httpscdnhostingkrcdnec9db4eb9e80-ebacb4ec9787ec9db8eab080ec9a94\" style=\"position:relative;\"><a href=\"#cdn-contents-delivery-network-httpscdnhostingkrcdnec9db4eb9e80-ebacb4ec9787ec9db8eab080ec9a94\" aria-label=\"cdn contents delivery network httpscdnhostingkrcdnec9db4eb9e80 ebacb4ec9787ec9db8eab080ec9a94 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CDN: contents delivery network, <a href=\"https://cdn.hosting.kr/cdn%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94/\">https://cdn.hosting.kr/cdn%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94/</a></h5>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">&lt;html&gt;\n    &lt;head&gt;\n        &lt;script&gt;제이쿼리&lt;/script&gt;\n        &lt;script&gt;\n        \t$(selector).함수(function(){...})\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        사용자에게 제공할 내용\n    &lt;/body&gt;\n&lt;/html&gt;\n&lt;!--jquery가 먼저 실행되기때문에 스크립트는 body의 내용을 몰라서 오류가 난다. 그래서 ready를 사용함--&gt;</code></pre></div>\n<ul>\n<li>문법</li>\n<li>\n<p>ready:</p>\n<ul>\n<li>body의 HTML Tag의 정보가 로딩된 후 실행<code class=\"language-text\">&lt;img src='X'></code></li>\n<li>주로 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>load:</p>\n<ul>\n<li>body의 HTML Tag가 사용하는 모든 요소가 로딩된 후 실행<code class=\"language-text\">&lt;img src='O'></code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"selector\" style=\"position:relative;\"><a href=\"#selector\" aria-label=\"selector permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selector</h2>\n<ul>\n<li>css의 selector 동일</li>\n<li>script/css 영역에서 body영역에 존재하는 tag에 접근하기 위해 사용</li>\n<li>\n<p>ID selector: 가장 속도가 빠름</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#ID명\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n<li>\n<p>class selector</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".class명\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"class\"</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n<li>\n<p>tag selector</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"태그명\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n<li>\n<p>sub selector</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"태그명>태그명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//&lt;div>&lt;p>&lt;/p>&lt;/div> -> div>p</span></code></pre></div>\n</li>\n<li>\n<p>name selector: ”[속성명=‘값’]”</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//&lt;input type=\"text\" name=\"name\"id=\"name\"class=\"inputBox\"></span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[type='text']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[name='name']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[id='name']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[class='inputBox']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"css-관련\" style=\"position:relative;\"><a href=\"#css-%EA%B4%80%EB%A0%A8\" aria-label=\"css 관련 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 관련</h3>\n<ul>\n<li>\n<p>css(속성, 값): 대상에 css속성 하나 부여</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"css속성\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"값\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>css(속성): 대상에 부여한 속성값 얻기</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> 변수명 <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"속성명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>style에 정의된 class 부여</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">클래스명</span><span class=\"token punctuation\">{</span><span class=\"token property\">속성</span><span class=\"token punctuation\">:</span>값<span class=\"token punctuation\">,</span><span class=\"token property\">속성</span><span class=\"token punctuation\">:</span>값<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token comment\">//addClass(\"클래스명\")</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"클래스명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//removeClass(\"클래스명\"): 대상에 부여된 Class 속성을 제거한다.</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"클래스명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//chain으로 연결하여 사용할 수 있다.</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"클래스명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"클래스명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"dom\" style=\"position:relative;\"><a href=\"#dom\" aria-label=\"dom permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM</h3>\n<ul>\n<li>특정 태그를 찾아서 하위 태그를 정의</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>하위로 설정될 태그<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//입력된 값의 HTML Tag가 실행되어 보여진다.</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>하위로 설정될 태그<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//입력된 값의 HTML Tag가 실행되지 않고 그대로 보여진다.</span></code></pre></div>\n<h3 id=\"effect\" style=\"position:relative;\"><a href=\"#effect\" aria-label=\"effect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Effect</h3>\n<ul>\n<li>대상을 숨기거나 보여줄 때 사용</li>\n<li>\n<p>hide(): 숨김</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">$<span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>show(): 보여짐</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>toggle(): 숨김, 보여짐 순차적</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>fadeOut(ms, fn): 지정한 시간동안 서서히 숨김</li>\n<li>fadeIn(ms, fn): 지정한 시간동안 서서히 보여짐</li>\n<li>slideUp(fn): 대상을 말아올려서 사라지게 만들때</li>\n<li>slideDown(fn): 대상을 위에서 아래로 펼쳐보여줄 때</li>\n</ul>\n<h3 id=\"event\" style=\"position:relative;\"><a href=\"#event\" aria-label=\"event permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event</h3>\n<ul>\n<li>\n<p>문법 )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">이벤트종류</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  이벤트가 발생했을 때 처리할 코드\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>이벤트 종류: click, mouseover, mouseout, mouseenter,mousemove, change</li>\n<li>focusIn: 커서가 들어왔을 때 , focusOut: 커서가 빠져나갔을 때</li>\n<li>-</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"반복함수\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%ED%95%A8%EC%88%98\" aria-label=\"반복함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복함수</h3>\n<ul>\n<li>each함수, jQueryObject에서 제공하는 함수<code class=\"language-text\">$.each();</code></li>\n<li>selector 없이 사용하는 함수</li>\n<li>\n<p>사용법</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">$<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token function\">배열</span><span class=\"token punctuation\">(</span>선언<span class=\"token punctuation\">,</span> name속성이 같은 form Control입력<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">인덱스용매개변수<span class=\"token punctuation\">,</span> 배열방의 값을 저장할 매개변수</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span>ele</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  ele<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"html-form-control-값-얻기\" style=\"position:relative;\"><a href=\"#html-form-control-%EA%B0%92-%EC%96%BB%EA%B8%B0\" aria-label=\"html form control 값 얻기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control 값 얻기</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//문법</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//input(text, password, hidden),select, textarea</span></code></pre></div>\n<ul>\n<li>\n<p>check, radio는 선택된 값을 얻는다.(배열)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":checked\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//true,false //select면 selected</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> ele</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">ele</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span>도 가능<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":checked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"html-form-control-값-변경\" style=\"position:relative;\"><a href=\"#html-form-control-%EA%B0%92-%EB%B3%80%EA%B2%BD\" aria-label=\"html form control 값 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control 값 변경</h3>\n<ul>\n<li>\n<p>값 설정하는 Form Control</p>\n<p><code class=\"language-text\">&lt;input type=\"text,password,hidden\"> &lt;textarea></code></p>\n<p><code class=\"language-text\">$(\"selector\").val(\"값\")</code></p>\n</li>\n<li>\n<p>checked 상태를 변경하는 Form Control</p>\n<p><code class=\"language-text\">&lt;input type=\"checkbox, radio\"></code></p>\n<p><code class=\"language-text\">checked=\"checked\"</code></p>\n</li>\n<li>\n<p>check 속성 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//attr 추가된 속성이 변경되지 않는다.</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"속성명\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"값\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//prop 추가된 속성이 변경된다.</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"속성명\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"값\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"checked\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//속성의 값 얻기</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"속성명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//-> 속성의 값</span></code></pre></div>\n</li>\n<li>selected로 값</li>\n</ul>\n<h2 id=\"traversing\" style=\"position:relative;\"><a href=\"#traversing\" aria-label=\"traversing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Traversing</h2>\n<ul>\n<li>태그에서 원하는 태그를 찾는 것</li>\n<li>처음태그 <code class=\"language-text\">first()</code></li>\n<li>마지막태그 <code class=\"language-text\">last()</code></li>\n<li>\n<p>index를 사용하여 원하는 태그 <code class=\"language-text\">eg(인덱스)</code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n//0 $(\"ul li\").first()\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n//1 $(\"ul li\").eq(1)\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n//2 $(\"ul li\").eq(2)\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n//3 $(\"ul li\").last()\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>태그 추가 <code class=\"language-text\">append(\"추가할 태그\")</code></li>\n<li>태그 삭제 <code class=\"language-text\">remove();</code></li>\n</ul>\n<h2 id=\"jquery-plugin\" style=\"position:relative;\"><a href=\"#jquery-plugin\" aria-label=\"jquery plugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jquery plugin</h2>","frontmatter":{"title":"jQuery","date":null,"lang":null}}},{"node":{"id":"0c3ef638-396e-565c-a8e2-362b585d0de0","excerpt":"정리되어 있지 않음 Java SE: Desktop에서 동작하는 program제작 (Application 제작) -> JDBC(Java DB연동) Oracle DBMS: 정보를 저장, 사용 —접속자의 Computer에 Download되어 실행 (접속자 cpu, memory…","html":"<ul>\n<li>정리되어 있지 않음</li>\n</ul>\n<p>Java SE: Desktop에서 동작하는 program제작 (Application 제작) -> JDBC(Java DB연동)</p>\n<p>Oracle DBMS: 정보를 저장, 사용</p>\n<p>—<strong>접속자의 Computer에 Download되어 실행 (접속자 cpu, memory 사용: Front-end)</strong>—</p>\n<p>HTML: Web page의 구조설정(모든 접속자에게 동일하게 보여준다: 멱등성)-> 개인화 안됨 -> Servlet, java EE로 해결</p>\n<p>JavaScript: Webpage의 간단한 계산, 동적으로 화면 변경</p>\n<p>CSS: 통일성있는 디자인</p>\n<p>jQuery, Bootstrap: CSS를 간편하게 사용 -> javascript library: javascript를 간편하게 사용</p>\n<p>Java EE: 동적으로 HTML, 파일 생성 ( 개인화가 가능 )</p>\n<h1 id=\"java-ee-enterprise-edition\" style=\"position:relative;\"><a href=\"#java-ee-enterprise-edition\" aria-label=\"java ee enterprise edition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java EE (Enterprise Edition)</h1>\n<ul>\n<li>\n<p>기업용 Application을 개발하기 위한 Java의 개발버전</p>\n<p>(현업) => 일 => 구현</p>\n<ul>\n<li>EJB(Enterprise Java Beans)</li>\n<li>업무를 모듈로 구분 ( 약결합 - 업무에 필요한 모듈을 조립 사용)</li>\n<li>EJB를 실행하기 위한 별도의 Server가 필요하다</li>\n<li>안정적 -> 느리다.</li>\n<li>배포 x.ear</li>\n<li>\n<p><strong>Entity Bean</strong>(DB연동하는 업무), <strong>Session Bean</strong>(DB를 연동하지 않는 업무), <strong>MessageDrivenBean</strong>(메세지를 전달하여 메세지에 일치하는 업무를 수행)</p>\n<p>-> 모두 Spring framework로 대체</p>\n</li>\n<li>동적인 HTML을 생성하기 위한 Servlet/JSP 제공</li>\n<li>Java EE의 모든 spec을 서비스 할 수 있는 program(WAS: Web Application Server)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"servlet\" style=\"position:relative;\"><a href=\"#servlet\" aria-label=\"servlet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Servlet</h2>\n<ul>\n<li>java EE에서 동적으로 HTML을 생성할 수 있는 Library</li>\n<li>\n<p>CGI의 일종 ( Common Gateway Interface)</p>\n<ul>\n<li>일반언어로 웹서비스를 하기 위해 정해놓은 공통규약</li>\n</ul>\n<p>C언어: C - CGI( 속도가 느리다. Thread 처리X. 생산성 좋지 않음)</p>\n<p>Java: Servlet( Fast CGI )( 속도가 느리다. 생산성 좋지 않음. Thread 처리O )</p>\n<ul>\n<li>javax.servlet.<em>, javas.servlet.http.</em> 에서 관련클래스와 interface를 제공 => servlet-api.jar -> builde path(eclipse) class path(dos)</li>\n</ul>\n</li>\n<li>\n<p><strong>java EE로 Webservice하기위한 folder 구성</strong></p>\n<ul>\n<li>web_root\\folder\\HTML, CSS, Javascript,JSP</li>\n<li>web_root\\WEB-INF\\classes\\package\\.class</li>\n</ul>\n<p>과 \\lib\\사용할 외부 library</p>\n<p> \\web.xml: DD(Deployment Descriptor)</p>\n<ul>\n<li>web container에 folder를 설정 -> server.xml(Container 설정, web service 하기 위한 folder 설정)</li>\n<li>web container: web browser에서 servlet/JSP를 요청하면 servlet/JSP를 HTML로 변환하여 응답하는 program</li>\n<li><strong>노트필기</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"servlet-작성법\" style=\"position:relative;\"><a href=\"#servlet-%EC%9E%91%EC%84%B1%EB%B2%95\" aria-label=\"servlet 작성법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Servlet 작성법</h3>\n<ol>\n<li>\n<p>class가 web의 업무를 처리하기 위해 HttpServlet 클래스를 상속받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span><span class=\"token punctuation\">{</span><span class=\"token comment\">//추상메소드가 없는 추상 클래스</span></code></pre></div>\n</li>\n<li>\n<p>요청방식을 처리할 수 있는 method의 Override</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">//get 방식\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">;</span>\n location<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n//post방식 전용\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n document<span class=\"token punctuation\">.</span>form이름<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//post방식 전용</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>get 방식</li>\n<li>서버로 보내는 데이터가 web browser의 주소창( 외부로 노출된다 )을 타고 전달된다.</li>\n<li>서버로 보내는 데이터가 문자열만 가능</li>\n<li>보안이 필요없는 256자 이하의 소용량 데이터를 전송할 때 주로 사용</li>\n<li>query string 존재</li>\n<li>post 방식</li>\n<li>서버로 보내는 데이터가 Http Header( 외부로 노출되지 않는다 )를 타고 전달된다</li>\n<li>서버로 보내는 데이터가 다양하다. 파일도 가능</li>\n<li>보안이 필요한 256자 이상의 대용량 데이터를 전달할 때 사용한다.</li>\n<li>query string이 존재하지 않는다.</li>\n<li>get 방식 요청처리( doGet )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> responce<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>post 방식 요청처리 ( doPost )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> responce<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>요청방식에 상관없이 처리 ( service )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> responce<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>응답 방식 설정( 접속자에게 보내줄 형태 설정 )</p>\n<ul>\n<li>MIME Type 설정 => web.xml</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>접속자에게 응답할 수 있는 출력 스트림 얻기</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">PrintWriter</span> out<span class=\"token operator\">=</span>responce<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>출력 내용을 Stream 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>작성된 Servlet을 Web browser에서 호출하기 위해 DD에 설정( Deployment Descriptor: web.xml( WEB-INF ) )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>객체명<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>패키지명.class명<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>객체명<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/웹브라우저에서 호출할 이름<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p> web browser 열고 URL 입력하여 Servlet을 요청한다.</p>\n<p> <a href=\"http://localhost:80/servlet_path/url-pattern\">http://localhost:80/servlet_path/url-pattern</a></p>\n<p>  context<em>root servlet</em>name</p>\n</li>\n</ol>","frontmatter":{"title":"Servlet","date":null,"lang":null}}},{"node":{"id":"841513e1-1616-586f-bcfc-9742aae1a40c","excerpt":"post를 사용하여 HTML에서 Servlet으로 값 넘기기","html":"<h4 id=\"post를-사용하여-html에서-servlet으로-값-넘기기\" style=\"position:relative;\"><a href=\"#post%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-html%EC%97%90%EC%84%9C-servlet%EC%9C%BC%EB%A1%9C-%EA%B0%92-%EB%84%98%EA%B8%B0%EA%B8%B0\" aria-label=\"post를 사용하여 html에서 servlet으로 값 넘기기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>post를 사용하여 HTML에서 Servlet으로 값 넘기기</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Insert title here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n      <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://211.238.142.33/servlet_prj/common/css/main.css<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">/></span></span>\n    <span class=\"token comment\">&lt;!-- Google CDN --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//버튼(id='btn')이 클릭됐을 때</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">//Form(id='frm')의 값을 back-end로 보내줌</span>\n          <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#frm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//ready</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- \n  back-end로 값을 보내주기 위해서는 보내려는 값을 입력받는 form control들을 form으로 감싸고 submit을 해주어야한다.\n  action 속성은 form data를 서버로 보낼 때 그 데이터가 도착할 최종 URL을 명시한다.\n  method 속성의 기본 값은 get이고 post방식을 사용하려면 속성 값을 \"post\"로 변경해주어야한다. \n  post 방식 폼 데이터를 HTTP POST 메소드로 전송함 별도로 첨부하여 서버로 전송\n  get 방식 폼 데이터를 HTTP GET 메소드로 전송함 url에 쿼리 문자열으로 추가되어 전송\n --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../use_post_0716<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>frm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>이름 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputBox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>나이 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>age<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputBox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>도메인<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>domain<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>google<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>구글<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>naver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>네이버<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>네이트<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>daum<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>다음<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span>\n      <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>입력<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">test</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServlet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"serial\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UsePost0716</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//MIME-Type 설정</span>\n        <span class=\"token comment\">//응답방식 설정</span>\n        <span class=\"token comment\">//https://developer.mozilla.org/ko/docs/Web/HTTP/Basics_of_HTTP/MIME_types</span>\n        <span class=\"token comment\">//클라이언트에게 전송된 문서의 다양성을 알려주기 위한 메커니즘</span>\n        <span class=\"token comment\">//웹에서는 파일의 확장자가 별 의미가 없기 때문에 각 문서와 함께 올바른 MIME 타입을 전송하도록 서버가 정확하게 설정하는 것이 중요하다.</span>\n        <span class=\"token comment\">//브라우저들은 리소스를 내려받았을 때 해야할 기본 동작이 무엇인지를 결정하기 위해 대게 MIME타입을 사용한다.</span>\n        <span class=\"token comment\">//일반적인 구조는 'type/subtype'</span>\n        <span class=\"token comment\">//type은 카테고리</span>\n        <span class=\"token comment\">//subtype은 각각의 타입에 한정</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//접속자에게 응답할 수 있는 출력 스트림 얻기</span>\n        <span class=\"token comment\">//PrintWriter</span>\n        <span class=\"token comment\">//https://dream-space.tistory.com/4</span>\n  <span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//POST 방식은 한글이 encoding되어 전송되기 떄문에 값을 받기전에 decoding하는 코드를 넣어주어야 한글이 깨지지 않고 잘 나온다.</span>\n  request<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;!DOCTYPE html>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;head>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;meta charset=\\\"UTF-8\\\">\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"http://211.238.142.33/servlet_prj/common/css/main.css\\\">\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;title>Insert title here&lt;/title>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;!-- Google CDN -->\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\\\">&lt;/script>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;script type=\\\"text/javascript\\\">\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$(function(){\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"});//ready\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/script>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/head>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;body>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//front-end에서 back-end로 값을 받아옴</span>\n        <span class=\"token comment\">//이 때 form control은 name 속성을 가지고 있어야 서버로 값을 넘겨줄 수 있다.</span>\n       <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">String</span> age <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token class-name\">String</span> domain <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"domain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"님\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"살&lt;br/>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;img src='http://localhost/servlet_prj/common/images/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>domain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".png'>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t&lt;/div>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t&lt;div id=\\\"footer\\\">\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\\t&lt;div id=\\\"footerLogo\\\">&lt;/div>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\\t&lt;div id=\\\"footerContent\\\">\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\\t\\t&amp;copy; CopyRight. All Right Reserved. Class A \\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\\t&lt;/div>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t&lt;/div>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/div>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/body>\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/html>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[servlet]post로 값 넘기기","date":null,"lang":null}}},{"node":{"id":"9f242153-3670-50ab-acca-d06341836f59","excerpt":"마크업 언어 markup language…","html":"<h2 id=\"마크업-언어\" style=\"position:relative;\"><a href=\"#%EB%A7%88%ED%81%AC%EC%97%85-%EC%96%B8%EC%96%B4\" aria-label=\"마크업 언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마크업 언어</h2>\n<p>markup language는 태그 등을 이용하여 문서나 데이터의 구조를 명기하는 언어의 한가지</p>\n<p>문서의 골격에 해당하는 부분을 작성하는데 사용</p>\n<p>태그는 원래 텍스으와는 별도로 원고의 교정부호와 주석을 표현하기 위한 것이었으나 용도가 점차 확장되어 문서의 구조를 표현하는 역할을 하게 되었다. 이러한 태그 방법의 체계를 마크업 언어라 한다.</p>\n<p>일반적으로 데이터를 기술하는 정도로만 사용되기에 프로그래밍 언어와는 구별된다.</p>\n<p>예시: html, xml</p>\n<h2 id=\"마크다운\" style=\"position:relative;\"><a href=\"#%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4\" aria-label=\"마크다운 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마크다운</h2>\n<p>일반 텍스트 기반의 경량 마크업언어</p>\n<p>읽고 쓰기 쉽다</p>\n<p>일반 텍스트로 서식이 있는 문서를 작성하는 데 사용</p>\n<p>일반 마크업 언어에 비해 문법이 쉽고, 간단한 것이 특징</p>\n<p>html과 리치 텍스트(RTF) 등 서식 문서로 쉽게 변환되기 때문에 응용 소프트웹어와 함께 배포되는 README 파일이나 온라인 게시물 등에 많이 사용된다.</p>\n<p>출처: 위키백과</p>","frontmatter":{"title":"마크업과 마크다운의 차이","date":null,"lang":null}}},{"node":{"id":"2e70a299-80ae-5e78-9f44-8c9b5f50bb7a","excerpt":"Ruby와 모듈들이 설치된 상태여야함  실행 실행하려는 블로그 폴더로 이동  http://127.0.0.1:4000/로 이동하면 로컬에서 실행된 블로그 페이지를 볼 수 있음","html":"<ul>\n<li>Ruby와 모듈들이 설치된 상태여야함</li>\n<li><code class=\"language-text\">Start Command Prompt with Ruby</code> 실행</li>\n<li>실행하려는 블로그 폴더로 이동</li>\n<li><code class=\"language-text\">jekyll serve</code></li>\n<li><a href=\"http://127.0.0.1:4000/%EB%A1%9C\">http://127.0.0.1:4000/로</a> 이동하면 로컬에서 실행된 블로그 페이지를 볼 수 있음</li>\n</ul>","frontmatter":{"title":"[jekyll] 블로그 로컬에서 실행시키기","date":null,"lang":null}}},{"node":{"id":"43da4d73-940a-5a73-8ef4-45e0742d4e4d","excerpt":"참고: MDN, 생활코딩 https://heropy.blog/2019/08/17/css-grid/ CSS Grid Layout은 페이지를 여러 주요 영역으로 나누거나, 크기와 위치 및 문서 계층 구조의 관점에서 HTML…","html":"<p>참고: <a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Grid_Layout\">MDN</a>, <a href=\"https://opentutorials.org/course/3086\">생활코딩</a> <a href=\"https://heropy.blog/2019/08/17/css-grid/\">https://heropy.blog/2019/08/17/css-grid/</a></p>\n<p>CSS Grid Layout은 페이지를 여러 주요 영역으로 나누거나, 크기와 위치 및 문서 계층 구조의 관점에서 HTML 기본 요소를 작성된 컨트롤 간의 관계를 정의하는 데 아주 탁월합니다.</p>\n<p>테이블과 마찬가지로 그리드 레이아웃은 세로 열(column)과 가로 행(row)을 기준으로 요소를 정렬할 수 있습니다. 하지만 태그들이 복잡하게 얽혀있는 테이블과 달리 그리드는 다양한 레이아웃을 훨씬 더 쉽게 구현할 수 있습니다. 예를 들어, 그리드 컨테이너 속 자식 요소를 마치 CSS로 일일이 위치를 지정해 준 것처럼 실제로 겹치게 층을 지면서 자리를 잡도록 각 요소의 위치를 지정해 줄 수도 있습니다.(!)</p>\n<blockquote>\n<p>생활코딩에서 블럭속성태그를 열 별로 정리하는 간단한 실습만 해보고 신기해서 정리하는 중인데, MDN에 나와있는 예시가 너무 신기하다. 난 지금까지 원시인이었던 것임🙄</p>\n</blockquote>\n<p>CSS Grid는 CSS Flex와 같이 Container와 Item이라는 두 가지 개념으로 구분되어 있습니다. Container는 Item을 감싸는 부모 요소이며, 그 안에서 각 Item을 배치할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#grid</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 5px solid pink<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> 150px 1fr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 5px solid gray<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>NAVIDATION<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    Lorem ipsum dolor, sit amet consectetur adipisicing elit. Dolor optio itaque\n    quasi maxime tempore molestiae expedita nemo cum suscipit, impedit ad\n    distinctio illo voluptatibus alias a iusto deserunt totam beatae!\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/53068706/107882632-dbfe0000-6f2d-11eb-9d59-2c71e18e70c5.png\" alt=\"grid_ex1\" style=\"zoom:67%;\">\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.wrapper</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">,</span> 1fr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-gap</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-auto-rows</span><span class=\"token punctuation\">:</span> <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span>100px<span class=\"token punctuation\">,</span> auto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.one</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-column</span><span class=\"token punctuation\">:</span> 1/3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.two</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-column</span><span class=\"token punctuation\">:</span> 2/4<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row</span><span class=\"token punctuation\">:</span> 1/3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.three</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-column</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row</span><span class=\"token punctuation\">:</span> 2/5<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.four</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-column</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.five</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-column</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row</span><span class=\"token punctuation\">:</span> 4<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.six</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-column</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row</span><span class=\"token punctuation\">:</span> 4<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.wrapper div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>One<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Two<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>three<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Three<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>four<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Four<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>five<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Five<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>six<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Six<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/53068706/107882649-ecae7600-6f2d-11eb-8fa2-c037979d29bd.png\" alt=\"grid_ex2\" style=\"zoom:67%;\">\n<h2 id=\"grid-container-속성\" style=\"position:relative;\"><a href=\"#grid-container-%EC%86%8D%EC%84%B1\" aria-label=\"grid container 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Grid Container 속성</h2>\n<table>\n<thead>\n<tr>\n<th>속성</th>\n<th>의미</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>display</td>\n<td>그리드 컨테이너를 정의</td>\n</tr>\n<tr>\n<td>grid-template-rows</td>\n<td>명시적 행의 크기 정의</td>\n</tr>\n<tr>\n<td>grid-template-columns</td>\n<td>명시적 열의 크기를 정의</td>\n</tr>\n<tr>\n<td>gap(grid-gap)</td>\n<td><code class=\"language-text\">row-gap</code>, <code class=\"language-text\">column-gap</code>의 단축 속성<br />행과 행, 열과 열 사이의 간격을 정의</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"grid-item-속성\" style=\"position:relative;\"><a href=\"#grid-item-%EC%86%8D%EC%84%B1\" aria-label=\"grid item 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Grid Item 속성</h2>\n<table>\n<thead>\n<tr>\n<th>속성</th>\n<th>의미</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>grid-column</td>\n<td><code class=\"language-text\">grid-column-start</code>, <code class=\"language-text\">grid-column-end</code>의 단축속성(<code class=\"language-text\">시작</code>이나 <code class=\"language-text\">시작/끝</code>으로 작성)</td>\n</tr>\n<tr>\n<td>grid-row</td>\n<td><code class=\"language-text\">grid-row-start</code>, <code class=\"language-text\">grid-row-end</code>의 단축속성(<code class=\"language-text\">시작</code>이나 <code class=\"language-text\">시작/끝</code>으로 작성)</td>\n</tr>\n<tr>\n<td>grid-auto-columns</td>\n<td>암시적 행의 크기를 정의합니다.<br />아이템이 <code class=\"language-text\">grid-template-rows</code>로 정의한 명시적 행 외부에 배치되는 경우<br /> 암시적 행의 크기가 적용됩니다.</td>\n</tr>\n<tr>\n<td>grid-auto-rows</td>\n<td>암시적 열의 크기를 정의합니다.<br />아이템이 <code class=\"language-text\">grid-template-columns</code>로 정의한 명시적 열 외부에 배치되는 경우<br />암시적 열의 크기가 적용됩니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"css-함수\" style=\"position:relative;\"><a href=\"#css-%ED%95%A8%EC%88%98\" aria-label=\"css 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 함수</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">repeat()</code></p>\n<p>만약 <code class=\"language-text\">1200px</code> 너비의 12 컬럼 그리드 탬플릿을 정의하려고 하면 다음과 같이 작성할 수 있다.</p>\n<p><code class=\"language-text\">grid-template-columns: 100px 100px 100px 100px 100px 100px 100px 100px 100px 100px 100px 100px</code></p>\n<p>하지만 <code class=\"language-text\">repeat()</code>을 사용하면 다음과 같이 간소화할 수 있다.</p>\n<p><code class=\"language-text\">grid-template-columns: repeat(12, 100px)</code></p>\n<p>컬럼의 크기는 <code class=\"language-text\">fr</code> 단위를 사용해 비율로 지정할 수도 있다. 각 컬럼은 비율에 맞게 출력되기 때문에 컨테이너의 너비가 가변해도 열 크기를 수정할 필요가 없다.</p>\n<p><code class=\"language-text\">grid-template-columns: repeat(12, 1fr)</code></p>\n<p><code class=\"language-text\">repeat()</code>함수는 두번째 인수를 반복하기 때문에 다음과 같이 활용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">,</span> 100px 200px 50px<span class=\"token punctuation\">)</span>\n<span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">,</span> 1fr 2fr 3fr<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">minmax()</code></p>\n<p>행/열의 ”최소/최대 크기”를 정의합니다.</p>\n<p>첫번째 인수는 최솟값이고 두번째 인수는 최댓값이다.</p>\n<p><code class=\"language-text\">grid-template-rows</code>, <code class=\"language-text\">grid-template-columns</code>, <code class=\"language-text\">grid-auto-rows</code>, <code class=\"language-text\">grid-auto-columns</code>에서 사용되며 일반 요소에 <code class=\"language-text\">min-width</code>와 <code class=\"language-text\">max-width</code> 속성을 동시 지정하는 것과 유사하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">grid-template-columns: minmax(100px, 1fr) minmax(200px, 1fr)</code></pre></div>\n</li>\n</ul>\n<img src=\"https://heropy.blog/images/screenshot/css-grid/minmax-1.jpg\" alt=\"CSS Grid\" style=\"zoom:67%;\">\n<p>암시적 행/열 크기를 좀 더 유연하게 사용할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">grid-auto-rows</span><span class=\"token punctuation\">:</span> <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span>200px<span class=\"token punctuation\">,</span> auto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">grid-auto-columns</span><span class=\"token punctuation\">:</span> <span class=\"token function\">minmax</span><span class=\"token punctuation\">(</span>300px<span class=\"token punctuation\">,</span> auto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 예제는 행/열의 크기를 최소 200px/300px으로 지정하였고 <code class=\"language-text\">auto</code>를 통해 그리드 아이템의 크기에 따라 확장될 수 있습니다.</p>\n<p>자세한 속성과 기능은 <a href=\"https://heropy.blog/2019/08/17/css-grid/\">여기서</a> 찾아보기</p>","frontmatter":{"title":"[CSS]그리드(grid)란","date":null,"lang":null}}},{"node":{"id":"8509f9a2-f260-568d-b223-36474897de2c","excerpt":"둘 이상의 CPU or 저장자이와 같은 컴퓨터 자원들에게 작업을 나누는 것\n요즘 시대에는 웹사이트에 접속하는 인원이 급격히 늘어나게 되었다.\n따라서 이 사람들에 대해 모든 트래픽을 감당하기엔 1대의 서버로는 부족하다. 대응 방안으로 하드웨어의 성능을 올리거나(Scale-up…","html":"<ul>\n<li>둘 이상의 CPU or 저장자이와 같은 컴퓨터 자원들에게 작업을 나누는 것\n요즘 시대에는 웹사이트에 접속하는 인원이 급격히 늘어나게 되었다.\n따라서 이 사람들에 대해 모든 트래픽을 감당하기엔 1대의 서버로는 부족하다. 대응 방안으로 하드웨어의 성능을 올리거나(Scale-up) 여러 대의 서버가 나눠서 일하도록 만드는 것(Scale-out)이 있다.\n하드웨어 향상 비용이 더욱 비싸기도 하고, 서버가 여러 대면 무중단 서비스를 제공하는 환경 구성이 용이하므로 Scale-out이 효과적이다. 이 때 여러 서버에게 균등하게 트래픽을 분산시켜주는 것이 바로 로드밸런싱이다.\n로드 밸런싱은 분산식 웹 서비스로, 여러 서버에 부하(Load)를 나누어 주는 역할을 한다. Load Balancer를 클라잉언트와 서버 사이에 두고, 부하가 일어나지 않도록 여러 서버에 분산시켜주는 방식이다. 서비스를 운영하는 사이트의 규모에 따라 웹 서버를 추가로 증설하면서 로드 밸런서로 관리해주면 웹 서버의 부하를 해결할 수 있다.</li>\n</ul>\n<h3 id=\"로드-밸런서가-서버를-선택하는-방식\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EB%93%9C-%EB%B0%B8%EB%9F%B0%EC%84%9C%EA%B0%80-%EC%84%9C%EB%B2%84%EB%A5%BC-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EC%8B%9D\" aria-label=\"로드 밸런서가 서버를 선택하는 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드 밸런서가 서버를 선택하는 방식</h3>\n<ul>\n<li>라운드 로빈(Round Robin) : CPU 스케줄링의 라운드 로빈 방식 활용</li>\n<li>Least Connections : 연결 개수가 가장 적은 서버 선택(트래픽으로 인해 세션이 길어지는 경우 권장)</li>\n<li>Source : 사용자 IP를 해싱하여 분배 (특정 사용자가 항상 같은 서버로 연결되는 것 보장)</li>\n</ul>\n<h3 id=\"로드-밸런서-장애-대비\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EB%93%9C-%EB%B0%B8%EB%9F%B0%EC%84%9C-%EC%9E%A5%EC%95%A0-%EB%8C%80%EB%B9%84\" aria-label=\"로드 밸런서 장애 대비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로드 밸런서 장애 대비</h3>\n<p>서버를 분배하는 로드 밸런서에 문제가 생길 수 있기 때문에 로드 밸런서를 이중화하여 대비한다.\nActive 상태의 Passive 상태</p>","frontmatter":{"title":"[network]로드 밸런싱(Load Balancing)","date":null,"lang":null}}},{"node":{"id":"40648ab9-dee9-5814-9360-1c79f0f85f47","excerpt":"전역 변수를 사용하지 않고 객체를 하나만 생성하도록 하며, 생성된 객체를 어디에서든지 참조할 수 있도록 하는 패턴입니다. 하나의 인스턴스만을 생성하며 getInstance메서드로 모든 클라이언트에게 동일한 인스턴스를 반환합니다. private…","html":"<p>전역 변수를 사용하지 않고 객체를 하나만 생성하도록 하며, 생성된 객체를 어디에서든지 참조할 수 있도록 하는 패턴입니다.</p>\n<p>하나의 인스턴스만을 생성하며 getInstance메서드로 모든 클라이언트에게 동일한 인스턴스를 반환합니다.</p>\n<p>private 생성자를 가지는 특징을 가지며, 생성된 싱글톤 오브젝트는 저장할 수 있는 자신과 같은 타입의 스태틱 필드를 정의합니다.</p>\n<p>싱글톤 패턴의 문제점은 다음과 같습니다.</p>\n<p>의존 관계상 클라이언트가 구체 클래스에 의존합니다.\nprivate 생성자 때문에 테스트가 어렵습니다.\n객체 인스턴스를 하나만 생성해서 공유하는 방식 때문에 싱글톤 객체를 stateful하게 설계 했을 경우 큰 장애 발생요인이 됩니다.\n싱글톤의 단점을 해결하기 위해 무상태(stateless)로 설계해야 합니다.</p>\n<p>특정 클라이언트에 의존적인 필드가 있으면 안됩니다.\n특정 클라이언트가 값을 변경할 수 있는 필드가 있으면 안됩니다.\n가급적 읽기 전용으로 만들고, 필드 대신에 자바에서 공유되지 않는 지역변수, 파라미터, ThreadLocal 등을 사용합니다.</p>","frontmatter":{"title":"[디자인패턴]싱글톤(Singleton)","date":null,"lang":null}}},{"node":{"id":"5469d33c-83fd-5236-9b38-f7dc59add82a","excerpt":"…","html":"<h3 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h3>\n<ul>\n<li>구현으로부터 추상 레이어를 분리하여 이 둘이 서로 독립적으로 변화할 수 있도록 한다.</li>\n<li>구현부에서 추상층을 분리하여 각자 독립적으로 변형이 가능하고 확장이 가능하도록 한다. 즉, 기능과 구현에 대해서 두 개를 별도의 클래스로 구현한다.</li>\n<li>두 개의 다른 계층(하나는 추상, 하나는 구현)인 서로 다른 계층의 커플링을 약화시키며 협력은 가능하도록 하는 패턴</li>\n</ul>\n<h3 id=\"클래스-다이어그램\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8\" aria-label=\"클래스 다이어그램 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 다이어그램</h3>\n<p><img src=\"https://blog.kakaocdn.net/dn/b6IdQZ/btqwtSDMmtm/xteE2DiKN7KvbTA5DpiwFK/img.png\" alt=\"img\"></p>\n<ul>\n<li>\n<p>Abstraction</p>\n<ul>\n<li>기능 계층의 최상위 클래스이며 추상 인터페이스를 정의한다. Implementor에 대한 레퍼런스를 유지한다.</li>\n<li>구현 부분에 해당하는 클래스를 인스턴스를 가지고 해당 인스턴스를 통해 구현 부분의 메서드를 호출한다.</li>\n</ul>\n</li>\n<li>\n<p>RefinedAbstraction</p>\n<ul>\n<li>Abstraction에 의해 정의된 인터페이스를 확장한다.(extends)</li>\n<li>기능 계층에서 새로운 부분을 확장한 클래스이다.</li>\n</ul>\n</li>\n<li>\n<p>Implementor</p>\n<ul>\n<li>구현 클래스를 위한 인터페이스를 정의한다.</li>\n<li>Abstraction의 기능을 구현하기 위한 인터페이스를 정의한다.</li>\n</ul>\n</li>\n<li>\n<p>ConcreteImplementor</p>\n<ul>\n<li>Implementor 인터페이스를 구현 즉, 실제 기능을 구현한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"브릿지-패턴과-어탭터-패턴의-차이\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%A6%BF%EC%A7%80-%ED%8C%A8%ED%84%B4%EA%B3%BC-%EC%96%B4%ED%83%AD%ED%84%B0-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"브릿지 패턴과 어탭터 패턴의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브릿지 패턴과 어탭터 패턴의 차이</h3>\n<p>두 패턴 모두 Interface의 detail을 감추고자 하며, 구조적인 차이가 없다.</p>\n<p>하지만 두 패턴은 서로 사용하고자 하는 목적의 차이가 분명하다.</p>\n<ul>\n<li>어댑터는 어떤 클래스의 인터페이스가 다른 코드에서 기대하는 것과 다를 때 (기능은 같은데, 함수명이 다를 때) 어댑터를 중간에 두어 맞춰주는 것이다.</li>\n<li>브릿지는 추상과 구현을 분리하는 것이다.(추상 클래스는 추상클래스대로, 구현은 구현대로 변경해도 서로 영향을 주지 않도록 한다.)</li>\n<li>어댑터는 결국 어떤 코드에 맞게끔 기능의 코드를 쓰기 위해 사용되고, 브릿지는 확장성을 고려하여 미리 예상하여 bridge class를 구현해 코드 작성시 사용하게 된다.</li>\n</ul>\n<p>출처 : <a href=\"https://www.crocus.co.kr/1537\">https://www.crocus.co.kr/1537</a></p>","frontmatter":{"title":"가교패턴(Bridge Pattern)","date":null,"lang":null}}},{"node":{"id":"c0b41db7-d4cf-5c08-8cf5-940309891340","excerpt":"","html":"","frontmatter":{"title":"HTML_2","date":null,"lang":null}}},{"node":{"id":"27a64e54-516e-5b42-828d-2b0e5318bc89","excerpt":"HTML 수업 필기 (복습,정리필요) HTML 영역나누기 : 브라우저의 전체를 나눈다. 자동 줄변경, 페이지의 전체 디자인을 만들 때 사용한다 : 데이터가 존재하는 영역만 나눈다. 자동줄변경X , 페이지의 부분 디자인을 만들 때 사용한다 ML의 특수문자 ( escape character…","html":"<ul>\n<li>HTML 수업 필기 (복습,정리필요)</li>\n</ul>\n<h1 id=\"html\" style=\"position:relative;\"><a href=\"#html\" aria-label=\"html permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML</h1>\n<ul>\n<li>\n<p>영역나누기</p>\n<ul>\n<li><code class=\"language-text\">&lt;div></code>: 브라우저의 전체를 나눈다. 자동 줄변경, 페이지의 전체 디자인을 만들 때 사용한다</li>\n<li><code class=\"language-text\">&lt;span></code>: 데이터가 존재하는 영역만 나눈다. 자동줄변경X , 페이지의 부분 디자인을 만들 때 사용한다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!--header에서 제공할 내용--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!--사용자에게 제공할 내용--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!--footer에서 제공할 내용--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>ML의 특수문자 ( escape character )</p>\n<p>기능을 가진 문자열</p>\n<ul>\n<li>문법 <code class=\"language-text\">&amp;..;</code></li>\n<li>공백한칸 <code class=\"language-text\">&amp;nbsp;</code></li>\n<li>&#x3C; <code class=\"language-text\">&amp;lt;</code></li>\n<li>> <code class=\"language-text\">&amp;gt;</code></li>\n<li>&#x26; <code class=\"language-text\">&amp;amp;</code></li>\n<li>” <code class=\"language-text\">&amp;quot;</code></li>\n</ul>\n</li>\n<li>media 재생</li>\n<li>\n<p>HTML5 이전</p>\n<ul>\n<li><code class=\"language-text\">&lt;embed></code> - 동영상, mp3 등 재생</li>\n<li><code class=\"language-text\">html&lt;embed src=\"미디어 경로\" controls=\"controls\" autoplay=\"true\"></code></li>\n</ul>\n</li>\n<li>\n<p>HTML5 이후</p>\n<ul>\n<li>동영상 <code class=\"language-text\">&lt;video></code>로 음악은 <code class=\"language-text\">&lt;audio></code>로 구분하여 재생한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>controls<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>음악경로<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>controls<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>경로<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!--브라우저마다 지원하는 코덱이 다른다--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"html-form-control\" style=\"position:relative;\"><a href=\"#html-form-control\" aria-label=\"html form control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control</h3>\n<ul>\n<li>사용자가 입력하는 값을 받기 위한 HTML의 Object들</li>\n<li><code class=\"language-text\">&lt;input></code> <code class=\"language-text\">&lt;select></code> <code class=\"language-text\">&lt;textarea></code> 3가지 제공</li>\n<li><code class=\"language-text\">&lt;form></code>태그 안에 존재해야 서버로 값 전달 할 수 있다.</li>\n</ul>\n<p><code class=\"language-text\">&lt;input></code></p>\n<ul>\n<li>\n<p>한줄로 입력가능한 칸</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">&lt;input type=\"text\" size=\"보여줄 글자수\" maxlength=\"최대 입력 가능한 글자 수\"\nname=\"이름(유일)\" //javascript나 backend로 전송할 때 사용 id=\"아이디(유일)\"\n//CSS에서 사용 javascript value=\"보여줄 글자(클릭해도 글자가 사라지지 않음)\"\nreadonly=\"readonly\" placeholder=\"보여줄글자(클릭하면 글자가 사라짐 - HTML5에서\n지원속성)\" > &lt;input type=\"password\" //비밀번호 입력(****로 나옴) >\n<span class=\"token comment\">&lt;!-- 라디오 버튼 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름(그룹이름)<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>서버로 전송할 값<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checked<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span>사용자에게 보여줄 값\n<span class=\"token comment\">&lt;!-- check box --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token comment\">&lt;!-- hidden: 사용자에게 값을 노출시키지 않고 서버로 값을 전달한다. --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>서버로 전송할 값<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n<li>\n<p>버튼</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 버튼 모양 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>버튼에 들어갈 label<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span class=\"token comment\">&lt;!-- Javascript와 같이 사용 --></span>\n<span class=\"token comment\">&lt;!-- 전송버튼 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span class=\"token comment\">&lt;!--&lt;form>태그에 설정된 페이지로 HTML Form Control에 있는 값을 전송한다. --></span>\n<span class=\"token comment\">&lt;!-- 취소버튼 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reset<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span class=\"token comment\">&lt;!--&lt;form> 태그안에 HTML Form Control의 값들을 초기화한다. --></span></code></pre></div>\n</li>\n</ul>\n<p><code class=\"language-text\">&lt;select></code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- combobox --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>보여줄 옵션의 개수<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>서버로 전송할 값<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">selected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selected<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    사용자에게 보여줄 값\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-text\">&lt;textarea></code> : 메모장처럼 생김</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이름<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>한줄에 쓸 글자수<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>보여 줄 줄 수<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n초기값<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<h4 id=\"form\" style=\"position:relative;\"><a href=\"#form\" aria-label=\"form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Form</h4>\n<ul>\n<li>서버로 값을 전달할 때 사용하는 tag</li>\n<li>\n<p>HTML Form Control들을 자식태그로 가지고 있어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- form안에 form이 있으면 안된다 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span>\n<span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Form Coltrol의 값을 받을 Back-End page ex)a.jsp, 서블릿 path, a.asp, a.php<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>전송방식 get / post<span class=\"token punctuation\">\"</span></span>\n<span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form을 구분하기 위한 이름(javascript)<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n. .\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>전송은 <code class=\"language-text\">&lt;input type=\"submit\"></code>을 사용했을 때 전송한다.</li>\n</ul>\n<h4 id=\"html5에서-추가된-form-control\" style=\"position:relative;\"><a href=\"#html5%EC%97%90%EC%84%9C-%EC%B6%94%EA%B0%80%EB%90%9C-form-control\" aria-label=\"html5에서 추가된 form control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML5에서 추가된 Form Control</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tel/email/date/month/datetime-local/color/number/range<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>\n<p>front-end</p>\n<ol>\n<li>HTML: 페이지 구조</li>\n<li>CSS: 디자인</li>\n<li>Javascript: 연산</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"css\" style=\"position:relative;\"><a href=\"#css\" aria-label=\"css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS</h2>\n<ul>\n<li>Cascading Hakon Wium Lie 제안 (하콤 비움 리)</li>\n<li>웹디자이너가 주로 사용하는 언어</li>\n<li>웹페이지의 통일성 있는 디자인을 제공</li>\n<li>HTML5에서는 CSS의 기능이 제외되서 CSS의 필요성이 높아졌다</li>\n<li>css 문법: <code class=\"language-text\">속성:값;속성:값;</code></li>\n<li>\n<p>작성법</p>\n<ol>\n<li>inline 방식</li>\n<li>HTML Tag에 직접 정의하는 방식</li>\n<li>적용 우선 순위가 가장 높다</li>\n<li>동일 디자인의 재활용성이 매우 낮다</li>\n<li>구조와 디자인의 결합도가 높아진다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>태그명</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">속성명</span><span class=\"token punctuation\">:</span>값<span class=\"token punctuation\">;</span><span class=\"token property\">속성명</span><span class=\"token punctuation\">:</span>값<span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ol start=\"2\">\n<li>embed 방식</li>\n<li>HTML의 head 태그에 넣어 정의하는 방식</li>\n<li>inline 방식보다 재사용성이 좋다</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\">#id</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">속성</span><span class=\"token punctuation\">:</span> 값<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">.class명</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">속성</span><span class=\"token punctuation\">:</span> 값<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">태그명</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">속성</span><span class=\"token punctuation\">:</span> 값<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ol start=\"3\">\n<li>external file 방식</li>\n<li>확장자가 css인 파일을 만들고 디자인 코드를 정의하는 방식</li>\n<li>디자인 코드에 대한 재사용성이 가장 높다</li>\n<li>파일관리가 어렵다</li>\n<li>디자인 코드가 필요한 파일에서</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css파일url<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n<li>기본문법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">selector { 속성:값;속성:값; }</code></pre></div>\n<ul>\n<li>\n<p>selector: 정의한 Design 속성을 적용 받는 대상</p>\n<ul>\n<li>id selector : 디자인을 적용받는 태그가 HTML 내에서 유일할 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">#id명,,, { 속성:값;속성:값; }\n&lt;!-- 태그에서 적용 --&gt;\n&lt;태그명 id=&quot;id명&quot;,,,&gt; &lt;!-- #제외하고 입력, 유일하게 하나의 태그에만 적용 --&gt;</code></pre></div>\n<ul>\n<li>class selector: 디자인을 적용받을 태그가 HTML 내에서 여러 개 일 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">.class명,,, { 속성:값;속성:값; }\n&lt;!--태그에 적용--&gt;\n&lt;태그명 class=&quot;class명&quot;,,,&gt; &lt;!-- .제외하고 입력, 클래스명은 여러번 사용될 수 있다 --&gt;</code></pre></div>\n<ul>\n<li>tag seletor: HTML 내에서 모든 태그가 디자인을 적용받아야 할 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">태그명,,, { 속성:값;속성:값; }\n&lt;!-- HTML 내의 모든 태그가 적용받는다 --&gt;\n&lt;태그명&gt;</code></pre></div>\n</li>\n<li>\n<p>subselector</p>\n<ul>\n<li>특정 태그의 자식 태그만 디자인 적용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">태그명>자식태그명 { 속성:값;속성:값 } div>p {,,,}</code></pre></div>\n</li>\n<li>\n<p>글 흘러가게 만들 때</p>\n<p><code class=\"language-text\">&lt;></code></p>\n</li>\n</ul>\n<h2 id=\"font\" style=\"position:relative;\"><a href=\"#font\" aria-label=\"font permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>font</h2>\n<p>글자관련 속성</p>\n<ul>\n<li>글꼴: <code class=\"language-text\">{ font-family: 글꼴, 다른 글꼴,,,}</code></li>\n<li>진하게: 일반글자 <code class=\"language-text\">{ font-weight: bold/nomal }</code></li>\n<li>이텔릭 <code class=\"language-text\">{ font-style: italic/nomal }</code></li>\n<li>글자크기 <code class=\"language-text\">{ font-size: 숫자px }</code></li>\n<li>글자 색 <code class=\"language-text\">{ color: red/#rgb }</code></li>\n<li>줄긋기 <code class=\"language-text\">{ text-decoration: none/underline/overline/line-through}</code></li>\n</ul>\n<h2 id=\"border\" style=\"position:relative;\"><a href=\"#border\" aria-label=\"border permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>border</h2>\n<ul>\n<li>table, td, img, div…</li>\n<li>\n<p><code class=\"language-text\">border: 테두리선두께 선종류 선색;</code></p>\n<ul>\n<li>모든 테두리에 적용된다.</li>\n<li>선종류: solid, dotted, dashed, double(테두리선의 두께가 3px이상일 때부터 적용)</li>\n</ul>\n</li>\n<li>\n<p>특정위치만</p>\n<ul>\n<li><code class=\"language-text\">{ border-left: 두께 선종류 선색; border-right: border-left: border-top: border-bottom: }</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"design\" style=\"position:relative;\"><a href=\"#design\" aria-label=\"design permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Design</h2>\n<h3 id=\"색\" style=\"position:relative;\"><a href=\"#%EC%83%89\" aria-label=\"색 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>색</h3>\n<ul>\n<li>바닥색: <code class=\"language-text\">{ background-color: RGB }</code></li>\n<li>전경색: <code class=\"language-text\">{ color: RGB }</code></li>\n</ul>\n<h3 id=\"이미지\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80\" aria-label=\"이미지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지</h3>\n<ul>\n<li><code class=\"language-text\">{ background: 바닥색 url(\"이미지경로\") 이미지설정 }</code></li>\n<li>\n<p>이미지 설정</p>\n<ul>\n<li>default: 바둑판</li>\n<li>repeat-x: x좌표로 반복</li>\n<li>repeat-y: y좌표로 반복</li>\n<li>no-repeat: 이미지 반복x</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"정렬\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A0%AC\" aria-label=\"정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정렬</h3>\n<ul>\n<li>글자정렬: text-align: left/right/center</li>\n<li>\n<p>여백</p>\n<ul>\n<li>margin: 기준선 바깥쪽 여백</li>\n</ul>\n<p><code class=\"language-text\">{ margin: 여백픽셀; }</code> 모든 방향의 여백</p>\n<p><code class=\"language-text\">{ margin-left: 여백픽셀; }</code></p>\n<p><code class=\"language-text\">{ margin-right: 여백픽셀; }</code></p>\n<ul>\n<li>padding: 기준선 안쪽 여백</li>\n</ul>\n<p><code class=\"language-text\">{ padding: 여백필셀; }</code> 모든 방향의 여백 -> 자체 크기가 변경된다</p>\n<p><code class=\"language-text\">{ padding-left: 여백필셀; }</code></p>\n<p><code class=\"language-text\">{ padding-right: 여백필셀; }</code></p>\n</li>\n<li>\n<p>float : text-align으로 정렬되지 않는 객체를 정렬할 때</p>\n<ul>\n<li>float left right</li>\n<li>float을 설정하면 하위의 객체들이 정렬을 적용받는 버그가 존재</li>\n<li>이전 정렬을 초기화 할 때에는 <code class=\"language-text\">clear: both</code> 속성을 사용</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"사용자의-동작이-있을-때-css적용하기\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EC%9D%98-%EB%8F%99%EC%9E%91%EC%9D%B4-%EC%9E%88%EC%9D%84-%EB%95%8C-css%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"사용자의 동작이 있을 때 css적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자의 동작이 있을 때 CSS적용하기</h3>\n<ul>\n<li>\n<p>behavior selector</p>\n<p><code class=\"language-text\">태그명: hover{속성: 값;,,,}</code></p>\n</li>\n</ul>\n<h4 id=\"div에-스크롤바-생성\" style=\"position:relative;\"><a href=\"#div%EC%97%90-%EC%8A%A4%ED%81%AC%EB%A1%A4%EB%B0%94-%EC%83%9D%EC%84%B1\" aria-label=\"div에 스크롤바 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>div에 스크롤바 생성</h4>\n<ul>\n<li><code class=\"language-text\">overflow: auto</code></li>\n<li>설정한 크기보다 데이터가 많다면 스코롤바를 생성하여 데이터를 정해진 크기 내에서 보여준다</li>\n</ul>\n<h2 id=\"디자인\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8\" aria-label=\"디자인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인</h2>\n<ul>\n<li>div와 CSS를 복합적으로 사용</li>\n<li>div : 사용자에 제공할 내용 정의</li>\n<li>CSS: div를 배치하기 위한 크기, 위치 설정</li>\n<li>크기설정: <code class=\"language-text\">width:너비px</code> <code class=\"language-text\">height:높이px</code></li>\n<li>\n<p>위치설정: <code class=\"language-text\">position: absolute(절대좌표),relative(상대좌표),fixed(고정좌표)</code></p>\n<ul>\n<li>절대 좌표: 스크롤바가 움직여도 좌표가 변하지 않는 좌표(스크롤바가 움직이면 위치가 이동)</li>\n<li>상대좌표: 시작점 위치를 변경할 때</li>\n<li>고정좌표: 스크롤바가 움직이면 좌표가 수정됨 (스크롤바가 움직여도 항상 설정한 자리에 위치)</li>\n<li>좌표: <code class=\"language-text\">top:y좌표,left:x좌표</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">&lt;style type=&quot;text/css&quot;&gt;\n&lt;/style&gt;\n&lt;body&gt;\n  &lt;div id=&quot;a&quot;&gt;\n  &lt;/div&gt;\n&lt;/body&gt;</code></pre></div>\n</li>\n</ul>\n<h3 id=\"영역태그\" style=\"position:relative;\"><a href=\"#%EC%98%81%EC%97%AD%ED%83%9C%EA%B7%B8\" aria-label=\"영역태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>영역태그</h3>\n<p>사용자에게 보여지지 않고, 영역의 의미로 사용되는 태그</p>\n<p><code class=\"language-text\">&lt;header></code> 웹페이지에서 header부분 의미</p>\n<p><code class=\"language-text\">&lt;footer></code> 웹페이지에서 footer부분 의미</p>\n<p><code class=\"language-text\">&lt;navi></code> navigator bar를 묶을 때 사용</p>\n<p><code class=\"language-text\">&lt;section></code> 서비스 제공하기위한 하나의 영역</p>\n<p><code class=\"language-text\">&lt;article></code> 게시물의 리스트, 뉴스의 리스트</p>\n<p><code class=\"language-text\">&lt;aside></code> 부가적인 서비스를 나타내는 영역 (Side Bar)</p>\n<h3 id=\"css3-속성\" style=\"position:relative;\"><a href=\"#css3-%EC%86%8D%EC%84%B1\" aria-label=\"css3 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS3 속성</h3>\n<ul>\n<li>테두리 선을 곡선</li>\n</ul>\n<p><code class=\"language-text\">border-radius:px;</code> 4개의 모서리 모두 동일한 호를 적용</p>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">border-radius:10px\n\nborder-radius: LI RI RB LB;</code></pre></div>\n<ul>\n<li>\n<p>shadow</p>\n<ul>\n<li>글자그림자 설정 : <code class=\"language-text\">text-shadow: x좌표 y좌표 번짐 그림자색</code></li>\n<li>box그림자 설정: <code class=\"language-text\">box-shadow: x좌표 y좌표 번짐 그림자색</code></li>\n</ul>\n</li>\n<li>\n<p>마우스 포인터 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">cursor: default,pointer,crosshair, loading;</code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"HTML","date":null,"lang":null}}},{"node":{"id":"c376000c-52da-5b31-92e9-120b12e25cff","excerpt":"Markdown\n텍스트 기반의 마크업 언어이다. 문법이 간단한 것이 특징\nGitHub에 README 파일이 모두 markdown으로 작성 markdown 문법 마크다운은 줄바꿈을 인식하지 않는다. 줄바꿈: 라인 끝에 스페이스를 2번 강조표시   single asterisks…","html":"<p>Markdown\n텍스트 기반의 마크업 언어이다. 문법이 간단한 것이 특징\nGitHub에 README 파일이 모두 markdown으로 작성</p>\n<p>markdown 문법<br>\n마크다운은 줄바꿈을 인식하지 않는다.<br>\n줄바꿈: 라인 끝에 스페이스를 2번<br>\n강조표시  </p>\n<ol>\n<li><em>single asterisks</em>  </li>\n<li><em>single underscores</em>  </li>\n<li><strong>double astrisks</strong>  </li>\n<li><strong>double underscores</strong>  </li>\n<li><del>cancelline</del>  </li>\n</ol>\n<p>글머리 달기  </p>\n<h1 id=\"h1\" style=\"position:relative;\"><a href=\"#h1\" aria-label=\"h1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H1</h1>\n<h2 id=\"h2\" style=\"position:relative;\"><a href=\"#h2\" aria-label=\"h2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H2</h2>\n<h3 id=\"h3\" style=\"position:relative;\"><a href=\"#h3\" aria-label=\"h3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H3</h3>\n<h4 id=\"h4\" style=\"position:relative;\"><a href=\"#h4\" aria-label=\"h4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H4</h4>\n<h5 id=\"h5\" style=\"position:relative;\"><a href=\"#h5\" aria-label=\"h5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H5</h5>\n<h6 id=\"h6\" style=\"position:relative;\"><a href=\"#h6\" aria-label=\"h6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H6</h6>\n<p>인용  </p>\n<blockquote>\n<p>This is a first blockqute  </p>\n<blockquote>\n<p>This is a second blockqute  </p>\n<blockquote>\n<p>This is a third blockqute  </p>\n</blockquote>\n</blockquote>\n</blockquote>\n<ul>\n<li>비정렬 목록   </li>\n<li>이건 노션이랑 비슷한듯  </li>\n<li>\n<p>코드 인용  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">특정 언어를 원하면 앞에 언어의 이름을 써주기  </code></pre></div>\n</li>\n<li>\n<p>수평선  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">***  </code></pre></div>\n</li>\n</ul>\n<hr>\n<hr>\n<hr>\n<hr>\n<p>이것도 노션이랑 비슷한거같다  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">------------------------\n\n* 링크 표시법  </code></pre></div>\n<p><a href=\"link\">title</a>  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">* 이미지 삽입  \n * 내 컴퓨터가 아니라 넣을 사진이 없다. 나중에 해봐야지  \n\n* 표만들기  \n  * 표 내용 중앙정렬  \n|항목|가격|개수|  \n|:---:||:----:|:---:|  \n|라면|800원|10개|  \n|과자|900원|20개|  \n  \n  * 표 내용 좌측정렬 - 중앙정렬 - 우측정렬  \n|항목|가격|개수|  \n|---:|:----:|:----|  \n|라면|800원|10개|  \n|과자|900원|20개|  </code></pre></div>","frontmatter":{"title":"markdown 문법 해보기","date":null,"lang":null}}},{"node":{"id":"e3ff014e-698b-50ee-a045-a88cc93f2583","excerpt":"정리되어 있지 않음 JavaScript 1996년에 brendan Eich가 제작하여 발표한 Script언어 C언어로 만들어진 언어 Web browser에서 JavaScript Engine을 사용하여 실행되는 언어 inline, embed, external file 방식…","html":"<ul>\n<li>정리되어 있지 않음</li>\n</ul>\n<h1 id=\"javascript\" style=\"position:relative;\"><a href=\"#javascript\" aria-label=\"javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript</h1>\n<ul>\n<li>1996년에 brendan Eich가 제작하여 발표한 Script언어</li>\n<li>C언어로 만들어진 언어</li>\n<li>Web browser에서 JavaScript Engine을 사용하여 실행되는 언어</li>\n<li>inline, embed, external file 방식 3가지로 사용</li>\n<li>동적 데이터형/동적할당 ( 값이 할당될 때 변수의 데이터형이 설정되는 것 )</li>\n<li>JavaScript를 기반으로한 다양한 library들이 제공 ( JQuery Angular.js, Node.js, View.js, React 등 )</li>\n<li>\n<p>inline: 태그에 직접 정의하여 사용하는 방식</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>태그명 onXXX<span class=\"token operator\">=</span><span class=\"token string\">\"javascript코드\"</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n<li>\n<p>embed: HTML <code class=\"language-text\">&lt;head></code>태그의 자식태그로 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  javascript code\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>external file 방식</p>\n<p>확장자는 .js</p>\n<p>필요한 HTML에서 <code class=\"language-text\">&lt;script src=\"xxx.js\" type=\"text/javascript\">&lt;/script></code></p>\n</li>\n<li>작성방법, 변수, 연산자, 제어문, function, JavaScript 객체들, HTML, Form Control 처리, closure, prototype</li>\n</ul>","frontmatter":{"title":"JavaScript","date":null,"lang":null}}},{"node":{"id":"0e28a8af-8e20-51e1-b9f2-9b7831313984","excerpt":"관리자 화면 HTML","html":"<h3 id=\"관리자-화면-html\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC%EC%9E%90-%ED%99%94%EB%A9%B4-html\" aria-label=\"관리자 화면 html permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리자 화면 HTML</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n      <span class=\"token selector\">#container</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 80vw<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">#page_title</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> x-large<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">table</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border-collapse</span><span class=\"token punctuation\">:</span> collapse<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">tr,\n      td,\n      th</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">border-collapse</span><span class=\"token punctuation\">:</span> collapse<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">th</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> bisque<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">#search > div</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">#search</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/* 디자인 적용되면 꼬일듯 */</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 330px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -165px<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/*  */</span>\n\n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">#result_paging</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token selector\">#result</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page_title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>주문관리<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search_item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>주문번호<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>주문id<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span><span class=\"token punctuation\">></span></span>메뉴<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search_input<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search_btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>검색<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>result<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>order_tab<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>주문번호<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>주문id<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>메뉴<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>가격<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>배달현황<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>주문일자<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>0000001<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>test1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>어쩌고 피자 외 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>43,000<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>배달완료<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2020/08/01 13:23<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>result_paging<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>이전페이지<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>다음페이지<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>","frontmatter":{"title":"[project]관리자화면HTML+간단한 CSS","date":null,"lang":null}}},{"node":{"id":"4431c96f-389b-5be7-a7d8-35293a9e48c7","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in…","html":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\" style=\"position:relative;\"><a href=\"#quick-start\" aria-label=\"quick start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quick Start</h2>\n<h3 id=\"create-a-new-post\" style=\"position:relative;\"><a href=\"#create-a-new-post\" aria-label=\"create a new post permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a new post</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span></code></pre></div>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\" style=\"position:relative;\"><a href=\"#run-server\" aria-label=\"run server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run server</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ hexo server</code></pre></div>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\" style=\"position:relative;\"><a href=\"#generate-static-files\" aria-label=\"generate static files permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generate static files</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ hexo generate</code></pre></div>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\" style=\"position:relative;\"><a href=\"#deploy-to-remote-sites\" aria-label=\"deploy to remote sites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy to remote sites</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ hexo deploy</code></pre></div>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>","frontmatter":{"title":"Hello World","date":null,"lang":null}}},{"node":{"id":"4dae8dac-0948-5440-8d49-bce4ef424a23","excerpt":"나머지 연산 % 돌아야하는 수 개수 + 시작될 수","html":"<ul>\n<li>\n<p>나머지 연산</p>\n<ul>\n<li>% 돌아야하는 수 개수 + 시작될 수</li>\n<li></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"6d1d41df-a489-578c-be7f-370a2cfd70a4","excerpt":"Markdown\n텍스트 기반의 마크업 언어이다. 문법이 간단한 것이 특징\nGitHub에 README 파일이 모두 markdown으로 작성 markdown 문법 마크다운은 줄바꿈을 인식하지 않는다. 줄바꿈: 라인 끝에 스페이스를 2번 강조표시 single asterisks single…","html":"<p>Markdown\n텍스트 기반의 마크업 언어이다. 문법이 간단한 것이 특징\nGitHub에 README 파일이 모두 markdown으로 작성</p>\n<p>markdown 문법<br>\n마크다운은 줄바꿈을 인식하지 않는다.<br>\n줄바꿈: 라인 끝에 스페이스를 2번<br>\n강조표시</p>\n<ol>\n<li><em>single asterisks</em></li>\n<li><em>single underscores</em></li>\n<li><strong>double astrisks</strong></li>\n<li><strong>double underscores</strong></li>\n<li><del>cancelline</del></li>\n</ol>\n<p>글머리 달기  </p>\n<h1 id=\"h1\" style=\"position:relative;\"><a href=\"#h1\" aria-label=\"h1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H1</h1>\n<h2 id=\"h2\" style=\"position:relative;\"><a href=\"#h2\" aria-label=\"h2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H2</h2>\n<h3 id=\"h3\" style=\"position:relative;\"><a href=\"#h3\" aria-label=\"h3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H3</h3>\n<h4 id=\"h4\" style=\"position:relative;\"><a href=\"#h4\" aria-label=\"h4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H4</h4>\n<h5 id=\"h5\" style=\"position:relative;\"><a href=\"#h5\" aria-label=\"h5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H5</h5>\n<h6 id=\"h6\" style=\"position:relative;\"><a href=\"#h6\" aria-label=\"h6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>H6</h6>\n<p>인용</p>\n<blockquote>\n<p>This is a first blockqute</p>\n<blockquote>\n<p>This is a second blockqute</p>\n<blockquote>\n<p>This is a third blockqute</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>*비정렬 목록</p>\n<ul>\n<li>이건 노션이랑 비슷한듯</li>\n<li>코드 인용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">특정 언어를 원하면 앞에 언어의 이름을 써주기</code></pre></div>\n<ul>\n<li>수평선</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">***\n* * *\n*****\n- - -\n-----------------------\n이것도 노션이랑 비슷한거같다</code></pre></div>\n<hr>\n<ul>\n<li>링크 표시법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[title](link)</code></pre></div>\n<ul>\n<li>이미지 삽입</li>\n<li>내 컴퓨터가 아니라 넣을 사진이 없다. 나중에 해봐야지</li>\n<li>\n<p>표만들기</p>\n<ul>\n<li>표 내용 중앙정렬\n| 항목 | 가격 | 개수 |\n|:---:||:----:|:----:|\n| 라면 | 800원 | 10개 |\n| 과자 | 900원 | 20개 |</li>\n</ul>\n<p>*표 내용 좌측정렬 - 중앙정렬 - 우측정렬</p>\n</li>\n</ul>\n<p>| 항목 | 가격 | 개수 |\n|---:||:----:|:----|\n| 라면 | 800원 | 10개 |\n| 과자 | 900원 | 20개 |</p>","frontmatter":{"title":"markdown 문법 해보기","date":null,"lang":null}}},{"node":{"id":"cd4b5e86-ec5d-5ebb-870d-342ceae2087e","excerpt":"멱등성: 모든 접속자에게 동일하게 서비스됨 JavaScript 1996년에 brendan Eich가 제작하여 발표한 Script언어 C언어로 만들어진 언어 Web browser에서 JavaScript Engine을 사용하여 실행되는 언어 inline, embed, external…","html":"<p>멱등성: 모든 접속자에게 동일하게 서비스됨</p>\n<h1 id=\"javascript\" style=\"position:relative;\"><a href=\"#javascript\" aria-label=\"javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript</h1>\n<ul>\n<li>1996년에 brendan Eich가 제작하여 발표한 Script언어</li>\n<li>C언어로 만들어진 언어</li>\n<li>Web browser에서 JavaScript Engine을 사용하여 실행되는 언어</li>\n<li>inline, embed, external file 방식 3가지로 사용</li>\n<li>동적 데이터형/동적할당 ( 값이 할당될 때 변수의 데이터형이 설정되는 것 )</li>\n<li>JavaScript를 기반으로한 다양한 library들이 제공 ( JQuery Angular.js, Node.js, View.js, React 등 )</li>\n<li>\n<p>inline: 태그에 직접 정의하여 사용하는 방식</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>태그명 onXXX<span class=\"token operator\">=</span><span class=\"token string\">\"javascript코드\"</span><span class=\"token operator\">></span></code></pre></div>\n</li>\n<li>\n<p>embed: HTML <code class=\"language-text\">&lt;head></code>태그의 자식태그로 등록</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  javascript code\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>external file 방식</p>\n<p>확장자는 .js</p>\n<p>필요한 HTML에서 <code class=\"language-text\">&lt;script src=\"xxx.js\" type=\"text/javascript\">&lt;/script></code></p>\n</li>\n<li>작성방법, 변수, 연산자, 제어문, function, JavaScript 객체들, HTML, Form Control 처리, closure, prototype</li>\n</ul>\n<h3 id=\"코딩-주의\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%94%A9-%EC%A3%BC%EC%9D%98\" aria-label=\"코딩 주의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코딩 주의</h3>\n<ul>\n<li>대소문자를 구분</li>\n<li>괄호는 짝으로</li>\n<li>;은 생략할 수 있다.</li>\n</ul>\n<h3 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//HTML &lt;body> 태그 출력: 이전의 &lt;body> 내용을 삭제하고 출력</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>출력할 내용<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//경고창 출력: 코드의 실행을 멈춤</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>출력내용<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//console 출력 (debug 시)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>출력내용<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"variable\" style=\"position:relative;\"><a href=\"#variable\" aria-label=\"variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable</h3>\n<ul>\n<li>필요한 값을 일시적으로 저장하기 위해</li>\n<li>가독성 향상</li>\n<li>데이터형을 개발자가 설정할 수 없다.(값 할당 시에 데이터형이 설정된다)</li>\n<li>\n<p>지역변수와 전역변수가 지원 -> 변수 작성하는 문법 구분</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">지역변수\n<span class=\"token number\">1.</span> 선언<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> 변수명<span class=\"token punctuation\">;</span> 변수를 재선언<span class=\"token punctuation\">,</span> 값 재할당\n\t<span class=\"token keyword\">let</span> 변수명<span class=\"token punctuation\">;</span> 변수를 재선언 할 수 없다<span class=\"token punctuation\">.</span> 값 재할당 가능\n\t<span class=\"token keyword\">const</span> 변수명<span class=\"token punctuation\">;</span> 변수를 재선언 할 ㅜ 없다<span class=\"token punctuation\">.</span> 값을 재할당 할 수 없다<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span> 배열<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> 생성하는 변수 예외적 가능 <span class=\"token punctuation\">)</span>\n<span class=\"token number\">2.</span> <span class=\"token function\">값할당</span> <span class=\"token punctuation\">(</span>데이터형이 결정됨<span class=\"token punctuation\">)</span>\n\t변수명 <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span>\n<span class=\"token number\">3.</span> 값 사용\n\t출력<span class=\"token punctuation\">,</span> 연산<span class=\"token punctuation\">,</span> 재할당</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">전역변수\n<span class=\"token number\">1.</span> 선언<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">var</span>를 사용하지 않고 변수를 선언하면서 값 할당\n\t변수명 <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span>\n위치에 따라서 <span class=\"token keyword\">var</span>를 붙여서 선언해도 전역변수로 사용할 수 있다<span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"변수에-할당할-수-있는-값의-종류\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%97%90-%ED%95%A0%EB%8B%B9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EA%B0%92%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"변수에 할당할 수 있는 값의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수에 할당할 수 있는 값의 종류</h3>\n<ul>\n<li>\n<p>문자가 없음</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//String</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"문자열...\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"문자열...\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>숫자는 정수, 실수를 모두 포함한다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//Number</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">6.4</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"연산자\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자</h3>\n<ul>\n<li>\n<p>최단산쉬 관리 삼대 콤마</p>\n<ol>\n<li>단항</li>\n</ol>\n<p> ~ ! + - *</p>\n<p> ~ : 1의 보수연산</p>\n<p> ! : not</p>\n<ol start=\"2\">\n<li>산술</li>\n<li>쉬프트 <code class=\"language-text\">&lt;&lt;</code> <code class=\"language-text\">>></code> <code class=\"language-text\">>>></code></li>\n<li>관계 <code class=\"language-text\">&lt;</code> <code class=\"language-text\">></code> <code class=\"language-text\">&lt;=</code> <code class=\"language-text\">>=</code> <code class=\"language-text\">==</code> <code class=\"language-text\">===</code> <code class=\"language-text\">!=</code> <code class=\"language-text\">!==</code></li>\n</ol>\n<p> <code class=\"language-text\">==</code>: 값이 같은지 비교</p>\n<p> <code class=\"language-text\">===</code>: 값과 데이터형이 모두 같은지 비교</p>\n<ol start=\"5\">\n<li>논리</li>\n</ol>\n<p> 여러개의 관계연산자를 묶을때</p>\n<ul>\n<li>\n<p>일반 논리</p>\n<p>&#x26;&#x26; : 모두 참일 때 참</p>\n<p>||: 모두 거짓일 때 거짓</p>\n</li>\n<li>\n<p>비트 논리</p>\n<p>&#x26; | ^</p>\n</li>\n<li>삼항</li>\n<li>대입</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"제어문\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EB%AC%B8\" aria-label=\"제어문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어문</h3>\n<ul>\n<li>\n<p>프로그램의 순차적인 흐름을 변경해줄 수 있는 문장</p>\n<h4 id=\"조건문\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%AC%B8\" aria-label=\"조건문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건문</h4>\n<ul>\n<li>if 다중if</li>\n<li>if~ else</li>\n<li>switch~ case: 값이 같은지 비교하여 실행할 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">상수</span><span class=\"token operator\">:</span>수행문장들<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">상수</span><span class=\"token operator\">:</span>\n     <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> 일치하는 상수가 없을때 수행할 문장들<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"반복문\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복문</h4>\n<ul>\n<li>for문: 시작과 끝을 알 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>while문: 시작과 끝을 모를 때</li>\n<li>do ~ while문:</li>\n<li>break;</li>\n<li>continue;</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"javascript의-proposal-기능사용하기-위한-plugin-tern\" style=\"position:relative;\"><a href=\"#javascript%EC%9D%98-proposal-%EA%B8%B0%EB%8A%A5%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-plugin-tern\" aria-label=\"javascript의 proposal 기능사용하기 위한 plugin tern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>javascript의 proposal 기능사용하기 위한 plugin: Tern</h4>\n<h2 id=\"array\" style=\"position:relative;\"><a href=\"#array\" aria-label=\"array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array</h2>\n<ul>\n<li>일괄처리에 사용</li>\n<li>일차원 배열만 지원</li>\n<li>\n<p>가변길이형( 값을 추가하면 방의 갯수가 증가한다. )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">1.</span> 배열생성\n<span class=\"token keyword\">var</span> 배열명<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">2.</span> 값할당\n배열명<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>값<span class=\"token punctuation\">;</span>\n<span class=\"token number\">3.</span> 방의  개수\n배열명<span class=\"token punctuation\">.</span>length\n<span class=\"token number\">4.</span> 값얻기\n배열명<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span>\n모든 방의 값 출력\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>배열명<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  배열명<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n배열의 초기화\n<span class=\"token keyword\">let</span> 배열명<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>값<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"함수--function-\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98--function-\" aria-label=\"함수  function  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 ( function )</h3>\n<ul>\n<li>일을 구분하여 만들 때</li>\n<li>중복코드를 최소화</li>\n<li>\n<p>호출하여 사용한다. ( 사용자 동작에 의해 )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  코드작성\n\n  <span class=\"token keyword\">return</span> 값<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>호출 다른함수 호출: <code class=\"language-text\">함수명(값,,,);</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>동작</th>\n<th>속성</th>\n<th>주적용태그</th>\n<th>사용예</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>클릭</td>\n<td>onclick</td>\n<td><code class=\"language-text\">&lt;input type=\"button\"></code> <br/><code class=\"language-text\">&lt;img></code> <br/><code class=\"language-text\">&lt;td></code></td>\n<td><code class=\"language-text\">&lt;input type=\"button\"onclick=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>body 로딩</td>\n<td>onload</td>\n<td><code class=\"language-text\">&lt;body></code></td>\n<td><code class=\"language-text\">&lt;body onload=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>마우스포인터가 <br/>특정위치에 들어갔을 때</td>\n<td>onmouseover<br/>onmouseenter</td>\n<td>모든 태그</td>\n<td><code class=\"language-text\">&lt;img onmouseover=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>마우스포인터가 <br/>특정 위치에서 나갔을 때</td>\n<td>onmouseout</td>\n<td>모든 태그</td>\n<td><code class=\"language-text\">&lt;img onmouseout=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>포인터가 <br/>움직였을 때</td>\n<td>onmousemove</td>\n<td>모든 태그</td>\n<td><code class=\"language-text\">&lt;img onmousemove=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>키가 눌릴 때</td>\n<td>onkeydown</td>\n<td><code class=\"language-text\">&lt;input type=\"text, password\"></code> <br/><code class=\"language-text\">&lt;textarea></code></td>\n<td><code class=\"language-text\">&lt;input type=\"text\" onkeydown=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>키가 올라올 때</td>\n<td>onkeyup</td>\n<td><code class=\"language-text\">&lt;input type=\"text, password\"></code><br/> <code class=\"language-text\">&lt;textarea></code></td>\n<td><code class=\"language-text\">&lt;input type=\"text\" onkeyup=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>값이 변경될 때</td>\n<td>onchange</td>\n<td><code class=\"language-text\">&lt;select></code><br/> <code class=\"language-text\">&lt;input type=\"text, password\"></code></td>\n<td><code class=\"language-text\">&lt;select onchange=\"함수명(값,,,)\"></code>: 다른 옵션이 선택되었을 때 함수가 호출<br> <code class=\"language-text\">&lt;input type=\"text\" onchange=\"함수명(값,,,)\"></code>: 커서가 들어갔을 때의 값과 커서가 나갔을 때의 값이 다르다면 호출</td>\n</tr>\n<tr>\n<td>커서가 <br/>빠져나갔을 때</td>\n<td>onblur</td>\n<td>커서를 가지는 모든 태그</td>\n<td><code class=\"language-text\">&lt;input type=\"text\" onblur=\"함수명(값,,,)\"></code></td>\n</tr>\n<tr>\n<td>더블클릭</td>\n<td>ondblclick</td>\n<td>모든 클릭</td>\n<td><code class=\"language-text\">&lt;input type=\"button\" ondblclick=\"함수명(값,,,)\"></code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"이차원-배열\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4\" aria-label=\"이차원 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이차원 배열</h3>\n<ul>\n<li>\n<p>일차원 배열 방안에 일차원 배열이 정의</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//작성법)</span>\n<span class=\"token comment\">//1. 일차원 배열 생성</span>\n\t<span class=\"token keyword\">var</span> arr2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. 일차원 배열 방에 일차원 배열 생성</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3. 값 할당</span>\n\t배열명<span class=\"token punctuation\">[</span>바깥배열 인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>안쪽배열인덱스<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\tarr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"내장함수\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98\" aria-label=\"내장함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내장함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//수학함수</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>실수<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//반올림</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>실수<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//올림</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>실수<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//내림</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>값<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//문자열,실수 -> 정수</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//난수 0.000000...1~ 0.999999999 중 하나</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//절댓값 음수 -> 양수</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//문자열 함수</span>\n문자열변수<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//대문자로</span>\n문자열변수<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//소문자로</span>\n문자열<span class=\"token punctuation\">.</span>length<span class=\"token comment\">//길이 함수가 아니므로 ()를 붙이지 않는다.</span>\n문자열<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>찾을 문자열<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//문자열의 인덱스</span>\n문자열<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>인덱스<span class=\"token punctuation\">)</span><span class=\"token comment\">//특정 인덱스의 문자</span>\n자를 문자열<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>시작인덱스<span class=\"token punctuation\">,</span> 보고싶은 문자 끝인덱스<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//문자열 자르기</span>\n문자열<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>찾을문자<span class=\"token punctuation\">,</span>바꿀문자<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//문자열 찾아서 바꾸기</span>\n문자열<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//앞뒤공백제거</span>\n문자열<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"붙일문자열\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//문자열 붙이기</span>\n자를문자열<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'기준'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//문자열 잘라서 배열에 넣기</span></code></pre></div>\n<h3 id=\"날짜정보얻기\" style=\"position:relative;\"><a href=\"#%EB%82%A0%EC%A7%9C%EC%A0%95%EB%B3%B4%EC%96%BB%EA%B8%B0\" aria-label=\"날짜정보얻기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>날짜정보얻기</h3>\n<ul>\n<li>객체를 생성 ( Date )</li>\n<li>접속자 컴퓨터의 날짜 정보가 얻어진다. ( 동일날짜 x )</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//1. 생성</span>\n<span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. 함수 호출</span>\n<span class=\"token comment\">//년:</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1900</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//월:</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//0월부터 나옴으로 +1을 해주어야한다.</span>\n<span class=\"token comment\">//일</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//시</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getHour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//분</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">getMinute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"html-form-control의-값-받기\" style=\"position:relative;\"><a href=\"#html-form-control%EC%9D%98-%EA%B0%92-%EB%B0%9B%EA%B8%B0\" aria-label=\"html form control의 값 받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control의 값 받기</h2>\n<p>HTML Form Control: 사용자가 입력한 값을 받기위한 HTML</p>\n<ul>\n<li>\n<p>id 로 받기 (form 태그가 없어도 된다.)</p>\n<ul>\n<li>id만 존재하는 경우에는 back-end로 값이 전달되지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">//1. Form Control에 id를 부여\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n//2. script에서 id에 해당하는 control얻기\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//2-1. id에 해당하는 Control얻기</span>\n  <span class=\"token keyword\">var</span> input <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//2-2. 얻어낸 HTML Form Control에서 값 얻기(value속성 사용)</span>\n  <span class=\"token keyword\">var</span> val <span class=\"token operator\">=</span> 변수명<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//사용자가 입력한 값</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;form></code>태그 사용</p>\n<ol>\n<li>form 태그에 name 설정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">&lt;form name = &quot;frm&quot;&gt;</code></pre></div>\n<ol start=\"2\">\n<li>control에 name 설정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"php+html\"><pre class=\"language-php+html\"><code class=\"language-php+html\">&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;\n.\n.\n&lt;/form&gt;</code></pre></div>\n<ol start=\"3\">\n<li>javascript에서 값을 얻는다.</li>\n</ol>\n<p> 3-1. form태그를 name 속성을 사용하여 얻는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>form이름<span class=\"token punctuation\">;</span></code></pre></div>\n<p> 3-2. 얻어진 form객체를 사용하여 Control에 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">obj<span class=\"token punctuation\">.</span>접근할 control명<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></code></pre></div>\n<p> 3-3. 값얻기</p>\n<ul>\n<li>이름 속성이 유일할 때 <code class=\"language-text\">폼 이름.control이름.value;</code></li>\n<li>\n<p>이름 속성이 중복될 때 ( 배열 ) <code class=\"language-text\">폼이름.control이름[인덱스].value;</code></p>\n<ul>\n<li>인덱스는 control이 정의된 순서</li>\n</ul>\n</li>\n<li>radio, checkbox 는 사용자가 확인한 값만 얻는다.</li>\n<li>폼이름.control명[인덱스].checked -> true/false</li>\n<li>select는 사용자가 선택한 값만 얻는다.</li>\n<li>\n<p>선택한 옵션의 인덱스 얻기</p>\n<ul>\n<li>폼이름.control명.selectedIndex</li>\n</ul>\n</li>\n<li>\n<p>옵션이 선택된 상태인지?</p>\n<ul>\n<li>폼이름.control명[인덱스].selected</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"div에-html을-설정\" style=\"position:relative;\"><a href=\"#div%EC%97%90-html%EC%9D%84-%EC%84%A4%EC%A0%95\" aria-label=\"div에 html을 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>div에 HTML을 설정</h4>\n<ul>\n<li>\n<p>동적으로 화면 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//1. div 얻기(div 속성)</span>\n<span class=\"token keyword\">var</span> divNode<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id명\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. HTML 생성</span>\n<span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span>\n<span class=\"token comment\">//3. 생성 HTML 을 div 객체 생성</span>\n  divNode<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token punctuation\">;</span>\n              <span class=\"token comment\">//HTML을 생성하며 설정</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"html-form-control에-값-설정\" style=\"position:relative;\"><a href=\"#html-form-control%EC%97%90-%EA%B0%92-%EC%84%A4%EC%A0%95\" aria-label=\"html form control에 값 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML Form Control에 값 설정</h4>\n<ul>\n<li>\n<p>이름 유일</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>이름 중복( 배열 )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>check 상태변경 ( radio, checkbox )</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">/</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>selected 상태변경(select)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">[</span>인덱스<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>selected <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">/</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h2>\n<ul>\n<li>\n<p>기명함수</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>무기명함수: 자동호출(이벤트 처리)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//문법)</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">변수명</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  코딩<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//호출</span>\n<span class=\"token function\">변수명</span><span class=\"token punctuation\">(</span>값<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"이벤트-처리\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC\" aria-label=\"이벤트 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 처리</h4>\n<ol>\n<li>\n<p>HTML Tag에 속성으로 처리</p>\n<ul>\n<li><code class=\"language-text\">&lt;태그명 onXXX=\"이벤트처리할함수명(...)\"></code></li>\n</ul>\n</li>\n<li>\n<p>무기명 함수를 이용하여 처리 ( 자동호출 )</p>\n<ul>\n<li>코드의 재사용성이 매우 떨어진다.</li>\n<li>이벤트를 발생시킬 tag를 찾아</li>\n</ul>\n<p>  <code class=\"language-text\">document.getElementById(\"id명\")</code></p>\n<ol start=\"2\">\n<li>이벤트 속성에</li>\n</ol>\n<p>  <code class=\"language-text\">.onxxx</code></p>\n<ol start=\"3\">\n<li>무기명 함수로 처리</li>\n</ol>\n<p>  <code class=\"language-text\">= function(){ 이벤트가 발생했을 때 처리할 코드 }</code></p>\n</li>\n<li>\n<p>이벤트에 등록하여 처리</p>\n<ol>\n<li>이벤트를 발생시킬 tag를 찾아</li>\n</ol>\n<p>  <code class=\"language-text\">document.getElementById(\"id명\")</code></p>\n<ol start=\"2\">\n<li>이벤트에 등록시킬 이벤트 종류와 처리함수를 등록시켜 처리</li>\n</ol>\n<p>  <code class=\"language-text\">.addEventListener(\"이벤트종류\",\"처리할 함수명\");</code></p>\n<ul>\n<li>함수는 이벤트가 발생하명 자동호출됨으로 ()를 쓰면 안된다.</li>\n<li>이벤트 종류는 on을 제외하고 작성 ex) onclick이면 click으로</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ol>\n<h2 id=\"팝업창\" style=\"position:relative;\"><a href=\"#%ED%8C%9D%EC%97%85%EC%B0%BD\" aria-label=\"팝업창 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팝업창</h2>\n<ul>\n<li>정보제공용으로 사용</li>\n<li>\n<p>비모달</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//window는 javascript 객체의 최상위 객체</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>\n<span class=\"token string\">\"팝업창에 넣을 HTML\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"창id\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"width:넓이,height:높이,top=x좌표,left=y좌표\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"window\" style=\"position:relative;\"><a href=\"#window\" aria-label=\"window permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window</h4>\n<ul>\n<li>javascript객체의 최상위 객체</li>\n<li>document</li>\n<li>HTML문서에 접근</li>\n<li>event</li>\n<li>event 발생(키코드값)</li>\n<li>location</li>\n<li>페이지 이동</li>\n<li>browser 가 제공하는 Storage를 사용( HTML5 )</li>\n<li>history</li>\n<li>브라우저에 로딩되었던 페이지들로 이동</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"값전달\" style=\"position:relative;\"><a href=\"#%EA%B0%92%EC%A0%84%EB%8B%AC\" aria-label=\"값전달 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값전달</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">opner<span class=\"token punctuation\">.</span>window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span>control이름<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span>부모창으로 전달할 값<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"이벤트키이벤트\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%ED%82%A4%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"이벤트키이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트(키이벤트)</h2>\n<ul>\n<li>\n<p>키코드 얻기</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>keyCode<span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>which<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"페이지-이동javascript\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99javascript\" aria-label=\"페이지 이동javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이지 이동(javascript)</h2>\n<ul>\n<li>\n<p>단순 페이지 이동</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token string\">\"이동페이지url\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//HTML  jsp</span></code></pre></div>\n</li>\n<li>\n<p>URL 치환(뒤로가기가 X)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이동한페이지url\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">&lt;form></code>태그의 전송 (submit()함수 사용)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span>폼이름<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">&lt;meta></code>: HTML의 정보설정하는 일</li>\n</ul>\n<p><code class=\"language-text\">&lt;meta charset=\"UTF-8\"></code> -> HTML page의 charset 설정</p>\n<p><code class=\"language-text\">&lt;meta name=\"description\" content=\"페이지설명\"/></code></p>\n<p><code class=\"language-text\">&lt;meta http-equiv=\"refresh\" content=\"대기할초;이동할url\"></code></p>\n</li>\n<li>\n<p>confirm Dialog</p>\n<ul>\n<li>사용자의 의향을 물어볼 때 사용</li>\n</ul>\n<p><code class=\"language-text\">confirm(\"메세지\")</code></p>\n</li>\n<li>\n<p>HTML</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>URL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>//다른 JSP, HTML 페이지와 연결\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>JSPURL<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>//\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>태그안에 HTML Form Control에 입력된 값들이 JSP로 전달<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>java.sql 패키지에서 디비연동하고 인터페이스 : 4.class</li>\n<li>로딩된 드라이버 Connection : 2</li>\n<li>쿼리문 생성하고 실행하는 : 3. createstatement</li>\n<li>객체는 쿼리문을 알수 없으면 쿼리문을 실행하는 단계 : statement sql</li>\n<li>오토커밋을 해제하기 위해 개발자가 호출해야하는 커넥션 : setAutoCommit(false)</li>\n<li>java에서 여러개의 쿼리문으로 트랜잭션이 구성되어 있다면 method안에서 connection들의 연결을 끊는다.</li>\n<li>바인드 변수를 이용하여 값만 추후에 입력 : 2</li>\n<li>DBMS의 프로시저 : 1</li>\n<li>조회 쿼리문을 수행한 테이블에 정보를 얻는 작업 1.ResultSet</li>\n<li>다음중 DB 벤더사가 제공하는 것 : Driver</li>\n<li>이해관계자들에게 서비스 품질에 대한 정보를 제공하기 위한 : 소프트웨어 테스트</li>\n<li>테스팅 개념으로 올바른것 : 1 - 일반적으로 작업이 끝난 후 처음에 요구된것과 현재 상태의 차이</li>\n<li>자바에서 가장 많이 사용하는 : 4. JUnit</li>\n<li>단위 테스트의 단위 : method</li>\n<li>equal : 예상값과 실제값이 같은</li>\n<li>2 : Test</li>\n<li>Junit에서 제공하는 ~ : 4번.</li>\n<li>제이유닛에서 제공하는 테으스 메소드로 ㅂ로 수 없는것 : 1. 5번 반복하여 테스트 진행</li>\n<li>제이유닛에서 지원하는 테스트메소드로 볼수 없는것 : 4. assertInnull</li>\n<li>enableOnjre</li>\n</ul>\n<h3 id=\"history\" style=\"position:relative;\"><a href=\"#history\" aria-label=\"history permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>history</h3>\n<ul>\n<li>web browser가 가동된 후 방문했던 site의 기록을 사용하는 객체</li>\n<li>서버에서 변경된 내용을 확인할 수 없다.</li>\n<li>\n<p>웹 브라우저가 종료되면 history는 사라진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span>hisotry<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>나 <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>사용</code></pre></div>\n</li>\n<li>생성된 history의 수는 history.length로 얻을 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//사용법></span>\n<span class=\"token comment\">//뒤로</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//앞으로</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span>이동할 단계<span class=\"token punctuation\">)</span><span class=\"token comment\">//1,2,3, -1 (back과 같음)</span></code></pre></div>\n<h2 id=\"storage\" style=\"position:relative;\"><a href=\"#storage\" aria-label=\"storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storage</h2>\n<ul>\n<li>HTML5에서 제공되는 browser 내 저장공간</li>\n<li>Cookie 의 대체기술</li>\n<li>\n<p>Cookie</p>\n<ul>\n<li>접속자정보를 접속자의 HDD에 File로 생성하여 저장하는 기술</li>\n<li>문자열만 저장가능</li>\n<li>키와 값의 쌍으로 이루어진 데이터</li>\n<li>최대 1Mbyte정보</li>\n</ul>\n</li>\n<li>\n<p>localStorage, sesssionStorage 두가지 제공</p>\n<ul>\n<li>localStorage</li>\n<li>웹서버와 접속이 끊어져도 정보를 사용할 수 있는 storage</li>\n<li>sessionStorage</li>\n<li>웹 서버에 연결되어있을 때에만 정보를 저장하고 사용할 수 있는 Storage</li>\n<li>session: 컴퓨터끼리의 연결</li>\n</ul>\n</li>\n<li>window에서 제공</li>\n<li>문자열, 다른 데이터형을 저장할 수 있다</li>\n<li>5Mbyte 정보를 저장할 수 있다.</li>\n<li>접속자의 정보를 저장할 떄 사용( ID저장, 팝업창 제어 )</li>\n<li>\n<p>웹 비연결성(웹서버는 접속자에게 정보를 제공항 후 연결을 끊는다)</p>\n<ol>\n<li>서버의 자원소모가 적다(H/W가 고사양X)</li>\n<li>서버는 접속자의 상태를 알 수 없다.(연결유지 기술: session, cookie)</li>\n<li>실시간으로 변경된 정보를 모든 접속자에게 반영할 수 없다.( client pull로 해결 )-> 실시간 정보반영이 어렵다</li>\n</ol>\n<h4 id=\"session\" style=\"position:relative;\"><a href=\"#session\" aria-label=\"session permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>session</h4>\n<p> 접속자의 정보를 웹서버의 memory에 저장(해킹안전)</p>\n<h4 id=\"cookie\" style=\"position:relative;\"><a href=\"#cookie\" aria-label=\"cookie permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cookie</h4>\n<p> 접속자의 정보를 접속자의 HDD에 저장 ( 해킹위험 )</p>\n</li>\n<li>\n<p>사용법)</p>\n<ol>\n<li>값 설정</li>\n<li>\n<p>서버에 연결되어 있을 때에만 사용</p>\n<p>window.sessionStorage</p>\n</li>\n<li>\n<p>서버와 연결을 끊었을 떄에도 유지</p>\n<p>window.localStorage</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ss <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>sessionStorage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ls <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">;</span>\n\nls<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">,</span> 값<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nss<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">,</span> 값<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>값 얻기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ls<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>값 삭제</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ls<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"키\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"4\">\n<li>모든 Stotage</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ls<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"json\" style=\"position:relative;\"><a href=\"#json\" aria-label=\"json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON</h1>\n<p>javascript object notation</p>\n<ul>\n<li>이름과 값의 쌍으로 데이터를 사용할 때</li>\n<li>간단한 형태로 값을 저장하고, 전달하는 객체</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//문법</span>\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">이름</span><span class=\"token operator\">:</span> 값<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">이름</span><span class=\"token operator\">:</span> 값 <span class=\"token punctuation\">}</span><span class=\"token comment\">//값: 문자열 숫자 boolean function</span>\n\n<span class=\"token comment\">//사용법</span>\n<span class=\"token comment\">//1. 값을 가진 JSON을 변수에 담는다</span>\n<span class=\"token comment\">//문자열</span>\n<span class=\"token keyword\">var</span> data<span class=\"token operator\">=</span><span class=\"token string\">\"{이름:값,이름 값,,,}\"</span>\n<span class=\"token comment\">//2. JSON Object으로 생성</span>\n<span class=\"token keyword\">var</span> json_obj<span class=\"token operator\">=</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span><span class=\"token operator\">+</span>data<span class=\"token operator\">+</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3. 값얻기</span>\njson객체명<span class=\"token punctuation\">.</span>이름\n<span class=\"token comment\">//4. 값 삭제</span>\n<span class=\"token keyword\">delete</span> json객체명<span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"json-array\" style=\"position:relative;\"><a href=\"#json-array\" aria-label=\"json array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON Array</h2>\n<ul>\n<li>\n<p>JSON으로 배열을 만드는 것</p>\n<ol>\n<li>JSON Object을 배열에 넣는다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token string\">\"[{이름: 값,,,},{이름: 값,,,},,]\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>JSON Array 객체를 만든다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> jsonArr <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> d <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>반복</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> jsonArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  jsonArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"복합json\" style=\"position:relative;\"><a href=\"#%EB%B3%B5%ED%95%A9json\" aria-label=\"복합json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>복합JSON</h2>\n<ul>\n<li>\n<p>JSON Object 안에 JSON Array를 가진 경우</p>\n<p>“{이름:값,이름:[{이름:값,,,},{이름:값,,,},,,,],,,,,}”\n정보--- 데이터-----------------------------</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span>\n<span class=\"token string\">\"{writer:'송유빈',pubData:'2020-07-06',data:[{img:'daram.jpg',desc:'설명'},,,]}\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> JSONObj <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> data <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> jsonArr <span class=\"token operator\">=</span> jsonObj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\njsonArr<span class=\"token punctuation\">.</span>writer <span class=\"token operator\">=</span> <span class=\"token string\">\"송유빈\"</span><span class=\"token punctuation\">;</span>\njsonArr<span class=\"token punctuation\">.</span>pubData <span class=\"token operator\">=</span> <span class=\"token string\">\"2020-07-06\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> jsonArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\njsonArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">;</span>\njsonArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>desc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"재귀호출함수\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EA%B7%80%ED%98%B8%EC%B6%9C%ED%95%A8%EC%88%98\" aria-label=\"재귀호출함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재귀호출함수</h3>\n<ul>\n<li>\n<p>일정시간마다 함수를 호출하는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>호출할함수명<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"closure\" style=\"position:relative;\"><a href=\"#closure\" aria-label=\"closure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closure</h3>\n<ul>\n<li>접근권한 변경</li>\n<li>\n<p>함수안에 함수 정의</p>\n<ul>\n<li>세부업무를 묶어 하나의 업무를 구현할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//형식)</span>\n<span class=\"token comment\">//무기명함수형식: 처리해야할 일이 많은 경우</span>\n<span class=\"token comment\">//() 형식: 처리해야할 일이 적은 경우</span>\n\n<span class=\"token keyword\">var</span> 변수명 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> 변수명<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">//업무를 위한 세부업무</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//하나의 업무</span></code></pre></div>\n</li>\n<li>객체생성없이 사용할 수 있다. new없이 직접호출이 가능하다</li>\n<li>\n<p>내부함수는 함수 밖에서 호출할 수 없다.</p>\n<ul>\n<li>closure를 사용하면 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//작성법</span>\n\n<span class=\"token comment\">//무기명함수형식: 처리해야할 일이 많은 경우</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>외부에서 호출할 이름<span class=\"token operator\">:</span> 내부함수<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">외부호출이름</span><span class=\"token operator\">:</span> 내부함수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//호출</span>\n변수명<span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">;</span>\n변수명<span class=\"token punctuation\">.</span><span class=\"token function\">이름</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//() 형식: 처리해야할 일이 적은 경우</span>\n<span class=\"token keyword\">var</span> 변수명<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">이름</span><span class=\"token operator\">:</span>값<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">이름</span><span class=\"token operator\">:</span><span class=\"token function\">fucntion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//호출</span>\n변수명<span class=\"token punctuation\">.</span>이름<span class=\"token punctuation\">;</span>\n변수명<span class=\"token punctuation\">.</span><span class=\"token function\">이름</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"class-작성\" style=\"position:relative;\"><a href=\"#class-%EC%9E%91%EC%84%B1\" aria-label=\"class 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class 작성</h2>\n<ul>\n<li>업무를 구분하여 만들기 위해 사용</li>\n<li>참조형 데이터형: new 사용하여 객치를 생성한 후 사용</li>\n<li>사용자정의 자료형: 제공되는 데이터형을 묶어 사용하는 것</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//작성법</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">생성자</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> 변수명<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">함수명</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">매개변수<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//closure가 필요</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>변수명<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">변수명</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token comment\">//closure가 필요없음</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//사용</span>\n<span class=\"token comment\">//1. 생성</span>\n<span class=\"token keyword\">var</span> 객체명<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token function\">생성자</span><span class=\"token punctuation\">(</span>값<span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2. 변수호출</span>\n객체명<span class=\"token punctuation\">.</span>변수명<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3. 함수호출</span>\n객체명<span class=\"token punctuation\">.</span><span class=\"token function\">무기명함수저장변수명</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"상속\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D\" aria-label=\"상속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속</h2>\n<ul>\n<li>코드의 재사용성 향상</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">부모</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">자식</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>상속의 문법</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">자식</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">부모</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>자식클래스 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> 변수명 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">자식</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"정규식\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C%EC%8B%9D\" aria-label=\"정규식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규식</h2>\n<ul>\n<li>많은 문자열에서 원하는 문자열이 있는지 찾기 위한 식</li>\n<li>replace사용, match 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//순환 /[  범위  ]/g</span>\n<span class=\"token keyword\">var</span> test <span class=\"token operator\">=</span> <span class=\"token string\">\"AbaZt10~가나하Te!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[a-zA-Z0-9]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>범위(시작-끝)</p>\n<ul>\n<li>한글 ㄱ-힣</li>\n<li>영어 A-Z a-z</li>\n<li>숫자 0-9</li>\n<li>특수문자는 범위가 없다. 없애고 싶은 문자를 모두 입력해주어야함</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"e7d8a1e0-24a1-5fb5-97e7-6460bd6d825d","excerpt":"jQuery 2006년 John Resig가 발표한 Javascript Library jQuery.com 배포 적게쓰고 많은 일을 하도록 만들어진 library library 자주 사용될 기능을 미리 구현해놓은 것 animation, event, effect, Ajax…","html":"<h1 id=\"jquery\" style=\"position:relative;\"><a href=\"#jquery\" aria-label=\"jquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery</h1>\n<ul>\n<li>2006년 John Resig가 발표한 Javascript Library</li>\n<li>jQuery.com 배포</li>\n<li>적게쓰고 많은 일을 하도록 만들어진 library</li>\n<li>\n<p>library</p>\n<ul>\n<li>자주 사용될 기능을 미리 구현해놓은 것</li>\n<li>animation, event, effect, Ajax 등 기능 구현</li>\n</ul>\n</li>\n<li>모든 브라우저에 동작하도록 웹 표준을 준수하여 구현 -> cross browser</li>\n<li>plugin 지원</li>\n<li>jQueryObject 최상위객체 ( $ )</li>\n<li>간결한 문법을 지원</li>\n<li>\n<p>2가지 종류의 파일 배포 ( 확장자.js )</p>\n<ol>\n<li>compressed version( 서비스용 ):enter, whitespace, comment 을 없애버려 파일크기의 크기를 줄인 배포판( 파일명에 min이 붙어있다. )</li>\n<li>uncompressed version( 개발용 ):enter, whitespace, comment가 들어있는 배포판</li>\n</ol>\n</li>\n<li>\n<p>selector를 사용한다.</p>\n<ul>\n<li>selector: 태그를 찾아가기 위해 작성하는 문자열</li>\n<li>behavior selector / class selector / id selector / sub selector / name selector 지원</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">함수</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  작성하는 코드<span class=\"token punctuation\">;</span><span class=\"token comment\">//javascript 문법</span>\n\t\t\t\t<span class=\"token comment\">//jQuery 문법</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">//1.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>JS<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n//2.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h5 id=\"cdn-contents-delivery-network-httpscdnhostingkrcdnec9db4eb9e80-ebacb4ec9787ec9db8eab080ec9a94\" style=\"position:relative;\"><a href=\"#cdn-contents-delivery-network-httpscdnhostingkrcdnec9db4eb9e80-ebacb4ec9787ec9db8eab080ec9a94\" aria-label=\"cdn contents delivery network httpscdnhostingkrcdnec9db4eb9e80 ebacb4ec9787ec9db8eab080ec9a94 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CDN: contents delivery network, <a href=\"https://cdn.hosting.kr/cdn%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94/\">https://cdn.hosting.kr/cdn%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94/</a></h5>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"86b5077b-d42f-549b-983b-a55a9ea67670","excerpt":"이벤트 리스너 때문에 좀 한참 삽질을 했지만 결국 해결을 했다! 리스트 추가하기 페이지가 로딩되었을 때 실행되어 이벤트를 감지해야하므로 모든 코드는 안에 작성해야한다. 로 엔터가 눌린 이벤트를 판별할 수 있다는걸 몰랐다. 전에 할 때는 1…","html":"<p>이벤트 리스너 때문에 좀 한참 삽질을 했지만 결국 해결을 했다!</p>\n<h4 id=\"리스트-추가하기\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"리스트 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트 추가하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#inputToDo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keypress'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> todo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#inputToDo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// \"Enter\"가 눌릴 경우 리스트에 값을 추가</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'Enter'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ul<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span>\n      <span class=\"token string\">'&lt;li class=\"todo_content\">'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;input type=\"checkbox\" class=\"statement\">&lt;span class=\"displayed_todo\">'</span> <span class=\"token operator\">+</span>\n      todo <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;/span>'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x\" viewBox=\"0 0 16 16\">'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;/svg>&lt;/li>'</span>\n\n    <span class=\"token comment\">// 리스트에 등록되었으므로 input을 비워줌</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#inputToDo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token comment\">// console.log(todo)</span>\n\n    <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 이벤트 등록</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dels <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.bi'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dels<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> deleteitem<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// console.log(\"삭제 리스너 등록\")</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>페이지가 로딩되었을 때 실행되어 이벤트를 감지해야하므로 모든 코드는 <code class=\"language-text\">window.onload = function(){}</code>안에 작성해야한다.</li>\n<li><code class=\"language-text\">e.key == 'Enter'</code>로 엔터가 눌린 이벤트를 판별할 수 있다는걸 몰랐다. 전에 할 때는 13인가 번호로 했던거같은데 문자열로도 판별이 가능하다는게 신기했다.</li>\n<li>\n<p><code class=\"language-text\">innerHTML</code>을 사용해서 미리 만들어 둔 <code class=\"language-text\">&lt;li></code>에 입력된 값을 포함하여 넣어준다.</p>\n<blockquote>\n<p>appendchild로도 할 수 있는거같아서 해보려고 했는데 미리 만들어둔 class랑 삭제 문자 부분을 어떻게 해결해야할지 몰라서 못 했다. 문자열로 넣어보려고도 해봤는데 node 타입이 아니라서 에러가 뜸</p>\n</blockquote>\n</li>\n<li>이벤트 리스너는 리스트가 업데이트될 때 마다 새로 등록해줘야한다. 새로 추가된 원소에 이벤트 리스너를 추가하는 식으로만 넣어도 되지 않을까 생각했는데 안됐음</li>\n<li>이벤트등록은 페이지가 로딩될 때도 실행되어야 하므로 함수로 작성하였다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#inputToDo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keypress'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> todo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#inputToDo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// \"Enter\"가 눌릴 경우 리스트에 값을 추가</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'Enter'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 2020-12-14 template를 사용해서 리스트 추가</span>\n    <span class=\"token keyword\">let</span> template <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#template-list-item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML\n    result_template <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{content}'</span><span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">)</span>\n\n    ul<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> result_template\n    <span class=\"token comment\">// 리스트에 등록되었으므로 input을 비워줌</span>\n    inputToDo<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n    <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 이벤트 등록</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>템플릿 처음 써봤다! 있으면 좋겠다고 생각한 적은 있었는데 되는지는 몰랐었는데 되다니… 좀더 공부해봐야겠다</li>\n</ul>\n<h4 id=\"리스트-삭제\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%82%AD%EC%A0%9C\" aria-label=\"리스트 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트 삭제</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.list'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">deleteitem</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> li <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode\n  ul<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dels <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.bi'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dels<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> deleteitem<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>마찬가지로 <code class=\"language-text\">window.load = function() {}</code>안에 작성됨</li>\n<li><code class=\"language-text\">querySelectorAll()</code>로는 이벤트 등록이 되지 않으므로 반복문을 사용하여 각각의 원소를 꺼내 등록해주어야 한다.</li>\n<li>\n<p>삭제는 <code class=\"language-text\">removeChild()</code>를 사용했다. <code class=\"language-text\">this.parentNode</code>를 사용해 클릭된 노드의 부모노드를 가져왔고 그걸 <code class=\"language-text\">removeChild()</code>에 넣어서 삭제를 완료했다.</p>\n<blockquote>\n<p>처음엔 outerHTML이라는 속성이 있길래 그걸 사용하려고 했었음</p>\n<p>innerHTML을 사용하면 자신 안의 내용을 가져왔는데, outerHTML은 자신을 포함한 내용을 가져옴</p>\n</blockquote>\n</li>\n</ul>","frontmatter":{"title":"[javascript]리스트에서 항목 삭제, 추가","date":null,"lang":null}}},{"node":{"id":"41387d9b-ae57-50a7-bd8d-bb0a0921174d","excerpt":"새로고침했을 때 저장된 리스트, 체크여부를 유지하기 위해 를 사용하여 구현해보았다. 는 로 사용할 수 있고 window를 생략하고 로 사용하는 것도 가능하다. 리스트 유지하기 template 수정 : checkbox…","html":"<p>새로고침했을 때 저장된 리스트, 체크여부를 유지하기 위해 <code class=\"language-text\">localStrage</code>를 사용하여 구현해보았다.</p>\n<p><code class=\"language-text\">localStrage</code>는 <code class=\"language-text\">window.localStrage</code>로 사용할 수 있고 window를 생략하고 <code class=\"language-text\">localStrage</code>로 사용하는 것도 가능하다.</p>\n<h4 id=\"리스트-유지하기\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%9C%A0%EC%A7%80%ED%95%98%EA%B8%B0\" aria-label=\"리스트 유지하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트 유지하기</h4>\n<p><strong>template 수정</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- js 템플릿 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>template-list-item<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/template<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token operator\">&lt;</span>li <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"todo_content\"</span><span class=\"token operator\">></span>\n         <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"checkbox\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"statement\"</span> <span class=\"token punctuation\">{</span>checked<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"displayed_todo {class}\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n         <span class=\"token operator\">&lt;</span>svg xmlns<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/2000/svg\"</span> width<span class=\"token operator\">=</span><span class=\"token string\">\"16\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"16\"</span> fill<span class=\"token operator\">=</span><span class=\"token string\">\"currentColor\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"bi bi-x\"</span> viewBox<span class=\"token operator\">=</span><span class=\"token string\">\"0 0 16 16\"</span><span class=\"token operator\">></span>\n         \t<span class=\"token operator\">&lt;</span>path fill<span class=\"token operator\">-</span>rule<span class=\"token operator\">=</span><span class=\"token string\">\"evenodd\"</span> d<span class=\"token operator\">=</span><span class=\"token string\">\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>svg<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">{checked}</code>: checkbox에 체크를 등록해주기 위해</li>\n<li><code class=\"language-text\">{class}</code>: 취소선의 여부</li>\n<li><code class=\"language-text\">{content}</code>: 투두리스트의 내용</li>\n</ul>\n<p><strong>저장하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> savedList <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toDoList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 엔터로 등록했을 때 화면에 보이는 동시에 localStrage에 저장해줌</span>\nsavedList<span class=\"token punctuation\">[</span>todo<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span> <span class=\"token comment\">// 새로운 리스트를 dictionary에 담아줌</span>\nwindow<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toDoList'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>savedList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 업데이트된 dictionary를 localStrage에 새로 저장해줌</span></code></pre></div>\n<p>저장되어있는 리스트를 <code class=\"language-text\">localStrage.getItem()</code>을 사용해서 불러온다. 저장할 때 <code class=\"language-text\">localStrage.setItem()</code>만 해주었을 때는 문자열 형식으로만 저장된다. 때문에 저장할 때는 <code class=\"language-text\">JSON.stringify()</code> 메서드를 사용해서 자바스크립트 객체를 JSON 문자열로 변환하여 저장하고, 불러올 때는 <code class=\"language-text\">JSON.parse()</code> 메서드를 사용하여 자바스크립트 객체로 바꾸어서 불러왔다.</p>\n<p><strong>불러오기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> template <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#template-list-item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> savedList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    displayed_temp <span class=\"token operator\">=</span> template\n      <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{content}'</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{checked}'</span><span class=\"token punctuation\">,</span> savedList<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedList<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'checked'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      displayed_temp <span class=\"token operator\">=</span> displayed_temp<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{class}'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strike'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    ul<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> displayed_temp\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>리스트의 dictionary가 비어있지 않다면, template에 dictionary를 대입해서 화면에 보여줌</p>\n<p><strong>삭제</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">deleteitem</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> li <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode\n  ul<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 2020-12-16 localStrage에서 삭제</span>\n  <span class=\"token keyword\">delete</span> savedList<span class=\"token punctuation\">[</span>li<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toDoList'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>savedList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">&lt;li></code>에서 삭제할 때 <code class=\"language-text\">localStrage</code>에서 같이 삭제 해줌</p>\n<p><strong>진행상태(완료, 진행중)</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">check_todo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> displayed_todo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    displayed_todo<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'strike'</span><span class=\"token punctuation\">)</span>\n    displayed_todo<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.statement'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'checked'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    savedList<span class=\"token punctuation\">[</span>displayed_todo<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'checked'</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    displayed_todo<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'strike'</span><span class=\"token punctuation\">)</span>\n    savedList<span class=\"token punctuation\">[</span>displayed_todo<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span>\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toDoList'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>savedList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>체크박스가 눌렸을 때 체크 여부를 확인하고 취소선을 그어주는 함수이다. 새로고침 후에 저장된 리스트를 불러올 때 완료 여부를 확인하여 새로 불러온 리스트에도 취소선을 그어줄 수 있도록 만들었다. key를 리스트내용으로 하고 완료 여부를 value로 가지게 했고 완료되었을 경우 “checked”를, 진행중일 경우 \"\"를 value로 넣어주었다.</p>\n<p>마찬가지로 dictionary가 업데이트되었기 때문에 localStrage에 새로 값을 저장해주었다.</p>","frontmatter":{"title":"[javascript]새로고침했을 때 리스트 상태 유지하기","date":null,"lang":null}}},{"node":{"id":"b714ec51-f68d-562a-983e-00fd9d2ef69c","excerpt":"…","html":"<p>클래스를 추가하는 방법으로 취소선을 그어주려고 했다. 완료된 항목에 스타일을 적용하는 것까지는 쉽게 구현하였는데, 체크박스의 상태를 유지시켜줄 요소가 없어서인지 새로운 항목을 추가하면 체크박스가 체크되지 않은 상태로 돌아가버렸다. 그걸 해결하는데 좀 머리가 아팠다…\n그 전에 학원을 다니면서 jQuery로는 구현해 본 적이 있는데, 한번 쉽게 했던 것을 바닐라 자바스크립트로 구현해보려고 하니까 머리 속이 꼬여서 더 어려웠던 것 같다.</p>\n<h4 id=\"완료된-리스트\" style=\"position:relative;\"><a href=\"#%EC%99%84%EB%A3%8C%EB%90%9C-%EB%A6%AC%EC%8A%A4%ED%8A%B8\" aria-label=\"완료된 리스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완료된 리스트</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 클릭시 항목이 삭제될 수 있도록 리스너 등록</span>\n  dels <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.bi'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dels<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> deleteitem<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 상태를 표시하는 체크박스 리스너 등록</span>\n  checkbox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.statement'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> checkbox<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    checkbox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> check_todo<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">check_todo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> displayed_todo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    displayed_todo<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'strike'</span><span class=\"token punctuation\">)</span>\n    displayed_todo<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.statement'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'checked'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    displayed_todo<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'strike'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>displayed_todo<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">window.onload = function(){}</code>안에 작성하였다.</li>\n<li>\n<p>이벤트리스너를 등록해주어야 하기 때문에 삭제 이벤트 리스너를 등록하기 위해 생성했던 함수에 체크박스 이벤트 리스너도 동시에 등록될 수 있도록 작성했다.</p>\n<blockquote>\n<p>지금 생각해보니까 for 문을 동시에 같이 돌려도 될 거 같다.</p>\n</blockquote>\n</li>\n<li>\n<p>체크박스가 체크될 경우 미리 생성해놓은 <code class=\"language-text\">\"strike\"</code> 클래스를 추가할 수 있게 <code class=\"language-text\">classList</code>의 add를 사용해서 class를 추가하였고, 동시에 노드에 <code class=\"language-text\">checkbox</code>가 체크되었음을 작성해주기 위해 <code class=\"language-text\">setAttribute(\"checked\", true)</code>를 사용해서 노드에 checked 속성이 추가될 수 있도록 했다.</p>\n<p>-> 별도로 노드에 checked의 여부를 작성해주지 않으면 새로운 목록을 추가하면서 리스트가 업데이트될 때 체크박스가 풀림</p>\n</li>\n<li>체크박스의 체크를 해제하면 <code class=\"language-text\">classList.remove()</code>를 사용해 <code class=\"language-text\">\"strike\"</code>를 삭제해준다.</li>\n<li><code class=\"language-text\">classList.toggle()</code>-> 클래스에 있으면 추가하지 않고 없으면 추가함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.strike</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> line-through<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">text-decoration</code>속성에 <code class=\"language-text\">line-through</code>를 적용해서 텍스트에 취소선이 적용되도록 만들었다.</li>\n</ul>","frontmatter":{"title":"[javascript]class 추가, 삭제, 등록","date":null,"lang":null}}},{"node":{"id":"88637497-38ee-5399-b474-2fb70b31dada","excerpt":"…","html":"<p>전체보기, 완료된 항목, 진행중인 항목에 해당하는 투두를 각각 따로 모아서 볼 수 있는 기능을 만들었다.\n어제 사용했던 <code class=\"language-text\">classList</code>의 <code class=\"language-text\">add</code>, <code class=\"language-text\">toggle</code>, <code class=\"language-text\">remove</code>를 사용해서 만들었다.</p>\n<h4 id=\"상태별로-볼-수-있는-버튼-만들기\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%83%9C%EB%B3%84%EB%A1%9C-%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%B2%84%ED%8A%BC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"상태별로 볼 수 있는 버튼 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상태별로 볼 수 있는 버튼 만들기</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>state_btn_group<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>state_btn all<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">disabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>disabled<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    전체보기\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>state_btn ongoing<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>진행중<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>state_btn done<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>완료<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> state_btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.state_btn'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> state_btn<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  state_btn<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> selected<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>버튼에 이벤트 리스너 등록</p>\n<p>리스트와는 다르게 버튼은 한번 등록하고 변경되지 않으므로 리스트의 이벤트리스너를 등록하는 함수의 밖에 작성해서 한번만 등록되도록 만들었다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">selected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> state_btn_group <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".state_btn\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> todo_contents <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".todo_content\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> state <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\">// 현재 선택된 버튼은 다시 클릭할 수 없음</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> state_btn_group<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">==</span> state_btn_group<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            state_btn_group<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token string\">\"disabled\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            state_btn_group<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 리스트 display 여부</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> todo_contents<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        statement <span class=\"token operator\">=</span> todo_contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".statement\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">==</span> <span class=\"token string\">\"ongoing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>statement<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                todo_contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                todo_contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">==</span> <span class=\"token string\">\"done\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>statement<span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                todo_contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n                todo_contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">==</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            todo_contents<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">disabled</code>속성을 사용해서 선택된 버튼을 다시 클릭할 수 없게 구현</li>\n<li><code class=\"language-text\">classList.toggle()</code>와 <code class=\"language-text\">classList.remove()</code>를 사용해서 현재 화면에 보여야할 리스트만 보이게 해줌</li>\n</ul>","frontmatter":{"title":"[javascript]class 추가, 삭제 - 2","date":null,"lang":null}}},{"node":{"id":"16f0cdfc-313f-59a7-b924-b20162c2124e","excerpt":"Closure는 두 개의 함수로 만들어진 환경으로 이루어진 특별한 객체의 한 종류이다. 여기서 환경이라 함은 클로저가 생성될 때 그 범위에 있던 여러 지역 변수들이 포함된 를 말한다. 이 클로저를 통해서 자바스크립트에는 없는 비공개(private…","html":"<p>Closure는 두 개의 함수로 만들어진 환경으로 이루어진 특별한 객체의 한 종류이다. 여기서 환경이라 함은 클로저가 생성될 때 그 범위에 있던 여러 지역 변수들이 포함된 <code class=\"language-text\">context</code>를 말한다. 이 클로저를 통해서 자바스크립트에는 없는 비공개(private) 속성 메소드, 공개 속성/메소드를 구현할 수 있는 방안을 마련할 수 있다.</p>\n<h3 id=\"클로저-생성하기\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"클로저 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저 생성하기</h3>\n<p>다음은 클로저가 생성되는 조건이다.</p>\n<ol>\n<li>내부 함수가 익명 함수로 되어 외부 함수의 반환값으로 사용된다.</li>\n<li>내부 함수는 외부 함수의 실행 횐경(execution enviroment)에서 실행된다.</li>\n<li>내부 함수에서 사용되는 변수 x는 외부 함수의 변수 스코프에 있다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'closure'</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// closure</span></code></pre></div>\n<p><code class=\"language-text\">outer</code> 함수를 실행시키는 <code class=\"language-text\">context</code>에는 <code class=\"language-text\">name</code>이라는 변수가 존재하지 않는다는 것을 확인할 수 있다. 비슷한 맥락에서 코드를 조금 변경해보면</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Warning'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'closure'</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> callFunc <span class=\"token operator\">=</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">callFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// closure</span></code></pre></div>\n<p>위 코드에서 <code class=\"language-text\">callFunc</code>를 클로저라고 한다. <code class=\"language-text\">callFunc</code> 호출에 의해 <code class=\"language-text\">name</code>이라는 값이 console에 찍히는데, 찍히는 값은 <code class=\"language-text\">Warning</code>이 아니라 <code class=\"language-text\">closure</code>라는 값이다. 즉, <code class=\"language-text\">outer</code> 함수의 context에 속해 있는 변수를 참조하는 것이다. 여기서 <code class=\"language-text\">outer</code> 함수의 지역변수로 존재하는 <code class=\"language-text\">name</code> 변수를 <code class=\"language-text\">free variable(자유변수)</code>라고 한다.</p>\n<p>이처럼 외부 변수 호출이 종료되더라도 외부 함수의 지역 변수 및 변수 스코프 객체의 체인 관계를 유지할 수 있는 구조를 클로저라고 한다. 보다 정확히는 외부 함수에 의해 반환되는 내부 함수를 가리키는 말이다.</p>\n<hr>\n<p>출처</p>\n<p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/JavaScript#closure\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/JavaScript#closure</a></p>","frontmatter":{"title":"[javascript]Closure","date":null,"lang":null}}},{"node":{"id":"ce3df5e6-08ef-50c9-a20d-f724834b9a34","excerpt":"ES6 문법이 표준화가 되면서 크게 신경쓰지 않아도 되는 부분이 되었지만 JavaScript 라는 언어의 특성을 가장 잘 보여주는 특성 중에 하나이다. 정의 의 사전적 정의는 이다. 이 뜻에서 알 수 있듯이 자바스크립트에서 끌어올려지는 것이 있는데, 바로 변수이다.  keyword…","html":"<p><em>ES6 문법이 표준화가 되면서 크게 신경쓰지 않아도 되는 부분이 되었지만 JavaScript 라는 언어의 특성을 가장 잘 보여주는 특성 중에 하나이다.</em></p>\n<p><strong>정의</strong></p>\n<p><code class=\"language-text\">hoist</code>의 사전적 정의는 <code class=\"language-text\">끌어올리기</code>이다. 이 뜻에서 알 수 있듯이 자바스크립트에서 끌어올려지는 것이 있는데, 바로 변수이다. <code class=\"language-text\">var</code> keyword 로 선언된 모든 변수 선언은 hoist된다. 그 범위에 따라 <code class=\"language-text\">선언</code>과 <code class=\"language-text\">할당</code>으로 분리되는 것을 의미한다. 즉, 변수가 함수 내에서 정의되었을 경우, 선언이 함수의 최상위로, 함수 바깥에서 정의되었을 경우, 전역 컨텍스트의 최상위로 변경이 된다.</p>\n<p>우선, 선언(Declaration)과 할당(Assignment)을 이해해야 한다. 끌어올려지는 것은 선언이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 100</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>다른 언어의 경우엔, 변수 x 를 선언하지 않고 출력하려 한다면 오류가 발생할 것이다. 하지만 자바스크립트에서는 <code class=\"language-text\">undefined</code>라고 하고 넘어간다. <code class=\"language-text\">var x = 100;</code> 이 구문에서 <code class=\"language-text\">var x;</code>를 호이스트했기 때문이다. 즉, 작동 순서에 맞게 코드를 재구성하면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n  x <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>선언문은 항시 자바스크립트 엔진 구동 시 가장 최우선으로 해석하므로 호이스팅 되고, <strong>할당 구문은 런타임 과정에서 이루어지기 때문에</strong> 호이스팅 되지 않는다.</p>\n<p>함수가 자신이 위치한 코드에 상관없이 함수 선언문 형태로 정의한 함수의 유효범위는 전체 코드의 맨 처음부터 시작한다. 함수 선언이 함수 실행 부분보다. 뒤에 있더라도 자바스크립트 엔진이 함수 선언을 끌어올리는 것을 의미한다. 함수 호이스팅은 함수를 끌어올리지만 변수의 값은 끌어올리지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// hello</span></code></pre></div>\n<p>foo 함수에 대한 선언을 호이스팅하여 global 객체에 등록시키기 때문에 <code class=\"language-text\">hello</code>가 제대로 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Uncaught TypeError: foo is not a function</span></code></pre></div>\n<p>이 두번째 예제의 함수 표현은 함수 리터럴을 할당하는 구조이기 때문에 호이스팅 되지 않으며 그렇기 때문에 런타임 환경에서 <code class=\"language-text\">Type Error</code>를 발생시킨다.</p>\n<ul>\n<li>함수 표현식에서 함수를 만들 때, 변수를 할당해서 만들기 때문에 호이스팅이 일어나지 않는다. 호이스팅은 선언된 변수와 함수를 끌어올리는 것인데, 함수표현식은 선언이 아니라 할당이 이루어진다. 때문에 컴파일 과정에서 scope 목록에 들어가지 못하게 된다.</li>\n</ul>\n<hr>\n<p>참고</p>\n<p><a href=\"https://velog.io/@04_miffy/%ED%95%A8%EC%88%98-1\">https://velog.io/@04_miffy/%ED%95%A8%EC%88%98-1</a></p>\n<p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/JavaScript#hoisting\">https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/JavaScript#hoisting</a></p>","frontmatter":{"title":"[javascript]Hoisting","date":null,"lang":null}}},{"node":{"id":"291165e6-5abc-5537-a21c-0fc363b7168a","excerpt":"JIT 컴파일(just-in-time compilation) 또는 동적 번역(dynamic translation…","html":"<p>JIT 컴파일(just-in-time compilation) 또는 동적 번역(dynamic translation)은 프로그램을 실제 실행하는 시점에 기계어로 번역하는 컴파일 기법이다.</p>\n<p>전통적으로 컴퓨터 프로그램을 만드는 방법은 인터프리트 방식과 정적 컴파일 방식으로 나눌 수 있다.</p>\n<ul>\n<li>인터프리트 방식은 실행 중 프로그래밍 언어를 읽어가면서 해당 기능에 대응하는 코드를 실행하는 기계어 코드를 실행한다.</li>\n<li>정적 컴파일 방식은 실행하기 전에 프로그램 코드를 기계어로 번역한다.</li>\n</ul>\n<p>JIT 컴파일러는 두 가지의 방식을 혼합한 방식으로 생각할 수 있다. 실행 시점에서 인터프리트 방식으로 기계어 코드를 생성하면서 그 코드를 캐싱하여, 같은 함수가 여러번 불릴 때 매번 기계어 코드를 생성하는 것을 방지한다.</p>\n<p>최근에는 JVM, .NET, V8 에서는 JIT 컴파일을 지원한다.</p>\n<p>자바 컴파일러가 자바 프로그램 코드를 바이트 코드로 변환한 다음, 실제 바이트코드를 실행하는 시점에서 자바 가상머신이 바이트코드를 JIT 컴파일을 통해 기계어로 번역하는 방식이다.</p>\n<p>JIT 코드는 일반적인 인터프리터 언어에 비해 훨씬 좋은 성능을 낸다. 심지어 경우에 따라 정적 컴파일러 언어보다 좋은 성능을 내곤하는데, 이는 실행 과정에 컴파일을 할 수 있기 때문에 가지는 장점이라고 할 수 있다.</p>","frontmatter":{"title":"[javascript]JIT 컴파일","date":null,"lang":null}}},{"node":{"id":"4a9a8b6e-b843-5a86-9788-ae6ed73d3466","excerpt":"…","html":"<p>함수를 다른 변수와 동일하게 다루는 언어를 일급함수를 가졌다고 표현합니다. 예를 들어, 일급 함수를 가진 언어에서는 함수를 다른 함수에 매개변수로 제공하거나, 함수가 함수를 반환할 수 있으며, 변수에도 할당할 수 있습니다.</p>\n<hr>\n<h3 id=\"변수에-함수-할당\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%97%90-%ED%95%A8%EC%88%98-%ED%95%A0%EB%8B%B9\" aria-label=\"변수에 함수 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수에 함수 할당</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foobar'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 변수를 사용해 호출</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>익명 함수를 변수에 할당 한 다음, 그 변수를 사용하여 끝에 괄호 <code class=\"language-text\">()</code>를 추가하여 함수를 호출했습니다.</li>\n<li>함수가 이름을 가지고 있더라도 할당한 변수 이름을 사용해 함수를 호출할 수 있습니다. 이름을 지정하면 코드를 디버깅할 때 유용합니다. 하지만 호출하는 방식에는 영향을 미치지 않습니다.</li>\n</ul>\n<hr>\n<h3 id=\"함수를-인자로-전달\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EB%A5%BC-%EC%9D%B8%EC%9E%90%EB%A1%9C-%EC%A0%84%EB%8B%AC\" aria-label=\"함수를 인자로 전달 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수를 인자로 전달</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello '</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">helloMessage<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">helloMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span>sayHello<span class=\"token punctuation\">,</span> <span class=\"token string\">'JavaScript!'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">sayHello()</code> 함수를 <code class=\"language-text\">greeting()</code> 함수의 인자로 전달했습니다. 이것이 함수를 어떻게 변수처럼 다루는지 보여주는 예시입니다.</li>\n<li>여기서 다른 함수에 인자로 전달된 함수를 <strong>콜백함수</strong> 라고 합니다. 즉, <code class=\"language-text\">sayHello</code>는 콜백함수입니다.</li>\n</ul>\n<hr>\n<h3 id=\"함수-반환\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EB%B0%98%ED%99%98\" aria-label=\"함수 반환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 반환</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>함수가 함수를 반환하는 예제입니다. JavaScript에서는 함수를 변수처럼 취급하기 때문에 함수를 반환할 수 있습니다.</li>\n<li>함수를 반환하는 함수를 <strong>고차함수</strong>라고 부릅니다.</li>\n<li>다시 예제로 돌아가서, <code class=\"language-text\">sayHello</code> 함수를 호출했을 때 반환하는 익명함수를 호출하려면 두 가지 방법이 있습니다.</li>\n<li>\n<p>변수 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sayHello</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> myFunc <span class=\"token operator\">=</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Hello!\"</span></code></pre></div>\n<ul>\n<li>만약 <code class=\"language-text\">sayHello</code> 함수를 직접 호출하면, 반환된 함수를 호출하지 않고 함수 자체를 반환합니다. 그러므로 반환된 함수를 다른 변수에 저장하여 사용해야 합니다.</li>\n</ul>\n</li>\n<li>\n<p>이중 괄호 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>이중괄호 <code class=\"language-text\">()()</code>을 사용해 반환함 함수를 호출할 수 있습니다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[javascript]일급 함수","date":null,"lang":null}}},{"node":{"id":"4878155f-5152-5edf-9cf5-3b5175060b21","excerpt":"…","html":"<p>위키피디아에 따르면 다음과 같이 정의되어 있다.</p>\n<blockquote>\n<p>프로토타입 기반 언어는 클래스 기반 언어에서 상속을 사용하는 것과는 다르게, 객체를 원형(프로토타입)으로 하는 복제 과정을 통해 객체의 동작 방식을 재사용 할 수 있게 한다.</p>\n</blockquote>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15846032/1de7ec4a-2cb4-11e6-9cb2-32ecd69bc2a9.png\"></p>\n<p>프로토타입 기반 언어는 원형 객체를 복제하여 새로운 객체를 생성하는 언어를 말한다.</p>\n<p>하지만 자바스크립트는 약간 다른 방식으로 동작하는데, 복제가 아닌 프로토타입 링크를 통해 원형을 참조한다.</p>\n<h3 id=\"자바스크립트-객체의-프로토타입-링크\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4%EC%9D%98-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EB%A7%81%ED%81%AC\" aria-label=\"자바스크립트 객체의 프로토타입 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 객체의 프로토타입 링크</h3>\n<blockquote>\n<p>자바스크립트에서 단순 원시 타입(simple primitive)인 문자열, 숫자, 불리언, null, undefined를 제외한 모든 타입은 객체다.</p>\n</blockquote>\n<p>자바스크립트에서는 배열도 객체고 함수도 객체이다.</p>\n<p><img src=\"https://miro.medium.com/max/1400/1*PZe_YnLftVZwT1dNs1Iu0A.png\"></p>\n<p>자바스크립트에서 객체는 원형 객체로부터 생성되며, 생성된 객체는 원형에 대한 프로토타입 링크(<code class=\"language-text\">__proto__</code>)를 가지게 된다.</p>\n<blockquote>\n<p><code class=\"language-text\">__proto__</code>는 원형에 대한 참조 정보를 갖고 있는 객체의 내부 속성으로, ES6부터는 표준으로 제정되었다.</p>\n</blockquote>\n<p>생성된 객체는 <code class=\"language-text\">prototype</code>이라는 속성을 통해 Prototype Object에 접근할 수 있다. Prototype Object는 일반적인 객체와 같으며 기본적인 속성으로 <code class=\"language-text\">constructor</code>와<code class=\"language-text\">__proto__</code>를 가지고 있다.</p>\n<ul>\n<li><code class=\"language-text\">constructor</code>는 Prototype Object와 같이 생성되었던 함수를 가리키고 있다.</li>\n<li><code class=\"language-text\">__proto__</code>는 Prototype Link이다.</li>\n</ul>\n<p>원형 또한 객체이기 때문에 원형은 또 다른 원형을 참조하게 되고, 다음 그림과 같은 연속된 프로토타입 링크를 통해 자바스크립트 객체의 최종 원형인 <code class=\"language-text\">Object.prototype</code>까지 연결된다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841811/f14b233e-2c8e-11e6-988d-6ea081b4c984.png\"></p>\n<blockquote>\n<p>Object.prototype 객체에는 toString, hasOwnProperty 함수 등과 같이 자바스크립트 객체에서 흔히 사용하던 속성들이 정의되어 있고, 그로 인해 모든 객체에서 해당 속성들을 사용할 수 있다.</p>\n</blockquote>\n<p>그림과 같이 객체 간에 형성되어있는 일련의 링크를 <strong>프로토타입 체인</strong>이라고 부른다.</p>\n<p><strong>프로토타입 체인</strong></p>\n<p>우선 foo라는 객체에 다음과 같이 속성을 정의한다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841819/ff4e643c-2c8e-11e6-9e3d-ea0df8075206.png\"></p>\n<p><code class=\"language-text\">foo.a</code>는 1을, <code class=\"language-text\">foo.b</code>는 2를 반환한다. 그렇다면 <code class=\"language-text\">foo</code> 객체에 정의되지 않은 <code class=\"language-text\">foo.c</code>를 호출하게 되면 어떤 값을 반환할까? undefined를 반환할까?</p>\n<p><code class=\"language-text\">foo</code> 객체의 프로토타입 체인을 보기 전까지 알 수 없다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841859/401afff2-2c8f-11e6-81e7-63cc13fc6977.png\"></p>\n<p>이것이 <code class=\"language-text\">foo</code> 객체의 프로토타입 체인이다. 이 체인에서 <code class=\"language-text\">foo.c</code>는 무엇을 반환할까?</p>\n<p><code class=\"language-text\">foo</code> 객체의 속성에 접근하게 되면 프로토타입 체인은 호출한 <code class=\"language-text\">foo</code> 객체의 속성부터 <code class=\"language-text\">Object.prototype</code>까지 프로토타입 링크를 따라 차례차례 탐색하기 시작한다. 위 그림에서는 ‘원형객체2’에 <code class=\"language-text\">c</code>가 정의되어 있기 때문에 <code class=\"language-text\">foo.c</code>는 <code class=\"language-text\">undefined</code>가 아닌 7을 반환한다.</p>\n<p>만약, 체인 상의 어떤 객체에도 존재하지 않는 <code class=\"language-text\">foo.d</code>에 접근하게 된다면 프로토타입 체인의 최종 원형인 <code class=\"language-text\">Object.prototype</code>까지 탐색한 후 값이 없음을 확인하고 <code class=\"language-text\">undefined</code>를 반환한다.</p>\n<p>자바스크립트에서는 객체 속성에 접근하게 되면 해당 객체의 속성들만 탐색한 후 결과를 반환하는 것이 아니라, 최종 원형인 <code class=\"language-text\">Object.prototype</code>까지 탐색한 후 결과를 반환한다는 것을 기억하자</p>\n<h3 id=\"code-classlanguage-textobjectcreatecode-함수로-자바스크립트의-프로토타입-체인-구현하기\" style=\"position:relative;\"><a href=\"#code-classlanguage-textobjectcreatecode-%ED%95%A8%EC%88%98%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"code classlanguage textobjectcreatecode 함수로 자바스크립트의 프로토타입 체인 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Object.create</code> 함수로 자바스크립트의 프로토타입 체인 구현하기</h3>\n<p>ES5 이전에는 프로토타입 체인을 구현하려면 무조건 생성자 함수와 <code class=\"language-text\">new</code> 연산자를 사용해야 했다.</p>\n<blockquote>\n<p>new 연산자 사용은 ES5 이전의 유일한 객체 생성 방법이며 리터럴(literal) 방식도 내부적으로는 new 연산자를 사용한다.</p>\n</blockquote>\n<p>그러나 클래스 기반 언어를 따라 한 <code class=\"language-text\">new</code> 연산자는 프로토타입 체인을 복잡하게 만들어, 사용자로 하여금 프로토타입 체인에 대한 구현을 어렵게 했다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15843258/a6c97614-2c9b-11e6-8771-15de4f7ed58b.png\"></p>\n<p>다행스럽게도 ES5부터는 <code class=\"language-text\">Object.create</code>라는 프로토타입 언어의 특징을 잘 살려 객체를 생성할 수 있는 새로운 방법을 제공한다.</p>\n<blockquote>\n<p>Object.create 함수는 ES5부터 지원하는 함수이며, 인자로 전달된 객체를 원형으로 하는 새로운 객체를 생성하는 기능을 한다.</p>\n</blockquote>\n<p>ES5를 지원하지 않는 브라우저에서 <code class=\"language-text\">Object.create</code>를 사용하려면 MDN에서 제공하는 폴리필을 추가하면 된다.</p>\n<p><strong>출처</strong></p>\n<p><a href=\"https://ui.toast.com/weekly-pick/ko_20160603\">https://ui.toast.com/weekly-pick/ko_20160603</a></p>","frontmatter":{"title":"[javascript]프로토타입 기반 언어","date":null,"lang":null}}},{"node":{"id":"1883166c-daf1-5053-9fcd-674524d91c90","excerpt":"Node.js 크롬 V8 JavaScript 엔진으로 빌드된 JS 런타임기 Chrome의 V8 엔진을 이용하여 브라우저에서 JavaScript를 해석하듯이 서버에서 JavaScript를 동작할 수 있도록 하는 환경(플랫폼) 말 그래도 환경이기 때문에 NodeJS…","html":"<h3 id=\"nodejs\" style=\"position:relative;\"><a href=\"#nodejs\" aria-label=\"nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js</h3>\n<ul>\n<li>크롬 V8 JavaScript 엔진으로 빌드된 JS 런타임기</li>\n<li>Chrome의 V8 엔진을 이용하여 브라우저에서 JavaScript를 해석하듯이 서버에서 JavaScript를 동작할 수 있도록 하는 환경(플랫폼)</li>\n<li>말 그래도 환경이기 때문에 NodeJS만으로는 할 수 없다.</li>\n<li>\n<p>Node.js 라이브러리 내의 API는 모두 비동기(Non-Blocking)</p>\n<ul>\n<li>API를 실행하고 완료되기까지 기다리지 않고 바로 다음 API를 실행합니다. 예전에 실행한 API가 값을 반환하면 이벤트 루프가 이를 확인하고 값을 받아옵니다.</li>\n</ul>\n</li>\n<li>단일 쓰레드 모델을 사용하고, 이벤트 메커니즘을 통해 서버가 멈추지 않고 반응할 수 있어 확장성을 키워줍니다.</li>\n<li>Chrome의 V8 JavaScript 엔진을 사용하여 빠른 코드 실행을 제공하며, 버퍼링이 없습니다.</li>\n<li>위와 같은 특징을 가지고 있어 데이터를 실시간으로 다루는 애플리케이션이나 싱글페이지 애플리케이션(SPA), 입출력이 잦은 애플리케이션을 개발할 때 뛰어난 효율성을 발휘합니다.</li>\n<li>단, 싱글 쓰레드 모델이기 때문에 하나의 작업 자체가 시간이 많이 걸리면 전체 시스템의 성능이 아주 급격하게 나빠지므로 CPU 사용률이 높은 애플리케이션에서는 Node.js 사용을 권장하지 않습니다.</li>\n</ul>\n<p>출처:</p>","frontmatter":{"title":"[javascript]Node.js란?","date":null,"lang":null}}},{"node":{"id":"7acc8529-61ee-532f-801d-f707fcf62f85","excerpt":"…","html":"<p>두 개의 작업을 <u>하나의 쓰레드로 처리하는 경우</u>와 <u>두 개의 쓰레드로 처리하는 경우</u>를 가정해보자.\n하나의 쓰레드로 두 작업을 처리하는 경우 한 작업을 마친 후에 다른 작업을 시작하지만, 두 개의 쓰레드로 작업하는 경우에는 짧은 시간동안 두 개의 쓰레드를 번갈아 가면서 작업을 수행해서 동시에 두 작업이 처리되는 것과 같이 느끼게 한다.\n하지만 오히러 두 개의 쓰레드로 작업하는 시간이 싱글쓰레드로 작업하는 시간보다 더 걸릴 수도 있는데, 그 이유는 쓰레드 간의 작업전환에 시간이 걸리기 때문이다. 그래서 단순히 CPU만을 사용하는 계산작업이라면 오히려 멀티쓰레드보다 싱글쓰레드로 프로그래밍하는 것이 더 효율적이다.</p>\n<h3 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h3>\n<ul>\n<li>싱글스레드: 하나의 프로세스 내에서 하나의 스레드가 작업을 수행하는 것</li>\n<li>멀티스레드: 하나의 프로세스 내에서 둘 이상의 스레드가 동시에 작업을 수행하는 것</li>\n<li>멀티스레드는 짧은 시간 동안 여러 개의 스레드가 번갈아 가면서 작업을 수행하기 때문에 동시에 여러 작업을 수행하는 것처럼 보인다.</li>\n<li>쓰레드 간의 작업전환에 걸리는 시간 때문에, 오히려 멀티스레드의 작업시간이 더 오래걸리는 경우도 있다. 단순히 CPU만을 사용하는 계산 작업이라면 싱글쓰레드로 프로그래밍하는 것이 더 효율적이다.</li>\n</ul>","frontmatter":{"title":"싱글스레드와 멀티스레드","date":null,"lang":null}}},{"node":{"id":"330916fe-9a65-5491-a6f4-eb821bb71568","excerpt":"React면접질문 JSX는 JS XML(ECMAScript로 XML 유사 구문 확장)의 구문 표기법입니다. JSX는 JS XML의 약자입니다. HTML과 같은 문법과 함께 JS를 표현할 수 있습니다. 예를 들면 아래의 h1 태그 안에 text는 render 함수에 의해 JS…","html":"<p><a href=\"https://appear.github.io/2018/10/20/REACT/react-translate-01/\">React면접질문</a></p>\n<p>JSX는 JS XML(ECMAScript로 XML 유사 구문 확장)의 구문 표기법입니다. JSX는 JS XML의 약자입니다.</p>\n<p>HTML과 같은 문법과 함께 JS를 표현할 수 있습니다.</p>\n<p>예를 들면 아래의 h1 태그 안에 text는 render 함수에 의해 JS 함수로 반환됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> Welcome to React world!!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"JSX란 무엇인가요?","date":null,"lang":null}}},{"node":{"id":"1cf731eb-932c-5aff-a48f-14b320178419","excerpt":"서버사이드렌더링 / React 면접질문 / 단방향데이터흐름 / React 사용 후기 및 개념 정리 RealDOM을 조작하는데 많은 비용이 들어간다는 점을 고려하여 리액트는 RealDOM 대신 VirtualDOM…","html":"<p><a href=\"https://joshua1988.github.io/vue-camp/nuxt/ssr.html\">서버사이드렌더링</a> / <a href=\"https://appear.github.io/2018/10/20/REACT/react-translate-01/\">React 면접질문</a> / <a href=\"https://gocoder.tistory.com/2158\">단방향데이터흐름</a> / <a href=\"https://theuphill.tistory.com/15\">React 사용 후기 및 개념 정리</a></p>\n<ul>\n<li>RealDOM을 조작하는데 많은 비용이 들어간다는 점을 고려하여 리액트는 RealDOM 대신 VirtualDOM을 사용합니다.</li>\n<li>서버 사이트 렌더링을 지원합니다.</li>\n<li><a href=\"https://www.notion.so/React-66af4464361747028cdc19d803537c33\">단방향 데이터 흐름</a> 또는 단방향 바인딩을 따릅니다.</li>\n<li>UI 구성 요소를 재상요할 수 있도록 개발할 수 있습니다.</li>\n</ul>\n<h3 id=\"서버사이드렌더링\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EC%82%AC%EC%9D%B4%EB%93%9C%EB%A0%8C%EB%8D%94%EB%A7%81\" aria-label=\"서버사이드렌더링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버사이드렌더링</h3>\n<p>서버에서 페이지를 그려 클라이언트(브라우저)로 보낸 후 화면에 표시하는 기법</p>\n<p>뷰 싱글 페이지 애플리케이션은 서버 사이드 렌더링의 반대인 클라이언트 사이드 렌더링 방식이다.</p>\n<h3 id=\"클라이언트-사이드-렌더링과-서버-사이드-렌더링의-차이\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81%EA%B3%BC-%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"클라이언트 사이드 렌더링과 서버 사이드 렌더링의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라이언트 사이드 렌더링과 서버 사이드 렌더링의 차이</h3>\n<p>화면에 보일 페이지의 내용을 어디서 그리느냐의 차이이다. 클라이언트 사이드 렌더링은 페이지의 내용을 브라우저에서 그리고 서버 사이드 렌더링은 서버에서 페이지의 내용을 다 그려서 브라우저로 던져준다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/127669389-2b6e8529-4e58-4f61-b288-8221fd21b690.png\" alt=\"image\"></p>\n<h3 id=\"서버-사이드-렌더링을-쓰는-이유\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81%EC%9D%84-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"서버 사이드 렌더링을 쓰는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 사이드 렌더링을 쓰는 이유</h3>\n<p>서버 사이드 렌더링의 목적은 크게 “검색 엔진 최적화”와 “빠른 페이지 렌더링”이다.</p>\n<p><strong>검색 엔진 최적화 :</strong> 구글, 네이버와 같은 검색 사이트에서 검색했을 때 결과가 사용자에게 많이 노출될 수 있도록 최적화하는 기법, 특히. SNS에서 링크를 공유했을 때 해당 웹 사이트의 정보를 이미지와 설명으로 표시해주는 OG(Open Graph) Tag를 페이지 별로 적용하기 위해서는 서버 사이드 렌더링이 효율적이다.<img src=\"https://user-images.githubusercontent.com/53068706/127669539-b4f5c6a7-46a8-407e-bd0f-feb47d30b380.png\" alt=\"image\"></p>\n<ul>\n<li>빈 HTML 페이지를 받아 브라우저에서 그리는 클라이언트 사이드 렌더링과 다르게 서버에서 미리 그려서 브라우저로 보내주기 때문에 페이지를 그리는 시간을 단축할 수 있다. 사용자 입장에서는 화면에 유의미한 정보가 표시되는 시간이 빨라지는 것!</li>\n</ul>\n<h3 id=\"서버-사이드-렌더링의-단점\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"서버 사이드 렌더링의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 사이드 렌더링의 단점</h3>\n<ul>\n<li>Node.js 웹 애플리케이션 실행 방법을 알아야하고 서버 쪽 환경 구성과 함께 클라이언트, 서버 빌드에 대한 이해가 필요</li>\n<li>\n<p>Node.js 환경에서 실행되기 때문에 브라우저 관련 API를 다룰 때 주의해야 한다.</p>\n<ul>\n<li>뷰 싱글 페이지 애플리케이션의 라이프 사이클 훅과는 다른 환경(브라우저가 아닌 Node.js)에서 동작하기 때문에 <code class=\"language-text\">BeforeCreate</code>, <code class=\"language-text\">created</code>에서 <code class=\"language-text\">window</code>나 <code class=\"language-text\">document</code>같은 브라우저 객체에 접근할 수 없습니다.</li>\n<li>반대로 서버 사이드 렌더링의 경우 컴포넌트가 최초로 생성되는 시점이 브라우저 위가 아니라 Node.js 환경이기 때문에 <code class=\"language-text\">BeforeCreate</code>, <code class=\"language-text\">created</code>에서 브라우저 객체를 접근할 수 없다. 대신 <code class=\"language-text\">BeforeCreate</code>, <code class=\"language-text\">mounted</code>에서 <code class=\"language-text\">window</code>나 <code class=\"language-text\">document</code>에 접근할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"단방향-데이터-흐름\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%9D%90%EB%A6%84\" aria-label=\"단방향 데이터 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단방향 데이터 흐름</h3>\n<ol>\n<li>부모로부터 자식으로만 데이터가 전달이 가능합니다. 하지만 이러한 방식은 코드의 양을 줄이거나 단순화 하려는 목적은 아닙니다. 유지보수를 좀 더 편리하게 만들 수 있도록 해주는 역할을 합니다.</li>\n<li>단방향은 관리가 쉬울뿐 아니라 VDOM과 궁합이 잘맞습니다. 뷰를 통째로 바꾸어주는 역할을 하기 때문에 단방향 데이터 방식은 DOM을 갱신할 때 큰 장점이 있습니다. 이러한 흐름은 이해하기 쉽고 관리하기에 좋은 장점이 있습니다.</li>\n</ol>\n<p>단방향과 양방향의 차이는 HTML에서 변경된 내용이 데이터 영향을 미치는가이다.</p>\n<ul>\n<li>양방향 데이터 바인딩의 대표인 AngularJS는 엘리먼트에서 데이터를 바인딩 하면 JS코드로 데이터를 변경할 수도 있고 엘리먼트의 값을 수정해서 데이터를 변경할 수 있다.</li>\n<li>하지만 React 같은 단방향 데이터 바인딩은 JS → HTML로 데이터 바인딩만 가능하다.</li>\n<li>즉, HTML에 바인딩한 데이터를 JS에서 수정할 경우 화면에는 반영이 되지만 화면에서 직접 해당 엘리먼트의 값을 바꿨을 때 JS의 데이터가 수정되도록 바인딩하는 방법은 제공되지 않는다.</li>\n<li>물론 양방향 바인딩과는 조금 다른 방법으로 화면의 데이터 수정을 JS 상 데이터로 가져올 수 있다.</li>\n</ul>\n<p>언뜻 보기에는 단방향이 불편해보일 수 있지만 그만큼 단방향 데이터가 가지는 장점은 모든 JS 코드가 데이터에 집중되며 일관된 데이터 관리 로직을 갖는다는 점이다.</p>","frontmatter":{"title":"React의 특징","date":null,"lang":null}}},{"node":{"id":"21623e7d-684f-58f9-859f-4583692f382c","excerpt":"수 (Number) 문자열 (String) 부울 (Boolean) 객체 (Object) 함수 (Function) 배열 (Array) 날짜 (Date) 정규식 (RegExp) 수학 (Math) 기호 (Symbol) - ES2015에 새롭게 추가 널 (Null…","html":"<ul>\n<li>수 (Number)</li>\n<li>문자열 (String)</li>\n<li>부울 (Boolean)</li>\n<li>\n<p>객체 (Object)</p>\n<ul>\n<li>함수 (Function)</li>\n<li>배열 (Array)</li>\n<li>날짜 (Date)</li>\n<li>정규식 (RegExp)</li>\n<li>수학 (Math)</li>\n</ul>\n</li>\n<li>기호 (Symbol) - ES2015에 새롭게 추가</li>\n<li>널 (Null)</li>\n<li>정의되지 않음 (Undefined)</li>\n</ul>\n<h2 id=\"수-number\" style=\"position:relative;\"><a href=\"#%EC%88%98-number\" aria-label=\"수 number permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수 (Number)</h2>\n<p>설계 명세서에 의하면 JS에서의 수는 “이중정밀도 64비트 형식 IEEE 754 값”으로 정의됩니다. 이것으로 인해 JavaScript에서는 정수와 같은 것이 존재하지 않으므로(BigInt 제외) 조심해야합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1.5</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<p>정확한 정수는 사실 암묵적으로 실수입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.30000000000000004</span></code></pre></div>\n<p>실제로 정수 값은 32 비트 정수로 처리되며 일부 구현은 32 비트 정수가 아닌 숫자에 유효한 명령어를 수행할 때까지 이러한 방식으로 저장합니다. 이는 비트 단위 작업에 중요할 수 있습니다.</p>\n<p>덧셈, 뺄셈, 계수(또는 나머지) 연산을 포함하는 표준 산술 연산자가 지원됩니다.</p>\n<h3 id=\"code-classlanguage-textparseintcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textparseintcode\" aria-label=\"code classlanguage textparseintcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">parseInt()</code></h3>\n<p>구형브라우저에서 “0”으로 시작하는 문자열은 8 진수로 가정되지만, 2013년 이후에는 그렇지 않습니다. 문자열 형식이 확실하지 않으면 이전 브라우저에서 놀라운 결과를 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>'<span class=\"token number\">010</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0x10'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 같은 결과는 <code class=\"language-text\">parseInt()</code> 함수가 0으로 시작되는 문자열을 8진수로 “0x”로 시작하는 문자열을 16진수로 취급하기 때문에 발생합니다.<br>\n현재 16진수 표기법은 그대로지만 8진수는 제거되었습니다.</p>\n<p>내장 함수 <code class=\"language-text\">parseFloat()</code>를 사용하여 부동 소수점 숫자를 파싱할 수 있습니다. <code class=\"language-text\">parseInt()</code>와 달리 <code class=\"language-text\">parseFloat()</code>은 항상 10진수를 사용합니다.</p>\n<p>단항 연산자 +를 사용하여 값을 숫자로 변환 할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">;</span><span class=\"token operator\">+</span><span class=\"token string\">'32'</span> <span class=\"token comment\">// 32</span>\n<span class=\"token punctuation\">;</span><span class=\"token operator\">+</span><span class=\"token string\">'010'</span> <span class=\"token comment\">// 10</span>\n<span class=\"token punctuation\">;</span><span class=\"token operator\">+</span><span class=\"token string\">'0x10'</span> <span class=\"token comment\">// 16</span></code></pre></div>\n<h3 id=\"code-classlanguage-textnancode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textnancode\" aria-label=\"code classlanguage textnancode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">NaN</code></h3>\n<p>문자열이 수가 아닌 경우 NaN(“Not A Number)로 불리는 특별한 값을 돌려줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// NaN</span></code></pre></div>\n<p><code class=\"language-text\">NaN</code>은 어떤 수학 연산의 입력값으로써 주어지면 그 결과 역시 <code class=\"language-text\">NaN</code>가 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">NaN</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token comment\">// NaN</span></code></pre></div>\n<p>내장 <code class=\"language-text\">isNaN()</code> 함수를 사용해서 <code class=\"language-text\">NaN</code> 인지 여부를 검사할 수 있습니다.</p>\n<h3 id=\"code-classlanguage-textinfinitycode-code-classlanguage-text-infinitycode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textinfinitycode-code-classlanguage-text-infinitycode\" aria-label=\"code classlanguage textinfinitycode code classlanguage text infinitycode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Infinity</code>, <code class=\"language-text\">-Infinity</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span> <span class=\"token comment\">// Infinity</span>\n<span class=\"token punctuation\">;</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span> <span class=\"token comment\">// -Infinity</span></code></pre></div>\n<p>내장함수 <code class=\"language-text\">isFinite()</code>를 사용해서 <code class=\"language-text\">Infinity</code>, <code class=\"language-text\">-Infinity</code> 및 NaN 값을 테스트 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">isFinite</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n<span class=\"token function\">isFinite</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n<span class=\"token function\">isFinite</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>| <code class=\"language-text\">parseInt()</code>와 <code class=\"language-text\">parseFloat()</code> 함수는 숫자가 아닌 문자가 나올 때까지 문자열을 파싱하고, 그 지점까지 파싱된 숫자를 반환합니다.<br>\n| <code class=\"language-text\">+</code> 연산자는 중간에 유효하지 않은 문자가 있으면 그대로 문자열을 <code class=\"language-text\">NaN</code>으로 그냥 반환해버립니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10.2abs'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//10</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10.2abs'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//10.2</span>\n<span class=\"token punctuation\">;</span><span class=\"token operator\">+</span><span class=\"token string\">'10.2abs'</span> <span class=\"token comment\">//NaN</span></code></pre></div>\n<h2 id=\"이외의-타입들\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%99%B8%EC%9D%98-%ED%83%80%EC%9E%85%EB%93%A4\" aria-label=\"이외의 타입들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이외의 타입들</h2>\n<h3 id=\"code-classlanguage-textnullcode-code-classlanguage-textundefinedcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textnullcode-code-classlanguage-textundefinedcode\" aria-label=\"code classlanguage textnullcode code classlanguage textundefinedcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">null</code>, <code class=\"language-text\">undefined</code></h3>\n<p>의도적으로 값이 없음을 가리키는 Object 타입의 객체인 <code class=\"language-text\">null</code>과 초기화되지 않은 값, 아직 어떤 값도 주어지지 않은(할당되지 않은) 변수임을 가리키는 “정의되지 않음” 타입의 객체인 <code class=\"language-text\">undefined</code>로 구분됩니다.</p>\n<p>JavaScript에서는 변수에 값을 주지 않고 선언하는 것이 가능한데, 이럴 경우, 변수의 타입은 <code class=\"language-text\">undefined</code>가 되는 것입니다.</p>\n<h3 id=\"code-classlanguage-textbooleancode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textbooleancode\" aria-label=\"code classlanguage textbooleancode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Boolean</code></h3>\n<p><code class=\"language-text\">true</code>와 <code class=\"language-text\">false</code>는 모두 키워드로 예약 되어있는 값입니다. 다음과 같은 규칙에 따라 어떤 임의의 값을 부울값으로 변환할 수 있습니다.</p>\n<ol>\n<li><code class=\"language-text\">false</code>, 0, 빈 문자열(<code class=\"language-text\">\"\"</code>), 수가 아님을 뜻하는 <code class=\"language-text\">NaN</code>, <code class=\"language-text\">null</code>, <code class=\"language-text\">undefined</code>은 모두 <code class=\"language-text\">false</code>가 됩니다.</li>\n<li>다른 모든 값은 <code class=\"language-text\">true</code>가 됩니다.</li>\n</ol>\n<p><code class=\"language-text\">Boolean()</code> 함수를 써서 명시적으로 이 작업을 수행할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\n<span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">234</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>하지만 이렇게 명시해주지 않아도 됩니다. JavaScript는 이러한 변환 작업을 <code class=\"language-text\">if</code>문과 같이 부울값이 필요한 경우롤 만나게되면 자동으로 사용자가 모르는 사이에 처리기 때문입니다.</p>\n<p>이러한 이유로 값이 부울 타입으로 변환되었을 때, <code class=\"language-text\">true</code>, <code class=\"language-text\">false</code>가 됨을 의미하는 값들을 각각 ‘참값’, ‘거짓값’이라고 표현합니다. 또는 각각 ‘참으로 취급되다’, ‘거짓으로 취급되다’하는 식으로 표현할 수도 있습니다.</p>\n<p>부울 연산자는 <code class=\"language-text\">&amp;&amp;</code>, <code class=\"language-text\">||</code>, <code class=\"language-text\">!</code>이 지원됩니다.</p>\n<p>출처: <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">https://developer.mozilla.org/ko/docs/Web/JavaScript/A<em>re-introduction</em>to_JavaScript</a></p>","frontmatter":{"title":"JavaScript 기본 타입","date":null,"lang":null}}},{"node":{"id":"850f5ffc-d7f0-5bb6-a801-caa0218cb1b7","excerpt":"개념적으로 컴포넌트는 JavaScript 함수와 유사합니다. “props”라고 하는 임의의 입력을 받은 후, 화면에 어떻게 표시되는지를 기술하는 React 엘리먼트를 반환합니다. 함수 컴포넌트 위 함수는 데이터를 가진 하나의 “props…","html":"<p>개념적으로 컴포넌트는 JavaScript 함수와 유사합니다. “props”라고 하는 임의의 입력을 받은 후, 화면에 어떻게 표시되는지를 기술하는 React 엘리먼트를 반환합니다.</p>\n<h3 id=\"함수-컴포넌트\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"함수 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 컴포넌트</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 함수는 데이터를 가진 하나의 “props”(속성을 나타내는 데이터) 객체 인자를 받은 후 React 앨리먼트를 반환하므로 유효한 React 컴포넌트 입니다.</p>\n<p>Arrow Function을 사용하여 컴포넌트를 정의할 수 있습니다.</p>\n<h3 id=\"클래스-컴포넌트\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"클래스 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 컴포넌트</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>render함수에서 React 엘리먼트를 리턴해준다. state를 사용하여 값을 관리할 수 있다.</p>\n<h3 id=\"컴포넌트-렌더랑\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A0%8C%EB%8D%94%EB%9E%91\" aria-label=\"컴포넌트 렌더랑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트 렌더랑</h3>\n<p>이전까지는 React 엘리먼트를 DOM 태그로 나타냈습니다. 또. React 엘리먼트는 사용자 정의 컴포넌트로도 나타낼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>React는 사용자 정의 컴포넌트로 작성한 엘리먼트를 발견하면 JSX 어트리뷰트와 자식을 해당 컴포넌트에 단일 객체로 전달합니다. 이 객체를 “props”라고 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Welcome</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Sara<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>“Hello, Sara”를 렌더링하는 예시입니다.</p>\n<ol>\n<li><code class=\"language-text\">&lt;Welcome name=\"Sara\" /></code> 엘리먼트로 <code class=\"language-text\">ReactDOM.render()</code>를 호출합니다.</li>\n<li>React는 <code class=\"language-text\">{name: 'Sara'}</code>를 props로 하여 <code class=\"language-text\">Welcom</code> 컴포넌트로 호출합니다.</li>\n<li><code class=\"language-text\">Welcom</code> 컴포넌트는 결과적으로 <code class=\"language-text\">&lt;h1>Hello, Sara&lt;/h1></code> 엘리먼트를 반환합니다.</li>\n<li>ReactDOM은 <code class=\"language-text\">&lt;h1>Hello, Sara&lt;/h1></code> 엘리먼트와 일치하도록 DOM을 효율적으로 업데이트 합니다.</li>\n</ol>\n<p>React는 소문자로 시작하는 컴포넌트를 DOM 태그로 처리합니다. 때문에 <a href=\"https://ko.reactjs.org/docs/jsx-in-depth.html#user-defined-components-must-be-capitalized\">컴포넌트의 이름은 항상 대문자로 시작해야합니다.</a>\n예를 들어, <code class=\"language-text\">&lt;div /></code>는 HTML div 태그로 나타내지만, <code class=\"language-text\">&lt;Welcome /></code>은 컴포넌트를 나타내며 범위 안에 <code class=\"language-text\">Welcom</code>이 있어야 합니다.</p>\n<hr>\n<h3 id=\"컴포넌트-추출\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%B6%94%EC%B6%9C\" aria-label=\"컴포넌트 추출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트 추출</h3>\n<p>컴포넌트를 여러 개의 작은 컴포넌트로 나누는 것을 두려워하지 마세요</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n          <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Avatar<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 컴포넌트를 <code class=\"language-text\">author</code>(객체), <code class=\"language-text\">text</code>(문자열), <code class=\"language-text\">date</code>(날짜)를 props로 받은 후 소셜 미디어 웹 사이트의 코멘트로 나타냅니다.</p>\n<p>이 컴포넌트는 구성요소들이 모두 중첩 구조로 이루어져 있어서 변경하기 어려울 수 있으며, 각 구성요소를 개별적으로 재사용하기도 힘듭니다.</p>\n<p>이것을 해결하기 위해 컴포넌트에서 몇 가지 컴포넌트를 추출해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Avatar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Avatar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>avatarUrl<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Avatar</code>는 자신이 <code class=\"language-text\">Comment</code> 내에서 렌더링 된다는 것을 알 필요가 없습니다. 따라서 props의 이름을 <code class=\"language-text\">author</code>에서 더욱 일반화된 <code class=\"language-text\">user</code>로 변경하였습니다.</p>\n<p>props의 이름은 사용될 context가 아닌 컴포넌트 자체의 관점에서 짓는 것을 권장합니다.</p>\n<p>이렇게 하면 <code class=\"language-text\">Comment</code>가 살짝 단순해집니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>다음은 <code class=\"language-text\">UserInfo</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">UserInfo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserInfo-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Comment</code>가 더욱 단순해집니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserInfo</span></span> <span class=\"token attr-name\">user</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Comment-date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>처음에는 컴포넌트를 추출하는 작업이 지루해 보일 수 있습니다. 하지만 재사용 가능한 컴포넌트를 만들어 놓는 것은 더 큰 앱에서 작업할 때 두각을 나타냅니다. UI 일부가 여러 번 사용되거나 (<code class=\"language-text\">Button</code>, <code class=\"language-text\">Panel</code>, <code class=\"language-text\">Avatar</code>), UI 일부가 자체적으로 복잡한 (<code class=\"language-text\">App</code>, <code class=\"language-text\">FeedStory</code>, <code class=\"language-text\">Comment</code>) 경우에는 별도의 컴포넌트로 만드는 게 좋습니다.</p>\n<hr>\n<h3 id=\"props는-읽기-전용\" style=\"position:relative;\"><a href=\"#props%EB%8A%94-%EC%9D%BD%EA%B8%B0-%EC%A0%84%EC%9A%A9\" aria-label=\"props는 읽기 전용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>props는 읽기 전용</h3>\n<p>함수 컴포넌트나 클래스 컴포넌트 모두 컴포넌트의 자체 props를 수정해서는 안 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이런 함수들은 순수 함수라고 호칭합니다. 입력값을 바꾸려 하지 않고 항상 동일한 입력값에 대해 동일한 결과를 반환하기 때문입니다.</p>\n<p>반면에 다음 함수는 자신의 입력값을 변경하기 때문에 순수 함수가 아닙니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">account<span class=\"token punctuation\">,</span> amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  account<span class=\"token punctuation\">.</span>total <span class=\"token operator\">-=</span> amount\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>React는 매우 유연하지만 한 가지의 업격한 규칙이 있습니다.</p>\n<p><strong>모든 React 컴포넌트는 자신의 props를 다룰 때 반드시 순수 함수처럼 동작해야 한다.</strong></p>\n<p>물론 애플리케이션 UI는 동적이며 시간에 따라 변합니다. React 컴포넌트는 state를 통해 위 규칙을 위반하지 않고 사용자 액션, 네트워크 응답 및 다른 요소에 대한 응답으로 시간에 따라 자신의 출력값을 변경할 수 있습니다.</p>\n<p>출처: <a href=\"https://ko.reactjs.org/docs/components-and-props.html\">Component와 Props</a></p>","frontmatter":{"title":"Component와 Props","date":null,"lang":null}}},{"node":{"id":"3d48188a-441b-57c1-9eb1-12523a76febb","excerpt":"위 방법은 렌더링된 출력값을 변경하기 위해 를 호출함 state를 추가하여 캡슐화하면 한 번만 코드를 작성하고 Clock이 스스로 업데이트하도록 만들 수 있음 를 확장하는 동일한 이름의 ES6 class…","html":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 방법은 렌더링된 출력값을 변경하기 위해 <code class=\"language-text\">ReactDOM.render()</code>를 호출함</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Clock</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>state를 추가하여 캡슐화하면 한 번만 코드를 작성하고 Clock이 스스로 업데이트하도록 만들 수 있음</p>\n<ol>\n<li><code class=\"language-text\">React.Component</code>를 확장하는 동일한 이름의 ES6 class를 생성</li>\n<li><code class=\"language-text\">render()</code>빈 메서드를 추가</li>\n<li>함수의 내용을 <code class=\"language-text\">render()</code>안으로 옮김</li>\n<li><code class=\"language-text\">render()</code> 내용 안에 있는 <code class=\"language-text\">props</code>를 <code class=\"language-text\">this.props</code>로 변경</li>\n<li>남아있는 빈 함수 선언을 삭제</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Clock</code>은 함수가 아닌 클래스로 정의됨</p>\n<p><code class=\"language-text\">render</code> 메서드는 업데이트가 발생할 때마다 호출되지만, 같은 DOM 노드로 <code class=\"language-text\">&lt;Clock /></code>을 렌더링하는 경우 <code class=\"language-text\">Clock</code> 클래스의 단일 인스턴스만 사용됩니다. 이것은 로컬 state와 생명주기 메서드와 같은 부가적인 기능을 사용할 수 있게 해줍니다.</p>\n<h3 id=\"클래스에-로컬-state-추가하기\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90-%EB%A1%9C%EC%BB%AC-state-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"클래스에 로컬 state 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스에 로컬 state 추가하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>클래스 컴포넌트는 항상 <code class=\"language-text\">props</code>로 기본 constructor를 호출해야 합니다.</li>\n</ul>\n<h3 id=\"생명주기-메서드를-클래스에-추가하기\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"생명주기 메서드를 클래스에 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생명주기 메서드를 클래스에 추가하기</h3>\n<p><code class=\"language-text\">Clock</code>이 처음 DOM에 렌더링 될 때마다 타이머를 설정하려고 합니다. 이것을 React에서 “마운팅”이라고 합니다.</p>\n<p>또한 Clock에 의해 생성된 DOM이 삭제될 때마다 타이머를 해제하려고 합니다.</p>\n<p>컴포넌트 클래스에서 특별한 메서드를 선언하여 컴포넌트가 마운트되거나 언마운트 될 때 일부 코드를 작동할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>componentDidMount()</strong></p>\n<p>컴포넌트 출력물이 DOM에 렌더링 된 후에 실행됩니다.</p>\n<p>*타이머를 설정하기에 좋은 장소임</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token number\">1000</span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">this.props</code> 가 React에 의해 스스로 설정되고 <code class=\"language-text\">this.state</code> 가 특수한 의미가 있지만, 타이머 ID와 같이 데이터 흐름에 포함되지 않는 어떤 항목을 보관할 필요가 있다면 자유롭게 클래스에 수동을 부가적인 필드를 추가해도 됩니다.</p>\n<p><strong>componenetWillUnmount()</strong></p>\n<p>*생명주기 메서드 안에 있는 타이머를 분해</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Clock 컴포넌트가 매초 작동하도록 하는 메서드 구현</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">setState()</code>를 상요하여 로컬 state를 업데이트</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">&lt;Clock /></code>가 <code class=\"language-text\">ReactDOM.render()</code>로 전달되었을 때 React는 <code class=\"language-text\">Clock</code> 컴포넌트의 constructor를 호출합니다. <code class=\"language-text\">Clock</code>이 현재 시각을 표시해야 하기 때문에 현재 시각이 포함된 객체로 <code class=\"language-text\">this.state</code>를 초기화합니다. 나중에 이 state를 업데이트할 것입니다.</li>\n<li>React는 <code class=\"language-text\">Clock</code> 컴포넌트의 <code class=\"language-text\">render()</code> 메서드를 호출합니다. 이를 통해 React는 화면에 표시되어야 할 내용을 알게 됩니다. 그 다음 React는 <code class=\"language-text\">Clock</code>의 렌더링 출력값을 일치시키기 위해 DOM을 업데이트합니다.</li>\n<li><code class=\"language-text\">Clock</code> 출력값이 DOM에 삽입되면, React는 <code class=\"language-text\">componentDidMount()</code> 생명주기 메서드를 호출합니다. 그 안에 <code class=\"language-text\">Clock</code> 컴포넌트는 메초 컴포넌트의 <code class=\"language-text\">tick()</code> 메서드를 호출하기 위한 타이머를 설정하도록 브라우저에 요청합니다.</li>\n<li>매초 브라우저가 <code class=\"language-text\">tick()</code> 메서드를 호출합니다. 그 안에서 <code class=\"language-text\">Clock</code> 컴포넌트는 <code class=\"language-text\">setState()</code>에 현재 시각을 포함하는 객체를 호출하면서 UI 업데이트를 진행합니다. <code class=\"language-text\">setState()</code> 호출 덕분에 React는 state 변경된 것을 인지하고 화면에 표시될 내용을 알아내기 위해 <code class=\"language-text\">render()</code> 메서드를 다시 호출합니다. 이 때 <code class=\"language-text\">render()</code> 메서드 안의 <code class=\"language-text\">this.state.date</code>가 달라지고 렌더링 출력값은 업데이트된 시각이 됩니다\nReact는 이에 따라 DOM을 업데이트합니다.</li>\n<li><code class=\"language-text\">Clock</code> 컴포넌트가 DOM으로부터 한 번이라도 삭제된 적이 있다면 React는 타이머를멈추기 위해 <code class=\"language-text\">componentWillUnmount()</code> 생명주기 메서드를 호출합니다.</li>\n</ol>\n<h3 id=\"state를-올바르게-사용하기\" style=\"position:relative;\"><a href=\"#state%EB%A5%BC-%EC%98%AC%EB%B0%94%EB%A5%B4%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"state를 올바르게 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State를 올바르게 사용하기</h3>\n<p><code class=\"language-text\">setState()</code>에 대해 알아야 할 세 가지</p>\n<ol>\n<li>\n<p>직접 State를 수정하지 마세요</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Wrong</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>comment <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span>\n\n<span class=\"token comment\">// Correct</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>State 업데이트는 비동기적일 수도 있습니다.</p>\n<p>React는 성능을 위해 여러 <code class=\"language-text\">setState()</code> 호출을 단일 업데이트로 한꺼번에 처리할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Wrong</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>increment<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Correct</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>increment<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Correct</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token literal-property property\">counter</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>increment<span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>State 업데이트는 변합됩니다.</p>\n<p>변수들을 독립적으로 업데이트 할 수 있다.</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"데이터는-아래로-흐릅니다\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%8A%94-%EC%95%84%EB%9E%98%EB%A1%9C-%ED%9D%90%EB%A6%85%EB%8B%88%EB%8B%A4\" aria-label=\"데이터는 아래로 흐릅니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터는 아래로 흐릅니다.</h3>\n<p>부모 컴포넌트나 자식 컴포넌트 모두 특정 컴포넌트가 어떤 상태인지 알 수 없고, 그들이 함수나 클래스로 정의되었는지에 대해 알아야 할 필요도 없습니다.</p>\n<p>때문에 state는 종종 로컬 또는 캡슐화라고 불립니다. state를 소유하고 설정한 컴포넌트 이외에는 어떤한 컴포넌트에서도 접근 할 수 없습니다.</p>\n<p>컴포넌트는 자신의 state를 자식 컴포넌트에 props로 전달할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormattedDate</span></span> <span class=\"token attr-name\">date</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p><code class=\"language-text\">FormattedDate</code> 컴포넌트는 <code class=\"language-text\">date</code>를 자신의 props로 받을 것이고 이것이 <code class=\"language-text\">Clock</code>의 어디서 왔는지 <code class=\"language-text\">FormattedDate</code>는 알지 못합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">FormattedDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이를 하향식(top-down) 또는 단방향식 데이터 흐름이라고 합니다.</p>\n<p>모든 state는 항상 특정한 컴포넌트가 소유하고 있으며 그 state로부터 파생딘 UI 또는 데이터는 오직 트리구조에서 자신의 아래에 잇는 컴포넌트에만 영향을 미칩니다.</p>\n<p>트리구조가 props들의 폭포라고 상상하면 각 컴포넌트의 state는 임의의 점에서 만나지만 동시에 아래로 흐르는 부가적인 물이라고 할 수 있습니다.</p>\n<p>모든 컴포넌트가 완전히 독립적이라는 것을 보여주기 위해 <code class=\"language-text\">App</code>에서 렌더링하는 세 개의 <code class=\"language-text\">&lt;Clock></code>을 만들었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Clock</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>각 <code class=\"language-text\">Clock</code>은 자신만의 타이머를 설정하고 독립적으로 업데이트를 합니다.</p>\n<p>React 앱에서 컴포넌트의 유, 무 상태에 대한 것은 시간이 지남에 따라 변경될 수 있는 구현 세부 사항으로 간주됩니다. 유 상태 컴포넌트 안에서 무 상태 컴포넌트를 사용할 수 있으며, 그 반대 경우도 마찬가지로 사용할 수 있습니다.</p>\n<p>출처 : <a href=\"https://ko.reactjs.org/docs/state-and-lifecycle.html\">State and Lifecycle</a></p>","frontmatter":{"title":"State와 Lifecycle","date":null,"lang":null}}},{"node":{"id":"7408e4a4-2524-5815-8f98-4d05df18258c","excerpt":"DOM 엘리먼트에서 이벤트를 처리하는 방식과 매우 유사하고, 문법에 몇 가지 차이가 있습니다. React의 이벤트는 소문자 대신 camelCase를 사용합니다. JSX를 사용하여 문자열이 아닌 함수로 이벤트 핸들러를 전달합니다. React…","html":"<p>DOM 엘리먼트에서 이벤트를 처리하는 방식과 매우 유사하고, 문법에 몇 가지 차이가 있습니다.</p>\n<ul>\n<li>React의 이벤트는 소문자 대신 camelCase를 사용합니다.</li>\n<li>JSX를 사용하여 문자열이 아닌 함수로 이벤트 핸들러를 전달합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>activateLasers<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Activate Lasers</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>\n<p>React에서는 <code class=\"language-text\">false</code>를 반환해도 기본 동작을 방지할 수 없습니다. 반드시 <code class=\"language-text\">preventDefault</code>를 명시적으로 호출해야 합니다.</p>\n<p>에를 들어 일반 HTML에서 폼을 제출할 때 가지고 있는 기본 동작을 방지하기 위해 다음과 같은 코드를 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onsubmit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked submit.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>하지만 React에서는 다음과 같이 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked submit.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Submit</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 <code class=\"language-text\">e</code>는 합성 이벤트입니다. React는 W3C 명세에 따라 합성 이벤트를 정의하기 때문에 브라우저 호환성을 고려하지 않아도 됩니다. <a href=\"https://ko.reactjs.org/docs/events.html\">React 이벤트는 브라우저 고유 이벤트와 정확히 동일하게 작동하지는 않습니다.</a></p>\n<p>React에서는 DOM 앨리먼트가 생성된 후 리스너를 추가하기 위해 <code class=\"language-text\">addEventListener</code>를 호출하는 대신 엘리먼트가 처음 렌더링 될 때 리스너를 제공합니다.</p>\n<p>ES6 클래스를 사용하여 컴포넌트를 정의할 때, 일반적으로 이벤트 핸들러를 클래스의 메서드로 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Toggle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isToggleOn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// callback에서 this가 작동하도록 하려면 다음과 같이 바인딩해줘야함</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevState</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">isToggleOn</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>prevState<span class=\"token punctuation\">.</span>isToggleOn<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isToggleOn <span class=\"token operator\">?</span> <span class=\"token string\">'ON'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'OFF'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toggle</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>JSX 콜백 안에서 <code class=\"language-text\">this</code>의 의미에 대해 주의해야함! JS에서 클래스 메서드는 기본적으로 <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\">바인딩</a> 되어 있지 않다. <code class=\"language-text\">this.handelClick</code>을 바인딩하지 않고 onClick에 전달하였다면, 함수가 실제 호출될 때 this는 undefined가 됨</li>\n</ul>\n<p>JavaScript에서 함수가 작동하는 방식의 일부임. 일반적으로 <code class=\"language-text\">onClick={this.handleClick}</code>과 같이 뒤에 <code class=\"language-text\">()</code>을 사용하지 않고 메서드를 참조할 경우, 해당 메서드를 바인딩 해야 함</p>\n<ul>\n<li><code class=\"language-text\">bind</code>를 호출하는 것이 불편하다면, 해결할 수 있는 두 가지 방법이 있음</li>\n<li>\n<p>퍼블릭 클래스 필드 문법에서 클래스 필드를 사용하여 콜백을 올바르게 바인딩 하는 방법</p>\n<p>이 방법은 <code class=\"language-text\">Create React App</code>에 기본적으로 설정되어 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// 이 문법은 `this`가 handleClick 내에서 바인딩되도록 합니다.</span>\n <span class=\"token comment\">// 주의: 이 문법은 *실험적인* 문법입니다.</span>\n <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Click me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>클래스 필드 문법을 사용하고 있지 않다면, 콜백에 화살표 함수를 사용하는 방법</p>\n<p>문제점: class가 렌더링될 때마다 다른 콜백이 생성된다는 것, 대부분의 경우에는 문제가 되지 않지만, 콜백이 하위 컴포넌트에 props로서 전달된다면 그 컴포넌트들은 추가로 다시 렌더링을 수행할 수도 있다. → 성능 문제 발생</p>\n<p>이러한 문제를 피하고자, 생성자 안에서 바인딩하거나 클래스 필드 문법을 사용하는 것을 권장</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoggingButton</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// 이 문법은 `this`가 handleClick 내에서 바인딩되도록 합니다.</span>\n   <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Click me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"이벤트-핸들러에-인자-전달하기\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%B8%EB%93%A4%EB%9F%AC%EC%97%90-%EC%9D%B8%EC%9E%90-%EC%A0%84%EB%8B%AC%ED%95%98%EA%B8%B0\" aria-label=\"이벤트 핸들러에 인자 전달하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 핸들러에 인자 전달하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete Row</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">deleteRow</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete Row</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-text\">화살표함수</code>를 사용하는 방법, <code class=\"language-text\">Funtions.prototype.bind</code>를 사용하는 방법이 있는데, 두 경우의 결과는 동일하다.</p>\n<p>두 경우 모두 React 이벤트를 나타내는 인자 <code class=\"language-text\">e</code> 가 id 뒤에 두번째 인자로 전달된다.</p>\n<p>차이점이 있다면, 화살표 함수를 사용하면 명시적으로 인자를 전달해야 하지만 bind를 사용할 경우 명시하지 않아도 자동으로 전달한다는 것이다.</p>\n<p>출처: <a href=\"https://ko.reactjs.org/docs/handling-events.html\">이벤트 처리하기</a></p>","frontmatter":{"title":"이벤트 처리하기","date":null,"lang":null}}},{"node":{"id":"be8546eb-6b6f-5945-9421-75b994eab42f","excerpt":"HTML 폼 엘리먼트는 폼 엘리먼트 자체가 내부 상태를 가지기 때문에 React의 다른 DOM 엘리먼트와 다르게 동작합니다. 순수한 HTML에서 폼은 name을 입력받습니다.\n사용자가 폼을 제출하면 새로운 페이지로 이동하는 기본 HTML 폼 동작을 수행합니다. React…","html":"<p>HTML 폼 엘리먼트는 폼 엘리먼트 자체가 내부 상태를 가지기 때문에 React의 다른 DOM 엘리먼트와 다르게 동작합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>form<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>\n    <span class=\"token literal-property property\">Name</span><span class=\"token operator\">:</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"Submit\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span></code></pre></div>\n<p>순수한 HTML에서 폼은 name을 입력받습니다.\n사용자가 폼을 제출하면 새로운 페이지로 이동하는 기본 HTML 폼 동작을 수행합니다. React에서 동일한 동작을 원한다면 그대로 사용하면 됩니다. 하지만 대부분의 경우, JavaScript 함수로 폼 제출을 처리하고 사용자가 폼에 입력한 데이터에 접근하도록 하는 것이 편리한데, 이를 위한 표준 방식은 “제어 컴포넌트”라고 불리는 기술을 이용합니다.</p>\n<h3 id=\"제어-컴포넌트-controlled-conponent\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-controlled-conponent\" aria-label=\"제어 컴포넌트 controlled conponent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어 컴포넌트 (Controlled Conponent)</h3>\n<p>HTML에서 <code class=\"language-text\">&lt;input></code>, <code class=\"language-text\">&lt;textarea></code>, <code class=\"language-text\">&lt;select></code>와 같은 폼 엘리먼트는 일반적으로 사용자의 입력을 기반으로 자신의 state를 관리하고 업데이트합니다. React에서는 변경할 수 있는 state가 일반적으로 컴포넌트의 state 속성에 유지되며 <code class=\"language-text\">setState()</code>에 의해 업데이트됩니다.</p>\n<p>우리는 React state를 “신뢰 가능한 단일 출처(single source of truth)“로 만들어 두 요소를 결합할 수 있습니다. 그러면 폼을 렌더링하는 React 컴포넌트는 폼에 발생하는 사용자 입력값을 제어합니다. 이러한 방식으로 React에 의해 값이 제어되는 입력 폼 엘리먼트를 “제어 컴포넌트”라고 합니다.</p>\n<p>예를 들어 이전 에시가 전송될 때 이름을 기록하길 원한다면 폼을 제어컴포넌트로 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NameForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A name was submitted: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>\n          <span class=\"token literal-property property\">Name</span><span class=\"token operator\">:</span>\n          <span class=\"token operator\">&lt;</span>input\n            type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"Submit\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">value</code> 속성은 폼 엘리먼트에 설정되므로 표시되는 값은 항상 <code class=\"language-text\">this.state.value</code>가 되고 React state는 신뢰 가능한 단일 출처(single source of truth)가 됩니다. React state를 업데이트하기 위해 모든 키 입력에서 <code class=\"language-text\">handleChange</code>가 동작하기 때문에 사용자가 입력할 때 보여지는 값이 업데이트됩니다.</p>\n<p>제어 컴포넌트를 사용하면 input의 값은 항상 React state에 의해 결정됩니다. 코드를 조금 더 작성해야 한다는 의미이지만, 다른 UI 엘리먼트에 input의 값을 전달하거나 다른 이벤트 핸들러에서 값을 재설정할 수 있습니다.</p>\n<h3 id=\"textarea-태그\" style=\"position:relative;\"><a href=\"#textarea-%ED%83%9C%EA%B7%B8\" aria-label=\"textarea 태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>textarea 태그</h3>\n<p>HTML에서 <code class=\"language-text\">&lt;textarea></code> 엘리먼트는 텍스트를 자식으로 정의합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span><span class=\"token punctuation\">></span></span>\n  Hello there, this is some text in a text area\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>React에서 <code class=\"language-text\">&lt;textarea></code>는 <code class=\"language-text\">value</code> 속성을 대신 사용합니다. 이렇게 하면 <code class=\"language-text\">&lt;textarea></code>을 사용하는 폼은 <code class=\"language-text\">&lt;input></code>을 사용하는 폼과 비슷하게 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">EssayForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'Please write an essay about your favorite DOM element.'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An essay was submitted: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>\n          <span class=\"token literal-property property\">Essay</span><span class=\"token operator\">:</span>\n          <span class=\"token operator\">&lt;</span>textarea value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"Submit\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">this.state.value</code>를 생성자에서 초기화하므로 textarea는 일부 텍스트를 가진채 시작됩니다.</p>\n<h3 id=\"select-태그\" style=\"position:relative;\"><a href=\"#select-%ED%83%9C%EA%B7%B8\" aria-label=\"select 태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>select 태그</h3>\n<p>HTML에서 <code class=\"language-text\">&lt;select></code>는 드롭 다운 목록을 만듭니다. 예를 들어 아래 HTML은 콰일 드롭다운 목록을 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grapefruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Grapefruit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lime<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Lime<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">selected</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>coconut<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Coconut<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mango<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Mango<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-text\">selected</code> 옵션이 있으므로 Coconut 옵션이 초기값이 됩니다.<br>\nReact에서는 <code class=\"language-text\">selected</code> 속성을 사용하는 대신 최상단 <code class=\"language-text\">select</code> 태그에 <code class=\"language-text\">value</code> 속성을 사용합니다. 한 곳에서 업데이트만 하면 되기 때문에 제어 컴포넌트에서 사용하기 더 편리합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FlavorForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'coconut'</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Your favorite flavor is: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>\n          Pick your favorite flavor<span class=\"token operator\">:</span>\n          <span class=\"token operator\">&lt;</span>select value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"grapefruit\"</span><span class=\"token operator\">></span>Grapefruit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"lime\"</span><span class=\"token operator\">></span>Lime<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"coconut\"</span><span class=\"token operator\">></span>Coconut<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"mango\"</span><span class=\"token operator\">></span>Mango<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"Submit\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">&lt;input type='text'></code>, <code class=\"language-text\">textarea</code>, <code class=\"language-text\">select</code>는 모두 제어 컴포넌트를 구현하는데 <code class=\"language-text\">value</code> 속성을 사용합니다.</p>\n<ul>\n<li><code class=\"language-text\">select</code> 태그에 <code class=\"language-text\">multiple</code>옵션을 허용한다면 <code class=\"language-text\">value</code> 속성에 배열을 전달하는 것도 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>select multiple<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"file-input-태그\" style=\"position:relative;\"><a href=\"#file-input-%ED%83%9C%EA%B7%B8\" aria-label=\"file input 태그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>file input 태그</h3>\n<p>HTML에서 <code class=\"language-text\">&lt;input type=\"file\"></code>는 사용자가 하나 이상의 파일을 자신의 저장소에서 서버로 업로드하거나 File API를 통해 JavaScript로 조작할 때 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>값이 읽기 전용이기 때문에 React에서는 비제어 컴포넌트입니다.</p>\n<h3 id=\"다중-입력-제어하기\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%A4%91-%EC%9E%85%EB%A0%A5-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0\" aria-label=\"다중 입력 제어하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다중 입력 제어하기</h3>\n<p>여러 <code class=\"language-text\">input</code> 엘리먼트를 제어해야할 때, 각 엘리먼트에 <code class=\"language-text\">name</code> 속성을 추가하고 <code class=\"language-text\">event.target.name</code> 값을 통해 핸들러가 어떤 작업을 할지 선택할 수 있게 해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Reservation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">isGoing</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">numberOfGuests</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleInputChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'checkbox'</span> <span class=\"token operator\">?</span> target<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">:</span> target<span class=\"token punctuation\">.</span>value\n    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>name\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>form<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>\n          Is going<span class=\"token operator\">:</span>\n          <span class=\"token operator\">&lt;</span>input\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"isGoing\"</span>\n            type<span class=\"token operator\">=</span><span class=\"token string\">\"checkbox\"</span>\n            checked<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isGoing<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>\n          Number <span class=\"token keyword\">of</span> <span class=\"token literal-property property\">guests</span><span class=\"token operator\">:</span>\n          <span class=\"token operator\">&lt;</span>input\n            name<span class=\"token operator\">=</span><span class=\"token string\">\"numberOfGuests\"</span>\n            type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span>\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>numberOfGuests<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleInputChange<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>주어진 <code class=\"language-text\">input</code> 태그의 <code class=\"language-text\">name</code>에 일치하는 state를 업데이트하기 위해 ES6의 <code class=\"language-text\">computed property name</code> 구문을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>ES5의 코드는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> partialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\npartialState<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>partialState<span class=\"token punctuation\">)</span></code></pre></div>\n<p>또한 <code class=\"language-text\">setState()</code>는 자동적으로 현재 state에 일부 state를 병합하기 때문에 바뀐 부분에 대해서만 호출하면 됩니다.</p>\n<h3 id=\"제어되는-input-null-값\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EB%90%98%EB%8A%94-input-null-%EA%B0%92\" aria-label=\"제어되는 input null 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어되는 Input Null 값</h3>\n<p>제어 컴포넌트에 value prop을 지정하면 사용자가 원하지 않는 한 입력을 변경할 수 없습니다. <code class=\"language-text\">value</code>를 설정했는데 여전히 값을 편집 가능한 경우 실수로 <code class=\"language-text\">value</code>를 <code class=\"language-text\">undefined</code>나 <code class=\"language-text\">null</code>로 설정했을 수 있습니다.</p>\n<p>다음 코드가 이것을 보여줍니다. 처음에는 입력이 잠겨있지만 잠시후 편집 가능함</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token string\">\"hi\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> mountNode<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> mountNode<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"제어-컴포넌트의-대안\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-%EB%8C%80%EC%95%88\" aria-label=\"제어 컴포넌트의 대안 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어 컴포넌트의 대안</h3>\n<p>데이터를 변경할 수 있는 모든 방법에 대해 이벤트 핸들러를 작성하고 React 컴포넌트를 통해 모든 입력 상태를 연결해야 하기 때문에 때로는 제어 컴포넌트를 사용하는 것이 지루할 수 있습니다. 특히 기존의 코드를 React로 변경하고자 할 때나 React가 아닌 라이브러리와 React 애플리케이션을 통합하고자 할 때 그럴 수 있습니다. 이러한 경우 입력 폼을 구현하기 위한 개체 기술인 <a href=\"https://ko.reactjs.org/docs/uncontrolled-components.html\">비제어 컴포넌트</a>를 확인해보길 추천합니다.</p>\n<h3 id=\"완전한-해결책\" style=\"position:relative;\"><a href=\"#%EC%99%84%EC%A0%84%ED%95%9C-%ED%95%B4%EA%B2%B0%EC%B1%85\" aria-label=\"완전한 해결책 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완전한 해결책</h3>\n<p>유효성검사, 방문한 필드 추적 및 폼 제출 처리와 같은 완벽한 해결을 원한다면 Formik이 대중적인 선택 중 하나입니다. 하지만 Formik은 제어 컴포넌트 및 state 관리에 기초하기 때문에 배우기 쉽지는 않습니다.</p>\n<p>출처: <a href=\"https://ko.reactjs.org/docs/forms.html\">forms</a></p>","frontmatter":{"title":"폼","date":null,"lang":null}}},{"node":{"id":"16fe2e47-b830-5f9c-86e5-f94ee52e437e","excerpt":"의 값에 따라 다른 컴포넌트를 렌더링함 로그인 상태: 인사말과 로그아웃버튼을 렌더링 (이 ) 로그아웃 상태: 가입안내와 로그인버튼을 렌더링(이 ) 논리 연산자 &&로 if를 인라인으로 표현하기 JSX 안에는 중괄호를 이용해서 표현식을 사용할 수 있다. JavaScript…","html":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Greeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>isLoggedIn\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserGreeting</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GuestGreeting</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// Try changing to isLoggedIn={true}:</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">isLoggedIn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">isLoggedIn</code>의 값에 따라 다른 컴포넌트를 렌더링함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginControl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleLoginClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleLogoutClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isLoggedIn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleLoginClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isLoggedIn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleLogoutClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">isLoggedIn</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn\n    <span class=\"token keyword\">let</span> button\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      button <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogoutButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      button <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Greeting</span></span> <span class=\"token attr-name\">isLoggedIn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isLoggedIn<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>button<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginControl</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>로그인 상태: 인사말과 로그아웃버튼을 렌더링 (<code class=\"language-text\">isLoggedIn</code>이 <code class=\"language-text\">true</code>)</li>\n<li>로그아웃 상태: 가입안내와 로그인버튼을 렌더링(<code class=\"language-text\">isLoggedIn</code>이 <code class=\"language-text\">false</code>)</li>\n</ul>\n<h3 id=\"논리-연산자-로-if를-인라인으로-표현하기\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90-%EB%A1%9C-if%EB%A5%BC-%EC%9D%B8%EB%9D%BC%EC%9D%B8%EC%9C%BC%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"논리 연산자 로 if를 인라인으로 표현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 연산자 &#x26;&#x26;로 if를 인라인으로 표현하기</h3>\n<p>JSX 안에는 중괄호를 이용해서 표현식을 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Mailbox</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> unreadMessages <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>unreadMessages\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>unreadMessages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">You have </span><span class=\"token punctuation\">{</span>unreadMessages<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> unread messages.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'React'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Re: React'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Re:Re: React'</span><span class=\"token punctuation\">]</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Mailbox</span></span> <span class=\"token attr-name\">unreadMessages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>messages<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>JavaScript에서 <code class=\"language-text\">true &amp;&amp; expression</code>은 항상 <code class=\"language-text\">expression</code>으로 평가되고 <code class=\"language-text\">false &amp;&amp; expression</code>은 항상 <code class=\"language-text\">false</code>로 평가된다.</li>\n<li>따라서 <code class=\"language-text\">&amp;&amp;</code> 뒤의 엘리먼트는 조건이 <code class=\"language-text\">true</code>일 때 출력됨 (조건이 <code class=\"language-text\">false</code>라면 무시)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span> count <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Messages: </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">false</code>로 평가될 수 있는 표현식을 반환하면 <code class=\"language-text\">&amp;&amp;</code> 뒤에 있는 표현식은 건너뛰지만 false로 평가될 수 있는 표현식이 반환된다는 것에 주의해야 한다. 위의 예시에서는 <code class=\"language-text\">&lt;div>0&lt;/div></code>이 render 메서드에서 반환된다.</li>\n</ul>\n<h3 id=\"조건부-연산자로-if-else-구문-인라인으로-표현하기\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%B6%80-%EC%97%B0%EC%82%B0%EC%9E%90%EB%A1%9C-if-else-%EA%B5%AC%EB%AC%B8-%EC%9D%B8%EB%9D%BC%EC%9D%B8%EC%9C%BC%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"조건부 연산자로 if else 구문 인라인으로 표현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건부 연산자로 If-Else 구문 인라인으로 표현하기</h3>\n<ul>\n<li>JavaScript의 삼항연산자를 사용한다. <code class=\"language-text\">condition ? true : false</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      The user is </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>isLoggedIn <span class=\"token operator\">?</span> <span class=\"token string\">'currently'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'not'</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> logged in.\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLoggedIn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>isLoggedIn<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>isLoggedIn\n        <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogoutButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLogoutClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginButton</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleLoginClick<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>가독성은 좀 떨어지지만 더 큰 표현식에도 이 구문을 사용할 수 있다.</li>\n</ul>\n<p>조건이 너무 복잡하다면 컴포넌트를 분리하기 좋은 때 일 수도 있다;</p>\n<h3 id=\"컴포넌트가-렌더링하는-것을-막기\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EA%B0%80-%EB%A0%8C%EB%8D%94%EB%A7%81%ED%95%98%EB%8A%94-%EA%B2%83%EC%9D%84-%EB%A7%89%EA%B8%B0\" aria-label=\"컴포넌트가 렌더링하는 것을 막기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트가 렌더링하는 것을 막기</h3>\n<p>다른 컴포넌트에 의해 렌더링 될 때 컴포넌트 자체를 숨기고 싶을 때가 있을 수 있다. 이때는 렌더링 결과를 출력하는 대신 <code class=\"language-text\">null</code>을 반환하면 해결할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">WarningBanner</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Warning!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Page</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">showWarning</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggleClick <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleToggleClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleToggleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">showWarning</span><span class=\"token operator\">:</span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>showWarning<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WarningBanner</span></span> <span class=\"token attr-name\">warn</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showWarning<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showWarning <span class=\"token operator\">?</span> <span class=\"token string\">'Hide'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Show'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위의 예시는 <code class=\"language-text\">&lt;WarningBanner /></code> 가 prop의 <code class=\"language-text\">warn</code> 값에 의해 렌더링됩니다. ( <code class=\"language-text\">false</code>일 경우 렌더링되지 않음)</p>\n<p>출처 : <a href=\"https://ko.reactjs.org/docs/conditional-rendering.html\">조건부 렌더링</a></p>","frontmatter":{"title":"조건부 렌더링","date":null,"lang":null}}},{"node":{"id":"43f2d700-30aa-59e4-ab7d-5b54f0ab9935","excerpt":"엘리먼트는 React 앱의 가장 작은 단위 브라우저 DOM엘리먼트와 달리 React 엘리먼트는 일반 객체(plain object) 이며 쉽게 생성할 수 있다. React DOM은 React 엘리먼트와 일치하도록 DOM…","html":"<p>엘리먼트는 React 앱의 가장 작은 단위</p>\n<p>브라우저 DOM엘리먼트와 달리 React 엘리먼트는 일반 객체(plain object) 이며 쉽게 생성할 수 있다. React DOM은 React 엘리먼트와 일치하도록 DOM을 업데이트 한다.</p>\n<p>엘리먼트와 컴포넌트를 혼동하지 않도록 주의</p>\n<p><strong>엘리먼트는 컴포넌트의 구성요소이다.</strong></p>\n<h3 id=\"dom에-엘리먼트-렌더링하기\" style=\"position:relative;\"><a href=\"#dom%EC%97%90-%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8-%EB%A0%8C%EB%8D%94%EB%A7%81%ED%95%98%EA%B8%B0\" aria-label=\"dom에 엘리먼트 렌더링하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM에 엘리먼트 렌더링하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>React 기본 파일에 있는 div이다. 이 안에 들어가는 모든 엘리먼트를 React DOM에서 관리하기 때문에 이것을 root DOM 노드 라고 부른다.</p>\n<p>React로 구현된 애플리케이션은 일반적으로 하나의 루트 DOM 노드가 있습니다. React를 기존 앱에 통합하려는 경우 원하는 만큼 많은 수의 독립된 루트 DOM 노드가 있을 수 있습니다.</p>\n<p>React 엘리먼트를 루트 DOM 노트에 렌더링하려면 <code class=\"language-text\">ReactDOM.render()</code>로 전달하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"렌더링-된-엘리먼트-업데이트하기\" style=\"position:relative;\"><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81-%EB%90%9C-%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%98%EA%B8%B0\" aria-label=\"렌더링 된 엘리먼트 업데이트하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렌더링 된 엘리먼트 업데이트하기</h3>\n<p>React 엘리먼트는 불변객체입니다. 엘리먼트를 생성한 이후에는 해당 엘리먼트의 자식이나 속성을 변경할 수 없슴다. 엘리먼트는 영화에서 하나의 프레임과 같이 특정 시점의 UI를 보여줍니다.</p>\n<p>따라서 UI를 업데이트하는 유일한 방법은 새로운 엘리먼트를 생성하고 이를 <code class=\"language-text\">ReactDOM.render()</code>로 전달하는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">It is </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">setInterval()</code> 콜백을 이용해 초마다 <code class=\"language-text\">ReactDOM.render()</code>를 호출하는 예시입니다.</p>\n<p>실제로 대부분의 React 앱은 <code class=\"language-text\">ReactDOM.render()</code>를 한 번만 호출합니다.</p>\n<h3 id=\"변경된-부분만-업데이트하기\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EA%B2%BD%EB%90%9C-%EB%B6%80%EB%B6%84%EB%A7%8C-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%98%EA%B8%B0\" aria-label=\"변경된 부분만 업데이트하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변경된 부분만 업데이트하기</h3>\n<p>React DOM은 해당 엘리먼트와 그 자식 엘리먼트를 이전의 엘리먼트와 비교하고 DOM을 원하는 상태로 만드는데 필요한 경우에만 DOM을 업데이트합니다.</p>\n<p>위 예시 코드는 매초 전체 UI를 다시 그리도록 만들었지만 React DOM은 내용이 변경된 텍스느 노드만 업데이트합니다.</p>\n<p>출처: <a href=\"https://ko.reactjs.org/docs/rendering-elements.html\">엘리먼트 렌더링</a></p>","frontmatter":{"title":"엘리먼트 렌더링","date":null,"lang":null}}},{"node":{"id":"cb4ad7b8-28da-52c3-a0c5-6b0aeae8712d","excerpt":"동일한 데이터에 대한 변경사항을 여러 컴포넌트에 반영해야 할 필요가 있습니다. 이럴 때는 가장 가까운 공통 조상으로 state…","html":"<p>동일한 데이터에 대한 변경사항을 여러 컴포넌트에 반영해야 할 필요가 있습니다. 이럴 때는 가장 가까운 공통 조상으로 state를 끌어올리는 것이 좋습니다.</p>\n<p>이번 섹션에서는 주어진 온도에서 물이 끓는 여부를 추정하는 온도 계산기를 만들어 볼 것</p>\n<p>먼저 <code class=\"language-text\">BoilingVerdict</code>라는 이름의 컴포넌트부터 만들어봅시다. 이 컴포넌트는 섭씨를 의미하는 <code class=\"language-text\">celsius</code> prop를 받아서 이 온도가 물이 끓기에 충분한지 여부를 출력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">BoilingVerdict</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>celsius <span class=\"token operator\">>=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>The water would boil<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>The water would not boil<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그 다음으로는 <code class=\"language-text\">Calculator</code> 라는 컴포넌트를 만들어봅시다. 이 컴포넌트는 온도를 입력할 수 있는 <code class=\"language-text\">&lt;input></code>을 렌더링하고 그 값을 <code class=\"language-text\">this.state.temperature</code>에 저장합니다.\n또한, 현재 입력값에 대한 <code class=\"language-text\">BoilingVerdict</code> 컴포넌트를 렌더링합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>fieldset<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>legend<span class=\"token operator\">></span>Enter temperature <span class=\"token keyword\">in</span> <span class=\"token literal-property property\">Celsius</span><span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>legend<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>BoilingVerdict celsius<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>fieldset<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h3 id=\"두-번째-input-추가하기\" style=\"position:relative;\"><a href=\"#%EB%91%90-%EB%B2%88%EC%A7%B8-input-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"두 번째 input 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>두 번째 input 추가하기</h3>\n<p>새 요구사항으로써 섭씨 입력 필드뿐만 아니라 화씨 입력 필드를 추가하고 두 필드 간에 동기화 상태를 유지하도록 해봅니다.</p>\n<p><code class=\"language-text\">Calculator</code>에서 <code class=\"language-text\">TemperatureInput</code> 컴포넌트를 빼내는 작업부터 시작해봅시다. 또한 <code class=\"language-text\">c</code> 또는 <code class=\"language-text\">f</code> 의 값을 가질 수 있는 <code class=\"language-text\">scale</code> prop을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> scaleNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token string\">'Celsius'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">f</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fahrenheit'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature\n    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>scale\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>fieldset<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>legend<span class=\"token operator\">></span>Enter temperature <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span>scaleNames<span class=\"token punctuation\">[</span>scale<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>legend<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>fieldset<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>TemperatureInput scale<span class=\"token operator\">=</span><span class=\"token string\">\"c\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>TemperatureInput scale<span class=\"token operator\">=</span><span class=\"token string\">\"f\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 <code class=\"language-text\">Calculator</code>가 분리된 두 개의 온도 입력 필드를 렌더링하도록 변경할 수 있습니다.</p>\n<p>이제 두 개의 입력 필드를 갖게 되었습니다. 하지만 둘 중 하나에 온도를 입력하더라도 다른 하나는 갱신되지 않는 문제가 있습니다. 이것은 두 입력 필드 간에 동기화 상태를 유지하고자 했던 원래 요구사항과는 맞지 않습니다.\n또한 <code class=\"language-text\">BoilingVerdict</code> 도 역시 보여줄 수 없는 상황입니다.\n현재 입력된 온도 정보가 <code class=\"language-text\">TemperatureInput</code> 안에 숨겨져 있으므로 <code class=\"language-text\">Calculator</code>는 그 값을 알 수 없기 때문입니다.</p>\n<h3 id=\"변환-함수-작성하기\" style=\"position:relative;\"><a href=\"#%EB%B3%80%ED%99%98-%ED%95%A8%EC%88%98-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"변환 함수 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변환 함수 작성하기</h3>\n<p>섭씨를 화씨로, 화씨를 섭씨로 변환해주는 함수를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">toCelsius</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fahrenheit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fahrenheit <span class=\"token operator\">-</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">toFahrenheit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">celsius</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>celsius <span class=\"token operator\">*</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">32</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature<span class=\"token punctuation\">,</span> convert</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> rounded <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>output <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span>\n  <span class=\"token keyword\">return</span> rounded<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>온도와 변환함수를 인수로 받아서 문자열을 반환하는 함수입니다.</p>\n<p>온도가 잘못된 형태의 값일 경우 빈 문자열을 반환하고 올바른 값일 경우 <code class=\"language-text\">convert</code> 함수로 변환된 값을 반환합니다.</p>\n<h3 id=\"state-끌어올리기\" style=\"position:relative;\"><a href=\"#state-%EB%81%8C%EC%96%B4%EC%98%AC%EB%A6%AC%EA%B8%B0\" aria-label=\"state 끌어올리기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State 끌어올리기</h3>\n<p>현재 두 <code class=\"language-text\">TemperatureInput</code> 컴포넌트가 각각의 입력값을 각자의 state에 독립적으로 저장하고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>하지만 우리가 원하는 것은 두 입력값이 서로의 것과 동기화된 상태입니다. 섭씨 온도 입력값을 변경할 경우 화씨온도 입력값 역시 변환된 온도를 반영할 수 있어야 하며 그 반대의 경우에도 마찬가지여야 합니다.</p>\n<p>React에서 state를 공유하는 일은 그 값을 필요로하는 컴포넌트 간의 가장 가까운 공통 조상으로 state를 끌어올림으로써 구현할 수 있스빈다. 이렇게 하는 방법을 state 끌어올리기라고 부릅니다.</p>\n<p>이제 <code class=\"language-text\">TemperatureInput</code>이 개별적으로 가지고 있던 지역 state를 지우는 대신 <code class=\"language-text\">Calculator</code>로 그 값을 옮겨놓습니다.\n<code class=\"language-text\">Calculator</code>가 공유될 state를 소유하고 있으면 이 컴포넌트는 두 입력 필드의 현재 온도에 대한 “진리의 원천(source of truth)“이 됩니다. 이를 통해 두 입력 필드가 서로 간에 일관된 값을 유지하도록 만들 수 있습니다. 두 <code class=\"language-text\">TemperatureInput</code> 컴포넌트의 props가 같은 부모인 <code class=\"language-text\">Calculator</code>로부터 전달되기 때문에, 두 입력 필드는 항상 도익화된 상태를 유지할 수 있습니다.</p>\n<ol>\n<li><code class=\"language-text\">TemperatureInput</code> 컴포넌트에서 <code class=\"language-text\">this.state.temperature</code>를 <code class=\"language-text\">this.props.temperature</code>로 대체할 것입니다. 지금은 <code class=\"language-text\">this.props.temperature</code>가 이미 존재한다고 가정해봅시다. 나중에는 이 값을 <code class=\"language-text\">Calculator</code>로부터 건네야 할 것입니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Before: const temperature = this.state.temperature;</span>\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>temperature<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>props는 읽기전용입니다. temperature가 local state였을 때는 그 값을 변경하기 위해 setState를 호출하면 충분했지만 이제 temperature가 부모로부터 prop로 전달되기 때문에 TemperatureInput은 그 값을 제어할 능력이 없습니다.</p>\n<p>React에선 보통 이 문제를 컴포넌트를 제어가능하게 만드는 방식으로 해결합니다. DOM <code class=\"language-text\">&lt;input></code>이 <code class=\"language-text\">value</code>와 <code class=\"language-text\">onChange</code> prop를 건네받는 것과 비슷한 방식으로 사용자 정의된 <code class=\"language-text\">TemperatureInput</code> 역시 <code class=\"language-text\">temperature</code>과 <code class=\"language-text\">onTemperatureChange</code> props를 자신의 부모인 <code class=\"language-text\">Calculator</code>로부터 건네받을 수 있습니다.</p>\n<p>이제 <code class=\"language-text\">TemperatureInput</code>에서 온도를 갱신하고 싶으면 <code class=\"language-text\">this.props.onTemperatureChange</code>를 호출하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Before: this.setState({temperature: e.target.value});</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onTemperatureChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span></code></pre></div>\n<p>최종 <code class=\"language-text\">TemperatureInput</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TemperatureInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">onTemperatureChange</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>temperature\n    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>scale\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>fieldset<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>legend<span class=\"token operator\">></span>Enter temperature <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span>scaleNames<span class=\"token punctuation\">[</span>scale<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>legend<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>temperature<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>fieldset<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Calculator</code>컴포넌트를 살펴보자면, <code class=\"language-text\">temperature</code>와 <code class=\"language-text\">scale</code>의 현재 값을 local state에 저장합니다. 이것들은 입력 필드로부터 끌어올린 state이며 그들의 진리의 원천(source of truth)으로 작용합니다. 또, 두 입력 필드를 렌더링하기 위해 알아야 하는 모든 데이터를 최소한으로 표현한 것이기도 합니다.</p>\n<p>우리가 이전에 먼저 한 작업은 각각의 입력 필드에 값을 모두 저장하는 것이었지만, 가장 최근에 변경된 입력값과 단위를 저장하는 것만으로도 충분합니다. 나머지의 값은 현재의 <code class=\"language-text\">temperature</code>와 <code class=\"language-text\">scale</code>에 기반해 다른 필드의 값을 게산할 수 있기 때문입니다.</p>\n<p>두 입력 필드의 값이 동일한 state로부터 계산되기 때문에 이 둘은 항상 동기화된 상태를 유지하게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleCelsiusChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleCelsiusChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleFahrenheitChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleFahrenheitChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">temperature</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'c'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleCelsiusChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> temperature <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleFahrenheitChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">temperature</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span> temperature <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>scale\n    <span class=\"token keyword\">const</span> temperature <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>temperature\n    <span class=\"token keyword\">const</span> celsius <span class=\"token operator\">=</span>\n      scale <span class=\"token operator\">===</span> <span class=\"token string\">'f'</span> <span class=\"token operator\">?</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">,</span> toCelsius<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> temperature\n    <span class=\"token keyword\">const</span> fahrenheit <span class=\"token operator\">=</span>\n      scale <span class=\"token operator\">===</span> <span class=\"token string\">'c'</span> <span class=\"token operator\">?</span> <span class=\"token function\">tryConvert</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">,</span> toFahrenheit<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> temperature\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>TemperatureInput\n          scale<span class=\"token operator\">=</span><span class=\"token string\">\"c\"</span>\n          temperature<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>celsius<span class=\"token punctuation\">}</span>\n          onTemperatureChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleCelsiusChange<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>TemperatureInput\n          scale<span class=\"token operator\">=</span><span class=\"token string\">\"f\"</span>\n          temperature<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>fahrenheit<span class=\"token punctuation\">}</span>\n          onTemperatureChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleFahrenheitChange<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>BoilingVerdict celsius<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>celsius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 어떤 입력 필드를 수정하든 간에 <code class=\"language-text\">Calculator</code>의 <code class=\"language-text\">this.state.temperature</code>와 <code class=\"language-text\">this.state.scale</code>이 갱신됩니다. 입력 필드 중 하나는 있는 그대로의 값을 받으므로 사용자가 입력한 값이 보존되고, 다른 입력 필드의 값은 항상 다른 하나에 기반해 계산됩니다.</p>\n<p>입력값을 변경할 때 일어나는 일들</p>\n<ol>\n<li>React는 DOM<code class=\"language-text\">&lt;input></code>의 <code class=\"language-text\">onChange</code>에 지정된 함수를 호출 (위 예시에서는 <code class=\"language-text\">TemperatureInput</code>의 <code class=\"language-text\">handleChange</code>)</li>\n<li><code class=\"language-text\">TemperatureInput</code> 컴포넌트의 <code class=\"language-text\">handleChange</code> 메서드는 새로 입력된 값과 함께 <code class=\"language-text\">this.props.onTemperatureChange()</code>를 호출 (<code class=\"language-text\">onTemperatureChange</code>를 포함 이 컴포넌트의 props는 부모 컴포넌트인 <code class=\"language-text\">Calculator</code>에서 옴)</li>\n<li>이전 렌더링 단계에서 <code class=\"language-text\">Calculator</code>는 섭씨 <code class=\"language-text\">TemperatureInput</code>의 <code class=\"language-text\">onTemperatureChange</code>를 <code class=\"language-text\">Calculator</code>의 <code class=\"language-text\">handleCelsiusChange</code>로, 화씨 <code class=\"language-text\">TemperatureInput</code>의 <code class=\"language-text\">onTemperatureChange</code>를 <code class=\"language-text\">Calculator</code>의 <code class=\"language-text\">handleFahrenheitChange</code> 메서드로 지정해놓음, 따라서 우리가 둘 중 어느 입력 필드를 수정하느냐에 따라 <code class=\"language-text\">Calculator</code>의 두 메서드 중 하나가 호출</li>\n<li>이들 메서드는 내부적으로 <code class=\"language-text\">Calculator</code> 컴포넌트가 새 입력값, 수정한 입력 필드의 입력 단위와 함께 <code class=\"language-text\">this.setState()</code>를 호출함으로써 React에게 자신을 다시 렌더링하도록 요청함</li>\n<li>React는 UI가 어떻게 보여아하즌지 알아내기 위해 <code class=\"language-text\">Calculator</code> 컴포넌트의 <code class=\"language-text\">render</code> 메서드를 호출하고, 두 입력 필드의 값은 현재 온도와 활성화된 단위를 기반으로 계산됨(온도 변환)</li>\n<li>React는 <code class=\"language-text\">Calculator</code>가 전달한 새 props와 함께 각 <code class=\"language-text\">TemperatureInput</code> 컴포넌트의 <code class=\"language-text\">render</code>를 호출하고, UI가 어떻게 보여질지 파악합니다.</li>\n<li>React는 <code class=\"language-text\">BoilingVerdict</code> 컴포넌트에게 섭씨온도를 props로 건네면서 그 컴포넌트의 <code class=\"language-text\">render</code> 메서드를 호출</li>\n<li>React DOM은 물의 끓는 여부와 올바른 입력값을 일치시키는 작업과 함께 DOM을 갱신, 값을 변경한 입력 필드는 현재 입력값을 그대로 받고, 다른 입력 필드는 변환된 온도 값으로 갱신</li>\n</ol>\n<h3 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h3>\n<ul>\n<li>\n<p>React 애플리케이션 안에서 변경이 일어나는 데이터에 대해서는 “진리의 원천(source of truth)“를 하나만 두어야 합니다.\n보통의 경우 state는 렌더링에 그 값을 필요로 하는 컴포넌트에 먼저 추가됩니다. 그러고 나서 다른 컴포넌트도 역시 그 값이 필요하게 되면 그 값을 그들의 가장 가까운 공통 조상으로 끌어올리면 됩니다. 다른 컴포넌트 간에 존재하는 state를 동기화시키려고 노력하는 대신 하향식 데이터흐름에 기대는 것을 추천합니다.</p>\n<p>state 끌어올리기 작업은 양방향 바인딩 접근 방식보다 더 많은 보일러 플레이트 코드를 유발하지만 버그를 찾고 격리하기 더 쉽게 만든다는 장점이 있습니다. 어떤 state 든 간에 특정 컴포넌트 안에서 존재하기 마련이고 그 컴포넌트가 자신의 state를 스스로 변경할 수 있으므로 버그가 존재할 수 있는 범위가 크게 줄어듭니다. 또한 사용자의 입력을 거부하거나 변현하는 자체 로직을 구현할 수도 있습니다.</p>\n</li>\n<li>\n<p>어떤 값이 props 또는 state로부터 계산될 수 있다면, state에 둬서는 안됩니다.</p>\n<p>예를 들어 <code class=\"language-text\">celsiusValue</code>와 <code class=\"language-text\">fahrenheitValue</code>를 둘 다 저장하는 대신, 최근에 변경된 <code class=\"language-text\">temperature</code>와 <code class=\"language-text\">scale</code>만 저장합니다. 다른 입력 필드의 값은 항상 그 값들에 기반해서 <code class=\"language-text\">render()</code> 메서드 안에서 계산될 수 있습니다. 이를 통해 사용자 입력값의 정밀도를 유지한 채 다른 필드의 입력값에 반올림을 지우거나 적용할 수 있습니다.</p>\n</li>\n<li>UI에서 무언가 잘못된 부분이 있을 경우, React Developer Tools를 이용하여 props를 검사하고 state를 갱신할 책임이 있는 컴포넌트를 찾을 때까지 트리를 따라 탐색해보세요. 이렇게 함으로써 소스 코드의 버그를 추적할 수 있습니다.</li>\n</ul>","frontmatter":{"title":"State 끌어올리기","date":null,"lang":null}}},{"node":{"id":"b2102bcd-ea81-56ef-a32d-1fa47c9339c5","excerpt":"React…","html":"<p>React는 강력한 합성모델을 가지고 있어, 상속 대신 합성을 사용하여 컴포넌트 간에 코드를 재사용하는 것이 좋습니다.</p>\n<h3 id=\"컴포넌트에-다른-컴포넌트를-담기\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90-%EB%8B%A4%EB%A5%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EB%8B%B4%EA%B8%B0\" aria-label=\"컴포넌트에 다른 컴포넌트를 담기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트에 다른 컴포넌트를 담기</h3>\n<p>어떤 컴포넌트들은 어떤 자식 엘리먼트가 들어올 지 미리 예상할 수 없습니다. 범용적으로 박스역할을 하는 <code class=\"language-text\">Sidebar</code>나 <code class=\"language-text\">Dialog</code>와 같은 컴포넌트에서는 자주 볼 수 있는 패턴입니다.</p>\n<p>이런 컴포넌트에서는 <code class=\"language-text\">children</code> prop을 사용하여 자식 엘리먼트를 출력에 그대로 전달하는 것이 좋습니다.(예시에서는 <code class=\"language-text\">FancyBorder</code> 내부의 <code class=\"language-text\">h1</code>, <code class=\"language-text\">p</code> 태그들을 그대로 전달함)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">FancyBorder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'FancyBorder FancyBorder-'</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">WelcomeDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>FancyBorder color<span class=\"token operator\">=</span><span class=\"token string\">\"blue\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"Dialog-title\"</span><span class=\"token operator\">></span>Welcome<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"Dialog-message\"</span><span class=\"token operator\">></span>Thank you <span class=\"token keyword\">for</span> visiting our spacecraft<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FancyBorder<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">&lt;FancyBorder></code> JSX 태그 안에 있는 것들이 <code class=\"language-text\">FancyBorder</code> 컴포넌트의 <code class=\"language-text\">children</code> prop으로 전달됩니다. <code class=\"language-text\">FancyBorder</code>는 <code class=\"language-text\">{props.children}</code>을 <code class=\"language-text\">&lt;div></code> 안에 렌더링하므로 전달된 엘리먼트들이 최종 출력됩니다.</p>\n<p>종종 컴포넌트에 여러 개의 구멍이 필요한 경우도 있습니다. 이런 경우에는 <code class=\"language-text\">children</code> 대신 자신만의 고유한 방식을 적용할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">SplitPane</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"SplitPane\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"SplitPane-left\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"SplitPane-right\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>SplitPane left<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Contacts <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> right<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Chat <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">&lt;Contacts /></code>와 <code class=\"language-text\">&lt;Chat /></code> 같은 React 엘리먼트는 객체이기 때문에 데이터처럼 prop으로 전달할 수 있습니다. 이런 접근은 다른 라이브러리의 “슬롯(slots)“와 비슷해보이지만 React에서 prop으로 전달할 수 있는 것에는 제한이 없습니다.</p>\n<h3 id=\"특수화\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%88%98%ED%99%94\" aria-label=\"특수화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특수화</h3>\n<p>어떤 컴포넌트의 “특수한 경우”인 컴포넌트를 고려해야 하는 경우가 있습니다.</p>\n<p>예를 들면, <code class=\"language-text\">WelcomDialog</code>는 <code class=\"language-text\">Dialog</code>의 특수한 경우라고 볼 수 있습니다.</p>\n<p>React에서는 이 역시 합성을 통해 해결할 수 있습니다. 더 구체적인 컴포넌트가 일반 컴포넌트를 렌더링하고 props를 통해 내용을 구성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dialog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>FancyBorder color<span class=\"token operator\">=</span><span class=\"token string\">\"blue\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"Dialog-title\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"Dialog-message\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FancyBorder<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">WelcomeDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Dialog title<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome\"</span> message<span class=\"token operator\">=</span><span class=\"token string\">\"Thank you for visiting our spacecraft!\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>합성은 클래스로 정의된 컴포넌트에서도 동일하게 적용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Dialog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>FancyBorder color<span class=\"token operator\">=</span><span class=\"token string\">\"blue\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"Dialog-title\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"Dialog-message\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FancyBorder<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SignUpDialog</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleChange</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSignUp <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleSignUp</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">login</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Dialog\n        title<span class=\"token operator\">=</span><span class=\"token string\">\"Mars Exploration Program\"</span>\n        message<span class=\"token operator\">=</span><span class=\"token string\">\"How should we refer to you?\"</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSignUp<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Sign Me Up<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Dialog<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">login</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleSignUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Welcome aboard, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>login<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h3 id=\"상속은\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D%EC%9D%80\" aria-label=\"상속은 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속은?</h3>\n<p>Facebook에서는 수천 개의 React 컴포넌트를 사용하지만, 컴포넌트를 상속 계층 구조로 작성을 권장할만한 사례를 아직 찾기 못했다고 합니다.</p>\n<p>props와 합성은 명시적이고 안전한 방법으로 컴포넌트의 모양과 동작을 커스터마이징하는데 필요한 모든 유연성을 제공합니다. 컴포넌트가 원시 타입의 값, React 엘리먼트 혹은 함수 등 어떤 props도 받을 수 있다는 것을 기억하세요</p>\n<p>UI가 아닌 기능을 여러 컴포넌트에서 재사용하기를 원한다면, 별도의 JavaScript 모듈로 분리하는 것이 좋습니다. 컴포넌트에서 해당 함수, 객체, 클래스 등을 import하여 사용할 수 있습니다. 상속받을 필요 없이 말이죠!</p>\n<p>출처: <a href=\"https://ko.reactjs.org/docs/composition-vs-inheritance.html\">합성vs상속</a></p>","frontmatter":{"title":"합성 (Composition) vs 상속 (Inheritance)","date":null,"lang":null}}},{"node":{"id":"f1c784e9-a57a-5a77-bfa3-9a8df12f13f5","excerpt":"Hook은 React 버전 16.8부터 React 요소로 새로 추가되었습니다. Hook을 이용하여 기존 Class 바탕의 코드를 작성할 필요 없이 상태 값과 여러 React의 기능을 사용할 수 있습니다. 컴포넌트 사이에서 상태 로직을 재사용하기 어려움 render props…","html":"<p>Hook은 React 버전 16.8부터 React 요소로 새로 추가되었습니다. Hook을 이용하여 기존 Class 바탕의 코드를 작성할 필요 없이 상태 값과 여러 React의 기능을 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// \"count\"라는 새로운 상태 값을 정의합니다.</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">You clicked </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Click me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>컴포넌트 사이에서 상태 로직을 재사용하기 어려움</p>\n<ul>\n<li>render props 같은 패턴들의 사용은 컴포넌트의 재구성을 강요하여 코드의 추적을 어렵게 만듦 → wrapper hell</li>\n<li>Hook은 계층의 변화 없이 상태 관련 로직을 재사용할 수 있도록 도와줌 → 많은 컴포넌트 혹은 커뮤니티 사이에서 Hook을 공유하기 쉽게 만듦</li>\n</ul>\n</li>\n<li>\n<p>복잡한 컴포넌트들은 이해하기 어려움</p>\n<ul>\n<li>생명주기 메서드에 관련 없는 로직이 자주 섞여들어감</li>\n<li>상태 관련 로직은 한 공간 안에 묶여 있기 때문에 컴포넌트들을 작게 분리하는 것은 불가능하고, 테스트도 어렵다. 때문에 사용자들은 React를 별도의 관리 라이브러리와 함께 결합하여 사용해왔음 → 너무 많은 추상화, 서로 다른 파일들 사이에서 건너뛰기 요구,,, 컴포넌트 재사용을 더욱 어렵게 만듦</li>\n<li>Hook을 통해 서로 비슷한 것을 하는 작은 함수의 묶음으로 컴포넌트를 나누는 방법을 사용할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>Class은 사람과 기계를 혼동시킴</p>\n<ul>\n<li>React에서 Class 사용을 위해서는 JavaScript의 this 키워드를 알아야하는데 다른 언어들의 this와 다르게 동작하므로 사용자에게 혼란 → 코드의 재사용성과 구성을 어렵게 만듦</li>\n<li>class의 사용을 위해서 이벤트 핸들러가 등록되는 방법을 정확히 파악해야 함 → 코드를 장황하게 만듦</li>\n<li>Hook은 class없이 React 기능들을 사용하는 방법을 제시</li>\n</ul>\n</li>\n</ul>\n<p>출처 : <a href=\"https://ko.reactjs.org/docs/hooks-intro.html\">Hook의 소개</a></p>","frontmatter":{"title":"Hook이 만들어진 이유","date":null,"lang":null}}},{"node":{"id":"3e4bffbb-a371-50b3-9641-a07ea627636e","excerpt":"…","html":"<p><code class=\"language-text\">this</code> 키워드는 지금 동작하고 있는 코드를 가지고 있는 객체를 가리킵니다. 그럼 왜 직접 객체를 쓰지 않는걸까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Chris'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! I'm \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Brian'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! I'm \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>객체 멤버의 컨텍스트가 바뀌는 경우에도 언제나 정확한 값을 사용하게 해줍니다. 예시와 같이 두 개의 다른 객체가 각각 다른 이름으로 인스턴스로 생성된 상태에서 인사말을 출력하기 위해 객체의 name을 참조해야 할 때 사용합니다.\n위의 예시에서 <code class=\"language-text\">person1.greeting()</code>은 “Hi! I’m Chris.”를 출력하고 <code class=\"language-text\">person2.greeting()</code>은 “Hi! I’m Brian.”을 출력합니다. this는 실행중인 코드가 속해있는 객체입니다. 객체 리터럴을 직접 지정해서 사용하는 경우라면 그리 유용하지 않겠지만, 동적으로 객체를 생성하는 경우(생성자를 사용하는 경우…)에는 매우 유용합니다.</p>\n<p>대부분의 경우 this의 값은 함수를 호출하는 방법에 의해 결정됩니다. 실행중에는 할당으로 설정할 수 없고 함수를 호출할 때마다 다를 수 있습니다.</p>\n<ul>\n<li>ES5에서는 함수를 어떻게 호출했는지 상관하지 않고 this 값을 설정할 수 있는 <code class=\"language-text\">bind</code> 메서드가 도입됐고,</li>\n<li>ES2015는 스스로 this 바인딩을 제공하지 않는 화살표 함수가 추가되었습니다.(렉시컬 컨텍스트 안의 this 값을 유지함)</li>\n<li>렉시컬 스코프: 함수가 선언되는 위치에 따라서 상위 스코프가 결정되는 스코프, 함수가 선언될 때 스코프가 생성된다.</li>\n<li>call, apply를 사용하면 실행된 함수의 this를 묶어줄 위치를 정해줄 수 있음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// call 또는 apply의 첫 번째 인자로 객체가 전달될 수 있으며 this가 그 객체에 묶임</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'Custom'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 변수를 선언하고 변수에 프로퍼티로 전역 window를 할당</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'Global'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">whatsThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a <span class=\"token comment\">// 함수 호출 방식에 따라 값이 달라짐</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">whatsThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// this는 'Global'. 함수 내에서 설정되지 않았으므로 global/window 객체로 초기값을 설정한다.</span>\n<span class=\"token function\">whatsThis</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token comment\">// this는 'Custom'. 함수 내에서 obj로 설정한다.</span>\n<span class=\"token function\">whatsThis</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token comment\">// this는 'Custom'. 함수 내에서 obj로 설정한다.</span></code></pre></div>\n<ul>\n<li>call과 apply의 차이</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c<span class=\"token punctuation\">,</span> d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>b <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> d\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 첫 번째 인자는 'this'로 사용할 객체이고,</span>\n<span class=\"token comment\">// 이어지는 인자들은 함수 호출에서 인수로 전달된다.</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 16</span>\n\n<span class=\"token comment\">// 첫 번째 인자는 'this'로 사용할 객체이고,</span>\n<span class=\"token comment\">// 두 번째 인자는 함수 호출에서 인수로 사용될 멤버들이 위치한 배열이다.</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 34</span></code></pre></div>\n<p>출처\n<a href=\"https://developer.mozilla.org/ko/docs/Learn/JavaScript/Objects/Basics\">https://developer.mozilla.org/ko/docs/Learn/JavaScript/Objects/Basics</a>\n<a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this</a></p>","frontmatter":{"title":"[javascript] this는 무엇인가?","date":null,"lang":null}}},{"node":{"id":"d1f544c3-ca34-53eb-82e5-d9147134f667","excerpt":"고차 컴포넌트(HOC, Higher Order Component)는 컴포넌트 로직을 재사용하기 위한 React 기술 컴포넌트를 가져와 새 컴포넌트를 반환하는 함수 HOC의 이름은 with 이름지정 규칙을 따른다. 리액트 컴포넌트를 작성하게 될 때 반복될 수 있는 코드들은 HOC…","html":"<p>고차 컴포넌트(HOC, Higher Order Component)는 컴포넌트 로직을 재사용하기 위한 React 기술</p>\n<ul>\n<li>컴포넌트를 가져와 새 컴포넌트를 반환하는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> EnhancedComponent <span class=\"token operator\">=</span> <span class=\"token function\">higherOrderComponent</span><span class=\"token punctuation\">(</span>WrappedComponent<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>HOC의 이름은 with 이름지정 규칙을 따른다.</li>\n<li>리액트 컴포넌트를 작성하게 될 때 반복될 수 있는 코드들은 HOC를 만들어서 해결</li>\n<li>auth.js처럼 페이지 별로 유저 권한을 확안해야 하는 기능을 함수로 만들어 사용</li>\n</ul>\n<p>출처: <a href=\"https://ko.reactjs.org/docs/higher-order-components.html\">https://ko.reactjs.org/docs/higher-order-components.html</a>\n<a href=\"https://cattaku.tistory.com/40\">https://cattaku.tistory.com/40</a></p>","frontmatter":{"title":"[react] 고차 컴포넌트","date":null,"lang":null}}},{"node":{"id":"74c70b9d-90c8-5a53-bb29-507ec694e7c0","excerpt":"일부 기능을 제한한다는 의미, 오류 방지 목적을 가지며 단점보다는 장점이 많음 전체 코드나 함수에 strict mode를 적용하기 위해 사용한다. strict…","html":"<p>일부 기능을 제한한다는 의미, 오류 방지 목적을 가지며 단점보다는 장점이 많음</p>\n<p>전체 코드나 함수에 strict mode를 적용하기 위해 사용한다. strict 모드의 선언은 자바스크립트 변형의 제한에 동의한다는 것이다.</p>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ul>\n<li>의도하지 않은 전역 변수가 선언되지 못하도록 한다.</li>\n<li>삭제할 수 없는 속성(property)를 삭제하려고 시도하면 오류를 발생시킨다.</li>\n<li>함수의 파라미터 이름은 서로 달라야한다.</li>\n<li><code class=\"language-text\">this</code>는 전역 컨텍스트에서 <code class=\"language-text\">undefined</code>이다.</li>\n<li>몇몇 일반적인 코딩 실수를 잡아서 예외 처리시킨다. (ex, 전역 객체에 접근하려는 것)</li>\n<li>자바스크립트에서 개발자에게 혼란을 주거나, 잘못 만든 것으로 보이는 여러 기능의 사용을 금지한다.</li>\n</ul>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ul>\n<li>못쓰게 되는 많은 기능들이 어떤 개발자에게는 필요한 기능일 수 있다.</li>\n<li><code class=\"language-text\">function.caller</code> 그리고 <code class=\"language-text\">function.arguments</code>에 접근할 수 없다.</li>\n<li>서로 다른 strict mode로 작성된 코드를 연결했을 때 오류가 발생할 수 있다.</li>\n</ul>\n<p><a href=\"https://blog.rhostem.com/posts/2020-04-13-fe-interview-handbook-js-2\">프론트엔드 면접 질문</a></p>","frontmatter":{"title":"[javascript] use strict란?","date":null,"lang":null}}},{"node":{"id":"8ee5fb5c-52c0-54e5-b8a7-83ea206768e6","excerpt":"…","html":"<h2 id=\"접근-불가능한-영역에-통로를-만드는-것\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC-%EB%B6%88%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%98%81%EC%97%AD%EC%97%90-%ED%86%B5%EB%A1%9C%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EA%B2%83\" aria-label=\"접근 불가능한 영역에 통로를 만드는 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근 불가능한 영역에 통로를 만드는 것</h2>\n<p>클로저는 함수의 실행이 끝난 뒤에도 함수에 선언된 변수의 값에 접근할 수 있도록 만드는 함수를 말한다.</p>\n<p>함수는 블럭으로 둘러싸여 있고 하나의 스코프를 형성한다. 함수 안에 선언된 변수는 함수 바깥에서 참조할 수 없으며, 함수가 실행된 후에는 더 이상 사용할 수 없다.</p>\n<p>하지만 자바스크립트에서는 함수 리턴값을 통해 함수 안에 선언된 변수를 노출시킴으로서 클로저를 형성할 수 있다.</p>\n<p>스코프(scope): 특정 변수에 대한 접근 가능 여부를 결정하는 환경(context)\n스코프에는 local과 global 두 가지 타입이 있고, 지역, 전역이라고도 표현한다. 전역 변수는 어떤 블럭에도 속하지 않은 위치에서 선언된 것이고, 로컬 변수는 블럭 안에서 선언된 것이다.</p>\n<h3 id=\"사용하는-이유\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용하는 이유</h3>\n<ul>\n<li>데이터 프라이버시 / 모듈 패턴에서 private 메소드를 구현하기 위해 사용됨</li>\n<li>함수형 프로그래밍에서 partial application, currying 구현</li>\n</ul>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<p>함수 안의 변수 업데이트</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>num\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> increase\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span></code></pre></div>\n<p>간단한 curry</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">curry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> add3 <span class=\"token operator\">=</span> <span class=\"token function\">curry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 7</span></code></pre></div>\n<p><a href=\"https://blog.rhostem.com/posts/2020-04-12-fe-interview-handbook-js-1\">프론트엔드 면접 질문</a></p>","frontmatter":{"title":"[javascript] closure","date":null,"lang":null}}},{"node":{"id":"7ebd2907-0f66-501d-87e1-30b89fbd62c4","excerpt":"동기 현재의 작업이 끝나야 다음 작업이 시작할 수 있다. 작업의 종료 시점과 다음 작업의 시작 시점이 같다. ⇒ 동기적 작업이 수행되는 동안 다른 작업들은 대기 상태로 앞 작업이 끝나기를 기다린다.(blocking 상태) 비동기 작업을 blocking…","html":"<h2 id=\"동기\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EA%B8%B0\" aria-label=\"동기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동기</h2>\n<ul>\n<li>현재의 작업이 끝나야 다음 작업이 시작할 수 있다.</li>\n<li>작업의 종료 시점과 다음 작업의 시작 시점이 같다. ⇒ 동기적</li>\n<li>작업이 수행되는 동안 다른 작업들은 대기 상태로 앞 작업이 끝나기를 기다린다.(blocking 상태)</li>\n</ul>\n<h2 id=\"비동기\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0\" aria-label=\"비동기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기</h2>\n<ul>\n<li>작업을 blocking하지 않아 언제든지 시작할 수 있다.</li>\n<li>작업을 시작시켜놓고 다른 일을 하다가 작업이 종료됐을 때 다시 이어서 작업을 수행한다.</li>\n</ul>\n<h3 id=\"비동기-예시\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%98%88%EC%8B%9C\" aria-label=\"비동기 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기 예시</h3>\n<ul>\n<li>\n<p>DOM Element의 이벤트 핸들러</p>\n<ul>\n<li>마우스, 키보드 입력</li>\n<li>페에지 로딩(DOMContentLoaded 등)</li>\n</ul>\n</li>\n<li>\n<p>타이머</p>\n<ul>\n<li>타이머 API(setTimeout 등)</li>\n<li>애니메이션 API(requestAnimationFrame)</li>\n</ul>\n</li>\n<li>\n<p>서버에 자원 요청 및 응답</p>\n<ul>\n<li>fetch API</li>\n<li>AJAX(XHR)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"자바스크립트의-비동기-처리\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC\" aria-label=\"자바스크립트의 비동기 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트의 비동기 처리</h2>\n<ul>\n<li>callback</li>\n<li>Promise</li>\n<li>async / await</li>\n</ul>\n<h2 id=\"callback\" style=\"position:relative;\"><a href=\"#callback\" aria-label=\"callback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>callback</h2>\n<p>콜백이란 함수의 전달인자로 넘겨주는 함수를 말한다. 매개변수를 넘겨받은 함수는 필요에 따라 콜백함수를 즉시 실행 할 수도 있고, 나중에 실행할 수도 있다.</p>\n<p>콜백은 함수의 실행 순서를 제어하기 위해 사용한다.</p>\n<p>첫번째로 실행되어야 하는 함수 <code class=\"language-text\">first</code>와 두번째로 실행하는 함수 <code class=\"language-text\">second</code>가 있다고 가정해보자. 아래와 같이 작성하면 실행시킨 순서대로 함수가 실행될 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 실행결과</span>\n<span class=\"token comment\">// first</span>\n<span class=\"token comment\">// second</span></code></pre></div>\n<p>하지만 함수 <code class=\"language-text\">first</code>가 바로 실행되지 않고 2초 대기해야하는 함수라고 가정해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 실행결과</span>\n<span class=\"token comment\">// second</span>\n<span class=\"token comment\">// first</span></code></pre></div>\n<p>그러면 함수를 작성한 순서대로 실행되지 않는 것을 확인할 수 있다. 자바스크립트는 비동기로 동작한다. 때문에 first가 전부 끝나기를 기다리지 않고 다음으로 계속 진행하면서 second를 실행한다. 이 때 콜백을 사용하면 first가 전부 끝나면 second가 실행되도록 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 실행결과</span>\n<span class=\"token comment\">// first</span>\n<span class=\"token comment\">// second</span></code></pre></div>\n<p>함수에 다음으로 실행하려는 함수를 넘겨주고, 앞 함수가 전부 실행됐을 때 그 함수가 실행될 수 있도록 코드를 작성하면 된다. </p>\n<h3 id=\"callback-hell\" style=\"position:relative;\"><a href=\"#callback-hell\" aria-label=\"callback hell permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>callback hell</h3>\n<p><img src=\"https://miro.medium.com/max/1400/0*C0iEvjGNPURJcqrI.jpeg\" alt=\"https://miro.medium.com/max/1400/0*C0iEvjGNPURJcqrI.jpeg\"></p>\n<p>콜백은 함수의 실행 순서를 제어할 수 있다는 장점이 있지만 과도하게 많은 콜백을 사용할 경우 들여쓰기가 중첩되면서 가독성이 매우 안 좋아진다는 단점이 있다. 이를 콜백 지옥이라고도 하는데… 짤만 봐도 혼란스럽다… 콜백 지옥을 탈출하기 위한 대안은 Promise를 사용하는 것이다.</p>\n<h2 id=\"promise\" style=\"position:relative;\"><a href=\"#promise\" aria-label=\"promise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Promise</h2>\n<p>Promise는 자바스크립트 비동기 처리에 사용되는 객체입니다. 자바스크립트의 비동기 처리란 특정 코드의 실행이 완료될 때까지 기다리지 않고 다음 코드를 먼저 수행하는 자바스크립트의 특성을 의미한다. </p>\n<p>프로미스는 주로 서버에서 받아온 데이터를 화면에 표시할 때 사용한다. 프로미스를 사용하지 않으면 자바스크립트는 서버에서 데이터를 받아왔는지 확인하지 않고 다음 코드를 이어 실행한다. 때문에 아직 데이터를 받아오지 못했을 경우 에러가 발생하거나 빈 화면이 뜰 수 있다.</p>\n<h3 id=\"프로미스의-3가지-상태\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4%EC%9D%98-3%EA%B0%80%EC%A7%80-%EC%83%81%ED%83%9C\" aria-label=\"프로미스의 3가지 상태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로미스의 3가지 상태</h3>\n<p>프로미스의 처리 과정을 의미한다. <code class=\"language-text\">new Promise()</code> 로 프로미스를 생성하고 종료될 때까지 3가지 상태를 갖습니다.</p>\n<ul>\n<li>Pending 대기 : 비동기 로직이 아직 완료되지 않은 상태</li>\n<li>Fulfilled 이행 : 비동기 처리가 완료되어 프로미스가 결과 값을 반환해준 상태</li>\n<li>Rejected 실패 : 비동기 처리가 실패하거나 오류가 발생한 상태</li>\n</ul>\n<h3 id=\"pending-대기\" style=\"position:relative;\"><a href=\"#pending-%EB%8C%80%EA%B8%B0\" aria-label=\"pending 대기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pending 대기</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>프로미스 인스턴스를 생성하면 대기 상태가 된다. </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>인스턴스를 생성할 때 콜백함수를 선언할 수 있다. 콜백 함수의 인자는 resolve, reject 두 가지를 받는다.</p>\n<h3 id=\"fulfilled-이행\" style=\"position:relative;\"><a href=\"#fulfilled-%EC%9D%B4%ED%96%89\" aria-label=\"fulfilled 이행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fulfilled 이행</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>콜백 함수의 인자 중 resolve를 실항하면 이행 상태가 된다. 그리고 이행상태가 되면 <code class=\"language-text\">then()</code> 을 이용하여 처리 결과 값을 받을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// resolve()의 결과 값을 result로 받음</span>\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'success'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"rejected-실패\" style=\"position:relative;\"><a href=\"#rejected-%EC%8B%A4%ED%8C%A8\" aria-label=\"rejected 실패 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rejected 실패</h3>\n<p>reject를 호출하면 실패 상태가 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>실패 상태가 되면 실패한 이유(실패 처리의 결과 값)를 <code class=\"language-text\">catch()</code>로 받을 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// reject()의 결과 값을 Error을 err로 받음</span>\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error: fail</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/cab9b66e-1fd9-413c-913a-8ad2f3d91a7d/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20211014%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20211014T140419Z&#x26;X-Amz-Expires=86400&#x26;X-Amz-Signature=a47fb8bbe49b09168b28e94eaa998c7a8ad83ee1a77a5e7785438ef534f0a53b&#x26;X-Amz-SignedHeaders=host&#x26;response-content-disposition=filename%20%3D%22Untitled.png%22\" alt=\"Untitled\"></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// </span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Promise를 사용하면 콜백이 많아지더라도 콜백함수를 사용할 때보다 정리되고 알아보기 쉬운 코드를 작성할 수 있다. 여기서 좀 더 발전된 비동기 처리 방식이 있는데, 바로 async/await이다.</p>\n<h2 id=\"asyncawait\" style=\"position:relative;\"><a href=\"#asyncawait\" aria-label=\"asyncawait permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>async/await</h2>\n<p>async/await는 자바스크립트의 비동기 처리 패턴 중 가장 최근에 나온 문법이다. 기존의 비동기 처리방식인 콜백함수와 Promise의 단점을 보완하고 개발자가 읽기 편한 코드를 작성할 수 있도록 도와준다.</p>\n<p>async/await를 사용하면 비동기를 동기인 것처럼 작성할 수 있다. 실제 동작은 Promise와 똑같다. 단지 비동기 동작 처리를 할 부분에 async와 await를 작성해주면 된다.</p>\n<p>비동기 처리 해야하는 함수를 실행하는 함수에 <code class=\"language-text\">async</code> 키워드를 붙이고, 실행되는 함수 앞에 <code class=\"language-text\">await</code> 만 붙이면 끝이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">displayData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">displayData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'success'</span></code></pre></div>\n<p>예외 처리 는 <code class=\"language-text\">try ... catch</code> 문을 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">displayData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<p>참고:</p>\n<ul>\n<li>코드스테이츠 유어클래스</li>\n<li><a href=\"https://hanamon.kr/javascript-%EC%BD%9C%EB%B0%B1-%EC%A7%80%EC%98%A5-%ED%83%88%EC%B6%9C%ED%95%98%EA%B8%B0-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC-%EB%B0%A9%EB%B2%95/\">[JavaScript] 콜백 지옥 탈출하기! 비동기 처리 방법</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/javascript/promise-for-beginners/\">자바스크립트 Promise 쉽게 이해하기</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/javascript/js-async-await/\">자바스크립트 async와 await</a></li>\n</ul>","frontmatter":{"title":"[TIL] 자바스크립트 비동기 처리","date":"October 14, 2021","lang":null}}},{"node":{"id":"46237642-df8a-5772-bcfe-7f078637b463","excerpt":"자바스크립트는 싱글 스레드 기반 언어이다. 즉, 한 번에 하나의 작업만 처리할 수 있다. 하지만 실제로 자바스크립트를 사용해보면 많은 작업을 동시에 처리할 수 있다는 것을 알 수 있다. 예를 들어 HTML…","html":"<p>자바스크립트는 싱글 스레드 기반 언어이다. 즉, 한 번에 하나의 작업만 처리할 수 있다. 하지만 실제로 자바스크립트를 사용해보면 많은 작업을 동시에 처리할 수 있다는 것을 알 수 있다. 예를 들어 HTML 요소가 애니메이션 효과를 통해 움직이면서 마우스 이벤트를 받아 처리하기도 하고, 웹 서버에서는 동시에 여러 개의 HTTP 요청을 처리하기도 한다. 어떻게 스레드가 하나인데 이런 일을 할 수 있을까?</p>\n<p>일단 이렇게 한 번에 여러 개의 작업을 할 수 있는 것을 동시성(Concurrency)라고 한다. 자바스크립트는 동시성을 지원하기 위해 이벤트 루프(Event Loop)를 사용한다. 이벤트 루프는 브라우저에 내장된 기능으로, V8 같은 자바스크립트 엔진에는 없는 기능이다. </p>\n<h2 id=\"자바스크립트-엔진\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%97%94%EC%A7%84\" aria-label=\"자바스크립트 엔진 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 엔진</h2>\n<p><img src=\"https://joshua1988.github.io/images/posts/web/translation/how-js-works/js-engine-structure.png\" alt=\"https://joshua1988.github.io/images/posts/web/translation/how-js-works/js-engine-structure.png\"></p>\n<p>자바스크립트 엔진은 크게 힙 영역과 콜스택 영역 두 가지로 구분할 수 있다. </p>\n<h3 id=\"콜-스택call-stack\" style=\"position:relative;\"><a href=\"#%EC%BD%9C-%EC%8A%A4%ED%83%9Dcall-stack\" aria-label=\"콜 스택call stack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜 스택(Call Stack)</h3>\n<p>함수를 호출하면 순차적으로 콜 스택에 푸시되어 순차적으로 실행된다. 자바스크립트는 단일 콜스택을 사용하기 때문에 최상위 실행 함수가 종료되어 스택에서 제거되기 전까지 다른 함수를 실행할 수 없다.</p>\n<h3 id=\"힙memory-heap\" style=\"position:relative;\"><a href=\"#%ED%9E%99memory-heap\" aria-label=\"힙memory heap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙(Memory Heap)</h3>\n<p>객체가 저장되는 메모리 공간이다. 콜스택의 요소인 실행 컨텍스트가 힙에 저장된 객체를 참조한다.</p>\n<h2 id=\"자바스크립트-런타임\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%9F%B0%ED%83%80%EC%9E%84\" aria-label=\"자바스크립트 런타임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 런타임</h2>\n<p>위에 콜 스택의 특징에서 확인할 수 있듯이 자바스크립트 엔진은 실행된 작업을 순차적으로 실행하기 때문에 자바스크립트 엔진 만으로는 비동기 처리를 할 수 없다. 때문에 소스코드의 평가와 실행을 제외한 모든 비동기 처리는 자바스크립트 런타임 즉, 브라우저나 Node.js에서 담당한다. </p>\n<p><img src=\"https://miro.medium.com/max/700/1*4lHHyfEhVB0LnQ3HlhSs8g.png\" alt=\"https://miro.medium.com/max/700/1*4lHHyfEhVB0LnQ3HlhSs8g.png\"></p>\n<p>우리가 사용하는 AJAX나 setTimeout 같은 비동기 함수들은 자바스크립트 엔진이 아닌 Web API에 정의되어 있다. 그러니까 실제 비동기 함수들이 실행되면 자바스크립트 엔진이 아닌 브라우저나 Node.js에서 실행되는 것이다. 또, 그림을 살펴보면 Event Loop와 Callback Queue(Task Queue) 같은 장치도 자바스크립트 외부에 구현되어 있는 것을 볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 코드를 실행하여 setTimeout을 호출하면 setTimeout은 자바스크립트 엔진의 콜스택에 담긴다. 그리고 setTimeout은 자바스크립트 런타임에 존재하는 API이므로 브라우저가 타이머를 실행시키고 카운트 다운을 시작한다. 그러면 setTimeout의 호출은 완료되었다는 의미이므로 콜스택에서 지워진다. 코드가 이어서 실행되면 console.log가 콜스택에 들어가고,  ‘Hi Hi’를 출력한 후 다시 지워진다.</p>\n<p>이제 브라우저에서 실행되고 있는 타이머가 종료되고 콜백이 실행된다. <strong>만약 타이머가 다른 코드가 실행되고 있는 중간에 종료됐다고 하더라도 콜백이 바로 코드 사이에 끼어들 수는 없다.</strong> 콜백이 콜 스택으로 들어가려면 우선 콜백 큐에 푸시되어야 하고, 이벤트 루프가 콜백큐에서 콜스택으로 옮겨주길 기다려야 하기 때문이다.</p>\n<p>Web API가 종료되면 콜백 함수는 콜백 큐로 푸시된다. 콜스택과 콜백 큐를 지켜보고 있던 이벤트 루프는 콜 스택이 비어있고, 콜백 큐에 실행시킬 콜백이 있는 것을 확인하면 콜백 큐의 콜백을 순차적으로 콜 스택에게 푸시해준다. 그럼 이제 자바스크립트 엔진에 의해 콜백이 실행된다. (위 코드에서는 ‘Hi’ 출력) 여기서 중요한 것은 <strong>콜스택이 비어있어야 이벤트루프가 콜백을 이동시킨다</strong>는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>단순히 코드만 봤을 때는 그럼 setTimeout 대기 시간에 0을 넣으면 코드가 적힌 순서대로 실행되나? 하고 생각할 수도 있지만 그렇지 않다. setTimeout의 대기 시간은 최소 대기시간일뿐 언제 실행될지는 보장하지 않는다. 그리고 브라우저에서 실행되어 콜백 큐로 들어간 콜백은 이벤트 루프가 옮겨주어야 콜 스택으로 푸시될 수 있고, 이벤트 루프는 콜 스택이 완전히 비는 것을 기다리기 때문에 대기 시간을 0으로 넣어도 콜백은 바로 실행되지 않고 뒤로 밀리게 된다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<p>자바스크립트는 싱글 스레드 기반 언어라 한 번에 하나의 작업만 수행할 수 있다. 하지만 Web API, 콜백큐, 이벤트 루프 덕분에 멀티 스레드의 동작도 할 수 있다.</p>\n<p>참고:</p>\n<ul>\n<li><a href=\"https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf\">How JavaScript works: an overview of the engine, the runtime, and the call stack</a></li>\n<li>모던 자바스크립트 Deep Dive</li>\n<li><a href=\"https://www.youtube.com/watch?v=8aGhZQkoFbQ\">어쨌든 이벤트 루프는 무엇입니까? | Philip Roberts | JSConf EU</a></li>\n<li><a href=\"https://meetup.toast.com/posts/89\">자바스크립트와 이벤트 루프</a></li>\n</ul>","frontmatter":{"title":"이벤트 루프(Event Loop)","date":"October 15, 2021","lang":null}}},{"node":{"id":"5ffdbb0b-b696-51a4-b5ee-63685f927ef8","excerpt":"오늘 한 것 밥을 잘 안챙겨먹었더니 몸이 점점 안좋아지는거같아서 물도 많이 먹고 안먹던 점심도 잘 먹는중(저녁도 든든히) 노트북 들고나온 김에 카페에서 오라클 설치함 좀 헤맸지만 SCOTT계정도 만들었다(구글최고) 학원에서 CRUD…","html":"<ul>\n<li>\n<p>오늘 한 것</p>\n<ul>\n<li>밥을 잘 안챙겨먹었더니 몸이 점점 안좋아지는거같아서 물도 많이 먹고 안먹던 점심도 잘 먹는중(저녁도 든든히)</li>\n<li>노트북 들고나온 김에 카페에서 오라클 설치함 좀 헤맸지만 SCOTT계정도 만들었다(구글최고)</li>\n<li>학원에서 CRUD 사원정보 관리 프로그램을 실습했다. 사실 따라서 치다보니 완성된거라 좀 현타가옴… 공부하자공부..</li>\n<li>scott계정에 어떤 테이블이 있고 정보 조회를 원하는 테이블을 선택하고 확인을 누르면 테이블의 컬럼들과 데이터형, 크기를 알려주는 프로그램을 만들었다.\n오랜만에 자바로 과제를 수행해보니 더 열심히 해야겠다는 생각이 든다.</li>\n</ul>\n</li>\n<li>\n<p>오늘 공부한 것</p>\n<ul>\n<li>HTML 생활코딩 강의 ( html head body title )</li>\n<li>한글이 깨질경우 meta로 UTF-8로 설정</li>\n<li>\n<!doctype html> 이 페이지는 html로 작성되었어~~\n</li>\n<li>링크태그 <a href=\"\"></a> 전에 배울 땐 그냥 외웠던거같은데 hypertext reference라고 하니까 바로 외워졌다</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20200619_TIL","date":null,"lang":null}}},{"node":{"id":"9cab572f-5099-5f9f-abef-f1f900750bda","excerpt":"드디어 블로그 만들었다 _ 다른 분들 깃허브 블로그 만든 후기를 보면 꽤 헤매다가 만들었다는 얘기들이 많길래 무서워하면서도\n그래도 헤매봐야 얼마나 헤매겠어! 했는데 과거의 나 반성해…며칠이 걸린지 모르겠네..…","html":"<ul>\n<li>드디어 블로그 만들었다<br>\n_ 다른 분들 깃허브 블로그 만든 후기를 보면 꽤 헤매다가 만들었다는 얘기들이 많길래 무서워하면서도\n그래도 헤매봐야 얼마나 헤매겠어! 했는데 과거의 나 반성해…며칠이 걸린지 모르겠네..\n_ 잘 정리된 블로그에서 따라쳐서 어떻게 어떻게 글 하나는 만들었는데 내 손으로 쳐서 만들어보려니까 안올라가더라.. * 며칠을 헤맸던 원인은 결국 파일명이었음.. 첫 글 버젓이 날짜로 잘 만들어놓고 새 글은 날짜를 빼놓고 만들었더라 허허..</li>\n<li>수업을 들어도 머리에 안들어오는 느낌이라 배운 것들이랑 개인적으로 공부하는 것들을 간단하게나마 기록해보려고한다</li>\n<li>\n<p>오늘 한 것</p>\n<ul>\n<li>많이 부족하지만 블로그에 내 손으로 쓴 첫 글을 올렸다 (짝짝짝)</li>\n<li>살짝 늦잠잤지만 할거 다하고 제시간에 잘 나가서 학원도 평소랑 비슷한 시간에 도착함</li>\n<li>집에선 도저히 공부할 자신이 없어서 집 앞에 생긴지 얼마 안된 스터디 카페를 갔다. 내일 여성전용층이 오픈인데 그것도 모르고 오늘 와서 결제까지 해버림..\n결제하고 들어오니까 책상들에 의자가 없더라…허허 결국 어찌어찌 의자 받아와서 공부함</li>\n<li>아무래도 학원 수업만 따라하면서 공부하기엔 불안하기도 하고 두달째다니다보니 흥미도 점점 떨어지는 것 같아서 다른 공부를 더 해보려고 찾아보다가\n<a href=\"https://youtu.be/ODa9mY2bEEc\">노마드코더</a>에 올라온 영상을 보게되었다. 목표도 없고 뭘 해야할지 감도 안잡혔는데 이걸 보니 어렴풋이 감이 잡히는 느낌이다.\n저게 정답이 아니라도 일단 시작해보고 다른걸 뭘 더 할지 생각해보려고 한다.</li>\n</ul>\n</li>\n<li>\n<p>오늘 공부한 것</p>\n<ul>\n<li>github page는 파일명을 시간으로 해야 글로 인식한다.</li>\n<li>학원에서 Singleton Pattern과 그걸 이용하는 사원정보 CRUD 틀을 만들었음 (강사님이 치는거 열심히 따라친거밖에 없어서 공부가 더 필요할듯하다)</li>\n<li>생활코딩 HTML 강의 들음</li>\n<li>예전에 배웠던거라 빠르게 넘어가는 중.. 단순히 코딩 지식 외에도 얻을 수 있는게 많은 강의인거같음</li>\n</ul>\n</li>\n</ul>\n<p>=======</p>\n<hr>\n<p>title: “20200618_TIL”<br>\nexcerpt: \"\"</p>\n<p>categories:</p>\n<ul>\n<li>TIL<br>\ntags:</li>\n<li>TIL<br>\nlast<em>modified</em>at: 2020-06-18T08:06:00-05:00</li>\n</ul>\n<hr>\n<ul>\n<li>드디어 블로그 만들었다</li>\n<li>다른 분들 깃허브 블로그 만든 후기를 보면 꽤 헤매다가 만들었다는 얘기들이 많길래 무서워하면서도\n그래도 헤매봐야 얼마나 헤매겠어! 했는데 과거의 나 반성해…며칠이 걸린지 모르겠네..</li>\n<li>잘 정리된 블로그에서 따라쳐서 어떻게 어떻게 글 하나는 만들었는데 내 손으로 쳐서 만들어보려니까 안올라가더라..</li>\n<li>며칠을 헤맸던 원인은 결국 파일명이었음.. 첫 글 버젓이 날짜로 잘 만들어놓고 새 글은 날짜를 빼놓고 만들었더라 허허..</li>\n<li>학원 다니면서 배우는 것들이나</li>\n<li>오늘 한 것</li>\n</ul>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>66a80550de3ca1499582b3b45705d9670af259c5</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>","frontmatter":{"title":"20200618_TIL","date":null,"lang":null}}},{"node":{"id":"b3535854-f27b-57ad-9e5f-046b65a4e5ab","excerpt":"오늘 한 것 시도때도 없이 심장이 두근거려서 밥 잘챙겨먹으려고 노력중 몸무게 생각하지 않고 가리지 않고 잘 먹으려고 한다. 물을 적게먹어서 그런가 싶어서 물도 열심히 먹어보는중 전보다는 덜해진거같은데 아예 안 두근거리지는 않는다… 오늘 공부한 것 HTML…","html":"<ul>\n<li>\n<p>오늘 한 것</p>\n<ul>\n<li>시도때도 없이 심장이 두근거려서 밥 잘챙겨먹으려고 노력중</li>\n<li>몸무게 생각하지 않고 가리지 않고 잘 먹으려고 한다. 물을 적게먹어서 그런가 싶어서 물도 열심히 먹어보는중</li>\n<li>전보다는 덜해진거같은데 아예 안 두근거리지는 않는다…</li>\n</ul>\n</li>\n<li>\n<p>오늘 공부한 것</p>\n<ul>\n<li>HTML 생활코딩 강의 ( 웹의 역사, 최초의 웹브라우저, 서버와 클라이언트, 링크를 통해서 여러 파일을 엮어서 웹사이트 만들기 )</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"20200621_TIL","date":null,"lang":null}}},{"node":{"id":"3ac4c069-082c-5f73-b3ef-d5268ae8c02c","excerpt":"jQuery 체크박스 클릭 개수 제한 jQuery를 사용하여 체크박스를 최대 3개까지만 체크할 수 있도록 제한 처음엔 클릭이 발생할 때마다 를 반복문을 돌리면서 checked의 true여부를 확인하고 3개 이상일 경우 alert창을 띄우게 만들었다. selector…","html":"<h2 id=\"jquery-체크박스-클릭-개수-제한\" style=\"position:relative;\"><a href=\"#jquery-%EC%B2%B4%ED%81%AC%EB%B0%95%EC%8A%A4-%ED%81%B4%EB%A6%AD-%EA%B0%9C%EC%88%98-%EC%A0%9C%ED%95%9C\" aria-label=\"jquery 체크박스 클릭 개수 제한 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[jQuery] 체크박스 클릭 개수 제한</h2>\n<ul>\n<li>jQuery를 사용하여 체크박스를 최대 3개까지만 체크할 수 있도록 제한</li>\n</ul>\n<div>관심언어</div>\n<div>\n    <input type=\"checkbox\" name=\"language\" value=\"java\"/>Java\n    <input type=\"checkbox\" name=\"language\" value=\"C/C++\"/>C/C++\n\t<input type=\"checkbox\" name=\"language\" value=\"VB\">VB\n\t<input type=\"checkbox\" name=\"language\" value=\"Python\"/>Python<br/>\n\t<input type=\"checkbox\" name=\"language\" value=\"jsp\"/>JSP\n\t<input type=\"checkbox\" name=\"language\" value=\"php\"/>php\n\t<input type=\"checkbox\" name=\"language\" value=\"Asp\"/>ASP\n\t<input type=\"checkbox\" name=\"language\" value=\"HTML\"/>HTML\n</div>\n<ul>\n<li>\n<p>처음엔 클릭이 발생할 때마다 <code class=\"language-text\">$(\"name='language'\")</code>를 반복문을 돌리면서 checked의 true여부를 확인하고 3개 이상일 경우 alert창을 띄우게 만들었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name='language'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name='language'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":checked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//alert창이 뜨더라도 checkbox는 체크가 계속 되는 문제를 해결하기 위해</span>\n    <span class=\"token comment\">//최근에 선택된 checkbox의 checked를 false로 바꿔주었다.</span>\n\n    <span class=\"token comment\">//cnt 3이후에 체크한 checkbox가 체크된 박스의 뒤 인덱스를 가지고 있다면</span>\n    <span class=\"token comment\">//정상적으로 작동하는데 앞 인덱스를 새로 선택할 경우</span>\n    <span class=\"token comment\">//새로 선택한 체크박스는 선택이 되고</span>\n    <span class=\"token comment\">//cnt 3이내에 체크했던 체크박스는 체크가 해제되버리는 문제가 발생......</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name='language'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"checked\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"관심언어는 최대 3개 선택가능합니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>selector로 <code class=\"language-text\">[name='laneguage']:checked</code>를 사용하면 checkbox에서 checked가 true인 애들만 데려와서 연산을 이어갈 수 있다.</li>\n<li>name이 동일할 경우 값은 배열형태로 구할 수 있으므로 <code class=\"language-text\">.length</code>를 사용하여 3 이상일 때 최근에 선택된 checkbox의 값이 변경되지 못하게 false로 바꾸어준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//name='language'에 클릭이 발생했을 때</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[name='language']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//[name='laneguage']:checked를 사용하여 체크된 체크박스의 개수를 가져올 수 있다.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[name='language']:checked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"관심언어는 3개까지만 선택할 수 있습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//방금 선택된 checkbox?</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"checked\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// console.log(i+\" \"+$(\"[name='language']\").eq(i).is(\":checked\"));</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"20200709_TIL","date":null,"lang":null}}},{"node":{"id":"b973a7e3-aec9-5b5c-8693-7642985068ea","excerpt":"✅ 문자열 백틱, 큰따옴표, 작은 따옴표로 묶인 모든 문자 다양한 메소드와 속성을 사용해서 다룰 수 있음 문자열의 모든 메소드들은 원본 문자열을 변경하지 않음() template literal…","html":"<h2 id=\"-문자열\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%9E%90%EC%97%B4\" aria-label=\" 문자열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 문자열</h2>\n<ul>\n<li>백틱, 큰따옴표, 작은 따옴표로 묶인 모든 문자</li>\n<li>다양한 메소드와 속성을 사용해서 다룰 수 있음</li>\n<li>문자열의 모든 메소드들은 원본 문자열을 변경하지 않음(<code class=\"language-text\">immutable</code>)</li>\n<li>\n<p>template literal:</p>\n<ul>\n<li>+연산자를 사용하지 않고 문자열을 합칠 수 있음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'san'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'Hi, san!'</span></code></pre></div>\n</li>\n<li>문자열 길이 <code class=\"language-text\">str.length</code></li>\n<li>문자열 글자에 접근 <code class=\"language-text\">str[4]</code></li>\n<li>문자열 합치기 <code class=\"language-text\">str1 + str2</code></li>\n<li>\n<p>문자열 자르기</p>\n<ul>\n<li><code class=\"language-text\">str.slice(0, 3)</code> 문자열, 배열에 둘 다 사용가능</li>\n<li><code class=\"language-text\">str.substring(0, 3)</code> 문자열에만 사용</li>\n</ul>\n</li>\n<li>영문 대문자 만들기 <code class=\"language-text\">str.toUpperCase()</code></li>\n<li>영문 소문자 만들기 <code class=\"language-text\">str.toLowerCase()</code></li>\n<li>\n<p>문자열 중 원하는 문자의 인덱스 얻기</p>\n<ul>\n<li><code class=\"language-text\">str.indexOf('d')</code>: 앞에서 탐색해서 제일 첫번째 나오는 문자 인덱스 반환</li>\n<li><code class=\"language-text\">str.lastIndexOf('d')</code>: 제일 마지막에 나는 문자의 인덱스 반환</li>\n</ul>\n</li>\n<li>\n<p>문자열에 원하는 문자가 포함되어 있는지 검색</p>\n<ul>\n<li><code class=\"language-text\">str.includes('hi')</code>: boolean 값 반환, 있으면 true 없으면 false</li>\n</ul>\n</li>\n<li>\n<p>문자열 잘라서 배열 만들기</p>\n<ul>\n<li><code class=\"language-text\">str.split(\" \")</code>: 원하는 문자를 기준으로 잘라 배열로 만듦</li>\n</ul>\n</li>\n<li>\n<p>배열을 문자열로 만들기</p>\n<ul>\n<li><code class=\"language-text\">str.join(\" \")</code>: 배열의 원소들 사이에 원하는 문자를 넣어서 문자 만들기</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[TIL]2.JavaScript 문자열 다루기","date":null,"lang":null}}},{"node":{"id":"69e5f1ca-70bd-5f5c-8d1d-17ddc6fa9ff8","excerpt":"…","html":"<h2 id=\"-변수\" style=\"position:relative;\"><a href=\"#-%EB%B3%80%EC%88%98\" aria-label=\" 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 변수</h2>\n<ul>\n<li>프로그래밍은 데이터를 처리하는 것, 이 때 변수는 데이터를 쉽게 저장하고 꺼내쓰기 위해 사용한다.</li>\n<li>\n<p>변수의 선언과 값의 할당</p>\n<ul>\n<li>변수의 선언은 <code class=\"language-text\">var</code>, <code class=\"language-text\">let</code>, <code class=\"language-text\">const</code>를 사용</li>\n<li><code class=\"language-text\">var</code>: 재선언 가능, 재할당 가능, 추천하지 않음</li>\n<li><code class=\"language-text\">let</code>: 재선언 불가능, 재할당 가능, 값이 바뀔 경우 사용</li>\n<li><code class=\"language-text\">const</code>: 재선언 불가능, 재할당 불가능, 바뀌지 않을 변수를 선언할 때 사용</li>\n<li>모든 변수를 <code class=\"language-text\">const</code>로 선언하고 코딩을 하다가 재할당을 해야되는 변수는 <code class=\"language-text\">let</code>으로 수정하면 됨</li>\n<li>\n<p>값의 할당은 할당 연산자 <code class=\"language-text\">=</code>을 사용한다. 오른쪽에 있는 값을 왼쪽에 변수에 할당한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> name <span class=\"token comment\">// 변수 선언</span>\nname <span class=\"token operator\">=</span> <span class=\"token string\">'san'</span> <span class=\"token comment\">// 값 할당</span>\n<span class=\"token keyword\">let</span> myName <span class=\"token operator\">=</span> <span class=\"token string\">'yeon'</span> <span class=\"token comment\">// 변수 선언과 값 할당을 동시에 할 수 있음</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"-타입\" style=\"position:relative;\"><a href=\"#-%ED%83%80%EC%9E%85\" aria-label=\" 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 타입</h2>\n<ul>\n<li>\n<p>원시 자료형, 참조 자료형</p>\n<ul>\n<li>원시자료형: String, Number, Boolean, undefined, Bigint, Symbol</li>\n<li>String: 문자열, <code class=\"language-text\">\"</code> <code class=\"language-text\">'</code> <code class=\"language-text\">`</code>으로 감싼 모든 값, 여는 문자와 닫는 문자가 동일해야함</li>\n<li>Number: 숫자</li>\n<li>Boolean: <code class=\"language-text\">true</code> <code class=\"language-text\">false</code></li>\n<li>undefined: 정의되지 않음, 아무 값도 넣지 않았을 경우, 변수에 값할당을 하지 않았을 경우, return이 없는 함수에서 반환값을 받으려 할 경우</li>\n<li>\n<p>Bigint</p>\n<ul>\n<li>Number가 나타낼 수 있는 최대치인 2^53 - 1보다 큰 정수를 표현할 수 있음</li>\n<li>Number와 혼합하여 사용할 수 없다. 계산을 하려면 같은 자료형을 변환해야 하는데 BigInt를 Number로 변환할 경우 값의 정확성을 잃을 수 있다.</li>\n<li>정수리터럴 뒤에 <code class=\"language-text\">n</code>을 붙이거나 함수 <code class=\"language-text\">Bigint()</code>를 호출해서 사용할 수 있음</li>\n</ul>\n</li>\n<li>\n<p>Symbol</p>\n<ul>\n<li>ECMAScript 6에서 추가됨</li>\n<li>유일하고 변경불가능한 값(immutable)</li>\n<li>객체 속성의 key값으로 사용가능</li>\n</ul>\n</li>\n<li>참조자료형: 배열, 객체, 함수</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">typeof</code></p>\n<ul>\n<li>값이 어떤 자료형을 가지고 있는지 확인할 수 있다.</li>\n<li>참조자료형에서는 배열, 객체, 함수에 상관없이 <code class=\"language-text\">object</code>를 반환하기 때문에 원시자료형에 사용할 때만 유의미한 결과를 얻을 수 있다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅함수</h2>\n<ul>\n<li>작은 기능의 단위, 명령의 모음</li>\n<li>\n<p>선언식</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>표현식</p>\n<ul>\n<li>변수를 선언하고 익명함수를 생성한 후, 변수에 익명함수를 할당함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>화살표 함수</p>\n<ul>\n<li>표현식에서 쓰던 익명함수를 화살표를 사용한 함수로 바뀌서 작성한다.</li>\n<li>함수가 짧을 경우 소괄호를 사용하거나, 괄호 없이 작성하면 return을 생략하고 작성할 수 있다.</li>\n<li>\n<p><code class=\"language-text\">{}</code>를 사용하면 return을 작성해주어야 함</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sayHi</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">name</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>함수 이름에 <code class=\"language-text\">()</code>를 붙여 호출한다.</li>\n<li>parameter: 함수를 선언할 때 정해지는, 함수에 전달될 변수, let 없어도됨</li>\n<li>argument: 함수를 호출할 때 함수에 값을 전달하는 변수</li>\n</ul>\n<hr>\n<h2 id=\"조건문\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%AC%B8\" aria-label=\"조건문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅조건문</h2>\n<ul>\n<li>\n<p>truthy, falsy가 조건문에서 동작하는 방식</p>\n<ul>\n<li>JavaScript에서 불리언이 기대되는 문맥에서 <code class=\"language-text\">true</code>나 <code class=\"language-text\">false</code>로 평가되는 값들</li>\n<li><code class=\"language-text\">falsy</code> : undefined, null, 0, -0, NaN, false, ”…</li>\n<li><code class=\"language-text\">truthy</code> : <code class=\"language-text\">falsy</code> 가 아닌 모든 값들</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12n</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>다른 언어들처럼 <code class=\"language-text\">==</code> <code class=\"language-text\">!=</code>을 사용해서 연산하면 혼란이 생길 수 있음\ntruthy와 falsy를 생각하지 않고 값을 비교할 수 있도록 엄격한 비교(<code class=\"language-text\">===</code>, <code class=\"language-text\">!==</code>)를 사용한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">if</code>, <code class=\"language-text\">else if</code>, <code class=\"language-text\">else</code></p>\n<ul>\n<li><code class=\"language-text\">if</code>: 조건에 대한 참, 거짓에 따라 데이터를 다르게 계산하고 싶을 때 조건문과 함께 사용</li>\n<li><code class=\"language-text\">else if</code>: <code class=\"language-text\">if</code>에서 <code class=\"language-text\">false</code>로 걸러진 데이터을 다른 조건으로 다시 거르고 싶을 때 사용, 여러개 연결해서 사용해도 됨</li>\n<li><code class=\"language-text\">else</code>: <code class=\"language-text\">if</code>의 조건도 아니고 <code class=\"language-text\">else if</code>의 조건도 아닐 때 실행할 코드</li>\n</ul>\n</li>\n<li>\n<p>논리 연산자: <code class=\"language-text\">&amp;&amp;</code>, <code class=\"language-text\">||</code>, <code class=\"language-text\">!</code></p>\n<ul>\n<li><code class=\"language-text\">A &amp;&amp; B</code>: 논리곱, A와 B 모두 참일 때만 참</li>\n<li><code class=\"language-text\">A || B</code>: 논리합, A와 B 둘 중 하나라도 참이면 참, 둘 다 거짓이어야 거짓</li>\n<li><code class=\"language-text\">!A</code>: 부정연산, 참을 거짓으로, 거짓을 참으로</li>\n</ul>\n</li>\n</ul>\n<p>출처: <a href=\"https://developer.mozilla.org/ko/docs/Glossary/Truthy\">참 같은 값</a></p>","frontmatter":{"title":"[TIL]1. JavaScript 변수, 타입, 함수, 조건문","date":null,"lang":null}}},{"node":{"id":"6c17eec2-c424-5ba6-8386-df232cabeecd","excerpt":"✅ 반복문 for문은 끝날 시점을 알 때 사용 정해진 조건 안에서만 반복 while문은 끝날 시점이 명확하지 않을 때 사용 조건에 부합하는 한 계속 반복함 이중포문 안쪽 for문이 모두 돌아야 바깥 for…","html":"<h2 id=\"-반복문\" style=\"position:relative;\"><a href=\"#-%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\" 반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 반복문</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  i<span class=\"token operator\">++</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>for문은 끝날 시점을 알 때 사용</p>\n<ul>\n<li>정해진 조건 안에서만 반복</li>\n</ul>\n</li>\n<li>\n<p>while문은 끝날 시점이 명확하지 않을 때 사용</p>\n<ul>\n<li>조건에 부합하는 한 계속 반복함</li>\n</ul>\n</li>\n<li>\n<p>이중포문</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>j<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>안쪽 for문이 모두 돌아야 바깥 for문이 다음 순서로 넘어갈 수 있다. 다음 순서로 넘어가서 다시 안쪽 포문이 반복됨</li>\n<li>시간과 분의 관계라고 생각하면 됨, 1시에서 2시로 넘어가려면 60분이 다 지나야 하는 것과 같음</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>원래 다 알고 있던 것들이라서 복습하는 겸 알고 있던게 진짜로 아는게 맞는지 확인하는 겸하면서 공부를 하고 있다. 지금까지는 어려운 점 없이 수월하게 넘어가고 있는 것 같다. 아직 익숙한 것들만 배워서 그런지 국비에서 자바 배운 것으로 취업을 했어야 하나 하는 걱정도 있다. 그래도 이미 마음 먹은거 후회하지 말고 앞만 보자 하고 버티는 중이다. 이미 배운 것들도 복습하면서 또 배우고 하면 언젠간 다 도움이 되겠지!</p>","frontmatter":{"title":"[TIL]3. JavaScript 반복문","date":null,"lang":null}}},{"node":{"id":"3a5f61c4-a1c0-5ecc-935f-04912ae02640","excerpt":"✅ HTML markup language로 구조를 표현하는 언어이다. 태그들로 구조를 구성한다. 태그의 구조는 opening tag, closing tag, self-closing tag로 이루어져있다. 자주 사용되는 HTML element : auchor…","html":"<h2 id=\"-html\" style=\"position:relative;\"><a href=\"#-html\" aria-label=\" html permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ HTML</h2>\n<ul>\n<li>markup language로 구조를 표현하는 언어이다.</li>\n<li>\n<p>태그들로 구조를 구성한다. 태그의 구조는 opening tag, closing tag, self-closing tag로 이루어져있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>안녕하세요<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n<li>\n<p>자주 사용되는 HTML element</p>\n<ul>\n<li><code class=\"language-text\">&lt;a href=\"\"></code>: auchor 닻의 약자로 다른 웹페이지로 연결되는 하이퍼링크를 HTML 문서에 표시할 때 사용한다. 속성 href는 이동할 페이지의 위치가 들어간다.</li>\n<li><code class=\"language-text\">&lt;p></code>: paragraph의 약자로 문단을 HTML 문서에 표현할 때 사용한다.</li>\n<li><code class=\"language-text\">&lt;section></code>: 웹 페이지에서 큰 의미 단위가 될 수 있는 어떤 것을 하나로 묶어서 하나의 구역으로 구분할 때 사용한다. HTML5의 시멘틱 엘리먼트 중에 하나이다. 이전엔 <code class=\"language-text\">div</code>를 사용했지만 <code class=\"language-text\">div</code>는 엘리먼트 자체가 가진 의미가 없기 때문에 되도록 시멘틱 엘리먼트를 사용하고 사용할 수 있는 엘리먼트가 하나도 없을 경우에만 <code class=\"language-text\">div</code>를 사용하는 것을 추천한다.</li>\n<li>\n<p><code class=\"language-text\">ul</code>, <code class=\"language-text\">ol</code>, <code class=\"language-text\">li</code> - <code class=\"language-text\">ul</code>: unordered list의 약자로 순서가 없는 리스트를 문서에 표현할 때 사용한다. 들여쓰기와 bullet 스타일이 적용됨 - <code class=\"language-text\">ol</code>: ordered list의 약자로 순서가 있는 리스트를 문서에 표현할 때 사용한다. 들여쓰기와 1부터 차례대로 번호가 매겨진 스타일이 적용된다. - <code class=\"language-text\">li</code>: <code class=\"language-text\">ul</code>, <code class=\"language-text\">ol</code>은 여는 태그와 닫는 태그로 <code class=\"language-text\">li</code> 엘리먼트를 감싸는 형태이다. <code class=\"language-text\">li</code> 안에는 리스트에 담고싶은 콘텐츠들이 들어가게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li><code class=\"language-text\">input</code></li>\n<li><code class=\"language-text\">input</code>은 속성 <code class=\"language-text\">type</code>의 값으로 형태가 정해진다. 값에는 <code class=\"language-text\">text</code>, <code class=\"language-text\">textarea</code>, <code class=\"language-text\">checkbox</code>, <code class=\"language-text\">radio</code>, <code class=\"language-text\">password</code> 등이 있고 목적에 맞게 사용하면 된다.</li>\n<li><code class=\"language-text\">button</code></li>\n<li>버튼을 표시할 때 사용하는 엘리먼트</li>\n</ul>\n<p>기타 등등의 엘리먼트들이 있고 그에 따른 속성들도 있는데, 외우지 않고 그때그때 필요한 것을 찾아 사용하면 된다. HTML5부터 나온 시맨틱 태그들을 적절한 위치에 잘 사용하는 것을 권장한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">id</code>와 <code class=\"language-text\">class</code></p>\n<ul>\n<li>id는 한 HTML 문서에서 유일하게 정의된 이름이어야 한다.</li>\n<li>class는 여러번 사용할 수 있다. css 적용에 활용한다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[TIL]4. HTML","date":null,"lang":null}}},{"node":{"id":"3e096b9b-68de-50eb-8d4a-6e00b357829a","excerpt":"문제 설명 빙하가 깨지면서 스노우타운에 떠내려 온 “죠르디”는 인생…","html":"<h6 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h6>\n<p>빙하가 깨지면서 스노우타운에 떠내려 온 <strong>“죠르디”</strong>는 인생 2막을 위해 주택 건축사업에 뛰어들기로 결심하였습니다. “죠르디”는 <strong>기둥과 보</strong>를 이용하여 벽면 구조물을 자동으로 세우는 로봇을 개발할 계획인데, 그에 앞서 로봇의 동작을 시뮬레이션 할 수 있는 프로그램을 만들고 있습니다.\n프로그램은 <strong>2차원 가상 벽면</strong>에 기둥과 보를 이용한 구조물을 설치할 수 있는데, 기둥과 보는 <strong>길이가 1인 선분</strong>으로 표현되며 다음과 같은 규칙을 가지고 있습니다.</p>\n<ul>\n<li>기둥은 바닥 위에 있거나 보의 한쪽 끝 부분 위에 있거나, 또는 다른 기둥 위에 있어야 합니다.</li>\n<li>보는 한쪽 끝 부분이 기둥 위에 있거나, 또는 양쪽 끝 부분이 다른 보와 동시에 연결되어 있어야 합니다.</li>\n</ul>\n<p>단, 바닥은 벽면의 맨 아래 지면을 말합니다.</p>\n<p>2차원 벽면은 <strong><code class=\"language-text\">n x n</code></strong> 크기 정사각 격자 형태이며, 각 격자는 <strong><code class=\"language-text\">1 x 1</code></strong> 크기입니다. 맨 처음 벽면은 비어있는 상태입니다. 기둥과 보는 격자선의 교차점에 걸치지 않고, 격자 칸의 각 변에 정확히 일치하도록 설치할 수 있습니다. 다음은 기둥과 보를 설치해 구조물을 만든 예시입니다.</p>\n<p><img src=\"https://grepp-programmers.s3.amazonaws.com/files/production/c453630fa0/834b86e5-6fd0-4d3c-8023-7f853ea4301f.jpg\" alt=\"기둥과보-1.jpg\"></p>\n<p>예를 들어, 위 그림은 다음 순서에 따라 구조물을 만들었습니다.</p>\n<ol>\n<li>(1, 0)에서 위쪽으로 기둥을 하나 설치 후, (1, 1)에서 오른쪽으로 보를 하나 만듭니다.</li>\n<li>(2, 1)에서 위쪽으로 기둥을 하나 설치 후, (2, 2)에서 오른쪽으로 보를 하나 만듭니다.</li>\n<li>(5, 0)에서 위쪽으로 기둥을 하나 설치 후, (5, 1)에서 위쪽으로 기둥을 하나 더 설치합니다.</li>\n<li>(4, 2)에서 오른쪽으로 보를 설치 후, (3, 2)에서 오른쪽으로 보를 설치합니다.</li>\n</ol>\n<p>만약 (4, 2)에서 오른쪽으로 보를 먼저 설치하지 않고, (3, 2)에서 오른쪽으로 보를 설치하려 한다면 2번 규칙에 맞지 않으므로 설치가 되지 않습니다. 기둥과 보를 삭제하는 기능도 있는데 기둥과 보를 삭제한 후에 남은 기둥과 보들 또한 위 규칙을 만족해야 합니다. 만약, 작업을 수행한 결과가 조건을 만족하지 않는다면 해당 작업은 무시됩니다.</p>\n<p>벽면의 크기 n, 기둥과 보를 설치하거나 삭제하는 작업이 순서대로 담긴 2차원 배열 build_frame이 매개변수로 주어질 때, 모든 명령어를 수행한 후 구조물의 상태를 return 하도록 solution 함수를 완성해주세요.</p>\n<h3 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h3>\n<ul>\n<li>n은 5 이상 100 이하인 자연수입니다.</li>\n<li>build_frame의 세로(행) 길이는 1 이상 1,000 이하입니다.</li>\n<li>build_frame의 가로(열) 길이는 4입니다.</li>\n<li>\n<p>build_frame의 원소는 [x, y, a, b]형태입니다.</p>\n<ul>\n<li>x, y는 기둥, 보를 설치 또는 삭제할 교차점의 좌표이며, [가로 좌표, 세로 좌표] 형태입니다.</li>\n<li>a는 설치 또는 삭제할 구조물의 종류를 나타내며, 0은 기둥, 1은 보를 나타냅니다.</li>\n<li>b는 구조물을 설치할 지, 혹은 삭제할 지를 나타내며 0은 삭제, 1은 설치를 나타냅니다.</li>\n<li>벽면을 벗어나게 기둥, 보를 설치하는 경우는 없습니다.</li>\n<li>바닥에 보를 설치 하는 경우는 없습니다.</li>\n</ul>\n</li>\n<li>구조물은 교차점 좌표를 기준으로 보는 오른쪽, 기둥은 위쪽 방향으로 설치 또는 삭제합니다.</li>\n<li>구조물이 겹치도록 설치하는 경우와, 없는 구조물을 삭제하는 경우는 입력으로 주어지지 않습니다.</li>\n<li>\n<p>최종 구조물의 상태는 아래 규칙에 맞춰 return 해주세요.</p>\n<ul>\n<li>return 하는 배열은 가로(열) 길이가 3인 2차원 배열로, 각 구조물의 좌표를 담고있어야 합니다.</li>\n<li>return 하는 배열의 원소는 [x, y, a] 형식입니다.</li>\n<li>x, y는 기둥, 보의 교차점 좌표이며, [가로 좌표, 세로 좌표] 형태입니다.</li>\n<li>기둥, 보는 교차점 좌표를 기준으로 오른쪽, 또는 위쪽 방향으로 설치되어 있음을 나타냅니다.</li>\n<li>a는 구조물의 종류를 나타내며, 0은 기둥, 1은 보를 나타냅니다.</li>\n<li>return 하는 배열은 x좌표 기준으로 오름차순 정렬하며, x좌표가 같을 경우 y좌표 기준으로 오름차순 정렬해주세요.</li>\n<li>x, y좌표가 모두 같은 경우 기둥이 보보다 앞에 오면 됩니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h3>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>build_frame</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>[[1,0,0,1],[1,1,1,1],[2,1,0,1],[2,2,1,1],[5,0,0,1],[5,1,0,1],[4,2,1,1],[3,2,1,1]]</td>\n<td>[[1,0,0],[1,1,1],[2,1,0],[2,2,1],[3,2,1],[4,2,1],[5,0,0],[5,1,0]]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[[0,0,0,1],[2,0,0,1],[4,0,0,1],[0,1,1,1],[1,1,1,1],[2,1,1,1],[3,1,1,1],[2,0,0,0],[1,1,1,0],[2,2,0,1]]</td>\n<td>[[0,0,0],[0,1,1],[1,1,1],[2,1,1],[3,1,1],[4,0,0]]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"입출력-예에-대한-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88%EC%97%90-%EB%8C%80%ED%95%9C-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예에 대한 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예에 대한 설명</h3>\n<p><strong>입출력 예 #1</strong></p>\n<p>문제의 예시와 같습니다.</p>\n<p><strong>입출력 예 #2</strong></p>\n<p>여덟 번째 작업을 수행 후 아래와 같은 구조물 만들어집니다.</p>\n<p><img src=\"https://grepp-programmers.s3.amazonaws.com/files/production/e62b852aba/ff82828f-5d2c-43af-b734-2752a776a234.jpg\" alt=\"기둥과보-2.jpg\"></p>\n<p>아홉 번째 작업의 경우, (1, 1)에서 오른쪽에 있는 보를 삭제하면 (2, 1)에서 오른쪽에 있는 보는 조건을 만족하지 않으므로 무시됩니다.</p>\n<p>열 번째 작업의 경우, (2, 2)에서 위쪽 방향으로 기둥을 세울 경우 조건을 만족하지 않으므로 무시됩니다.</p>\n<h3 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> stuff <span class=\"token keyword\">in</span> answer<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> stuff <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 기둥 조건 확인</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> answer <span class=\"token keyword\">or</span> <span class=\"token punctuation\">[</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> answer <span class=\"token keyword\">or</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 보 조건 확인</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> answer <span class=\"token keyword\">or</span> <span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> answer <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> answer <span class=\"token keyword\">and</span> <span class=\"token punctuation\">[</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> build_frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> stuff<span class=\"token punctuation\">,</span> oper<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> build_frame<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> oper <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 삭제</span>\n            <span class=\"token comment\"># 자재를 삭제하고 삭제해도 괜찮은지 확인</span>\n            <span class=\"token comment\"># 괜찮으면 넘어가고, 안 괜찮으면 다시 설치해줌</span>\n            answer<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> stuff<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> check<span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> stuff<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 설치</span>\n            <span class=\"token comment\"># 자재를 설치하고 설치할 수 있는지 확인</span>\n            <span class=\"token comment\"># 할 수 있으면 그대로 두고, 안 되면 삭제</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> stuff<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> check<span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                answer<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> stuff<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span></code></pre></div>\n<p>구조물이 설치, 삭제될 때마다 리스트 <code class=\"language-text\">answer</code>를 확인하면서 기둥들과 보들이 들어갈 수 있는지 매번 확인하는 방식으로 구현하였다.</p>","frontmatter":{"title":"[algorithm]기둥과 보","date":null,"lang":null}}},{"node":{"id":"c0e0a3ef-9766-57c2-8bf0-121b38d95fa0","excerpt":"✅ CSS id: 한 문서 내에 하나의 요소에만 적용된 유일한 이름이어야 한다. class: 보통 css를 적용하기 위해 사용한다. 여러 번 사용할 수 있음 적용 방법 파일을 따로 분리하고 link 태그를 사용하여 연결한다. html 파일 내에 style 태그 내부에 작성한다. tag…","html":"<h2 id=\"-css\" style=\"position:relative;\"><a href=\"#-css\" aria-label=\" css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ CSS</h2>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* class selector */</span>\n<span class=\"token selector\">.title</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* id selector */</span>\n<span class=\"token selector\">#userId</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">fontweight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 40px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* tag selector */</span>\n<span class=\"token selector\">input</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 130px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>id: 한 문서 내에 하나의 요소에만 적용된 유일한 이름이어야 한다.</li>\n<li>class: 보통 css를 적용하기 위해 사용한다. 여러 번 사용할 수 있음</li>\n</ul>\n<hr>\n<h3 id=\"적용-방법\" style=\"position:relative;\"><a href=\"#%EC%A0%81%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"적용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>적용 방법</h3>\n<ol>\n<li>파일을 따로 분리하고 link 태그를 사용하여 연결한다.</li>\n<li>html 파일 내에 style 태그 내부에 작성한다.</li>\n<li>tag의 style 속성에 작성한다.</li>\n<li>HTML 파일과 분리하여 정의하는 것이 권장됨\n파일 하나당 하나에만 집중할 수 있게 하기 위해 파일을 분리한다. HTML 파일에서는 HTML만 신경쓰고 CSS 파일에서는 CSS만 신경쓸 수 있도록 함</li>\n</ol>\n<hr>\n<h3 id=\"길이-단위\" style=\"position:relative;\"><a href=\"#%EA%B8%B8%EC%9D%B4-%EB%8B%A8%EC%9C%84\" aria-label=\"길이 단위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>길이 단위</h3>\n<ul>\n<li>\n<p>절대단위</p>\n<ul>\n<li>픽셀로 표현한다.<code class=\"language-text\">px</code></li>\n<li>반응형 웹에서 픽셀같은 절대 길이 단위로 지정하면 컨테이너 사이즈를 조정해도 폰트 크기가 고정값으로 유지되어 변하지 않는다.</li>\n<li>사용자가 브라우저 내 설정에서 폰트 사이즈를 조정해도 적용되지 않는다.</li>\n</ul>\n</li>\n<li>\n<p>상대단위</p>\n<ul>\n<li>상위 요소의 글꼴 또는 뷰포트의 크기에 따라서 크기가 상대적으로 결정된다.</li>\n<li>텍스트나 다른 요소의 크기가 페이지의 다른 모든 것에 비례하여 조정되도록 계획할 수 있다.</li>\n<li><code class=\"language-text\">em</code>: 브라우저 기본 폰트 글꼴 크기에 상대적으로 결정</li>\n<li><code class=\"language-text\">rem</code>: 루트 요소의 글꼴 크기에 상대적으로 결정</li>\n<li><code class=\"language-text\">vw</code>, <code class=\"language-text\">vh</code>: 뷰포트의 너비, 높이에 상대적 비율</li>\n</ul>\n</li>\n<li>\n<p>상대 단위와 절대 단위를 정하는 기준</p>\n<ol>\n<li>기기나 브라우저 사이즈 등의 환경에 영향을 받지 않고 절대적인 크기로 정하는 경우\n<code class=\"language-text\">px</code>: 인쇄와 같이 화면의 사이즈가 정해진 경우에 유리하다.</li>\n<li>일반적인 경우\n<code class=\"language-text\">rem</code>: 사용자가 설정한 기본 글꼴 크기를 따르므로 접근성에 유리하다.\n<code class=\"language-text\">em</code>은 부모 엘리먼트에 따라 상대적으로 크기가 변경되므로 계산이 어려운 반면, <code class=\"language-text\">rem</code>은 루트의 글자 크기에 따라서만 상대적으로 변하기 때문에 다루기 쉽다.</li>\n<li>반응형 웹(responsive web)에서 기준점을 만들 때</li>\n<li>반응형 웹: 디바이스의 너비에 따라 유동적인 레이아웃이 적용되는 웹사이트</li>\n</ol>\n<p> 디바이스 크기 별로, 가로모드, 세로모드 별로 다른 CSS를 적용해야 한다. 이 때에 디바이스 크기를 나누는 기준을 보통 <code class=\"language-text\">px</code>로 정한다.</p>\n<ol start=\"4\">\n<li>화면 너비나 높이에 따른 상대적인 크기가 중요한 경우\n<code class=\"language-text\">vh</code>, <code class=\"language-text\">vw</code>\n화면을 가득 채우며 딱 떨어지게 스크롤되는 사이트들이 100vh, 100vw를 사용하여 구현한다.</li>\n</ol>\n<p> <code class=\"language-text\">body</code> 태그의 <code class=\"language-text\">%</code>는 HTML이 차지하는 모든 영역, 즉 눈에 보이지 않는 영역까지 포함한 비율이기 때문에 계산하기 쉽지 않다.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"박스모델\" style=\"position:relative;\"><a href=\"#%EB%B0%95%EC%8A%A4%EB%AA%A8%EB%8D%B8\" aria-label=\"박스모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>박스모델</h3>\n<ul>\n<li>\n<p>박스를 구성하는 요소<br>\n<img src=\"http://tcpschool.com/lectures/img_css_boxmodel.png\" alt=\"박스모델\"></p>\n<ul>\n<li>margin: 박스의 바깥 여백</li>\n<li>음수값 지정이 가능하다. 여백에 음수 값을 지정하면 다른 엘리먼트와의 간격이 줄어들고 극단적으로 사용하면 화면에서 아예 사라지거나 다른 엘리먼트와 겹치게 만들 수 있다.</li>\n<li>border: 박스의 테두리</li>\n<li>padding: 박스의 안쪽 여백</li>\n<li>content: 내용</li>\n</ul>\n</li>\n<li>\n<p>박스의 종류</p>\n<ul>\n<li>block: 줄바꿈이 되고 크기를 지정할 수 있음 <code class=\"language-text\">div</code></li>\n<li>inline: 줄바꿈이 되지 않고 크기를 지정할 수 없음, content만큼의 크기를 가짐 <code class=\"language-text\">span</code></li>\n<li>inline-block: 줄바꿈이 되지 않고, 크기를 지정할 수 있음</li>\n</ul>\n</li>\n<li>\n<p>박스의 크기 계산\n<code class=\"language-text\">box-sizing</code> 값에 따라 크기 계산 방식이 달라진다.</p>\n<ul>\n<li><code class=\"language-text\">content-box</code>: <code class=\"language-text\">width</code> = content이다. 실제 박스의 크기는 테두리 + 안쪽여백 + 내용 이다. 높이도 마찬가지임, 실제 화면에 보이는 박스크기를 계산하기 번거롭다.</li>\n<li><code class=\"language-text\">border-box</code>: <code class=\"language-text\">width</code> = 테두리 + 안쪽여백 + 내용이다. 실제 화면에 보이는 박스 크기가 <code class=\"language-text\">width</code> 값이기 때문에 설정할 때 편하다.</li>\n<li>기본값이 <code class=\"language-text\">content-box</code> 이기 때문에 css를 작성하기 전 먼저 <code class=\"language-text\">box-sizing</code> 속성을 <code class=\"language-text\">border-box</code>로 변경해주는 것이 편한다.</li>\n</ul>\n</li>\n<li>\n<p>박스 바깥으로 벗어나는 콘텐츠 처리하기</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span></code></pre></div>\n<p>박스의 크기가 컨텐츠의 크기보다 작다면 컨텐츠는 박스 바깥으로 빠져나온다. <code class=\"language-text\">overflow</code> 속성을 사용하여 컨텐츠가 바깥으로 빠져나가는 경우에 박스 크기에 맞게 컨텐츠를 더이상 표시하지 않거나, 박스 안에 스크롤을 추가하여 콘텐츠를 확인할 수 있게 만들 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">auto</code>: 스크롤을 생성</li>\n<li><code class=\"language-text\">hidden</code>: 넘치는 컨텐츠의 내용은 보여주지 않는다.</li>\n<li><code class=\"language-text\">overflow-x</code>, <code class=\"language-text\">overflow-y</code>: x축과 y축을 지정해 가로 방향으로 스크롤하거나 세로 방향으로 스크롤 할 수 있게 지정한다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[TIL]5. CSS","date":null,"lang":null}}},{"node":{"id":"95eae83e-184a-5127-9392-c831d0d08d10","excerpt":"의사 클래스, 슈도 클래스를 처음 써봤다. 마우스가 올라갔을 때 스타일이 변하게 하는   속성에 을 줘서 조금 어둡게 해줬다. 클릭됐을 때 스타일이 적용되는   속성을 0.…","html":"<ul>\n<li>\n<p>의사 클래스, 슈도 클래스를 처음 써봤다.</p>\n<ul>\n<li>마우스가 올라갔을 때 스타일이 변하게 하는 <code class=\"language-text\">:hover</code></li>\n<li><code class=\"language-text\">filter</code> 속성에 <code class=\"language-text\">brightness(0.7)</code>을 줘서 조금 어둡게 해줬다.</li>\n<li>클릭됐을 때 스타일이 적용되는 <code class=\"language-text\">:active</code></li>\n<li><code class=\"language-text\">opacity</code> 속성을 0.6으로 투명도를 바꿔줌</li>\n<li>스타일이 바뀔 때 너무 딱딱하게 바뀌는 느낌이라서 <code class=\"language-text\">transition</code>으로 <code class=\"language-text\">0.3s</code>을 줬더니 조금 부드러워졌다.</li>\n</ul>\n</li>\n<li>마우스가 버튼 위로 올라갔을 때 손가락 모양이 나오는게 싫어서 <code class=\"language-text\">cursor</code> 속성을 <code class=\"language-text\">default</code>로 바꾸어 마우스커서 모양이 바뀌지 않도록 했다.</li>\n<li>\n<p>HTML에서 script 태그를 body 태그 하단에 위치시키는게 좋은 이유\n브라우저는 페이지를 화면에 보여줄 때, HTML 문서을 읽고, HTML을 파싱한 후에, DOM트리를 만들고, Render트리를 만들고나서 화면에 표시되는 과정을 거친다.</p>\n<p>이 때 HTML 문서 중간에 script 태그가 들어가있다면, 브라우저는 HTML 파싱을 하다가 script를 만남과 동시에 파싱을 중지시키고 script를 불러서, 파싱을 완료한 후에, 중단됐던 HTML 파싱을 이어서 진행한다. 이 때 생기는 문제점이 두 가지 있는데,</p>\n<ul>\n<li>하나는 js 파일이 파싱되는 시간만큼 화면에 페이지가 표시되는 시간이 지연된다는 것이고,</li>\n<li>다른 하나는 DOM트리가 생성되기 전에 js가 먼저 파싱되어서 js가 아직 생성되지 않은 DOM의 조작을 시도할 수 있다는 것이다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[TIL]2021-08-31","date":null,"lang":null}}},{"node":{"id":"b4474ed2-393a-50fb-bb9b-3d9db81d9bbc","excerpt":"리눅스 명령어 아는 명령어도 있고 모르는 명령어도 있는데, 차차 사용하면서 외우면 될 것 같다 리눅스터미널을 실행하는 단축키: ctrl + alt + t 기본 명령어 : 현재 위치를 확인(print working directory…","html":"<h3 id=\"리눅스-명령어\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"리눅스 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리눅스 명령어</h3>\n<ul>\n<li>아는 명령어도 있고 모르는 명령어도 있는데, 차차 사용하면서 외우면 될 것 같다</li>\n<li>리눅스터미널을 실행하는 단축키: ctrl + alt + t</li>\n<li>\n<p>기본 명령어</p>\n<ul>\n<li><code class=\"language-text\">pwd</code>: 현재 위치를 확인(print working directory)</li>\n<li><code class=\"language-text\">mkdir</code>: 새로운 폴더 생성</li>\n<li><code class=\"language-text\">ls</code> : 폴더나 파일의 목록 출력</li>\n<li><code class=\"language-text\">-a</code>: 숨어있는 폴더나 파일 전부 보기</li>\n<li>\n<p><code class=\"language-text\">-l</code> : 폴더나 파일의 포맷을 전부 표시</p>\n<ul>\n<li>제일 앞이 <code class=\"language-text\">d</code> 이면 디렉토리 <code class=\"language-text\">-</code> 이면 파일</li>\n</ul>\n</li>\n<li><code class=\"language-text\">nautilus</code> <code class=\"language-text\">open</code> : 현재 폴더를 파일 탐색기로 열기</li>\n<li><code class=\"language-text\">cd</code> : 폴더에 진입</li>\n<li><code class=\"language-text\">touch</code> : 새로운 파일 생성</li>\n<li><code class=\"language-text\">cat</code> :파일의 내용을 터미널에 출력</li>\n<li><code class=\"language-text\">rm</code> : 폴더나 파일을 삭제</li>\n<li><code class=\"language-text\">rm</code> : 파일을 삭제</li>\n<li><code class=\"language-text\">rm -rf</code> : 폴더를 삭제(<code class=\"language-text\">recursive</code> : 폴더를 지울 때, <code class=\"language-text\">force</code> : 질문받지 않고 강제로 지울 때)</li>\n<li><code class=\"language-text\">mv</code> : 폴더나 파일의 위치를 이동하거나 이름을 변경</li>\n<li><code class=\"language-text\">mv 옮길거 옮길위치</code> 파일이나 폴더 옮기기</li>\n<li><code class=\"language-text\">mv 이름 바꿀이름</code> 파일이나 폴더 이름 변경</li>\n<li><code class=\"language-text\">cp</code> : 폴더나 파일을 복사</li>\n<li><code class=\"language-text\">cp 복사할거이름 복사된거이름</code></li>\n<li>폴더를 복사할 때는 <code class=\"language-text\">-r</code> 이 꼭 있어야함</li>\n<li><code class=\"language-text\">sudo</code> : 관리자 권한</li>\n<li>관리자 권한으로 만든 폴더의 소유자는 root가 됨</li>\n<li><code class=\"language-text\">/</code> : 루트 디렉토리</li>\n<li><code class=\"language-text\">~</code> : 홈 디렉토리</li>\n</ul>\n</li>\n<li>\n<p>절대 경로와 상대 경로</p>\n<ul>\n<li>절대 경로의 시작은 루트디렉토리(<code class=\"language-text\">/</code>)</li>\n<li>상대 경로의 시작은 현재 디렉토리(<code class=\"language-text\">.</code>)</li>\n</ul>\n</li>\n<li>텍스트 에디터 nano 사용하여 파일을 수정하고 저장 <code class=\"language-text\">nano [수정할 파일]</code></li>\n</ul>\n<h3 id=\"패키지-매니저\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%A4%EB%8B%88%EC%A0%80\" aria-label=\"패키지 매니저 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 매니저</h3>\n<p>리눅스의 패키지 매니저는 apt임\n패키지를 설치하기 전에 항상 <code class=\"language-text\">apt update</code>를 하고 설치받아야 한다.</p>\n<ul>\n<li><code class=\"language-text\">apt update</code>: 패키지의 업데이트 여부 확인(관리자 권한 필요)</li>\n<li><code class=\"language-text\">apt list --upgradable</code>: 업데이트 필요한 파일 조회</li>\n<li>\n<p><code class=\"language-text\">apt upgrade</code>: 프로그램 업그레이드(관리자 권한 필요)</p>\n<ul>\n<li><code class=\"language-text\">apt --only-upgrade instll 패키지이름</code> 특정패키지만 업그레이드 (관리자 권한 필요)</li>\n</ul>\n</li>\n<li><code class=\"language-text\">apt show</code>: 프로그램의 정보 확인</li>\n<li><code class=\"language-text\">apt install</code>: 프로그램 설치(관리자 권한 필요)</li>\n<li><code class=\"language-text\">apt list --installed</code>: 설치된 프로그램 목록 보기</li>\n<li><code class=\"language-text\">apt remove</code>: 프로그램 삭제(관리자 권한 필요)</li>\n<li><code class=\"language-text\">apt search</code> : 패키지 검색</li>\n</ul>\n<h3 id=\"nodejs\" style=\"position:relative;\"><a href=\"#nodejs\" aria-label=\"nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js</h3>\n<ul>\n<li>자바스크립트 런타임</li>\n<li>브라우저도 자바스크립트 런타임인데, 브라우저에서 자바스크립트를 실행하려면 HTML에 연결해서 HTML을 실행해야 하기 때문에 웹 페이지에서만 쓸 수 있었다. Node.js를 사용하면 브라우저 밖에서도 자바스크립트를 사용할 수 있기 때문에 서버 등의 다양한 활용이 가능하다.</li>\n<li>\n<p>nvm: node version manager, 다양한 버전의 노드를 설치하고 관리하는 도구, 다양한 버전의 노드를 변경해가면서 사용할 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">nvm install [버전넘버]</code></li>\n<li><code class=\"language-text\">nvm use [버전넘버]</code></li>\n</ul>\n</li>\n<li>\n<p>npm: node package manager, 노드용 패키지 매니저, 노드를 사용할 때 쓸 수 있는 거의 모든 모듈을 다운받을 수 있음</p>\n<ul>\n<li>package.json에 프로젝트에서 사용하는 모든 모듈의 정보가 저장되고 실제 모듈은 node_modules에 저장되는데, 프로젝트를 공유받은 사람은 package.json을 보고 다운받으면 동일한 실행이 가능하다.(<code class=\"language-text\">npm install</code>)</li>\n<li>package.json 파일 안에</li>\n<li><code class=\"language-text\">scripts</code>는 프로젝트 내에서 사용가능한 명령어들 모음</li>\n<li><code class=\"language-text\">dependencies</code>는 프로젝트가 실행되는데 필요한 모듈들(<code class=\"language-text\">npm install --save react</code> 하면 들어가는데 <code class=\"language-text\">--save</code>는 생략가능)</li>\n<li><code class=\"language-text\">devDependenvies</code>는 프로젝트를 개발하는데 필요한 모듈들(테스트, lint 등, <code class=\"language-text\">npm install mocha --save-dev</code>로 설치하면 알아서 들어감)</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[TIL]2021-09-01","date":null,"lang":null}}},{"node":{"id":"bf38892f-6bec-5f6e-a802-3e359341421d","excerpt":"Git vs Github Git은 로컬에서 동작하는 버전 관리 프로그램으로 코드 수정에 따른 버전을 관리해준다. Github는 클라우드 방식으로 관리되는 버전 관리 시스템으로 Git을 사용하는 프로젝트를 업로드할 수 있는 웹서비스이다. 개발자들의 협업을 위해 사용한다. Github…","html":"<ul>\n<li>\n<p>Git vs Github</p>\n<ul>\n<li>Git은 로컬에서 동작하는 버전 관리 프로그램으로 코드 수정에 따른 버전을 관리해준다.</li>\n<li>Github는 클라우드 방식으로 관리되는 버전 관리 시스템으로 Git을 사용하는 프로젝트를 업로드할 수 있는 웹서비스이다. 개발자들의 협업을 위해 사용한다.</li>\n</ul>\n</li>\n<li>\n<p>Github</p>\n<ul>\n<li>local repository</li>\n<li>remote repository</li>\n</ul>\n<p>내 컴퓨터의 저장소를 local repository라고 하고 깃허브에 저장된 원격 저장소를 remote repository라고 한다.</p>\n<p>로컬 저장소에서 변경된 파일이 있으면 <code class=\"language-text\">git add [파일]</code> 명령어를 사용해 stage시켜주고(여러 개 해도 됨) 다 추가했으면 <code class=\"language-text\">git commit -m \"커밋 메시지\"</code> 명령으로 commit 시켜준다. commit은 로컬 저장소로 올려주는 작업이다. 이 때 파일의 상태를 보려면 <code class=\"language-text\">git status</code>를 사용하면 되고 커밋의 상태를 보려면 <code class=\"language-text\">git log</code>를 사용하면 된다.</p>\n<p>commit으로 로컬 저장소에 변경사항을 적용해줬으면 원격 저장소에도 변경사항을 적용하기 위해 <code class=\"language-text\">git push origin [branch]</code>를 사용한다. 만약 원격 저장소에 다른 사람이 push를 해놓아서 로컬 저장소와 다른 부분이 있다면 먼저 <code class=\"language-text\">git pull</code>을 해야 한다.</p>\n<ul>\n<li><code class=\"language-text\">git add [파일명]</code>: 커밋 할 파일 추가하기</li>\n<li><code class=\"language-text\">git reset HEAD</code>: add한 파일 전부 취소하기</li>\n<li><code class=\"language-text\">git reset HEAD [파일명]</code>: 파일명만 add 취소</li>\n<li><code class=\"language-text\">git commit -m \"커밋 메시지\"</code>: 로컬 저장소에 올리기</li>\n<li><code class=\"language-text\">git reset HEAD^</code>: 최근 커밋 취소하기 (^ 개수는 취소할 커밋 개수)</li>\n<li><code class=\"language-text\">git reset HEAD~2</code>: 최근 두 개의 커밋 취소하기</li>\n<li><code class=\"language-text\">git status</code>: 파일의 상태 확인(변경된 파일, add된 파일..)</li>\n<li><code class=\"language-text\">git log</code>: 커밋 기록 확인</li>\n<li><code class=\"language-text\">git restore</code>: 파일의 상태를 원격저장소와 동일하게 초기화</li>\n<li><code class=\"language-text\">git push origin [branch]</code>: 로컬 저장소의 변경사항을 원격 저장소에 적용(origin은 경우에 따라 다른 이름으로 변경)</li>\n<li><code class=\"language-text\">git pull origin [branch]</code>: 원격 저장소의 변경사항을 로컬 저장소에 적용(origin은 경우에 따라 다른 이름으로 변경)</li>\n<li>궁금해서 찾아본 것</li>\n<li><code class=\"language-text\">git commit --amend</code>: 커밋 메시지를 잘못 적었을 때 변경할 수 있음</li>\n<li>\n<p>reset 옵션</p>\n<ul>\n<li><code class=\"language-text\">--soft</code></li>\n<li><code class=\"language-text\">--mixed</code></li>\n<li><code class=\"language-text\">--hard</code></li>\n</ul>\n<p>저장소에 1, 2가 커밋되어있다. 현재 HEAD가 2번 커밋을 가리키고 있고 1번 커밋으로 되돌리려 한다고 할 때</p>\n<ul>\n<li><code class=\"language-text\">git reset --hard 1</code>: 작업 디렉토리, 스테이징, 저장소 전부 1번으로 돌아가게 된다.</li>\n<li><code class=\"language-text\">git reset --mixed 1</code>: 작업 디렉토리는 내가 현재 수정해놓은 상태 그대로 유지되지만, 스테이징과 저장소의 상태가 1번으로 돌아가게 된다. 그래서 mixed 옵션은 2번 커밋이 잘못되어서 수정한 후 다시 커밋하고 싶을 때 사용하면 된다. 옵션을 지정하지 않았을 경우 기본값이 mixed이다.</li>\n<li><code class=\"language-text\">git reset --soft 1</code>: 저장소만 1번으로 돌아가게 만든다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[TIL] Git과 Github","date":null,"lang":null}}},{"node":{"id":"501d7742-58d1-5dad-8653-d5af1b9d5cf8","excerpt":"배열 배열은 순서가 있는 값들의 모음이다. 보통 한 가지 주제를 가진 값들의 나열이다. 이 순서는 인덱스라고 부르며 1이 아니라 0이 첫 시작이다. 각각의 값들은 이 인덱스로 호출 할 수 있고, 배열을 구성하고 있는 값들은 element…","html":"<h2 id=\"배열\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4\" aria-label=\"배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열</h2>\n<ul>\n<li>배열은 순서가 있는 값들의 모음이다. 보통 한 가지 주제를 가진 값들의 나열이다. 이 순서는 인덱스라고 부르며 1이 아니라 0이 첫 시작이다. 각각의 값들은 이 인덱스로 호출 할 수 있고, 배열을 구성하고 있는 값들은 element, 요소라고 부른다.</li>\n<li>\n<p>배열 다루기</p>\n<ul>\n<li><code class=\"language-text\">배열.push(값)</code> 배열의 맨 끝에 값을 추가한다.</li>\n<li><code class=\"language-text\">배열.pop()</code> 배열의 맨 끝에 있는 값을 삭제한다.</li>\n<li><code class=\"language-text\">배열.unshift(값)</code> 배열의 맨 앞에 값을 추가하는 메서드이다. 인덱스 0에 자리를 만들기 위해 모든 값들을 1칸씩 뒤로 미룬 후에 값을 인덱스 0에 추가한다.</li>\n<li><code class=\"language-text\">배열.shift()</code> 배열의 맨 앞에 있는 값을 삭제하는 메서드이다. unshift()와 반대로 인덱스 0자리에 있는 값을 삭제하기 위해 인덱스 1부터 값들을 앞으로 하나씩 옮긴다.</li>\n<li><code class=\"language-text\">배열[인덱스]</code> 로 값을 조회하거나 변경할 수 있다. (bracket notation)</li>\n<li>\n<p>값을 변경할 때는 아래와 같은 방식으로 값을 할당해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> = <span class=\"token string\">\"사과\"</span>;</code></pre></div>\n</li>\n<li><code class=\"language-text\">문자열.split(\" \")</code> : 문자열에 사용하면 배열을 반환한다. 예시는 문자열에서 ” ” 공백 문자를 기준으로 잘라 배열로 반환한다.</li>\n<li><code class=\"language-text\">배열.slice()</code> : 배열 복사, 원하는 부분만 자르기에 사용할 수 있다. 원본 배열과 다른 새로운 배열을 반환하며, 원본 배열은 건들이지 않는다.</li>\n<li><code class=\"language-text\">배열,splice()</code> : 배열 요소 교체, 특전 부분 자르기, 요소 추가에 사용한다.</li>\n<li><code class=\"language-text\">Array.isArray(값)</code> : 값이 배열인지 판별한다. 참조객체인 배열은 typeof로 자료형을 구분할 수 없기 때문에 Array.isArray()를 사용해서 판별한다.</li>\n<li><code class=\"language-text\">배열.length</code> : 배열의 길이</li>\n<li><code class=\"language-text\">배열.indexOf(값)</code> : 값이 배열의 어느 인덱스에 위치해 있는지 확인하는 메서드이다. 만약 배열에 값이 없을 경우 -1을 반환한다.</li>\n<li><code class=\"language-text\">배열.includes(값)</code> : 배열이 값을 포함하고 있는지 확인하는 메서드이다. 불린값을 반환하고 어느 위치에 있는지 알 수 없기 때문에 indexOf가 더 다양한 경우에 사용할 수 있는 메서드라고 할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>이중배열</p>\n<p>요소를 배열로 가지는 배열을 이중배열이라고 한다. 이중배열은 값을 조회하거나 변경할 때 <code class=\"language-text\">배열[인덱스][인덱스]</code>를 사용하는 것 말고는 일차원 배열과 비슷한 방식으로 다룰 수 있다.</p>\n<p>이중 배열에 반복문을 사용할 때는 이중반복문을 사용하게 된다.</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"객체\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4\" aria-label=\"객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체</h2>\n<p>배열이 순서를 가지는 같은 종류의 값들의 집합이었다면, 객체는 순서는 가지지 않지만, 의미를 가지는 여러 값들의 나열이라고 할 수 있다. 서로 다른 의미를 가지는 값들이 모여있을 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">interests</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'music'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'skiing'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">bio</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' '</span> <span class=\"token operator\">+</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' is '</span> <span class=\"token operator\">+</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">+</span>\n        <span class=\"token string\">' years old. He likes '</span> <span class=\"token operator\">+</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">' and '</span> <span class=\"token operator\">+</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">'.'</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! I'm \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>객체 다루기</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 객체 속성 추가</span>\nperson<span class=\"token punctuation\">[</span><span class=\"token string\">'favorite'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'kimchi'</span>\nperson<span class=\"token punctuation\">.</span>favorite <span class=\"token operator\">=</span> <span class=\"token string\">'kimchi'</span>\n\n<span class=\"token comment\">// 객체 속성 조회</span>\nperson<span class=\"token punctuation\">.</span>age\nperson<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// 객체 속성 변경</span>\nperson<span class=\"token punctuation\">[</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'female'</span>\nperson<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token string\">'female'</span>\n\n<span class=\"token comment\">// 객체 속성 삭제</span>\n<span class=\"token keyword\">delete</span> person<span class=\"token punctuation\">.</span>gender</code></pre></div>\n</li>\n</ul>\n<p>객체 속성 조회법에는 두가지가 있다.</p>\n<ul>\n<li>dot notation</li>\n<li>bracket notation</li>\n</ul>\n<p>둘 다 똑같은 기능을 하지만, 사용되는 경우가 다르다. dot notation은 key가 동적으로 변하는 경우에는 사용할 수 없다. key가 동적으로 변하는 경우에는 bracket notation을 사용해야 한다.</p>\n<p>dot notation을 사용할 때는 속성의 이름을 따옴표없이 넣어주어도 되지만, bracket notation을 사용할 때는 속성의 이름을 문자열로 입력해주어야 한다. 문자열로 넣지 않고 dot notation으로 입력할 경우 변수로 인식되어 잘못된 값이 들어가거나 오류가 발생할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">person<span class=\"token punctuation\">.</span>content <span class=\"token operator\">===</span> person<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// true</span></code></pre></div>\n<ul>\n<li>\n<p>객체 반복문</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">for ... in</code> 반복문을 사용한다. 객체가 가지고 있는 key를 사용한 반복을 한다.</p>\n</li>\n</ul>","frontmatter":{"title":"[TIL] JavaScript 배열과 객체","date":null,"lang":null}}},{"node":{"id":"46678761-15b5-5a90-bf62-7c58febce673","excerpt":"…","html":"<ul>\n<li>배열 : 순서를 가지는 값의 집합</li>\n<li>객체 : 의미를 가지는 값의 집합</li>\n<li>객체 반복문<br>\n<code class=\"language-text\">for...in</code> : 객체를 반복시킴<br>\n<code class=\"language-text\">for...of</code> : 배열을 반복시킴</li>\n<li>객체의 크기 확인하기<br>\n<code class=\"language-text\">Object.keys(객체).length</code><br>\n<code class=\"language-text\">Object.keys(객체)</code>: 객체의 키값들을 배열로 반환함</li>\n<li><code class=\"language-text\">Array.prototype.slice</code><br>\n배열에 담긴 데이터가 수정되는 것을 방지하기 위해 배열의 전부나 일부를 복사하는 메소드</li>\n<li><code class=\"language-text\">break</code> : 반복문을 완전히 빠져나옴</li>\n<li><code class=\"language-text\">continue</code> : 현재 순서의 반복문 진행을 멈추고 다음 반복문으로 넘어감</li>\n</ul>","frontmatter":{"title":"[TIL] JavaScript 배열과 객체2","date":null,"lang":null}}},{"node":{"id":"b454768d-3ea2-5de3-9b06-fb230ec274e7","excerpt":"flex에는 부모에 적용하는 속성과 자식에 적용하는 속성이 있다. 처음엔 혼란스럽고 헷갈렸는데, 쓰다보니까 편하고 쓸만한 것 같기도 하고… 아닌 것 같기도 하고… 쩃든 오늘은 css 셀렉터랑 flexbox를 공부했는데 보니까 내가 안 써본 flex…","html":"<p>flex에는 부모에 적용하는 속성과 자식에 적용하는 속성이 있다. 처음엔 혼란스럽고 헷갈렸는데, 쓰다보니까 편하고 쓸만한 것 같기도 하고… 아닌 것 같기도 하고… 쩃든 오늘은 css 셀렉터랑 flexbox를 공부했는데 보니까 내가 안 써본 flex 속성들이 몇 개 있길래 공부 겸 정리해보려고 한다. css 셀렉터는 써보면서 외워야 공부가 될 것 같아서 일단 간략하게 정리만 하구..</p>\n<hr>\n<h3 id=\"flex\" style=\"position:relative;\"><a href=\"#flex\" aria-label=\"flex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flex</h3>\n<p>flex는 display 속성의 값 중 하나로 레이아웃을 짤 때 자주 사용하는 방식 중에 하나이다. 부모 엘리먼트에 <code class=\"language-text\">display: flex;</code>를 적용하면 사용할 수 있다.</p>\n<p>부모 엘리먼트에 <code class=\"language-text\">flex-direction</code> 속성을 사용해 주축을 정할 수 있다. 기본 값은 <code class=\"language-text\">row</code>이고, 반대는 <code class=\"language-text\">column</code> 이 있다.</p>\n<p>방향이 <code class=\"language-text\">row</code>일 때 부모 엘리먼트에서 <code class=\"language-text\">justify-content</code> 속성을 사용하면 수평 방향의 정렬, <code class=\"language-text\">align-items</code> 속성을 사용하면 수직 방향의 정렬을 정해줄 수 있다. <code class=\"language-text\">column</code>일 때는 주축이 수직방향으로 바뀌기 때문에 반대로 적용된다.</p>\n<p>자식 엘리먼트에서는 <code class=\"language-text\">flex-grow</code>, <code class=\"language-text\">flex-shrink</code>, <code class=\"language-text\">flex-basis</code> 속성이 있고,</p>\n<p>grow는 아이템이 주축 방향으로 얼마나 늘어날지 설정하는 속성이다. 기본값은 0이고 1 이상이 되면 전체 아이템들에 적용된 grow의 합에 대한 비율로 크기가 결정된다.\nshrink는 아이템이 얼마나 줄어들지 설정하는 속성이다. grow와 중첩되지 않도록 사용하는 것을 추천한다.\nbasis는 아이템의 기본 크기를 설정하는 속성이다. 기본값은 auto이고 이 때 grow와 함께 사용하면 아이템의 크기를 뺀 공백을 기준으로 아이템의 크기가 결정되기 때문에 값을 0으로 해줘야 원하는 비율의 레이아웃을 구현할 수 있다.</p>\n<hr>\n<p>이제 거의 사용 안해봐서 잘 모르는 속성들~~~ 일단 부모 속성부터</p>\n<p><code class=\"language-text\">flex-wrap</code></p>\n<ul>\n<li>줄 넘김을 처리하는 설정이다. 컨테이너가 더이상 아이템들을 한 줄에 담을 여유 공간이 없을 때 아이템 줄바꿈을 어떻게 할지 결정하는 속성이다.</li>\n<li>nowrap : 기본값으로 줄넘김을 하지 않고 아이템이 밖으로 빠져나간다.</li>\n<li>wrap : 아래로 줄을 넘긴다.</li>\n<li>wrap-reverse : 줄을 넘기긴 하는데 위로 넘긴다.</li>\n</ul>\n<p><code class=\"language-text\">flex-flow</code></p>\n<ul>\n<li>flex-direction, flex-wrap을 같이 사용할 수 있는 단축 속성이다.</li>\n</ul>\n<p><code class=\"language-text\">align-content</code></p>\n<ul>\n<li><code class=\"language-text\">flex-wrap: wrap;</code>이 설정되어 있을 때, 아이템의 행이 2줄 이상이 될 수 있는데, 이 때 모든 아이템들을 같이 수직 방향으로 정렬할 수 있는 속성이다. 여러 행의 정렬을 조절한다. 값은 align-items와 동일하다.</li>\n</ul>\n<hr>\n<p>이제 자식 속성~~~</p>\n<p><code class=\"language-text\">order</code></p>\n<ul>\n<li>각 아이템들의 순서를 결정하는 속성이다. 숫자를 값으로 가지며 숫자가 작을 수록 우선 순위를 가진다.</li>\n<li>화면에 보이는 순서가 바뀌는 것뿐 HTML 문서의 구조 자체가 바뀌는 것은 아니기 때문에 접근성 측면에서 생각하면 사용에 주의해야 한다.</li>\n</ul>\n<p><code class=\"language-text\">align-self</code></p>\n<ul>\n<li>아이템의 수적정렬을 결정하는 속성이다. 기본값은 auto이다.</li>\n<li>기본값 auto만 빼면 align-items와 동일한 값을 사용할 수 있다.</li>\n<li>속성이 적용될 때 align-items보다 우선순위를 가진다.</li>\n</ul>\n<hr>\n<h3 id=\"css-selector\" style=\"position:relative;\"><a href=\"#css-selector\" aria-label=\"css selector permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css selector</h3>\n<p>처음엔 .이랑 #만 알면되는 줄 알았는데 알면 알수록 할 수 있는게 너무 많다 허허헣허허헣ㅎ헣허</p>\n<ul>\n<li>자식 셀렉터 : <code class=\"language-text\">A > B</code></li>\n<li>자손 셀렉터 : <code class=\"language-text\">A B</code></li>\n<li>자식 셀렉터는 바로 아래의 자식 엘리먼트들에만 적용되고, 자손 셀렉터는 자식 엘리먼트들뿐만 아니라 그 아래의, 그 아래의… 모든 엘리먼트들에 적용된다는 점이 차이점이다.</li>\n<li>인접 형제 셀렉터 : <code class=\"language-text\">A + B</code> A 뒤에 있는 B</li>\n<li>형제 셀렉터 : <code class=\"language-text\">A ~ B</code> A와 같은 단계에 있는 모든 B</li>\n<li>\n<p>요소 상태 셀렉터</p>\n<ul>\n<li><code class=\"language-text\">:checked</code> : 체크상태일 때</li>\n<li><code class=\"language-text\">:enabled</code> : 사용가능한 상태일 때</li>\n<li><code class=\"language-text\">:disabled</code> : 사용 불가능한 상태일 때</li>\n</ul>\n</li>\n<li>\n<p>정합성 확인 셀렉터</p>\n<ul>\n<li><code class=\"language-text\">:valid</code> : 정합성 검증에 성공한 input 요소 또는 from 요소를 선택</li>\n<li><code class=\"language-text\">:invalid</code> : 정합성 실패한 input 요소 또는 form 요소를 선택</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[TIL] flex 생소한 속성 정리","date":null,"lang":null}}},{"node":{"id":"90bef047-ff03-5729-a7f4-5b9683d234df","excerpt":"…","html":"<h3 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h3>\n<p>외부 함수의 생명주기가 끝났는데도 내부 함수가 외부 함수의 변수에 접근할 수 있는 것</p>\n<h3 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h3>\n<ol>\n<li>내부함수는 외부함수의 변수에 접근할 수 있다.</li>\n<li>함수를 리턴하는 함수</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> count<span class=\"token operator\">++</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>외부함수와 외부함수에 의해 리턴되는 내부함수로 이루어져 있다. 이때 외부함수는 내부함수의 변수에 접근할 수 없고 내부함수는 외부함수의 변수에 접근할 수 있다.</p>\n<h3 id=\"활용\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9\" aria-label=\"활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용</h3>\n<p>일반적인 경우는 함수 실행이 끝나면 내부의 지역변수들은 사용할 수 없다. 하지만 클로저는 외부 함수의 실행이 끝나더라도 외부함수의 변수가 메모리에 남아있기 때문에 내부함수에서 사용할 수 있다. (어휘적 환경을 메모리에 저장하기 때문에)</p>\n<p>이 특징을 이용해서 외부에서 접근할 수 없도록 값을 숨기는데 사용할 수 있고, 특정 데이터를 스코프 안에 가둬둔 채로 사용할 수도 있고, 캡슐화 시켜서 값을 직접 조작하지 않고 간접적으로 조작할 수 있도록 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">increase</span><span class=\"token operator\">:</span> <span class=\"token parameter\">count</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">decrease</span><span class=\"token operator\">:</span> <span class=\"token parameter\">count</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      count <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getCount</span><span class=\"token operator\">:</span> <span class=\"token parameter\">count</span> <span class=\"token operator\">=></span> count<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같은 코드를 모듈화라고 한다. 객체를 반환하는 함수인데, 클로저를 사용하여 count 변수의 값을 간접적으로 조작할 수 있다.</p>\n<p>코드를 모듈화 하면 재사용성이 높아지고 함수를 독립적인 부품처럼 사용할 수 있게 된다. 클로저를 사용하면 데이터와 메소드를 같이 묶어서 다룰 수 있기 때문에 모듈화에 유리하다.</p>","frontmatter":{"title":"[TIL] 클로저(Closure)란?","date":null,"lang":null}}},{"node":{"id":"35947661-dea5-56df-ae71-98911aba445b","excerpt":"호이스팅(Hoisting) 선언된 변수, 함수 등을 유효범위의 최상단으로 끌어올리는 것을 말한다. 대상 var 변수 선언, 함수 선언문이 끌어올려진다. 할당이 아닌, 선언 자체만 끌어올려진다. let, const…","html":"<h3 id=\"호이스팅hoisting\" style=\"position:relative;\"><a href=\"#%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85hoisting\" aria-label=\"호이스팅hoisting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>호이스팅(Hoisting)</h3>\n<p>선언된 변수, 함수 등을 유효범위의 최상단으로 끌어올리는 것을 말한다.</p>\n<p><strong>대상</strong></p>\n<ul>\n<li>var 변수 선언, 함수 선언문이 끌어올려진다.</li>\n<li>할당이 아닌, 선언 자체만 끌어올려진다.</li>\n<li>let, const 변수 선언, 함수 표현식은 블록 스코프가 명확하기 때문에 호이스팅이 발생하지 않는다.</li>\n</ul>\n<p><strong>우선순위</strong></p>\n<ul>\n<li>변수 선언이 함수 선언보다 높이 끌어올려진다.</li>\n</ul>\n<hr>\n<h3 id=\"얕은-복사-vs-깊은-복사\" style=\"position:relative;\"><a href=\"#%EC%96%95%EC%9D%80-%EB%B3%B5%EC%82%AC-vs-%EA%B9%8A%EC%9D%80-%EB%B3%B5%EC%82%AC\" aria-label=\"얕은 복사 vs 깊은 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>얕은 복사 vs 깊은 복사</h3>\n<p>얕은 복사란 객체를 복사할 때 겉의 객체는 새로 만들어져 새로운 주소를 가지지만 내부의 객체들은 기존의 객체와 동일한 주소를 갖는 것을 말한다. 때문에 내부의 객체들은 하나만 변경되더라도 원본과 복사본 모두 변경된다. 껍데기만 새로운 껍데기인 것</p>\n<p>깊은 복사의 경우 복합 객체는 물론 내부의 다른 객체들까지 재귀적으로 모두 새로운 객체로 생성된다. 때문에 완전히 다른 객체가 생성된 것과 같아서, 원본 객체를 수정한다고 하더라도 복사본 객체는 상태글 그대로 유지한다.</p>","frontmatter":{"title":"[TIL] 호이스팅(Hoisting) & 얕은복사, 깊은복사","date":null,"lang":null}}},{"node":{"id":"692fdf03-9827-5228-9927-55bfe78f8617","excerpt":"DOM의 개념 Document Object Model의 약자로 HTML 요소를 Object처럼 조작할 수 있는 Model을 말한다. 문서 내의 모든 요소를 정의하고, 접근할 수 있는 방법을 제공한다. DOM이라는 구조를 기반으로, JavaScript로 프로그램을 작성하여 HTML…","html":"<h3 id=\"dom의-개념\" style=\"position:relative;\"><a href=\"#dom%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"dom의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM의 개념</h3>\n<p>Document Object Model의 약자로 HTML 요소를 Object처럼 조작할 수 있는 Model을 말한다. 문서 내의 모든 요소를 정의하고, 접근할 수 있는 방법을 제공한다. DOM이라는 구조를 기반으로, JavaScript로 프로그램을 작성하여 HTML을 조작한다.</p>\n<p>BOM(Browser Object Model)이 DOM과 함께 통칭되기도 한다. BOM은 웹 브라우저와 관련된 객체의 집합으로 window 객체를 통해 브라우저에 접근한다. 정확히는 자바스크립트가 아닌 웹 브라우저가 제공하는 기능이다.</p>\n<h3 id=\"dom의-구조\" style=\"position:relative;\"><a href=\"#dom%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"dom의 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM의 구조</h3>\n<p>여러 구성요소가 부모-자식 관계를 가지고 있는 노드트리구조이다.</p>\n<p><strong>HTML과 DOM의 차이</strong></p>\n<p>브라우저는 사용자가 요청해서 받아온 HTML 문서를 파싱하여 DOM 트리를 그리고, CSS파일을 파싱하여 이를 결합한 후 렌더링하는 작업을 통해 우리가 보고있는 화면을 그린다.</p>\n<p>HTML은 단순히 규칙에 따라 정해진 태그, 속성값으로 이루어진 언어이며, DOM은 브라우저가 HTML을 파싱한 후 생성되는 객체 모델로, document에 접근가능한 API이다.</p>\n<p>DOM은 document 객체를 통해 HTML(root document)에 접근한다.</p>\n<p><strong>HTML에서 JS 파일을 불러올 때 주의할 점</strong></p>\n<p>script 태그는 </body> 직전에 작성해야 한다.</p>\n<p>브라우저가 HTML을 파싱할 때, 위에서 아래로 읽는데, 중간에 script를 만나면 HTML을 읽는 것을 잠시 멈추고 script를 해석한다. 이 때 script를 읽다가 아직 해석되지 않은 HTML 태그를 만나게 된다면 의도하지 않은 오류가 발생하게 될 수도 있다. 때문에 HTML 문서가 다 파싱된 후인 </body> 태그 직전에 작성해주어야 한다.</p>\n<p><strong>DOM과 JavaScript의 차이</strong></p>\n<p>HTML은 프로그래밍을 위해서 만들어진 언어가 아니기 때문에 조건문, 반복문을 사용할 수 없고, 정보를 저장하기에도 적합한 언어가 아니다. 그래서 자바스크립트라는 프로그래밍 언어와 DOM을 활용하여 HTML에 접근하고 조작한다.</p>\n<p>DOM을 활용할 수 있는 언어는 JavaScript만 있는 것은 아니지만 JavaScript가 가장 오래되고 안정적인 방법이다. 또, HTML 구조가 JavaScript의 객체 구조와 같은 트리구조라서 자바스크립트의 DOM이 브라우저에 적합하다.</p>\n<h3 id=\"crud\" style=\"position:relative;\"><a href=\"#crud\" aria-label=\"crud permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CRUD</h3>\n<p><strong>CREATE</strong></p>\n<p><code class=\"language-text\">createElement</code> : 새로운 엘리먼트를 생성한다.</p>\n<p><strong>READ</strong></p>\n<p><code class=\"language-text\">querySelector</code> : 조건에 맞는 첫번째 엘리먼트를 조회한다.</p>\n<p>document 객체의 자식 메서드이지만, element 객체의 자식 메서드이기도 하기 때문에 document 객체뿐만 아니라 모든 엘리먼트에서 사용할 수 있다. <code class=\"language-text\">querySelectorAll</code>도 마찬가지이다.</p>\n<p>여러가지 셀렉터들을 조합하여 복잡한 조회도 수행할 수 있다. <code class=\"language-text\">querySelectorAll</code>도 마찬가지이다.</p>\n<p><code class=\"language-text\">querySelectorAll</code> : 조건에 맞는 모든 엘리먼트를 조회</p>\n<p><code class=\"language-text\">children</code> : 엘리먼트의 자식 엘리먼트 조회</p>\n<p><code class=\"language-text\">parentNode</code>, <code class=\"language-text\">parentElement</code> : 엘리먼트의 부모 엘리먼트 조회</p>\n<p><strong>UPDATE</strong></p>\n<p><code class=\"language-text\">textContent</code> : 태그 사이의 문자열을 수정할 때 사용</p>\n<p><code class=\"language-text\">id</code> id 속성을 수정할 때 사용</p>\n<p><code class=\"language-text\">classList</code> : 엘리먼트의 class를 조회, 삭제, 수정, 추가 등 관리할 때 사용한다. add, remove를 사용하여 원하는 동작을 할 수 있다.</p>\n<p><code class=\"language-text\">setAttribute</code> : 속성을 수정할 때 사용한다. 첫번째 인자로는 속성이름, 두번째 인자로는 값을 넣고 실행한다. 어떤 태그를 어떤 값으로 변경하려 하는지 직관적으로 확인할 수 있다.</p>\n<p><strong>DELETE</strong></p>\n<p><code class=\"language-text\">remove</code> : 삭제하려는 엘리먼트에 사용하면 엘리먼트가 삭제된다.</p>\n<p><code class=\"language-text\">removeChild</code> : 삭제하려는 엘리먼트의 부모노드에서 사용한다.</p>\n<p><code class=\"language-text\">innerHTML = \"\"</code> : 자식의 모든 엘리머트를 삭제한다. 사용에 간단하지만 XSS Attack의 위험이 있으므로 사용하지 않는 것이 좋다.</p>\n<p><code class=\"language-text\">textContent = \"\"</code> : 모든 자식 엘리먼트를 삭제한다.</p>\n<ul>\n<li>XSS Attack : script 태그를 활용하여 강제로 해커가 원하는 스크립트를 실행시키는 공격이다. HTML 태그를 직접 삽입하여 실행하는 형태의 메소드(ex. innerHTML)는 항상 XSS Attack의 위험을 가지고 있다.</li>\n</ul>\n<p><strong>APPEND</strong></p>\n<p><code class=\"language-text\">appendChild</code> : append 메서드와는 다르게 Node 객체만 받을 수 있고, 한번에 하나의 자식 요소만 설정할 수 있다.</p>\n<p><code class=\"language-text\">append</code> : append 메서드를 활용하면 노드 객체(Node object)나 DOMString(text)를 사용할 수 있다. 또한 한번에 여러 개의 자식 요소를 설정할 수 있다.</p>\n<p><code class=\"language-text\">insertBefore</code> : 원하는 위치에 노드를 넣을 수 있다.</p>\n<hr>\n<p><strong><code class=\"language-text\">innerHTML</code>과 <code class=\"language-text\">textContent</code>의 차이</strong></p>\n<p><code class=\"language-text\">innerHTML</code>은 이름 그대로 HTML을 반환한다. <code class=\"language-text\">textContent</code>는 노드 내의 텍스트를 반환한다. <code class=\"language-text\">textContent</code>는 HTML로 분석할 필요가 없다는 점에서 <code class=\"language-text\">innerHTML</code>보다 성능이 좋다. 그리고 <code class=\"language-text\">textContent</code>는 XSS 공격의 위험이 없다.</p>","frontmatter":{"title":"[TIL] DOM","date":null,"lang":null}}},{"node":{"id":"bc33f7f5-6809-5fdb-af13-45f1973a15be","excerpt":"…","html":"<h2 id=\"이벤트란\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%9E%80\" aria-label=\"이벤트란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트란?</h2>\n<p>사용자가 웹 페이지를 사용하면서 발생하는 상호작용을 말한다. 예로는 클릭, 스크롤, 마우스올림, 키눌림, 키떨어짐 등이 있다.</p>\n<h2 id=\"이벤트-객체란\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EA%B0%9D%EC%B2%B4%EB%9E%80\" aria-label=\"이벤트 객체란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 객체란?</h2>\n<p>사용자에 의해 웹 페이지에서 이벤트가 발생하면 등록된 이벤트 리스너가 호출된다. 이 때 이벤트 리스너가 이벤트에 대한 정보가 담긴 객체를 전달받는데, 이 객체가 이벤트 객체이다.\n이벤트 객체는 이벤트 핸들러 함수의 첫번째 인자로 전달되고, <code class=\"language-text\">e</code>, <code class=\"language-text\">event</code> 라는 이름으로 사용한다.\n이벤트 객체의 <code class=\"language-text\">target</code> 속성과 <code class=\"language-text\">currentTarget</code> 속성에 이벤트가 발생한 엘리먼트에 대한 정보가 담겨 있다.</p>\n<ul>\n<li><code class=\"language-text\">target</code> : 이벤트 버블링의 가장 하위 요소를 나타낸다.</li>\n<li><code class=\"language-text\">currentTarget</code> : 이벤트 핸들러가 등록된 요소 자체를 나타낸다.</li>\n</ul>\n<p>때문에 보통은 <code class=\"language-text\">currentTarget</code>을 사용하는 것이 편하다.</p>\n<h2 id=\"이벤트의-종류\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"이벤트의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트의 종류</h2>\n<p>여러가지가 있는데, 대표적으로 <code class=\"language-text\">onclick</code>, <code class=\"language-text\">onscroll</code>, <code class=\"language-text\">onkeyup</code>, <code class=\"language-text\">onmouseover</code>, <code class=\"language-text\">onsubmit</code>, <code class=\"language-text\">onchange</code> 등이 있다. 보통은 이름만으로 어떤 이벤트인지 짐작이 가능하다.</p>\n<ul>\n<li><code class=\"language-text\">onsubmit</code> : 현재 창에서 폼을 전송하는 이벤트를 다루는 이벤트 핸들러</li>\n<li><code class=\"language-text\">onchange</code> : 값의 커밋 이벤트를 다루는 이벤트 핸들러이다. input, select, textarea의 값 커밋을 확인할 때 사용한다.</li>\n</ul>\n<h2 id=\"이벤트-등록-방법\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%93%B1%EB%A1%9D-%EB%B0%A9%EB%B2%95\" aria-label=\"이벤트 등록 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 등록 방법</h2>\n<ol>\n<li>\n<p><code class=\"language-text\">onclick</code> 같은 이벤트 핸들러에 직접 할당하는 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">element<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">addEventListener</code>를 사용하여 이벤트 핸들러를 등록하는 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ol>\n<p>동작은 같지만 여러 개의 핸들러를 할당하려고 할 때 문제가 생긴다. 직접할당하는 방법은 여러 개를 할당할 경우 이전에 할당된 이벤트 핸들러가 덮어씌워지기 때문에 최근에 할당한 핸들러만 동작하게 된다.\n그에 반해 <code class=\"language-text\">addEventListener</code>로 등록된 핸들러는 여러 개를 등록하더라도 덮어씌워지지 않고 모두 정상 동작한다.</p>\n<h2 id=\"이벤트-막기\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A7%89%EA%B8%B0\" aria-label=\"이벤트 막기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 막기</h2>\n<p><code class=\"language-text\">event.preventDefault</code>\n브라우저 구현에 의해 처리되는 기존의 동작들이 발생하지 않도록 한다. 예를 들어 <code class=\"language-text\">submit</code> 이벤트가 발생하는 <code class=\"language-text\">input</code> 버튼의 이벤트 핸들러에 <code class=\"language-text\">event.preventDefault</code>를 넣으면 submit이 동작하지 않아 값이 전달되지 않고 페이지도 이동되지 않는다.</p>","frontmatter":{"title":"[TIL] 이벤트 객체","date":null,"lang":null}}},{"node":{"id":"390b3922-5453-55d8-93bc-a6bfea0f5dd7","excerpt":"리액트 앱에서 컴포넌트를 라우트로 만들면 라우트가 history api에 접근할 수 있게 되며 각각 Route에 props로 match, location, history라는 객체를 전달하게 된다. Route…","html":"<p>리액트 앱에서 컴포넌트를 라우트로 만들면 라우트가 history api에 접근할 수 있게 되며 각각 Route에 props로 match, location, history라는 객체를 전달하게 된다. Route가 아닌 컴포넌트들은 따로 처리를 해주어야 이 객체를 전달받을 수 있는데, <code class=\"language-text\">withRouter</code> 를 객체를 전달받고 싶은 컴포넌트에 사용해주면 그 컴포넌트도 Route처럼 history api를 사용할 수 있게 된다.</p>\n<h2 id=\"code-classlanguage-textwithroutercode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textwithroutercode\" aria-label=\"code classlanguage textwithroutercode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">withRouter</code></h2>\n<p>라우트가 아닌 컴포넌트에서 라우터에서 사용하는 객체(location, match, history)를 사용하게 해주는 <code class=\"language-text\">HOC</code> 이다.</p>\n<h3 id=\"고차컴포넌트code-classlanguage-texthoccode-higher-order-component\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%B0%A8%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8code-classlanguage-texthoccode-higher-order-component\" aria-label=\"고차컴포넌트code classlanguage texthoccode higher order component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고차컴포넌트(<code class=\"language-text\">HOC</code>, Higher Order Component)</h3>\n<p>코드를 작성하다보면 자주 작성하게 되는 코드들이 있다. 우리는 보통 이것들을 함수화해서 필요할 때마다 재사용하곤 한다. 컴포넌트도 비슷한 개념이다. 반복해서 사용되는 UI가 있으면 우리는 컴포넌트로 만들어 재사용한다. 그런데 이 컴포넌트 안에서도 반복해서 사용되는 코드가 나타날 수 있다.</p>\n<p>리액트 컴포넌트에서는 이렇게 반복되는 코드들을 HOC를 만들어서 해결한다.</p>\n<p>주로 HOC의 이름을 만들 때는 <code class=\"language-text\">with___</code> 의 형식으로 짓는다.</p>\n<h3 id=\"hoc-동작-원리\" style=\"position:relative;\"><a href=\"#hoc-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"hoc 동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HOC 동작 원리</h3>\n<p>파라미터로 컴포넌트를 받아오고, 함수 내부에서 새 컴포넌트를 만든 다음에 새로 만든 컴포넌트 안에서 파라미터로 받아온 컴포넌트를 렌더링한다. 그리고 자신이 받아온 props들은 그대로 파라미터로 받아온 컴포넌트에게 주입해주고, 필요에 따라 추가의 props도 넣어줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// withRequest.js</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">withRequest</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">url</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">WrappedComponent</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> Component <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> withRequest</code></pre></div>\n<p>위 코드를 보면, 함수에서 또 다른 함수를 리턴하도록 되어있다. 이렇게 만든 이유는 나중에 여러 개의 HOC를 합쳐서 사용하게 될 때 더욱 편하게 사용하기 위함이다. <code class=\"language-text\">compose</code> 같은 함수를 통해서 호출을 간소화시킬 수도 있다.</p>\n<h3 id=\"code-classlanguage-textwithroutercode-사용하기\" style=\"position:relative;\"><a href=\"#code-classlanguage-textwithroutercode-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"code classlanguage textwithroutercode 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">withRouter</code> 사용하기</h3>\n<p>위의 HOC 동작 원리를 가지고 따져보면, <code class=\"language-text\">withRouter</code>는 컴포넌트를 파라미터로 받아, 함수 내부에서 새로운 컴포넌트를 만든 다음, 원래 컴포넌트가 가지고 있던 props와 Route가 사용하는 객체를 함쳐서 props로 주입시켜준 후에, 새로 만들어진 컴포넌트를 리턴해주는 HOC인 것이다.</p>\n<p>간단하게 파라미터로 전달받은 컴포넌트에 라우트가 사용하는 객체를 넣어서 반환해주는 HOC라고 생각해도 될 것 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// App.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n<span class=\"token keyword\">import</span> Page <span class=\"token keyword\">from</span> <span class=\"token string\">'./Page'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Home<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ShowPageInfo</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>아래 Page 컴포넌트는 App 컴포넌트에서 볼 수 있듯이 라우트가 아닌 컴포넌트이다. 하지만 아래처럼 withRouter를 사용해주면 라우트에서만 사용할 수 있던 match, location 같은 객체를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Page.js</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">const</span> Page <span class=\"token operator\">=</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match<span class=\"token punctuation\">,</span> location <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">현재 위치: </span><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"history\" style=\"position:relative;\"><a href=\"#history\" aria-label=\"history permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>history</h3>\n<p>스택(stack)에 현재까지 이동한 url 경로들이 담겨있는 형태로 주소를 임의로 변경하거나 되돌아갈 수 있도록 해준다. 브라우저의 history와 유사하다.</p>\n<ul>\n<li>length : [number] 전체 history 스택의 길이</li>\n<li>\n<p>action : [string] 최근에 수행된 action (PUSH, REPLACE, POP)</p>\n<ul>\n<li>PUSH : 경로를 저장하면서 이동</li>\n<li>REPLACE : 경로를 저장하지 않으면서 이동</li>\n<li>POP : (?)</li>\n</ul>\n</li>\n<li>location : [JSON object] 최근 경로 정보</li>\n<li>push(path, [state]) : [function] 새로운 경로를 history 스택으로 푸시하여 페이지를 이동</li>\n<li>replace(path, [state]) : [function] 최근 경로를 history 스택에서 교체하여 페이지를 이동, 교체하기 때문에 push와 달리 다시 돌아올 수 없음</li>\n<li>go(n) : [function] history 스택의 포인터를 n번째로 이동</li>\n<li>goBack() : [function] 이전 페이지로 이동</li>\n<li>goForward() : [function] 앞 페이지로 이동</li>\n<li>block(prompt) : [function] history 스택의 PUSH/POP 동작을 제어</li>\n</ul>\n<h3 id=\"match\" style=\"position:relative;\"><a href=\"#match\" aria-label=\"match permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>match</h3>\n<p><code class=\"language-text\">&lt;Route path></code>와 URL의 매칭에 대한 정보가 담겨져 있다.</p>\n<ul>\n<li><strong>path</strong> : [string] 라우터에 정의된 path</li>\n<li><strong>url</strong> : [string] 실제 클라이언트로부터 요청된 url path</li>\n<li><strong>isExact</strong> : [boolean] true일 경우 전체 경로가 완전히 매칭된 경우에만 요청을 수행</li>\n<li><strong>params</strong> : [JSON object] url path로 전달된 파라미터 객체</li>\n</ul>\n<h3 id=\"location\" style=\"position:relative;\"><a href=\"#location\" aria-label=\"location permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>location</h3>\n<p>현재 페이지의 정보를 가지고 있다.</p>\n<ul>\n<li><strong>pathname</strong> : [string] 현재 페이지의 경로명</li>\n<li><strong>search</strong> : [string] 현재 페이지의 query string</li>\n<li><strong>hash</strong> : [string] 현재 페이지의 hash</li>\n</ul>\n<p>참조 :</p>\n<ul>\n<li><a href=\"https://react-router.vlpt.us/1/05.html\">1-5. withRouter</a></li>\n<li><a href=\"https://ko.reactjs.org/docs/higher-order-components.html\">고차컴포넌트</a></li>\n<li><a href=\"https://gongbu-ing.tistory.com/45\">React | Router : match, location, history</a></li>\n<li><a href=\"https://velopert.com/3537\">컴포넌트에 날개를 달아줘, 리액트 Higher-order Component (HoC)</a></li>\n</ul>","frontmatter":{"title":"[TIL] `withRouter` 정리","date":null,"lang":null}}},{"node":{"id":"11d44007-c1f5-5820-a04a-4098d6b0e66a","excerpt":"…","html":"<p>절차형 프로그래밍은 무엇을 <strong>어떻게</strong> 할 것인가에 가깝고, 선언형 프로그래밍은 <strong>무엇을</strong> 할 것인가와 가깝다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">arr</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">+=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>배열의 합을 구하는 로직을 작성한다고 해보자 절차형으로 작성한다면 위와 같은 방식으로 작성할 수 있을 것이다. 배열을 가지고 어떻게 해서 합을 구할 것인지가 구체적으로 드러난 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> sum <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> acc <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>똑같이 배열의 합을 구하는 로직을 선언형 프로그래밍으로 작성하면 위와 같은 방식으로 작성할 수 있다. reduce 메소드를 이용하여 배열의 합을 구하는 코드이고, 절차형으로 작성한 코드에 비하면 상당부분이 생략된 것을 알 수 있다.</p>\n<blockquote>\n<p>절차형 프로그래밍은 <strong>어떻게</strong>에 초점이 맞춰진 방식이고, 선언형 프로그래밍은 <strong>무엇을</strong>에 초점이 맞춰진 방식이다. 선언형 프로그래밍 방식에서는 <strong>어떻게</strong>의 부분을 누군가 할 수 있다는 가정하에 <strong>무엇을</strong> 부분에 초점을 맞추는 것이기 때문에 선언형 프로그래밍이 제대로 동작하기 위해서는 절차형으로 작성된 <strong>어떻게</strong>에 대한 부분이 추상화 되어 있어야 한다.</p>\n</blockquote>\n<p>출처 :</p>\n<ul>\n<li><a href=\"https://boxfoxs.tistory.com/430\">명령형 프로그래밍 VS 선언형 프로그래밍</a></li>\n<li><a href=\"https://dzone.com/articles/imperative-vs-declarative-javascript\">Imperative vs. Declarative JavaScript</a></li>\n</ul>","frontmatter":{"title":"[TIL] 선언형 프로그래밍 vs 절차형 프로그래밍","date":null,"lang":null}}},{"node":{"id":"182e2361-d061-577e-b86e-7913ce5fa3ba","excerpt":"1. 선언형 선언형 프로그래밍이란 무엇을에 집중한 방식으로 코드가 어떻게 동작하는지 자세히 알지 못해도 무엇을 하는 코드인지 알 수 있다. 다시 말해서 어떻게 동작하는지에 대한 부분은 추상화된 방식이라고 할 수 있다. 리액트는 JSX를 사용하여 HTML, JS, CSS…","html":"<h2 id=\"1-선언형\" style=\"position:relative;\"><a href=\"#1-%EC%84%A0%EC%96%B8%ED%98%95\" aria-label=\"1 선언형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 선언형</h2>\n<p>선언형 프로그래밍이란 <strong>무엇을</strong>에 집중한 방식으로 코드가 어떻게 동작하는지 자세히 알지 못해도 무엇을 하는 코드인지 알 수 있다. 다시 말해서 어떻게 동작하는지에 대한 부분은 추상화된 방식이라고 할 수 있다. 리액트는 JSX를 사용하여 HTML, JS, CSS를 한 파일에서 작성하는 선언형 프로그래밍을 지향한다.</p>\n<h2 id=\"2-컴포넌트-기반\" style=\"position:relative;\"><a href=\"#2-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B8%B0%EB%B0%98\" aria-label=\"2 컴포넌트 기반 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 컴포넌트 기반</h2>\n<p>하나의 기능을 구현하기 위해 여러 종류의 코드를 묶어두는 컴포넌트를 기반으로 한다. 개념적으로 컴포넌트는 JavaScript의 함수와 유사한데, 컴포넌트 기반이라는 것은 부품을 작은 단위로 각각 개발하고 화면에 보여줄 때, 필요한 부품들을 가져다가 조립해서 보여주는 것을 말한다.\n개발할 때는 번거로울 수 있으나, 컴포넌트를 분리하면 서로 독립적이고 재사용성이 좋기 때문에 기능 자체에만 집중하여 개발할 수 있을 뿐더러 유지보수에 용이하다.</p>\n<h2 id=\"3-범용성\" style=\"position:relative;\"><a href=\"#3-%EB%B2%94%EC%9A%A9%EC%84%B1\" aria-label=\"3 범용성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 범용성</h2>\n<p>자바스크립트 프로젝트 어디서든 유연하게 사용할 수 있다. 라이브러리이기 때문에 한 부분만 리액트를 적용하는 것이 가능하다.\n또, 페이스북에서 개발하고 관리하고 있기 때문에 안정적이고 현재 가장 유명하다. 리액트 네이티브로는 모바일 개발도 할 수 있다.</p>\n<p>출처 :</p>\n<ul>\n<li>코드스테이츠 자료</li>\n<li><a href=\"https://ko.reactjs.org/docs/components-and-props.html\">Component와 Props</a></li>\n<li><a href=\"https://kimdoyeonn.github.io/til/day16-1/\">선언형 프로그래밍 vs 절차형 프로그래밍</a></li>\n</ul>","frontmatter":{"title":"[TIL] React의 특징","date":null,"lang":null}}},{"node":{"id":"ea572e14-929e-51f2-aa7a-cb5904e9f320","excerpt":"가상 클래스 중 하나로 문서 트리의 루트 요소를 선택한다. 모든 HTML 문서의 루트 요소는  이므로  선택자와 동일한 역할을 한다. 하지만 동시에 사용할 경우 의 명시도가 더 낮기 때문에  선택자가 적용된다.\ncss에서 사용할 변수를 선언할 때 많이 사용한다.…","html":"<h2 id=\"code-classlanguage-textrootcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textrootcode\" aria-label=\"code classlanguage textrootcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">:root</code></h2>\n<p>가상 클래스 중 하나로 문서 트리의 루트 요소를 선택한다. 모든 HTML 문서의 루트 요소는 <code class=\"language-text\">&lt;html></code> 이므로 <code class=\"language-text\">html</code> 선택자와 동일한 역할을 한다. 하지만 동시에 사용할 경우 <code class=\"language-text\">:root</code>의 <a href=\"https://www.notion.so/df311992f2e94bafb201026873ab2f8e\">명시도</a>가 더 낮기 때문에 <code class=\"language-text\">html</code> 선택자가 적용된다.\ncss에서 사용할 변수를 선언할 때 많이 사용한다.</p>\n<h2 id=\"1-가상-선택자\" style=\"position:relative;\"><a href=\"#1-%EA%B0%80%EC%83%81-%EC%84%A0%ED%83%9D%EC%9E%90\" aria-label=\"1 가상 선택자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 가상 선택자</h2>\n<h3 id=\"가상-클래스\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"가상 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 클래스</h3>\n<ul>\n<li>선택한 요소가 <strong>특별한 상태</strong>일 때를 위해 사용하는 선택자</li>\n<li><code class=\"language-text\">:hover</code> <code class=\"language-text\">:focus</code> <code class=\"language-text\">:active</code> <code class=\"language-text\">:visited</code> 등 여러가지가 있다.</li>\n</ul>\n<h3 id=\"가상-요소\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%EC%9A%94%EC%86%8C\" aria-label=\"가상 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 요소</h3>\n<ul>\n<li>선택한 요소의 <strong>일부분</strong>만 사용하기 위한 선택자</li>\n<li>가상 클래스와 가상 요소를 구분하기 위해 CSS3부터 <code class=\"language-text\">::</code> 를 도입했다. 하지만 브라우저는 이전 버전을 지원하기 때문에 CSS2의 문법인 <code class=\"language-text\">:</code> 도 지원한다.</li>\n<li><code class=\"language-text\">::first-line</code> <code class=\"language-text\">::first-letter</code></li>\n<li><code class=\"language-text\">::before</code> <code class=\"language-text\">::after</code></li>\n<li>CSS로 생성한 콘텐츠는 DOM이 포함하지 않고 접근성 트리에도 들어가지 않는다. 콘텐츠가 포함한 정보가 페이지의 목적을 이해하는데 중요하다면 문서로 포함시키는 것이 좋다.</li>\n<li>\n<p><code class=\"language-text\">::before</code> <code class=\"language-text\">::after</code></p>\n<ul>\n<li>선택한 요소의 첫 자식, 맨 마지막 자식을 선택한다</li>\n<li>보통 <code class=\"language-text\">[content](https://developer.mozilla.org/ko/docs/Web/CSS/content)</code> 속성과 함께 짝지어, 요소에 장식용 콘텐츠를 추가할 때 사용한다.</li>\n<li>기본 값은 인라인이다.</li>\n<li><code class=\"language-text\">conent</code> 속성</li>\n<li>normal</li>\n<li>string</li>\n<li>image</li>\n<li>\n<p>counter</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h3::before</span> <span class=\"token punctuation\">{</span>\n <span class=\"token property\">counter-increment</span><span class=\"token punctuation\">:</span> section<span class=\"token punctuation\">;</span>\n <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Section '</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">)</span> <span class=\"token string\">': '</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>none</li>\n<li><code class=\"language-text\">attr</code> 속성을 사용할 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-css-변수\" style=\"position:relative;\"><a href=\"#2-css-%EB%B3%80%EC%88%98\" aria-label=\"2 css 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. CSS 변수</h2>\n<ul>\n<li>CSS 작성자가 정의하는 개체</li>\n<li>문서 전반적으로 재사용할 값을 담는데 사용한다.</li>\n<li>전용 표기법을 이용해서 담고 (<code class=\"language-text\">--</code> 으로 시작하는 이름)</li>\n<li><code class=\"language-text\">var()</code> 함수를 사용해 접근할 수 있다.</li>\n</ul>\n<h3 id=\"css-변수의-장점\" style=\"position:relative;\"><a href=\"#css-%EB%B3%80%EC%88%98%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"css 변수의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css 변수의 장점</h3>\n<p>CSS를 작성하다 보면 종종 같은 값을 반복해서 사용해야 하는 경우가 많다. 웹 사이트에서 사용하는 포인트 색상이 그 대표적인 예이다. 한두 곳에서 색상코드로 사용했다면 별 문제가 되지 않겠지만, 만약 수백 곳에서 색상코드를 사용했다면 문제가 발생한다. 만약 이 색상코드를 모두 수정해야하는 경우가 생겼다고 생각해보자. 상상만 해도 아찔하다.</p>\n<p>이럴 때 사용하는 것이 CSS 변수이다. 값을 한군데에 저장해놓고 참조하는 방식으로 사용하면 <strong>값을 수정해야하는 상황이 발생하더라도 한군데에 저장된 값만 수정하면 되므로 편리하다.</strong></p>\n<p>또, 사용자 지정 이름으로 사용하기 때문에 <strong>어디에 사용하는 값인지 이해하기 쉽다</strong>는 장점도 있다.</p>\n<h3 id=\"선언-방법\" style=\"position:relative;\"><a href=\"#%EC%84%A0%EC%96%B8-%EB%B0%A9%EB%B2%95\" aria-label=\"선언 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선언 방법</h3>\n<p><code class=\"language-text\">--</code> 로 시작하는 속성 이름과 함께, 유효한 CSS 값이라면 어떤 값이든 지정하여 사용할 수 있다.</p>\n<p>부모 요소의 변수만 사용할 수 있기 때문에 전역에서 사용할 경우에는 흔히 <code class=\"language-text\">:root</code> 가상 선택자에 선언하여 HTML 문서 어디서든 접근할 수 있도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--main-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--Main-color</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span> // 대소문자를 구분한다.\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"사용-방법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"사용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용 방법</h3>\n<p>사용하야 할 상황에서 <code class=\"language-text\">var()</code> 함수를 사용하고 괄호 내에 변수를 입력해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--main-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">**var(&lt;custom-property-name>, &lt;declaration-value>)**</code></p>\n<ul>\n<li>첫 번째 인자로는 사용자 지정 속성이름을 입력한다.</li>\n<li>두 번째 인자로는 첫번째 인자로 들어간 속성이 정의되지 않았을 경우 적용할 값이 들어간다.</li>\n<li>\n<p>중첩하여 사용하는 것도 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--main-color<span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--sub-color<span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n// --main-color 와 --sub-color 가 지정되지 않았을 경우 red를 적용</code></pre></div>\n</li>\n</ul>\n<h3 id=\"주의점\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98%EC%A0%90\" aria-label=\"주의점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의점</h3>\n<p>브라우저는 변수에 저장된 값들이 어디에 사용될지 모르기 때문에 거의 모든 값을 유효한 것으로 간주한다. 때문에 <code class=\"language-text\">var()</code> 함수를 통해진 값이 유효하지 않은 문맥에서 사용될 수 있다.</p>\n<p>브라우저는 유효하지 않은 <code class=\"language-text\">var()</code> 구문을 만나게 된다면, 그 속성의 초기값이나 상속된 값을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>내일 새벽에 비온대요<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--text-weight</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--text-weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>예시를 브라우저가 읽을 때 브라우저는 <code class=\"language-text\">--text-weight</code>의 값을 대체하지만, red는 font-weight에 유효한 값이 아니므로 적용하지 못한다. 그리고 두 단계를 통해서 이 상황을 처리한다.</p>\n<ol>\n<li>\n<p><strong>font-weight 속성이 상속되었는지를 확인</strong></p>\n<p>이 경우에는 <code class=\"language-text\">&lt;div></code> 가 font-weigth 속성과 관련된 부모 엘리먼트가 없다. 그러면 다음 단계로 넘어간다.</p>\n</li>\n<li>\n<p><strong>값을 default initial value로 처리한다. (초기 설정 기본값)</strong></p>\n<p>이 경우 font-weight의 기본값인 400으로 처리된다.</p>\n</li>\n</ol>\n<p>⚠️ <strong>전에 선언된 <code class=\"language-text\">div</code> 는 적용되지 않는다.</strong></p>\n<p>만일 사용자가 변수 없이 <code class=\"language-text\">font-weight: red</code> 라고 입력했을 경우에 발생된 문법 에러일 경우에 전에 지정된 선언이 사용된다.</p>\n<h3 id=\"javascript에서-사용하기\" style=\"position:relative;\"><a href=\"#javascript%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"javascript에서 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript에서 사용하기</h3>\n<p>속성을 사용하는 것과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">element.style.<span class=\"token function\">setPropertoy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--text-weight\"</span><span class=\"token punctuation\">,</span> 700<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/:root\">:root</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/Using_CSS_custom_properties\">사용자 지정 CSS 속성 사용하기 (변수)</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/Pseudo-classes\">의사 클래스</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/::before\">::before(:before)</a> / <a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/::after\">::after (:after)</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters\">CSS 카운터 사용하기</a></li>\n</ul>","frontmatter":{"title":"[TIL] `:root` 가상 선택자와 CSS 변수","date":null,"lang":null}}},{"node":{"id":"f8078db0-3d43-54d6-954f-7e44c3c3ebfb","excerpt":"일급함수(first-class citizen…","html":"<h2 id=\"일급함수first-class-citizen\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EA%B8%89%ED%95%A8%EC%88%98first-class-citizen\" aria-label=\"일급함수first class citizen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일급함수(first-class citizen)</h2>\n<p>함수를 다른 변수들과 동일하게 다루는 언어를 일급함수를 가진 언어라고 표현한다. 함수를 다른 변수들과 동일하게 다룬다는 의미는,</p>\n<ul>\n<li>함수를 변수에 할당할 수 있다.</li>\n<li>함수를 인자로 전달할 수 있다.</li>\n<li>함수를 결과로서 반환할 수 있다.</li>\n</ul>\n<p>는 것을 의미한다. 자바스크립트는 일급함수를 가진 언어 중에 하나이다.</p>\n<h2 id=\"고차함수higher-order-function\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%B0%A8%ED%95%A8%EC%88%98higher-order-function\" aria-label=\"고차함수higher order function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고차함수(higher-order function)</h2>\n<p><strong>함수를 인자로 받거나, 함수를 리턴하는 함수</strong>를 말한다.</p>\n<p>이 중 함수를 리턴하는 함수를 이 함수를 고안한 논리학자 하스켈 커리의 이름을 따서 커리함수라고 부르기도 하는데, 정확하게 구분하자면 커리함수도 고차함수에 포함된다.</p>\n<h2 id=\"커링과-클로저의-차이\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%81%EA%B3%BC-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"커링과 클로저의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커링과 클로저의 차이</h2>\n<p>클로저는 외부 함수의 변수에 접근할 수 있는 내부함수, 또는 이런한 작동 원리를 나타내는 용어이다.\n그리고 커링은 함수에 n개의 인자를 받는 대신, n개의 클로저 함수를 만들어 각각 인자를 받게 만드는 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y <span class=\"token operator\">*</span> z\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3*5*7</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3*5*8</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3*2*1</span></code></pre></div>\n<p>위와 같이 작성하면 첫번째 인자가 3으로 모두 같아도, 첫번째, 두번째 케이스에서 두번째 인자가 모두 5로 같아도 모든 인자를 직접 지정해주어야 한다. 이 때 컬링을 사용하여 특정 인자를 재사용 할 수 있게 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">z</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y <span class=\"token operator\">*</span> z\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> multiply3 <span class=\"token operator\">=</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> multiply3And5 <span class=\"token operator\">=</span> <span class=\"token function\">multiply3</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> multiply3And2 <span class=\"token operator\">=</span> <span class=\"token function\">multiply3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">multiply3And5</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">multiply3And5</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">multiply3And2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>컬링과 클로저가 다른 것이 아니라 클로저의 특성을 이용하여 값을 다루는 방법 중에 하나가 컬링 인 것 같다.</p>\n</blockquote>\n<p>참고</p>\n<ul>\n<li><a href=\"https://velog.io/@nittre/JavaScript-Closure%EC%99%80-Currying\">클로저(Closure)와 커링(Currying) 간단하게 정리</a></li>\n<li>코드스테이츠 자료</li>\n</ul>","frontmatter":{"title":"[TIL] 고차함수","date":null,"lang":null}}},{"node":{"id":"5cc446ab-dc43-5f18-a943-7e2102a62edd","excerpt":"함수 컴포지션은 말 그대로 함수를 조합하는 것으로, 한 함수의 결과를 다른 함수에 전달하는 식으로 동작하는 접근법이다. 함수의 수는 정해져 있지 않고, 최종 실행된 함수의 결과값이 전체의 결과가 된다. https://www.educative.io/api/edpresso/shot…","html":"<p>함수 컴포지션은 말 그대로 함수를 조합하는 것으로, <strong>한 함수의 결과를 다른 함수에 전달하는 식으로 동작하는 접근법</strong>이다. 함수의 수는 정해져 있지 않고, <strong>최종 실행된 함수의 결과값이 전체의 결과</strong>가 된다.</p>\n<p><img src=\"https://www.educative.io/api/edpresso/shot/5882797525827584/image/5346167031332864\" alt=\"https://www.educative.io/api/edpresso/shot/5882797525827584/image/5346167031332864\"></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">A</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> x\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">B</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span>\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// A(4) = 4 * 4 = 16</span>\n<span class=\"token comment\">// B(16) = 16 * 4 = 64</span>\n<span class=\"token comment\">// result = 64</span></code></pre></div>\n<p><code class=\"language-text\">B(A(4))</code> 처럼 함수의 결과를 따로 변수에 담지 않고 다음 함수의 인자로 바로 전달하는 방법을 함수 컴포지션이라고 한다. 그런데 코드를 읽을 때 가장 안부터 계산해서 밖으로 코드를 읽어야하기 때문에 함수가 많아질수록 읽기 힘든 코드가 됩니다. 그래서 함수 컴포지션의 가독성을 높이기 위해 <code class=\"language-text\">compose</code> , <code class=\"language-text\">pipe</code> 를 만들어 활용합니다.</p>\n<h2 id=\"code-classlanguage-textcomposecode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcomposecode\" aria-label=\"code classlanguage textcomposecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">compose</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>fns</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> fns<span class=\"token punctuation\">.</span><span class=\"token function\">reduceRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">A</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> x\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">B</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span>\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span><span class=\"token constant\">B</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 64</span></code></pre></div>\n<p><code class=\"language-text\">compose</code> 를 사용하면 위와 같이 변경할 수 있다. compose함수에 실행할 함수의 목록을 넘겨주면 새로운 함수가 반환되고, 새로 받은 함수의 인자를 넘겨주면 함수 목록의 역순으로 함수를 실행해서 결과를 반환한다. 여기서 역순으로 실행되는 함수를 반대로 바꾼 것이 <code class=\"language-text\">pipe</code> 함수이다.</p>\n<h2 id=\"code-classlanguage-textpipecode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textpipecode\" aria-label=\"code classlanguage textpipecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">pipe</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pipe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>fns</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> fns<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">A</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> x\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">B</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span>\n\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 64</span></code></pre></div>\n<p><code class=\"language-text\">compose</code> 함수와는 반대로 reduce를 사용했기 때문에 인자로 넘겨받은 실행할 함수 목록을 앞에서부터 순서대로 실행시켜 값을 반환합니다.</p>\n<p>참고 :</p>\n<ul>\n<li><a href=\"https://velog.io/@nakta/FP-in-JS-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EC%A0%91%ED%95%B4%EB%B3%B4%EB%8A%94-%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%95%A8%EC%88%98-%EC%BB%B4%ED%8F%AC%EC%A7%80%EC%85%98-%EC%BB%A4%EB%A7%81-s7k2z039vb\">FP in JS (자바스크립트로 접해보는 함수형 프로그래밍) - 함수 컴포지션, 커링</a></li>\n<li><a href=\"https://www.educative.io/edpresso/function-composition-in-javascript\">Function composition in JavaScript</a></li>\n<li><a href=\"https://velog.io/@nittre/JavaScript-%ED%95%A8%EC%88%98-%ED%95%A9%EC%84%B1Function-Composition\">[JavaScript] 함수 합성(Function Composition)</a></li>\n</ul>","frontmatter":{"title":"[TIL] 함수 컴포지션(Function Composition)","date":null,"lang":null}}},{"node":{"id":"b03a8963-dc58-553a-bb3b-a1679723ec3c","excerpt":"참고강의: 프로그래머스 파이썬 입문 Python 설치 Windows www.python.org에서 다운로드 메뉴 - Python 3.5이상 선택해서 다운로드 설치 과정에서 Add Python 3.5 to Path 반드시 체크 설치 확인 윈도우키 + R…","html":"<ul>\n<li>참고강의: <a href=\"https://programmers.co.kr/learn/courses/2\">프로그래머스 파이썬 입문</a></li>\n</ul>\n<h3 id=\"python-설치\" style=\"position:relative;\"><a href=\"#python-%EC%84%A4%EC%B9%98\" aria-label=\"python 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python 설치</h3>\n<h4 id=\"windows\" style=\"position:relative;\"><a href=\"#windows\" aria-label=\"windows permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Windows</strong></h4>\n<ul>\n<li><a href=\"http://www.python.org/\">www.python.org</a>에서 다운로드 메뉴 - Python 3.5이상 선택해서 다운로드</li>\n<li>설치 과정에서 Add Python 3.5 to Path 반드시 체크</li>\n<li>\n<p>설치 확인</p>\n<ul>\n<li>윈도우키 + R을 눌러서 나오는 창에 powershell이라고 치고, 확인을 눌러서 powershell실행</li>\n<li>powershell화면에서 python이라고 입력해서 오류가 나오지 않으면 설치 성공</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"os-x\" style=\"position:relative;\"><a href=\"#os-x\" aria-label=\"os x permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>OS X</strong></h4>\n<p>보통 맥에는 python 2.x버전이 자동으로 설치되어 있지만 강의는 python3을 기준으로 작성되었기 때문에 별도로 python3을 설치해야 됩니다.</p>\n<ul>\n<li><a href=\"http://www.python.org/\">www.python.org</a>에서 다운로드 메뉴 - Python 3.5이상 선택해서 다운로드</li>\n<li>다운로드 받은 폴더에서 .pkg파일을 실행.</li>\n<li>확인되지 않은 개발자가 배포했기 때문에 열 수 없습니다라는 메세지가 뜨면 승인을 누르고 다시 한번 파일을 실행</li>\n<li>계속/동의/설치 버튼을 눌려주면서 설치</li>\n<li>\n<p>설치 확인</p>\n<ul>\n<li>command + space를 눌러서 나오는 창에 <code class=\"language-text\">터미널</code>을 치고, 엔터를 눌러서 터미널실행</li>\n<li>터미널화면에서 python3이라고 입력해서 Python 3.5.1 (v3.5.1:37a07cee5969, Dec 5 2015, 21:12:44)와 비슷한 글이 뜨면 성공</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"에디터-설치\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%94%94%ED%84%B0-%EC%84%A4%EC%B9%98\" aria-label=\"에디터 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에디터 설치</h4>\n<ul>\n<li>vscode 사용</li>\n</ul>\n<h4 id=\"testpy에-테스트-코드-작성\" style=\"position:relative;\"><a href=\"#testpy%EC%97%90-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1\" aria-label=\"testpy에 테스트 코드 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>test.py에 테스트 코드 작성</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    print(\"Hello!\")</code></pre></div>\n<h4 id=\"windows---powershell에서\" style=\"position:relative;\"><a href=\"#windows---powershell%EC%97%90%EC%84%9C\" aria-label=\"windows   powershell에서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows - Powershell에서</h4>\n<ul>\n<li>실행: 윈도우키+R 후, powershell입력</li>\n<li>ls명령: 파일 목록을 확인하는 명령어</li>\n<li>\n<p>저장한 코드 실행방법</p>\n<ul>\n<li>python test.py</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"os-x---터미널에서\" style=\"position:relative;\"><a href=\"#os-x---%ED%84%B0%EB%AF%B8%EB%84%90%EC%97%90%EC%84%9C\" aria-label=\"os x   터미널에서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OS X - 터미널에서</h4>\n<ul>\n<li>실행 : spotlight 검색(단축키 : command+space바)에서 <code class=\"language-text\">터미널</code></li>\n<li>ls명령 : 파일 목록을 확인하는 명령어</li>\n<li>\n<p>저장한 코드 실행방법</p>\n<ul>\n<li>OS X에서는 <code class=\"language-text\">python test.py</code>가 아니라 <code class=\"language-text\">python3 test.py</code>와 같이 꼭 3을 붙여서 파이썬 버전을 명시해주시기 바랍니다.(모든 파이썬 강의에서 python3 으로 실행)</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[python]1. 파이썬 설치 및 실행","date":null,"lang":null}}},{"node":{"id":"d57f05db-1603-5810-8d83-43179f47bc73","excerpt":"변수의 사용 이라고 변수를 선언하고 나면, 변수의 이름을 가지고 그 값을 불러와서 사용할 수 있다. 다음 두 코드는 같은 결과를 출력   변수에 새로운 값을 입력하는 방법은 변수를 선언하는 것과 같다. 이라고 쓰면 이후부터 identity…","html":"<h4 id=\"변수의-사용\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"변수의 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수의 사용</h4>\n<ul>\n<li><code class=\"language-text\">identity = '지구인'</code>이라고 변수를 선언하고 나면, 변수의 이름을 가지고 그 값을 불러와서 사용할 수 있다.</li>\n<li>\n<p>다음 두 코드는 같은 결과를 출력</p>\n<ul>\n<li><code class=\"language-text\">print('안녕 나는','지구인','이야')</code></li>\n<li><code class=\"language-text\">print('안녕 나는',identity,'이야')</code></li>\n</ul>\n</li>\n<li>\n<p>변수에 새로운 값을 입력하는 방법은 변수를 선언하는 것과 같다.</p>\n<ul>\n<li><code class=\"language-text\">identity = '외계인'</code>이라고 쓰면 이후부터 identity라는 변수의 값은 ‘외계인’이라는 값을 가지게 된다.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">print('파이썬','파이썬')</code> -> 이런 방식으로 작성하는걸 처음봐서 신기하다. 지금 해보니까 javascript도 이런 방식이 가능했나보다.</p>\n</blockquote>\n<h4 id=\"주석\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%84%9D\" aria-label=\"주석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주석</h4>\n<ul>\n<li>코드를 설명하기 위해 코드에 적어 놓은 프로그래밍 언어가 무시하는 문자</li>\n<li>코드를 임시로 작동하도록 꺼 두기 위해서도 사용</li>\n<li>#을 쓰고 그 오른쪽에 주석을 입력</li>\n<li>\n<p>여러줄을 주석으로 처리하고 싶을때는 따옴표 \"\"\"로 그 내용을 둘러싼다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  <span class=\"token comment\">#정체와 다리의 수를 출력하는 코드입니다.</span>\n  identity <span class=\"token operator\">=</span> <span class=\"token string\">'지구인'</span> <span class=\"token comment\">#정체1</span>\n  number_of_legs  <span class=\"token comment\">#다리의 수</span>\n\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'안녕!'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">#이 아래 줄은 주석처리 되었기 때문에 실행되지 않습니다.</span>\n  <span class=\"token comment\">#print('너는 누구니?')</span>\n\n  <span class=\"token triple-quoted-string string\">\"\"\"\n  여러줄을\n  한 번에\n  주석처리할때는 이렇게 따옴표 3개로\n  내용을 감싸주세요.\n  \"\"\"</span>\n  <span class=\"token triple-quoted-string string\">'''\n  여러줄을\n  한 번에\n  주석처리할때는 이렇게 따옴표 3개로\n  내용을 감싸주세요.\n  '''</span></code></pre></div>\n</li>\n</ul>\n<blockquote>\n<p>한줄 주석은 바로 쓸 수 있을거같은데 여러 줄 주석은 쓰다보면 헷갈릴 것 같다. 계속 써봐서 익혀야겠다.( 큰 따옴표, 작은 따옴표 둘 다 가능)</p>\n</blockquote>","frontmatter":{"title":"[python]2. 변수의 사용","date":null,"lang":null}}},{"node":{"id":"4d155687-f178-5bfc-9502-9ce1f4e8e218","excerpt":"1. Symbol이란? 심볼은 ES6에서 새롭게 추가된 7번째 타입으로 변경 불가능한 원시 타입의 값이다. 유일한 식별자를 만들고 싶을 때 사용한다. 자바스크립트는 객체 프로퍼티 키로 문자열과 심볼만 허용한다. 2. Symbol…","html":"<h2 id=\"1-symbol이란\" style=\"position:relative;\"><a href=\"#1-symbol%EC%9D%B4%EB%9E%80\" aria-label=\"1 symbol이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Symbol이란?</h2>\n<p>심볼은 ES6에서 새롭게 추가된 7번째 타입으로 <strong>변경 불가능한 원시 타입의 값</strong>이다. 유일한 식별자를 만들고 싶을 때 사용한다.</p>\n<p>자바스크립트는 객체 프로퍼티 키로 문자열과 심볼만 허용한다.</p>\n<h2 id=\"2-symbol-생성\" style=\"position:relative;\"><a href=\"#2-symbol-%EC%83%9D%EC%84%B1\" aria-label=\"2 symbol 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Symbol 생성</h2>\n<p><code class=\"language-text\">Symbol()</code>을 사용하면 심볼을 생성할 수 있다. 생성된 심볼은 <strong>이름의 충돌 위험이 없는 유일한 프로퍼티 키</strong>가 된다.</p>\n<p>String, Number, Boolean과 같이 래퍼 객체를 생성하는 생성자 함수와는 달리 <code class=\"language-text\">new Symbol()</code> 을 지원하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">Symbol()</code> 에는 문자열을 인자로 전달할 수 있다. 하지만 이 문자열은 심볼 생성에 아무런 영향도 주지 않고 심볼의 이름으로만 사용된다. 또, 이름이 동일한 심볼을 여러 개 만들어도 심볼은 유일성이 보장되는 자료형이기 때문에 심볼값은 동일하지 않다. <strong>심볼에 붙이는 설명은 어떤 것에도 영향을 주지 않는 이름표 역할</strong>만을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> id1 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> id2 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>id1 <span class=\"token operator\">===</span> id2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre></div>\n<h2 id=\"3-symbol-사용\" style=\"position:relative;\"><a href=\"#3-symbol-%EC%82%AC%EC%9A%A9\" aria-label=\"3 symbol 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Symbol 사용</h2>\n<p>자바스크립트는 문자형으로의 자동 형변환이 비교적 자유롭게 일어나는 편이지만 Symbol은 예외이다. 심볼 값은 다른 자료형으로 형변환되지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Uncaught TypeError: Cannot convert a Symbol value to a string</span></code></pre></div>\n<p>문자열과 심볼은 완전히 다르기 때문에 서로의 타입으로 변환되어서는 안된다. 그래서 자바스크립트에서는 language guard를 마련해 심볼이 다른 자료형으로 변환되지 않게 막아준다.</p>\n<p>만약 반드시 심볼을 출력해주어야하는 경우라면 <code class=\"language-text\">toString()</code> 메서드를 사용해서 호출해주면된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Symbol(id)'</span></code></pre></div>\n<p>또, <code class=\"language-text\">symbol.description</code> 프로퍼티를 이용하면 심볼의 설명을 보여줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span> <span class=\"token comment\">// id</span></code></pre></div>\n<p>참고 :</p>\n<ul>\n<li><a href=\"https://poiemaweb.com/es6-symbol\">7번째 타입 심볼(Symbol)</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li>\n<li><a href=\"https://ko.javascript.info/symbol\">심볼형</a></li>\n</ul>","frontmatter":{"title":"[TIL] 7번째 데이터 타입 Symbol","date":null,"lang":null}}},{"node":{"id":"4a9640c1-507c-5edd-93c1-eba5584b9dec","excerpt":"REPL Powershell에서 파일 이름 없이 python이라고만 입력하면 나오는 창 파이썬 코드를 한 줄씩 입력해 가면서 테스트 해 볼 수 있는 입력창 REPL을 종료하려면 라고 입력 Read-Evel_print Loop…","html":"<h3 id=\"repl\" style=\"position:relative;\"><a href=\"#repl\" aria-label=\"repl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REPL</h3>\n<ul>\n<li>Powershell에서 파일 이름 없이 python이라고만 입력하면 나오는 창</li>\n<li>파이썬 코드를 한 줄씩 입력해 가면서 테스트 해 볼 수 있는 입력창</li>\n<li>REPL을 종료하려면 <code class=\"language-text\">exit()</code>라고 입력</li>\n<li>Read-Evel_print Loop의 약자</li>\n<li>코드를 읽어서 평가(실행)하고 결과를 출력하는 루프(반복)</li>\n<li>잘 모르는 기능을 테스트해볼 때 유용</li>\n</ul>\n<blockquote>\n<p>크롬의 개발자 콘솔과 비슷한 역할인가보다.</p>\n</blockquote>\n<h3 id=\"shell-사용법\" style=\"position:relative;\"><a href=\"#shell-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"shell 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shell 사용법</h3>\n<ul>\n<li>그래픽 셸: GUI(Graphical User Interface)</li>\n<li>명령줄 셸: CLI(Command Line Interface)</li>\n</ul>\n<h4 id=\"shell-명령어\" style=\"position:relative;\"><a href=\"#shell-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"shell 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shell 명령어</h4>\n<ul>\n<li>pwd: 현재 폴더 경로 출력 (print working directory)</li>\n<li>ls: 현재 폴더 내용물 출력 (list segments)</li>\n<li>\n<p>cd <code class=\"language-text\">폴더명</code>: 다른 폴더로 이동 (change directory)</p>\n<ul>\n<li>cd <code class=\"language-text\">..</code> : 상위 폴더로 이동</li>\n<li><code class=\"language-text\">ls</code>에서 나오는 폴더 명을 입력해야함</li>\n</ul>\n</li>\n<li>cp: 파일을 다른 이름으로 복사 (copy)</li>\n<li>\n<p>rm: 파일을 삭제 (remove)</p>\n<ul>\n<li>휴지통에 들어가지 않고 바로 지워지기 때문에 주의해서 사용</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"파일이름-자동완성\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%A6%84-%EC%9E%90%EB%8F%99%EC%99%84%EC%84%B1\" aria-label=\"파일이름 자동완성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일이름 자동완성</h4>\n<ul>\n<li>파일 이름을 입력할때는 앞 1~2글자만 입력하고 tab키를 누르면 자동 완성되는 기능</li>\n</ul>","frontmatter":{"title":"[python]3. REPL & shell 사용법","date":null,"lang":null}}},{"node":{"id":"c2b01a47-8107-558a-a331-6f9327e8cdb4","excerpt":"문자열 ’ 또는 “로 문자열 만들기 ’ 또는 “로 글의 양쪽을 감싸면 문자열로 인식 ‘로 감싼 문자열 안에는 “를 쓸 수 있다. “로 감싼 문자열 안에는 ‘를 쓸 수 있다. 따옴표/큰따옴표…","html":"<h3 id=\"문자열\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4\" aria-label=\"문자열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열</h3>\n<h4 id=\"-또는-로-문자열-만들기\" style=\"position:relative;\"><a href=\"#-%EB%98%90%EB%8A%94-%EB%A1%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\" 또는 로 문자열 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>’ 또는 “로 문자열 만들기</h4>\n<ul>\n<li>’ 또는 “로 글의 양쪽을 감싸면 문자열로 인식</li>\n<li>‘로 감싼 문자열 안에는 “를 쓸 수 있다.</li>\n<li>\n<p>“로 감싼 문자열 안에는 ‘를 쓸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">string1 <span class=\"token operator\">=</span> <span class=\"token string\">'따옴표로 싼 문자열 안에는 큰따옴표(\")를 사용할 수 있다.'</span>\nstring2 <span class=\"token operator\">=</span> <span class=\"token string\">\"큰따옴표로 싼 문자열 안에는 따옴표(')를 사용할 수 있다.\"</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"따옴표큰따옴표-3개로-문자열-만들기\" style=\"position:relative;\"><a href=\"#%EB%94%B0%EC%98%B4%ED%91%9C%ED%81%B0%EB%94%B0%EC%98%B4%ED%91%9C-3%EA%B0%9C%EB%A1%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"따옴표큰따옴표 3개로 문자열 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>따옴표/큰따옴표 3개로 문자열 만들기</h4>\n<ul>\n<li>줄 바꿈도 인식 가능</li>\n<li>\n<p>따옴표와 큰따옴표를 섞어 쓸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">string3<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">\"\"\"줄도 바꾸고\n큰따옴표\"와 따옴표'를 마음대로 쓸 수 있음\"\"\"</span></code></pre></div>\n</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">\"\"\"</code>, <code class=\"language-text\">'''</code>은 여러줄 주석도 되고 문자열도 되나보다. 신기해</p>\n</blockquote>","frontmatter":{"title":"[python]4. 문자열 문법","date":null,"lang":null}}},{"node":{"id":"e897e157-e968-576c-9802-1e644e5823b2","excerpt":"List 여러개의 값을 담을 수 있는 변수 값 읽어오기 리스트를 사용할때는 0번째가 첫번째 첫번째 값  두번째 값  뒤에서 첫번째 값  뒤에서 두번째 값  리스트에 들어있는 값 보다 큰 값을 읽어오려고 하면 에러 예. 위의 list…","html":"<h3 id=\"list\" style=\"position:relative;\"><a href=\"#list\" aria-label=\"list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List</h3>\n<ul>\n<li>\n<p>여러개의 값을 담을 수 있는 변수</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">list1 = [1,2,3,4,5]</code></pre></div>\n</li>\n<li>\n<p>값 읽어오기</p>\n<ul>\n<li>리스트를 사용할때는 0번째가 첫번째</li>\n<li>첫번째 값 <code class=\"language-text\">list1[0]</code></li>\n<li>두번째 값 <code class=\"language-text\">list1[1]</code></li>\n<li>뒤에서 첫번째 값 <code class=\"language-text\">list1[-1]</code></li>\n<li>뒤에서 두번째 값 <code class=\"language-text\">list1[-2]</code></li>\n<li>리스트에 들어있는 값 보다 큰 값을 읽어오려고 하면 에러</li>\n<li>예. 위의 list1에서 <code class=\"language-text\">list1[5]</code> 또는 <code class=\"language-text\">list1[-6]</code>은 에러</li>\n</ul>\n</li>\n<li>\n<p>값 쓰기</p>\n<ul>\n<li>변수와 같이 <code class=\"language-text\">list1[0]=10</code>이라고 하면 list의 첫번째 값이 10으로 변경</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"리스트-수정\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%88%98%EC%A0%95\" aria-label=\"리스트 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트 수정</h3>\n<h4 id=\"리스트에-새로운-값을-추가하는-방법\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B0%92%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"리스트에 새로운 값을 추가하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트에 새로운 값을 추가하는 방법</h4>\n<ul>\n<li><code class=\"language-text\">list1=[1,2,3]</code>이라고 할 때</li>\n<li>\n<p>append를 이용</p>\n<ul>\n<li><code class=\"language-text\">list1.append(4)</code></li>\n<li>append를 이용하면 리스트에 새로운 값이 추가된다.</li>\n</ul>\n</li>\n<li>\n<p>뒤에 새로운 리스트를 더하기</p>\n<ul>\n<li><code class=\"language-text\">list2=list1+[4]</code></li>\n<li>list1은 그대로 두고, 새로운 리스트를 만들어 낸다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"리스트에-값이-들어있는지-확인하는-방법\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EA%B0%92%EC%9D%B4-%EB%93%A4%EC%96%B4%EC%9E%88%EB%8A%94%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"리스트에 값이 들어있는지 확인하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트에 값이 들어있는지 확인하는 방법</h4>\n<ul>\n<li>\n<p>in 연산을 이용</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#12라는 값이 리스트에 들어있는지 확인하는 코드\nn=12\nif n in list1:\n  print('{}가 리스트에 있다.'.format(n))</code></pre></div>\n</li>\n</ul>\n<h4 id=\"리스트에서-필요-없는-값을-지우는-방법\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%84%EC%9A%94-%EC%97%86%EB%8A%94-%EA%B0%92%EC%9D%84-%EC%A7%80%EC%9A%B0%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"리스트에서 필요 없는 값을 지우는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트에서 필요 없는 값을 지우는 방법</h4>\n<ul>\n<li>\n<p>del을 이용해서 특정 위치의 값을 지우기</p>\n<ul>\n<li><code class=\"language-text\">del list1[10]</code> 리스트의 10번째 값을 지워라</li>\n</ul>\n</li>\n<li>\n<p>remove를 이용해서 특정 값을 지우기</p>\n<ul>\n<li><code class=\"language-text\">list1.remove(40)</code>을 하면 리스트에 40이라는 값이 있는경우 삭제</li>\n<li>여러개의 값이 있는 경우 가장 앞에 있는 하나만 지워짐</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[python]5. 리스트 문법","date":null,"lang":null}}},{"node":{"id":"433132f0-45da-568a-ba56-ac188d8190f3","excerpt":"…","html":"<p>문제를 풀거나 강의를 들으면서 헷갈리거나 궁금한 함수를 기록하고 나중에 찾아보면서 정리할 예정</p>\n<ul>\n<li>\n<p><code class=\"language-text\">isnumeric()</code>, <code class=\"language-text\">isdigit()</code>, <code class=\"language-text\">isdecimal()</code> 의 차이</p>\n<ul>\n<li><code class=\"language-text\">isnumeric()</code></li>\n<li>문자열 내장함수</li>\n<li>문자열이 모두 <code class=\"language-text\">numeric</code>문자로 이루어져있다면 <code class=\"language-text\">True</code>를 반환합니다.</li>\n<li>숫자를 표현하는 문자열까지 포함한다.(제곱근, 분수, 거듭제곱)</li>\n<li><code class=\"language-text\">isdigit()</code></li>\n<li>문자열 내장함수</li>\n<li>모든 문자가 <code class=\"language-text\">digit</code>이면 <code class=\"language-text\">True</code>를 반환합니다.</li>\n<li>단일 글자가 숫자형태이면 무조건 <code class=\"language-text\">True</code></li>\n<li><code class=\"language-text\">isdecimal()</code></li>\n<li>문자열 내장함수</li>\n<li>문자열 내의 모든 문자가 십진수 문자이면 <code class=\"language-text\">True</code>를 반환합니다.</li>\n<li>문자열이 int형으로 변환되지 않는다면 <code class=\"language-text\">False</code>이고 특수문자 중 숫자 모양은 숫자로 보지 않는다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">find()</code>, <code class=\"language-text\">index()</code> 의 차이</p>\n<ul>\n<li>둘 다 찾고자 하는 값의 index 값을 리턴합니다.</li>\n<li><code class=\"language-text\">find()</code>는 찾는 문자나 문자열이 없는 경우 -1을 <code class=\"language-text\">return</code>한다.</li>\n<li><code class=\"language-text\">index()</code>는 찾는 문자나 문자열이 없을 경우 오류를 발생시킨다.\n<code class=\"language-text\"># ValueError: substring not found</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">sum(iterable,/,start=0)</code></p>\n<ul>\n<li>내장함수</li>\n<li><code class=\"language-text\">iterable</code>과 <code class=\"language-text\">start</code>에 해당하는 항목들을 왼쪽에서 오른쪽으로 합하고 그 합을 반환합니다.</li>\n<li><code class=\"language-text\">iterable</code>의 항목은 일반적으로 숫자이며 <code class=\"language-text\">start</code>의 값은 문자열이 될 수 없습니다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">replace(old,new[,count])</code></p>\n<ul>\n<li>문자열 내장 함수</li>\n<li>모든 old를 new로 치환한 값을 반환합니다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">count</code>인수가 주어졌다면 <code class=\"language-text\">count</code>만큼의 값만 치환됩니다.</li>\n<li>\n<p><code class=\"language-text\">zip(*iterables)</code></p>\n<ul>\n<li>내장함수</li>\n<li><code class=\"language-text\">iterable</code>들의 요소들을 모아 <code class=\"language-text\">interator</code>로 만든다.(?) -> 더 알아봐야겠다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"code-classlanguage-textenumeratecode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textenumeratecode\" aria-label=\"code classlanguage textenumeratecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">enumerate</code></h4>\n<ul>\n<li>반복문 사용 시 몇 번째 반복문인지 확인이 필요할 때 사용합니다.</li>\n<li>인덱스 번호와 컬렉션의 원소를 tuple 형태로 반환합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">t <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># tuple 형태 반환을 이용하여 아래처럼 활용할 수 있습니다.</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index: {}, value: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nindex<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\nindex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\nindex<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\nindex<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span>\nindex<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></code></pre></div>","frontmatter":{"title":"[python] 함수 정리(계속 업데이트)","date":null,"lang":null}}},{"node":{"id":"d49cf81b-7f3d-51c3-9b5e-a68e49b2bf64","excerpt":"모듈 모듈: 함수나 변수 또는 클래스를 모아 놓은 파일 다른 파이썬 프로그램에서 불러와 사용할 수 있게끔 만든 파이썬 파일 다른 사람이 이미 만들어 놓은 모듈을 사용할 수도 있고 자기가 직접 만들어서 사용할 수도 있다. 모듈 만들기 확장자 py…","html":"<h3 id=\"모듈\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88\" aria-label=\"모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈</h3>\n<ul>\n<li>모듈: 함수나 변수 또는 클래스를 모아 놓은 파일</li>\n<li>다른 파이썬 프로그램에서 불러와 사용할 수 있게끔 만든 파이썬 파일</li>\n<li>다른 사람이 이미 만들어 놓은 모듈을 사용할 수도 있고 자기가 직접 만들어서 사용할 수도 있다.</li>\n</ul>\n<h3 id=\"모듈-만들기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"모듈 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># mod1.py</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n<span class=\"token keyword\">def</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">-</span> b</code></pre></div>\n<ul>\n<li>확장자 py로 만들 파일이 모두 모듈이다.</li>\n</ul>\n<h3 id=\"모듈-불러오기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"모듈 불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 불러오기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> mod1\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mod1<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mod1<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> 모듈이름</code></pre></div>\n<ul>\n<li><code class=\"language-text\">import</code> : 미리 만들어 놓은 파이썬 모듈을 사용할 수 있게 해주는 명령어</li>\n<li><code class=\"language-text\">mod1.py</code>에 들어있는 <code class=\"language-text\">add</code> 함수를 사용하기 위해서는 <code class=\"language-text\">mod1.add</code> 처럼 <code class=\"language-text\">모듈.함수이름</code>형식으로 작성하면 된다.</li>\n<li>import는 현재 디렉터리에 있는 파일이나 파이썬 라이브러리가 저장된 디렉터리에 있는 모듈만 불러올 수 있다.</li>\n<li>파이썬 라이브러리 - 파이썬을 설치할 때 자동으로 설치되는 파이썬 모듈</li>\n<li><code class=\"language-text\">from 모듈이름 import 모듈함수</code>형식으로 작성하면 모듈이름을 붙이지 않고 바로 함수를 사용할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> mod1 <span class=\"token keyword\">import</span> add<span class=\"token punctuation\">,</span> sub\n<span class=\"token keyword\">from</span> mod1 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token comment\"># mod1 모듈에 있는 모든 함수를 사용할 수 있음</span></code></pre></div>\n<h3 id=\"if-__name__--__main__-의-의미\" style=\"position:relative;\"><a href=\"#if-__name__--__main__-%EC%9D%98-%EC%9D%98%EB%AF%B8\" aria-label=\"if __name__  __main__ 의 의미 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>if __name__ == ”__main__”: 의 의미</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># mod1.py</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n<span class=\"token keyword\">def</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">-</span> b\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">import mod1</code>을 했을 때 아래의 print가 실행되는 것을 막아준다.</li>\n<li>\n<p><code class=\"language-text\">__name__ == \"__main__\"</code></p>\n<ul>\n<li>파일을 직접 실행할 경우 값이 <code class=\"language-text\">참</code>되어 if 안의 문장이 실행된다.</li>\n<li>반대로 대화형 인터프리터나 달느 파일에서 이 모듈을 불러서 사용할 때는 <code class=\"language-text\">거짓</code>이 되어 다음 문장이 수행되지 않는다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">__name__</code></p>\n<ul>\n<li>직접 파일을 실행할 경우 <code class=\"language-text\">__name__</code>변수에 <code class=\"language-text\">__main__</code>값이 저장된다.</li>\n<li>파이썬 셸이나 다른 파이썬 모듈에서 mod1을 import 할 경우에는 <code class=\"language-text\">__name__</code>변수에는 모듈 이름 값 <code class=\"language-text\">mod1</code>이 저장된다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"클래스나-변수-등을-포함한-모듈\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EB%82%98-%EB%B3%80%EC%88%98-%EB%93%B1%EC%9D%84-%ED%8F%AC%ED%95%A8%ED%95%9C-%EB%AA%A8%EB%93%88\" aria-label=\"클래스나 변수 등을 포함한 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스나 변수 등을 포함한 모듈</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># mod2.py</span>\nPI <span class=\"token operator\">=</span> <span class=\"token number\">3.141592</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">soly</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> PI <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span> r<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> mod2\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mod2<span class=\"token punctuation\">.</span>PI<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 3.141592</span>\n\na <span class=\"token operator\">=</span> mod2<span class=\"token punctuation\">.</span>Math<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>solv<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 12.~~~</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mod2<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>mod2<span class=\"token punctuation\">.</span>PI<span class=\"token punctuation\">,</span> <span class=\"token number\">4.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"다른-파일에서-모듈-불러오기\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%ED%8C%8C%EC%9D%BC%EC%97%90%EC%84%9C-%EB%AA%A8%EB%93%88-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"다른 파일에서 모듈 불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 파일에서 모듈 불러오기</h3>\n<ol>\n<li>\n<p><code class=\"language-text\">sys.path.append(모듈을 저장한 디렉터리)</code> 사용하기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\nsys<span class=\"token punctuation\">.</span>path</code></pre></div>\n<ul>\n<li><code class=\"language-text\">sys.path</code>는 파이썬 라이브러리가 설치되어 있는 디렉터리를 보여준다.</li>\n<li>모듈이 위 디렉터리에 들어 있다면 모듈이 저장된 디렉터리로 이동할 필요 없이 바로 불러서 사용할 수 있다.</li>\n<li>소스코드 안에서는 <code class=\"language-text\">\\\\</code>, <code class=\"language-text\">/</code>을 사용하여야한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sys<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"C:/doit/mymod\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#예시</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">PYTHONPATH</code> 환경 변수 사용하기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">set PYTHONPATH = c:\\doit\\mymod</code></pre></div>\n<ul>\n<li><code class=\"language-text\">set</code>명령어를 사용해 <code class=\"language-text\">PYTHONPATH</code>환변 변수에 디렉터리를 설정하면 추가 작업 없이 모듈을 불러와서 사용할 수 있다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"[python]8. 모듈","date":null,"lang":null}}},{"node":{"id":"1cec3c21-e692-56a6-b7a4-5c6240d67bac","excerpt":"…","html":"<h3 id=\"파일-생성하기\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"파일 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일 생성하기</h3>\n<ul>\n<li>내장함수 <code class=\"language-text\">open</code>을 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"새파일.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">파일 객체 = open(파일이름, 파일 열기 모드)</code></pre></div>\n<table>\n<thead>\n<tr>\n<th>파일열기모드</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">r</code></td>\n<td>읽기모드 - 파일을 읽기만 할 때 사용</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">w</code></td>\n<td>쓰기모드 - 파일에 내용을 쓸 때 사용</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">a</code></td>\n<td>추가모드 - 파일의 마지막에 새로운 내용을 추가 시킬 때 사용</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>파일을 쓰기모드로 열 때 해당 파일이 이미 존재할 경우 원래 있던 내용이 모두 사라지고, 해당 파일이 존재하지 않으면 새로운 파일이 생성된다.</li>\n<li>만약 새 파일을 <code class=\"language-text\">c:/doit</code>디렉토리에 생성하고 싶다면 파일 이름부분에 <code class=\"language-text\">c:/doit/새파일.txt</code>를 입력해주면 된다.</li>\n<li><code class=\"language-text\">f.close()</code>는 열려 있는 파일 객체를 닫아 주는 역할을 한다. 프로그램을 종료할 때 파이썬 프로그램이 열려 있는 파일의 객체를 자동으로 닫아주기 때문에 위의 예시 문장에서는 생략해도 된다.</li>\n<li>하지만 쓰기모드로 열었던 파일을 닫지 않고 다시 사용하려고 하면 오류가 발생하기 때문에 <code class=\"language-text\">close()</code>를 사용해서 열려 있는 파일을 직접 닫아주는 것이 좋다.</li>\n</ul>\n<h3 id=\"파일을-쓰기모드로-열어-출력값-적기\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%93%B0%EA%B8%B0%EB%AA%A8%EB%93%9C%EB%A1%9C-%EC%97%B4%EC%96%B4-%EC%B6%9C%EB%A0%A5%EA%B0%92-%EC%A0%81%EA%B8%B0\" aria-label=\"파일을 쓰기모드로 열어 출력값 적기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일을 쓰기모드로 열어 출력값 적기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c:/doit/새파일.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token string\">\"%d번째 줄입니다.\\n\"</span> <span class=\"token operator\">%</span> i\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">write(저장할 값)</code></li>\n</ul>\n<h3 id=\"프로그램의-외부에-저장된-파일을-읽는-여러가지-방법\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%99%B8%EB%B6%80%EC%97%90-%EC%A0%80%EC%9E%A5%EB%90%9C-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%9D%BD%EB%8A%94-%EC%97%AC%EB%9F%AC%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\" aria-label=\"프로그램의 외부에 저장된 파일을 읽는 여러가지 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그램의 외부에 저장된 파일을 읽는 여러가지 방법</h3>\n<ol>\n<li>\n<p><code class=\"language-text\">readline()</code></p>\n<ul>\n<li>첫 번째 줄을 읽어 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c:/doit/새파일.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 파일을 읽기 모드로 연 후</span>\nline <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 파일의 첫 번째 줄을 읽어</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 출력</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>모든 줄을 읽어 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c:/doit/새파일.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 파일을 읽기 모드로 연 후</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n\tline <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> line<span class=\"token punctuation\">:</span> <span class=\"token keyword\">break</span> <span class=\"token comment\"># 더 이상 읽을 줄이 없으면 break</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 출력</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">readlines()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c:/doit/새파일.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\nlines <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">readlines()</code> 함수는 파일의 모든 줄을 읽어서 각각의 줄을 요소로 갖는 리스트로 돌려 준다. <code class=\"language-text\">[\"1 번째 줄입니다.\", \"2 번째 줄입니다.\", ..., \"10 번째 줄입니다.\"]</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">read()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c:/doit/새파일.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>파일의 내용 전체를 문자열로 돌려준다</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"파일에-새로운-내용-추가하기\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC%EC%97%90-%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%82%B4%EC%9A%A9-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"파일에 새로운 내용 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일에 새로운 내용 추가하기</h3>\n<p><code class=\"language-text\">w</code>(쓰기모드)로 파일을 열 때 이미 존재하는 파일을 열면 그 파일의 내용이 모두 사라지게 된다. 하지만 원래 있던 값을 유지하면서 새로운 값만 추가해야 할 경우도 있다. 이런 경우에는 파일을 <code class=\"language-text\">a</code>-추가모드로 열면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C:/doit/새파일.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token string\">\"%d번째 줄입니다.\\n\"</span> <span class=\"token operator\">%</span> i\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"with문과-함께-사용하기\" style=\"position:relative;\"><a href=\"#with%EB%AC%B8%EA%B3%BC-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"with문과 함께 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>with문과 함께 사용하기</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">with</code>문을 사용하면 with 블록을 벗어나느 순간 열런 파일객체가 자동으로 close되어 편라히다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n  f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"Life is too short, you need python\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"sys-모듈로-매개변수-주기\" style=\"position:relative;\"><a href=\"#sys-%EB%AA%A8%EB%93%88%EB%A1%9C-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A3%BC%EA%B8%B0\" aria-label=\"sys 모듈로 매개변수 주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sys 모듈로 매개변수 주기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># sys1.py</span>\n<span class=\"token keyword\">import</span> sys\nargs <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> args<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>입력받은 인수를 for문을 사용해 차례대로 하나씩 출력하는 예이다. sys 모듈의 argv는 명령 창에서 입력한 인수를 의미한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/107882423-90972200-6f2c-11eb-9531-1ccbdd94989f.png\" alt=\"python-파일 읽고 쓰기\"></p>\n<p><code class=\"language-text\">argv[0]</code>은 파일 이름 sys1.py가 되고 <code class=\"language-text\">argv[1]</code>부터는 뒤에 따라오는 인수가 자례로 argv의 요소가 된다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#sys2.py</span>\n<span class=\"token keyword\">import</span> sys\nargs <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> args<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>문자열 관련 함수 <code class=\"language-text\">upper()</code>를 사용하여 명령 행에 입력된 소문자를 대문자로 바꾸어 주는 간단한 프로그램이다.</li>\n</ul>","frontmatter":{"title":"[python]6. 파일 읽고 쓰기","date":null,"lang":null}}},{"node":{"id":"e222b909-b6c7-585e-9121-3dfdb4099301","excerpt":"클래스 클래스(class) -> 과자틀 객체(object) -> 과자 틀에 의해서 만들어진 과자 객체와 인스턴스의 차이 클래스로 만든 객체를 인스턴스라고도 한다.  a는 객체 a는 Cookie의 인스턴스 사칙연산 계산기 예제 생성자(Constructor…","html":"<h3 id=\"클래스\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스</h3>\n<ul>\n<li>클래스(class) -> 과자틀</li>\n<li>객체(object) -> 과자 틀에 의해서 만들어진 과자</li>\n<li>\n<p>객체와 인스턴스의 차이</p>\n<ul>\n<li>클래스로 만든 객체를 인스턴스라고도 한다.</li>\n<li><code class=\"language-text\">a = Cookie()</code></li>\n<li>a는 객체</li>\n<li>a는 Cookie의 인스턴스</li>\n</ul>\n</li>\n<li>사칙연산 계산기 예제</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FourCal</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">setdata</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>first <span class=\"token operator\">=</span> first\n        self<span class=\"token punctuation\">.</span>second <span class=\"token operator\">=</span> second\n    <span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>second\n        <span class=\"token keyword\">return</span> result\n    <span class=\"token keyword\">def</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>first <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>second\n        <span class=\"token keyword\">return</span> result\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>first <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>second\n        <span class=\"token keyword\">return</span> result\n    <span class=\"token keyword\">def</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>first <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>second\n        <span class=\"token keyword\">return</span> result\n\n\n\na <span class=\"token operator\">=</span> FourCal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> FourCal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># FourCal.setdata(a,4,2) # 잘사용하진 않지만 이 방법도 가능</span>\na<span class=\"token punctuation\">.</span>setdata<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>setdata<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 주소값이 다른걸 확인할 수 있다.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#11567616</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#11567584</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>div<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"생성자constructor\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90constructor\" aria-label=\"생성자constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자(Constructor)</h3>\n<div class=\"gatsby-highlight\" data-language=\"pytho\"><pre class=\"language-pytho\"><code class=\"language-pytho\">class FourCal:\n\tdef ___init___(self,first,second):\n\t\tself.first = first\n\t\tself.second = second\n    def setdata(self, first, second):\n        self.first = first\n        self.second = second\n    def add(self):\n        result = self.first + self.second\n        return result\n    def mul(self):\n        result = self.first * self.second\n        return result\n    def sub(self):\n        result = self.first - self.second\n        return result\n    def div(self):\n        result = self.first / self.second\n        return result\n\n\n\na = FourCal()\nb = FourCal()\n\n# FourCal.setdata(a,4,2) # 잘사용하진 않지만 이 방법도 가능\na.setdata(4,2)\nb.setdata(3,6)\n\n# 주소값이 다른걸 확인할 수 있다.\nprint(id(a.first)) #11567616\nprint(id(b.first)) #11567584\n\nprint(a.add())\nprint(a.mul())\nprint(a.sub())\nprint(a.div())</code></pre></div>\n<h3 id=\"클래스의-상속inheritance\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%83%81%EC%86%8Dinheritance\" aria-label=\"클래스의 상속inheritance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스의 상속(inheritance)</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 상속</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MoreFourCal</span><span class=\"token punctuation\">(</span>FourCal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>first <span class=\"token operator\">**</span> self<span class=\"token punctuation\">.</span>second\n        <span class=\"token keyword\">return</span> result</code></pre></div>\n<p>MoreFourCal 클래스는 FourCal 클래스를 상속했으므로 FourCal 클래스의 모든 기능을 사용할 수 있다.</p>\n<ul>\n<li>\n<p>상속을 사용하는 이유</p>\n<ul>\n<li>기존 클래스를 변경하지 않고 기능을 추가하거나 기존 지능을 변경하려고 할 때 사용한다.</li>\n<li>기존 클래스가 라이브러리 형태로 제공되거나 수정이 허용되지 않는 상황이라면 상속을 사용하여야 한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"메서드-오버라이딩overriding\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9overriding\" aria-label=\"메서드 오버라이딩overriding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메서드 오버라이딩(Overriding)</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MoreFourCal</span><span class=\"token punctuation\">(</span>FourCal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>second <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 나누는 값이 0인 경우 0을 리턴하도록 수정</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>first <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>second</code></pre></div>\n<ul>\n<li>부모클래스(상속한 클래스)에 있는 메서드를 동일한 이름으로 다시 만드는 것을 메서드 오버라이딩(덮어쓰기)이라고 한다.</li>\n<li>메서드를 오버라이딩하면 부모 클래스의 메서드 대신 오버라이딩한 메서드가 호출된다.</li>\n</ul>\n<h3 id=\"클래스-변수\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98\" aria-label=\"클래스 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 변수</h3>\n<ul>\n<li>객체 변수는 다른 객체들에 영향받지 않고 독립적으로 그 값을 유지한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 클래스변수</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Family</span><span class=\"token punctuation\">:</span>\n    lastname <span class=\"token operator\">=</span> <span class=\"token string\">\"김\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Family<span class=\"token punctuation\">.</span>lastname<span class=\"token punctuation\">)</span>\na <span class=\"token operator\">=</span> Family<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> Family<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>lastname<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 김</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>lastname<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 김</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>Family<span class=\"token punctuation\">.</span>lastname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 140434541531008</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>lastname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 140434541531008</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>lastname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 140434541531008</span></code></pre></div>","frontmatter":{"title":"[python]7. 클래스","date":null,"lang":null}}},{"node":{"id":"9df64676-4242-56c7-941d-943be11c31c4","excerpt":"참고: 장고걸스 뷰(view)는 애플리케이션의 로직을 넣는 곳이다.\n이전 장에서 만들었던 에서 필요한 정보를 받아와서 에 전달하는 역할을 한다. blog/views.py…","html":"<p>참고: <a href=\"https://tutorial.djangogirls.org/ko/django_views/\">장고걸스</a></p>\n<p>뷰(view)는 애플리케이션의 로직을 넣는 곳이다.\n이전 장에서 만들었던 <code class=\"language-text\">모델</code>에서 필요한 정보를 받아와서 <code class=\"language-text\">템플릿</code>에 전달하는 역할을 한다.</p>\n<h4 id=\"blogviewspy\" style=\"position:relative;\"><a href=\"#blogviewspy\" aria-label=\"blogviewspy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>blog/views.py</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#blog/views.py</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">post_list</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'blog/post_list.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 함수는 <code class=\"language-text\">request</code>을 넘겨받아 <code class=\"language-text\">render</code>메서드를 호출하여 넘겨받은 <code class=\"language-text\">blog/post_list.html</code>템플릿을 보여준다.</p>\n<blockquote>\n<p><code class=\"language-text\">TemplateDoesNotExist ~~</code>가 뜬다면 잘 된 것</p>\n</blockquote>\n<p>장고 뷰에 대한 <a href=\"https://docs.djangoproject.com/en/2.0/topics/http/views/\">장고 공식문서</a></p>","frontmatter":{"title":"[django]8. Django 뷰 만들기","date":null,"lang":null}}},{"node":{"id":"a94cf124-e6a2-53b4-b6b3-f06677cba5ca","excerpt":"참고: 점프투파이썬 Packages 도트(.)를 사용하여 파이썬 모듈을 계층적(디렉터리 구조)으로 관리할 수 있게 해준다. 예를 들어 모듈 이름이 A.B인 경우 A는 패키지 이름이 되고 B는 A 패키지의 B…","html":"<p>참고: <a href=\"https://wikidocs.net/1418\">점프투파이썬</a></p>\n<h4 id=\"packages\" style=\"position:relative;\"><a href=\"#packages\" aria-label=\"packages permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Packages</h4>\n<p>도트(.)를 사용하여 파이썬 모듈을 계층적(디렉터리 구조)으로 관리할 수 있게 해준다. 예를 들어 모듈 이름이 A.B인 경우 A는 패키지 이름이 되고 B는 A 패키지의 B모듈이 된다.</p>\n<p>파이썬 패키지는 디럭터리와 파이썬 모듈로 이루어지며 구조는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">game<span class=\"token operator\">/</span>\n    __init__<span class=\"token punctuation\">.</span>py\n    sound<span class=\"token operator\">/</span>\n        __init__<span class=\"token punctuation\">.</span>py\n        echo<span class=\"token punctuation\">.</span>py\n        wav<span class=\"token punctuation\">.</span>py\n    graphic<span class=\"token operator\">/</span>\n        __init__<span class=\"token punctuation\">.</span>py\n        screen<span class=\"token punctuation\">.</span>py\n        render<span class=\"token punctuation\">.</span>py\n    play<span class=\"token operator\">/</span>\n        __init__<span class=\"token punctuation\">.</span>py\n        run<span class=\"token punctuation\">.</span>py\n        test<span class=\"token punctuation\">.</span>py</code></pre></div>\n<ul>\n<li><code class=\"language-text\">game</code>, <code class=\"language-text\">sound</code>, <code class=\"language-text\">graphic</code>, <code class=\"language-text\">play</code> - 디렉터리</li>\n<li>확장자가 .py인 파일 - 파이썬 모듈</li>\n<li><code class=\"language-text\">game</code> 디렉터리 - 루트 디렉터리</li>\n<li><code class=\"language-text\">sound</code>, <code class=\"language-text\">graphic</code>, <code class=\"language-text\">play</code> - 서브 디렉터리</li>\n<li>패키지 구조로 모듈을 만들면 다른 모듈과 이름이 겹치더라도 더 안전하게 사용할 수 있다.</li>\n</ul>\n<h3 id=\"패키지-만들기\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"패키지 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 만들기</h3>\n<ol>\n<li>루트디렉터리와 그 아래의 서브 디렉터리들을 생성하고 .py파일들을 만든다.</li>\n<li>각 디렉터리에 <code class=\"language-text\">__init__.py</code>파일을 만듦</li>\n<li>\n<p>패키지를 참조할 수 있도록 명령프롬프트 창에서 set 명령어로 <code class=\"language-text\">PYTHONPATH</code> 환경 변수에 패키지 디렉터리 바로 위의 디렉터리를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">set PYTHONPATH=C:/doit</code></pre></div>\n</li>\n</ol>\n<h3 id=\"실행하기\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행하기</h3>\n<ol>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> game<span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">.</span>echo\ngame<span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">.</span>echo<span class=\"token punctuation\">.</span>echo_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> game<span class=\"token punctuation\">.</span>sound <span class=\"token keyword\">import</span> echo\necho<span class=\"token punctuation\">.</span>echo_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> game<span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">.</span>echo <span class=\"token keyword\">import</span> echo_test\necho_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>import game을 수행하면 game 디렉어리의 모듈 또는 game 디렉터리의 <code class=\"language-text\">__init__.py</code>에 정의한 것만 참조할 수 있다.</li>\n<li><code class=\"language-text\">import game.sound.echo.echo_test</code>처럼 함수를 사용하는 것도 불가능하다\n도트 연산자(.)를 사용해서 import a.b.c 처럼 import할 때 가장 마지막 항목인 c는 반드시 모듈 또는 패키지여야만 한다.</li>\n</ol>\n<h3 id=\"code-classlanguage-text__init__pycode의-용도\" style=\"position:relative;\"><a href=\"#code-classlanguage-text__init__pycode%EC%9D%98-%EC%9A%A9%EB%8F%84\" aria-label=\"code classlanguage text__init__pycode의 용도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">__init__.py</code>의 용도</h3>\n<p>해당 디렉터리가 패키지의 일부임을 알려주는 역할을 한다. 만약 game,sound,graphic 등 패키지에 포함된 디렉터리에 <code class=\"language-text\">__init__.py</code>파일이 없다면 패키지로 인식되지 않는다.</p>\n<blockquote>\n<p>3.3 버전부터는 없어도 패키지로 인식하지만 하위 버전 호환을 위해 파일을 생성하는 것이 안전한 방법이다.</p>\n</blockquote>\n<ul>\n<li>\n<p>특정 디렉터리의 모듈을 <code class=\"language-text\">*</code>를 사용하여 import할 때에는 <code class=\"language-text\">__init__.py</code>파일에 <code class=\"language-text\">__all__</code>변수를 설정하고 import할 수 있는 모듈을 정의해 주어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">__all__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'echo'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>여기서 <code class=\"language-text\">__all__</code>은 sound 디렉터리에서 <code class=\"language-text\">*</code>기호를 사용하여 import할 경우 이곳에 정의된 echo 모듈만 import된다는 것을 의미한다.</p>\n<blockquote>\n<p><code class=\"language-text\">from game.sound.echo import *</code>은 <code class=\"language-text\">__all__</code>과 상관없이 무조건 import된다.</p>\n<p>-> from의 마지막 항목이 모듈인 경우</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"relative-패키지\" style=\"position:relative;\"><a href=\"#relative-%ED%8C%A8%ED%82%A4%EC%A7%80\" aria-label=\"relative 패키지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>relative 패키지</h3>\n<p>만약 graphic 디렉터리의 render.py모듈이 sound 디렉터리의 echo.py 모듈을 사용하고 싶다면 render.py를 다음과 같이 수정하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> game<span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">.</span>echo <span class=\"token keyword\">import</span> echo_test <span class=\"token comment\"># 추가된 문장</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">render_test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"render\"</span><span class=\"token punctuation\">)</span>\n    echo_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 처럼 전체 경로를 사용하여 import할 수도 있지만 다음과 같이 relative하게 import하는 것도 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">.</span>echo <span class=\"token keyword\">import</span> echo_test <span class=\"token comment\"># 추가된 문장</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">render_test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"render\"</span><span class=\"token punctuation\">)</span>\n    echo_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>여기서 <code class=\"language-text\">..</code>은 부모 디렉터리를 의미한다. graphic과 sound 디렉처리는 동일한 depth이므로 <code class=\"language-text\">..</code>을 사용하여 위와 같은 import가 가능한 것이다.</li>\n<li><code class=\"language-text\">..</code> - 부모 디렉터리</li>\n<li><code class=\"language-text\">.</code> - 현재 디렉터리</li>\n</ul>\n<p><code class=\"language-text\">..</code>과 같은 relative한 접근자는 render.py처럼 모듈 안에서만 사용해야한다. 파이썬 인터프리터에서 relative한 접근자를 사용하면 <code class=\"language-text\">SystemError: cannot perform relative import</code>오류가 발생한다.</p>","frontmatter":{"title":"[python]9. 패키지","date":null,"lang":null}}},{"node":{"id":"e045c91e-39ed-5e52-9f59-0dac6e0b1623","excerpt":"리스트를 복사할 때 사용하는 함수는 주의해서 사용해야한다.\n리스트를 복사한 후 원솟값을 변경하면 복사된 원솟값까지 변경될 수 있기 때문이다. 그 이유는 리스트의 얕은 복사(shallow copy)를 수행하기 때문이다. 얕은 복사(shallow copy…","html":"<p>리스트를 복사할 때 사용하는 <code class=\"language-text\">copy()</code>함수는 주의해서 사용해야한다.\n리스트를 복사한 후 원솟값을 변경하면 복사된 원솟값까지 변경될 수 있기 때문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> b<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> b\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>그 이유는 리스트의 얕은 복사(shallow copy)를 수행하기 때문이다.</p>\n<ul>\n<li>얕은 복사(shallow copy): 리스트 안의 모든 원소가 참조하는 곳까지 복사된다.</li>\n<li>깉은 복사:(deep copy): 구성 원소 수준으로 복사하는 방법. copy 모듈 안의 deepcopy() 함수로 수행한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> copy\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> b<span class=\"token operator\">=</span>copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">9</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> b\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>위의 코드에서 볼 수 있듯이 리스트의 원소뿐만 아니라 구성원소(원소의 원소)도 복사된다.</li>\n</ul>\n<blockquote>\n<p>객체가 갖는 멤버의 값을 새로운 객체로 복사할 때 객체가 참조 자료형의 멤버를 포함할 경우 얕은 복사라고 하며, 이는 참조값만 복사하는 방식이다.\n깊은 복사는 참조값 뿐만 아니라 참조하는 객체 자체를 복사한다. 즉, 객체가 갖는 모든 멤버(값과 참조 형식 모두)를 복사하므로 전체 복사라고도 한다.</p>\n</blockquote>","frontmatter":{"title":"[python] copy()","date":null,"lang":null}}},{"node":{"id":"7b6aa8ef-08aa-5854-a067-3f02eea17eff","excerpt":"참고: 점프투파이썬 try, except문 try 블록 수행 중 오류가 발생하면 except 블록이 수행된다. 하지만 try 블록에 오류가 발생하지 않는다면 except블록이 수행되지 않는다. 기호는 괄호 안의 내용을 생략할 수 있다는 관례 표기이다. 따라서 이 구문은 try…","html":"<ul>\n<li>참고: <a href=\"https://wikidocs.net/30\">점프투파이썬</a></li>\n</ul>\n<h3 id=\"try-except문\" style=\"position:relative;\"><a href=\"#try-except%EB%AC%B8\" aria-label=\"try except문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>try, except문</h3>\n<div class=\"gatsby-highlight\" data-language=\"pyrhon\"><pre class=\"language-pyrhon\"><code class=\"language-pyrhon\">try:\n\t...\nexcept [발생 오류 [as 오류 메세지 변수]]:\n\t...</code></pre></div>\n<p>try 블록 수행 중 오류가 발생하면 except 블록이 수행된다. 하지만 try 블록에 오류가 발생하지 않는다면 except블록이 수행되지 않는다.</p>\n<p><code class=\"language-text\">[]</code>기호는 괄호 안의 내용을 생략할 수 있다는 관례 표기이다. 따라서 이 구문은</p>\n<ol>\n<li>try. except만 쓰는 방법</li>\n<li>발생 오류를 포함한 except문</li>\n<li>발생 오류와 오류 메세지 변수까지 포함한 except문</li>\n</ol>\n<p>이렇게 세가지 방법으로 작성할 수 있다.</p>\n<p>3번쨰 방법은 오류 메세지의 내용까지 알고 싶을 때 사용하는 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"tryfinally\" style=\"position:relative;\"><a href=\"#tryfinally\" aria-label=\"tryfinally permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>try..finally</h3>\n<p>finally절은 try문 수행 도중 예외 발생 여부에 상관없이 항상 수행된다. 보통 사용한 리소스를 close할 때에 많이 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 수행수행</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>foo.txt 파일을 쓰기모드로 연 후에 try문을 수행한 후 예외 발생 여부와 상관없이 finally절에서 <code class=\"language-text\">f.close()</code>로 열린 파일을 닫을 수 있다.</p>\n<h3 id=\"여러-개의-오류-처리하기\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-%EC%98%A4%EB%A5%98-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"여러 개의 오류 처리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러 개의 오류 처리하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">except</span> 발생오류<span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">except</span> 발생오류<span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>위와 같이 작성할 경우 발생하는 오류에 따라 처리를 다르게 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">except</span> <span class=\"token punctuation\">(</span>발생오류<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 발생오류<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></code></pre></div>\n<p>2개 이상의 오류를 동일하게 처리하려면 위와 같이 괄호를 사용하여 함꼐 묶여서 처리하면 된다.</p>\n<h3 id=\"오류-회피하기\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%ED%9A%8C%ED%94%BC%ED%95%98%EA%B8%B0\" aria-label=\"오류 회피하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 회피하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'나없는파일'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> FileNotFoundError<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span></code></pre></div>\n<p><code class=\"language-text\">pass</code>를 사용하여 오류를 그냥 회피하도록 할 수 있다.</p>\n<h3 id=\"오류-발생시키기\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-label=\"오류 발생시키기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 발생시키기</h3>\n<p>프로그래밍을 하다 보면 종종 오류를 일부러 발생시켜야 할 경우도 생긴다.</p>\n<p>파이썬에서는 <code class=\"language-text\">raise</code>명령어를 사용해 오류를 강제로 발생시킬 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">enque</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"데이터 x를 enqueue\"\"\"</span>\n    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_full<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> FixedQueue<span class=\"token punctuation\">.</span>Full <span class=\"token comment\"># 큐가 가득 차 있는 경우 예외 처리 발생</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Bird</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> NotImplementedError</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">NotImplementedError</code>는 파이썬 내장 오류로, 꼭 작성해야 하는 부분이 구현되지 않았을 경우 일부러 오류를 일으키기 위해 사용한다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Eagle</span><span class=\"token punctuation\">(</span>Bird<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\neagle <span class=\"token operator\">=</span> Eagle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\neagle<span class=\"token punctuation\">.</span>fly<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Eagle 클래스는 Bird 클래스를 상속받는다. Eagle 클래서에서 fly함수를 구현하지 않았기 때문에 Bird 클래스의 fly 함수가 호출된다. 그리고 raise문에 의해 에러가 발생할 것이다.</p>\n<blockquote>\n<p>상속받는 클래스에서 함수를 재구현하는 것을 메서드 오버라이딩이라고 부린다.</p>\n</blockquote>\n<p><code class=\"language-text\">NotImplementedError</code>가 발생하지 않게 하려면 Eagle 클래스에 fly 함수를 반드시 구현해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Eagle</span><span class=\"token punctuation\">(</span>Bird<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">fly</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"very fast\"</span><span class=\"token punctuation\">)</span>\n\neagle <span class=\"token operator\">=</span> Eagle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\neagle<span class=\"token punctuation\">.</span>fly<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"예외-만들기\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%99%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"예외 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외 만들기</h3>\n<p>파이썬 내장 클래스인 <code class=\"language-text\">Exception</code>클래스를 상속하여 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyError</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">say_nick</span><span class=\"token punctuation\">(</span>nick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> nick <span class=\"token operator\">==</span> <span class=\"token string\">'바보'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> MyError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nick<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    say_nick<span class=\"token punctuation\">(</span><span class=\"token string\">\"천사\"</span><span class=\"token punctuation\">)</span>\n    say_nick<span class=\"token punctuation\">(</span><span class=\"token string\">\"바보\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> MyError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"허용되지 않는 별명입니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>오류메세지를 출력했을 때 오류 메세지가 보이게 하려면 오류 클래스에 <code class=\"language-text\">__str__</code>메서드를 구현해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyError</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"허용되지 않는 별명입니다.\"</span></code></pre></div>","frontmatter":{"title":"[python]10. 예외처리","date":null,"lang":null}}},{"node":{"id":"ff3b8b51-75a3-5728-ba39-2c1317c03e1e","excerpt":"참고: 위키백과 pip는 파이썬으로 작성된 패키지 소프트웨어를 설치, 관리하는 패키지 관리 시스템이다. 파이썬 3.4 이후에 버전에는 같이 포함되어있다. 패키지 설치하기 장고 설치","html":"<p>참고: <a href=\"https://ko.wikipedia.org/wiki/Pip_(%ED%8C%A8%ED%82%A4%EC%A7%80_%EA%B4%80%EB%A6%AC%EC%9E%90)\">위키백과</a></p>\n<p>pip는 파이썬으로 작성된 패키지 소프트웨어를 설치, 관리하는 패키지 관리 시스템이다. 파이썬 3.4 이후에 버전에는 같이 포함되어있다.</p>\n<h3 id=\"패키지-설치하기\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"패키지 설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 설치하기</h3>\n<h4 id=\"장고-설치\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EA%B3%A0-%EC%84%A4%EC%B9%98\" aria-label=\"장고 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장고 설치</h4>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">pip install Django==3<span class=\"token punctuation\">.</span>1<span class=\"token punctuation\">.</span>4</code></pre></div>","frontmatter":{"title":"[python]pip(패키지관리자)","date":null,"lang":null}}},{"node":{"id":"080ecdf5-fa5a-5606-bbfb-321573a17a4d","excerpt":"참고: doit 자료구조와 함께 배우는 알고리즘 입문 리스트: 순서를 메긴 데이터를 나열하는 자료구조 트리: 데이터 사이의 계층 관계를 표현하는 자료구조 트리(tree) 순서 트리와 무순서 트리 형제 노드에 순서 관계가 있는지에 따라…","html":"<p>참고: doit 자료구조와 함께 배우는 알고리즘 입문</p>\n<p>리스트: 순서를 메긴 데이터를 나열하는 자료구조</p>\n<p>트리: 데이터 사이의 계층 관계를 표현하는 자료구조</p>\n<h4 id=\"트리tree\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%ACtree\" aria-label=\"트리tree permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리(tree)</h4>\n<p><strong>순서 트리와 무순서 트리</strong></p>\n<p>형제 노드에 순서 관계가 있는지에 따라 2종류로 분류됩니다. 형제 노드으 ㅣ순서 관곅 있으면 순서트리라고 하고, 구별하지 않으면 무순서 트리라고 합니다.</p>\n<p><strong>순서트리의 검색</strong></p>\n<p>순서 트리의 노드를 스캔하는 방법은 크게 2가지 입니다.</p>\n<ul>\n<li>\n<p>너비 우선 검색(breadth-first search)</p>\n<ul>\n<li>폭 우선 검색, 가로 검색, 수평 검색이라고도 합니다. 너비 우선 검색은 낮은 레벨부터 왼쪽에서 오른쪽으로 검색하고, 한 레벨에서 검색을 마치면 다음 레벨로 내려가는 방법입니다.</li>\n</ul>\n</li>\n<li>\n<p>깊이 우선 검색(depth-first search)</p>\n<ul>\n<li>세로 검색, 수직 검색이라고도 합니다. 깊이 우선 검색은 리프에 도달할 때까지 아래쪽으로 내려가면서 검색하는 것을 우선으로 하는 방법입니다. 리프에 도달해서 더 이상 검색할 곳이 없으면 일단 부모 노드로 돌아가고 그 뒤 다시 자식 노드로 내려갑니다.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[doit_algorithm] 09-1 트리 구조","date":null,"lang":null}}},{"node":{"id":"c8287acd-4ad2-520c-a688-de4a3557fe32","excerpt":"참고: 동빈나 유튜브 내장함수: 기본 입출력 함수부터 정렬 함수까지 기본적인 함수들을 제공합니다. itertools: 파이썬에서 반복되는 형태의 데이터를 처리하기 위한 유용한 기능들을 제공합니다. 특히 순열과 조합 라이브러리는 코딩 테이트에서 자주 사용합니다. (완전탐색) heapq…","html":"<p>참고: <a href=\"https://www.youtube.com/watch?v=m-9pAwq1o3w&#x26;list=PLRx0vPvlEmdAghTr5mXQxGpHjWqSz0dgC\">동빈나 유튜브</a></p>\n<ul>\n<li>내장함수: 기본 입출력 함수부터 정렬 함수까지 기본적인 함수들을 제공합니다.</li>\n<li>\n<p>itertools: 파이썬에서 반복되는 형태의 데이터를 처리하기 위한 유용한 기능들을 제공합니다.</p>\n<ul>\n<li>특히 순열과 조합 라이브러리는 코딩 테이트에서 자주 사용합니다. (완전탐색)</li>\n</ul>\n</li>\n<li>\n<p>heapq: 힙(Heap) 자료구조를 제공합니다.</p>\n<ul>\n<li>일반적으로 우선순위 큐 기능을 구현하기 위해 사용합니다.</li>\n</ul>\n</li>\n<li>bisect: 이진 탐색(Binary Search) 기능을 제공합니다.</li>\n<li>collections: 덱(deque), 카운터(Counter) 등의 유용한 자료구조를 포함합니다.</li>\n<li>\n<p>math: 필수적인 수학적 기능을 제공합니다.</p>\n<ul>\n<li>팩토리얼, 제곱근, 최대공약수(GCD), 삼각함수 관련 함수부터 파이(pi)와 같은 상수를 포함합니다.</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">sum()</code> 리스트의 합</p>\n<p><code class=\"language-text\">min()</code>, <code class=\"language-text\">max()</code> 최숫값 최솟값</p>\n<p><code class=\"language-text\">eval()</code> 사람의 입장에서 작성된 수식을 계산하여 반환</p>\n<p><code class=\"language-text\">sorted()</code> 반복가능한 객체를 정렬</p>\n<p>​ key 속성으로 정렬 기준을 정의해줄 수 있음</p>\n<h4 id=\"순열과-조합\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%97%B4%EA%B3%BC-%EC%A1%B0%ED%95%A9\" aria-label=\"순열과 조합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순열과 조합</h4>\n<ul>\n<li>itertools 라이브러리를 사용</li>\n<li><strong>순열</strong>: 서로 다른 n 개에서 서로 다른 r개를 선택하여 일렬로 나열하는 것</li>\n<li><strong>조합</strong>: 서로 다른 n 개에서 순서에 상관없이 서로 다른 r개를 선택하는 것</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> permutations<span class=\"token punctuation\">,</span> combinations<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">,</span> combinations_with_replacement\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 데이터 준비</span>\n\nresult1 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>permutations<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 모든 순열 구하기 (3개롤 골라 순서를 고려하여)</span>\nresult2 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>combinations<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 모든 조합 구하기 (2개를 뽑아 순서를 고려하지 않고)</span>\nresult3 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2개를 뽑는 모든 순열 구하기 (중복순열)</span>\nresult4 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>combinations_with_replacement<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2개를 뽑는 모든 조합 구하기(중복조합)</span></code></pre></div>\n<h4 id=\"counter\" style=\"position:relative;\"><a href=\"#counter\" aria-label=\"counter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Counter</h4>\n<ul>\n<li>파이썬 collections 라이브러리의 <strong>Counter</strong>는 등장 횟수를 세는 기능을 제공합니다.</li>\n<li>리스트와 같은 반복 가능한(iterable) 객체가 주어졌을 때 내부의 원소가 몇 번씩 등장했는지를 알려줍니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Conunter\n\ncounter <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">[</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 'blue'가 등장한 횟수 출력</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">[</span><span class=\"token string\">'green'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 'green'이 등장한 횟수 출력</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 사전 자료형으로 반환</span></code></pre></div>\n<h4 id=\"최대-공약수와-최소-공배수\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EB%8C%80-%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C-%EA%B3%B5%EB%B0%B0%EC%88%98\" aria-label=\"최대 공약수와 최소 공배수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최대 공약수와 최소 공배수</h4>\n<ul>\n<li>최대 공약수를 구해야 할 때 math 라이브러리의 gcd() 함수를 이용할 수 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> math\n\n<span class=\"token comment\"># 최소 공배수(LCM)을 구하는 함수</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">lcm</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> b <span class=\"token operator\">//</span> math<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n\na <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>gcd<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 최대 공약수(GCD) 계산</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lcm<span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 최소 공배수(LCM) 계산</span></code></pre></div>\n<ul>\n<li>팩토리얼, 재곱근 함수, 원주율 상수 등등을 사용할 수 있음</li>\n</ul>","frontmatter":{"title":"[python]코딩테스트에서 유용한 표준 라이브러리","date":null,"lang":null}}},{"node":{"id":"8ba9f776-d1b7-51a2-8c76-e49a6f284cd4","excerpt":"생활코딩 Internet VS WEB…","html":"<ul>\n<li>생활코딩</li>\n</ul>\n<h3 id=\"internet-vs-web\" style=\"position:relative;\"><a href=\"#internet-vs-web\" aria-label=\"internet vs web permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Internet VS WEB</h3>\n<p>인터넷이 도시라면, 웹은 그 도시 위에 있는 건물 하나입니다.</p>\n<p>인터넷이 도로라면, 웹은 그 도로 위를 달리는 자동차 한 대라고 할 수 있습니다.</p>\n<p>인터넷이 운영체제라면, 웹은 운영체제 위에서 동작하는 하나의 앱이라고 할 수 있습니다.</p>\n<p>-> 웹이 인터넷의 부분집합<img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3135/7724.png\" alt=\"img\"></p>\n<p>정보기술 역사상 중요한 사건 2개가 1960년대와 1990년대에 있었습니다.</p>\n<p>1960년에 인터넷이 탄생했고, 1990년에는 웹이 시작됐습니다. 두 기술은 30년의 격자를 가지고 태어났습니다. 그럼에도 우리가 이 두 기술을 잘 구분하지 못하는 것은 웹이 너무나 성공했기 때문입니다. 또 웹 때문에 사람들이 인터넷을 쓰기 시작했기 때문입니다. 그만큼 웹은 중요한 기술입니다.</p>\n<h3 id=\"인터넷\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%EB%84%B7\" aria-label=\"인터넷 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터넷</h3>\n<p>먼저 인터넷에 대한 이야기를 해보자면, 1960년은 핵전쟁이 끝난 지 얼마되지 않은 때 였습니다. 당시에 핵에 대한 공포는 상상을 초월했습니다. 미국은 핵공격이 일어났을 때 통신시스템에 심각한 취약점이 있다는 것을 발견했습니다. 당시에는 통신 시스템이 중앙집중적이었기 때문에 핵공격을 당하면 통신이 마비되는 위험이 있었던 것입니다.</p>\n<p>이런 문제를 극복하기 위해서 분산된 형태의 통신시스텡을 구상하게 되는데, 그것이 인터넷의 시작이었습니다.</p>\n<p><img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3135/7730.jpeg\" alt=\"img\"></p>\n<p>인터넷은 위의 그림처럼 중앙이 없습니다. 하나가 파괴되도 나머지가 역할을 대신하게 됩니다. 수많은 통신장치들이 각자 일종의 전화국 역할을 하는 상부상조 시스템이 인터넷인 것입니다.</p>\n<p>이렇게 1960년에 인터넷이 출발합니다. 그 후 30년간 인터넷은 천천히 확산됐지만, 대학, 군대, 기업들만 사용하는 시스템이었기 때문에, 이 기간동안 일반인들은 인터넷이 세상에 있다는 것조차 잘 몰랐습니다.</p>\n<p>그러던 1990년, 획기적인 사건이 발생합니다. 바로 웹이 탄생하게 된 것이죠</p>\n<p>웹은 스위스에 있는 유럽입자물리 연구소(CERN)라는 기관에서 처음 만들어집니다. 1980년대에 일반인들은 정보라는 개념조차도 낯설어 하던 때였습니다. 하지만 유럽입자물리연구소는 그 시절에 이미 정보의 바다에서 허우적대고 있었습니다. 이런 곳에서 웹이 태어난 것은 어쩌면 자연스러운 일이었을지도 모릅니다.</p>\n<p>1990년 유럽입자물리연구소에 인터넷이 도입되었고, 소프트웨어 엔지니어로 일하면서 웹의 전신이 될 프로그램을 만들고 있던 팀버너스리는 그 때까지의 경험에 인터넷을 합성해서 인류사적인 의미를 갖는 작업을 시작합니다.</p>\n<p>1990년 10월, 웹페이지를 편집하는 프로그램을 만듭니다.</p>\n<p>1990년 11월. 세계 최초의 웹브라우저를 만듭니다. 이 웹브라우저의 이름이 바로 월드 와이드 웹(world wide web)이었습니다. 훗날 이 브라우저의 이름이 웹의 이름이 되었죠</p>\n<p>1990년 12월 24일 마침내 웹서버를 완성했고, 이 서버에 info.cern.ch라는 도메인 네임을 부여합니다.</p>\n<p>인터넷이 등장한 1960년 이후로 엘리트 시스템이었던 인터넷이 1990년 웹을 만나면서 본격적인 대중화의 길을 걷기 시작합니다. 그렇게 인터넷과 웹은 폭발적으로 동반성장해서 오늘날에 이르게 되었습니다.</p>\n<h3 id=\"인터넷이-동작하는-기본-원리\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%EB%84%B7%EC%9D%B4-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94-%EA%B8%B0%EB%B3%B8-%EC%9B%90%EB%A6%AC\" aria-label=\"인터넷이 동작하는 기본 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터넷이 동작하는 기본 원리</h3>\n<p>팀 버너스리는 인터넷을 이용해서 웹을 만들기로 합니다. 이를 위해서 인터넷으로 연결된 2대의 컴퓨터를 준비했고, 2개의 프로그램을 개발합니다. 그리고 각각의 프로그램에 웹브라우저와 웹서버라는 이름을 붙입니다.</p>\n<p>웹서버가 설치된 컴퓨터에는 info.cern.ch라는 주소를 부여하고, 이 컴퓨터의 어떤 디렉토리에 iindex.html이라는 파일을 저장합니다.</p>\n<p>이번엔 웹브라우저가 설치된 컴퓨터의 주소창에 <a href=\"http://info.cern.ch/index.html%EC%9D%B4%EB%9D%BC%EB%8A%94\">http://info.cern.ch/index.html이라는</a> 주소를 입력하고 엔터를 칩니다. 그러면 아래 사진과 같은 일이 일어납니다.</p>\n<p><img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3135/7752.jpeg\" alt=\"img\"></p>\n<p>웹브라우저가 설치된 컴퓨터는 인터넷을 통해서 전기적 신호를 info.cern.ch라는 주소의 컴퓨터에게 보냅니다. 그 신호에는 ‘index.html이라는 파일의 코드를 원합니다.‘라는 내용이 포함되어 있습니다.</p>\n<p>그럼 웹브라우저가 설치된 컴퓨터에는 index.html 파일의 내용 즉 코드가 도착합니다. 웹브라우저는 그 코드를 읽어서 웹페이지를 화면에 출력합니다.</p>\n<p>웹브라우저가 설치된 컴퓨터는 정보를 요청하고 웹서버가 깔린 컴퓨터는 정보를 응답하면서 서로 정보를 주고 받는 구조입니다. 그래서 요청하는 컴퓨터를 클라이언트 컴퓨터, 응답하는 컴퓨터를 서버 컴퓨터라고 부르기도 합니다.</p>\n<p><img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3135/7753.jpeg\" alt=\"img\"></p>\n<p>서버와 클라이언트는 인터넷을 이용하는 모든 정보 시스템에 적용되는 문법과도 같습니다.</p>","frontmatter":{"title":"[Internet]인터넷의 작동 원리","date":null,"lang":null}}},{"node":{"id":"bc3d519f-3ba2-58d0-aede-8c0e647a7fc5","excerpt":"서버와 클라이언트가 주고받을 때 서로 알아들을 수 있는 기본 규칙이 있어야하는데 그걸 HTTP라고 한다. 굉장히 추상적인 것이기 때문에 지속적으로 보고 익숙해져야한다. chrome  를 보면 웹서버와 웹브라우저가 서로 주고받은 메세지를 확인할 수 있다. HTTP Request…","html":"<ul>\n<li>서버와 클라이언트가 주고받을 때 서로 알아들을 수 있는 기본 규칙이 있어야하는데 그걸 HTTP라고 한다.</li>\n<li>굉장히 추상적인 것이기 때문에 지속적으로 보고 익숙해져야한다.</li>\n<li>chrome <code class=\"language-text\">검사(inspect) > 네트워크</code> 를 보면 웹서버와 웹브라우저가 서로 주고받은 메세지를 확인할 수 있다.</li>\n</ul>\n<h2 id=\"http-request-header\" style=\"position:relative;\"><a href=\"#http-request-header\" aria-label=\"http request header permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP Request Header</h2>\n<p><img src=\"https://t1.daumcdn.net/cfile/tistory/2673024858FE02AB1F\" alt=\"img\"></p>\n<ul>\n<li>\n<p>GET/POST: 웹 브라우저와 웹 서버가 어떤 방식으로 통신할 것인가</p>\n<ul>\n<li>GET: 주소로 데이터를 가져오는 것</li>\n<li>POST: 데이터를 보내는 <strong>것</strong>?</li>\n</ul>\n</li>\n<li>HTTP/1.1: 웹브라우저가 사용하고있는 http</li>\n<li>Host: 인터넷이 연결되어있는 서버를 구분하는 주소</li>\n<li>User-Agent: 웹브라우저의 다른 말, 운영체계, 어떤 브라우저를 사용하고있는지 정보를 볼 수 있음</li>\n<li>Accept-Encoding: 웹브라우저와 웹서버가 통신할 때 응답하는 데이터의 양이 많으면 웹브라우저가 데이터를 풀어서 처리할 수 있다. 그러면 자원을 아낄 수 있음. 이 때 브라우저가 어떤 압축방식을 처리할 수 있는지 적어놓는 부분</li>\n<li>if-modified-since: 데이터를 매번 모두 전송하면 비효율적이기 때문에 최근에 받은 정보가 언제 업데이트된 정보인지를 저장해놓고 서버에 언제 업데이트된 정보인지를 알려주면 서버가 자신이 가지고있는 데이터의 최신 업데이트 시간과 비교하여 데이터를 보내줄지 말지를 결정한다.</li>\n</ul>\n<h2 id=\"http-response-header\" style=\"position:relative;\"><a href=\"#http-response-header\" aria-label=\"http response header permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP Response Header</h2>\n<p><img src=\"https://jsstudygroup.github.io/jsStudyBlog/assets/images/post/http_resHeader.jpg\" alt=\"http-res-header\"></p>\n<ul>\n<li>\n<p>status: 상태, 성공했는지 실패했는지에 대한 것</p>\n<ul>\n<li>http version</li>\n<li>status code: 응답결과</li>\n<li>phrase: 응답 결과에 대해서 사람이 알아볼 수 있게 풀어서 쓴 것</li>\n</ul>\n</li>\n<li>Content-type: 웹서버가 응답할 때 어떤 형식인지</li>\n<li>Content-Length: 응답하는 데이터의 크기</li>\n<li>Content-Encoding: 어떤 방식으로 풀어서 읽어야하는지</li>\n<li>Last-Modified: 이 정보는 언제 마지막으로 수정되었는지</li>\n</ul>\n<h3 id=\"다음에-공부해볼만한-주제\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C%EC%97%90-%EA%B3%B5%EB%B6%80%ED%95%B4%EB%B3%BC%EB%A7%8C%ED%95%9C-%EC%A3%BC%EC%A0%9C\" aria-label=\"다음에 공부해볼만한 주제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음에 공부해볼만한 주제</h3>\n<ul>\n<li>HTTPS, SSL</li>\n<li>\n<p>Cache</p>\n<ul>\n<li>내용이 갱신되었을 때 웹브라우저가 그 사실을 알지못한다는 문제가 있음</li>\n<li>윈도우: Ctrl + F5를 하면 캐시가 강제로 업데이트된다.</li>\n<li>성능향상에 관심이 있다면</li>\n<li>cache control, pragma</li>\n</ul>\n</li>\n<li>\n<p>cookie</p>\n<ul>\n<li>최근에는 web storage</li>\n<li>proxy: 서비스가 점점 복잡해진다면</li>\n</ul>\n</li>\n<li>\n<p>Developer tools > Network</p>\n<ul>\n<li>chorme</li>\n<li>wireshark: http뿐만 아니라 모든 통신을 확인할 수 있음</li>\n</ul>\n</li>\n</ul>\n<p>출처: <a href=\"https://opentutorials.org/course/3385/21673\">생활코딩</a></p>","frontmatter":{"title":"HTTP가 무엇?","date":null,"lang":null}}},{"node":{"id":"dd63c9e6-5e21-5cce-ba95-72543c5a4841","excerpt":"출처: https://zetawiki.com/wiki/%EC%9C%A0%EC%9D%98%EC%A0%81_%EB%B2%84%EC%A0%84 유의적버전, 유의적 버저닝, 유의미 버저닝, 의미 있는 버전 부여, 시맨틱 버저닝 의미에 맞게 세자리 버전을 부여하자는 것 X.Y.Z…","html":"<p>출처: <a href=\"https://zetawiki.com/wiki/%EC%9C%A0%EC%9D%98%EC%A0%81_%EB%B2%84%EC%A0%84\">https://zetawiki.com/wiki/%EC%9C%A0%EC%9D%98%EC%A0%81_%EB%B2%84%EC%A0%84</a></p>\n<p>유의적버전, 유의적 버저닝, 유의미 버저닝, 의미 있는 버전 부여, 시맨틱 버저닝</p>\n<ul>\n<li>의미에 맞게 세자리 버전을 부여하자는 것</li>\n<li>\n<p>X.Y.Z 버전 형식을 사용</p>\n<p>X - MAJOR - 주버전: 기존 버전과 호환되지 않게 API가 바뀔 때</p>\n<p>Y - MINOR - 부버전: 기존 버전과 호환되면서 새로운 기능을 추가할 때</p>\n<p>Z - PATCH - 수버전: 기존 버전과 호환되면서 버그를 수정한 것</p>\n</li>\n</ul>","frontmatter":{"title":"유의적 버전(Semantic Versioning)","date":null,"lang":null}}},{"node":{"id":"78277863-1978-5649-b3e8-ee9067bafefd","excerpt":"HTTPS vs HTTP HTTP(Hypertext Transfer Protocol) Hypertext인 HTML을 전송하기 위한 통신규약을 의미한다. HTTPS 여기서 S는 Over Secure Socket Layer의 약자로 Secure라는 말로 보면 보안이 강화된 HTTP…","html":"<h2 id=\"https-vs-http\" style=\"position:relative;\"><a href=\"#https-vs-http\" aria-label=\"https vs http permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTPS vs HTTP</h2>\n<ul>\n<li>\n<p>HTTP(Hypertext Transfer Protocol)</p>\n<p>Hypertext인 HTML을 전송하기 위한 통신규약을 의미한다.</p>\n</li>\n<li>\n<p>HTTP<strong>S</strong></p>\n<p>여기서 S는 Over Secure Socket Layer의 약자로 Secure라는 말로 보면 보안이 강화된 HTTP라는 것을 짐작할 수 있다.</p>\n</li>\n</ul>\n<p>HTTP는 암호화되지 않은 방법으로 데이터를 전송하기 때문에 서버와 클라이언트가 주고 받는 메시지를 감청하는 것이 매우 쉽다. 예를 들어 로그인을 위해서 서버로 비밀번호를 전소앟거나, 또는 중요한 기밀 문서를 열람하는 과정에서 악의적인 감청이나 데이터의 변조들이 일어날 수 있다는 것이다. 이를 보완한 것이 HTTPS이다.</p>\n<h2 id=\"https와-ssl\" style=\"position:relative;\"><a href=\"#https%EC%99%80-ssl\" aria-label=\"https와 ssl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTPS와 SSL</h2>\n<p>HTTP와 SSL은 같은 의미로 이해하고 있는 경우가 많다. 이것은 맞기도하고 틀리기도 한데, 그것은 마치 인터넷과 웹을 같은 의미로 이해하는 것과 같다. 결론적으로 말하면 웹이 인터넷 위에서 돌아가는 서비스 중의 하나인 것처럼 HTTPS도 SSL 프로토콜 위에서 돌아가는 프로토콜이다.</p>\n<h2 id=\"ssl과-tls\" style=\"position:relative;\"><a href=\"#ssl%EA%B3%BC-tls\" aria-label=\"ssl과 tls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL과 TLS</h2>\n<p><img src=\"https://sites.google.com/site/tlsssloverview/_/rsrc/1337752119392/ssl-tls-protocol-layers/ssllayers.gif\" alt=\"img\"></p>\n<p>SSL과 TLS는 같은 말이다. 네스케이프에 의해 SSL이 발명되었고, 이것이 점차 폭넓게 사용되다가 표준화 기구인 IETF의 관리로 변경되면서 TLS라는 이름으로 바뀌었다. TLS 1.0은 SSL 3.0을 계승한다. 하지만 TLS라는 이름보다는 SSL이라는 이름으로 훨씬 많이 사용되고 있다.</p>\n<h2 id=\"ssl-디지털-인증서\" style=\"position:relative;\"><a href=\"#ssl-%EB%94%94%EC%A7%80%ED%84%B8-%EC%9D%B8%EC%A6%9D%EC%84%9C\" aria-label=\"ssl 디지털 인증서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL 디지털 인증서</h2>\n<p>SSL 인증서는 클라이언트와 서버간의 통신을 제3자가보증해주는 전자화된 문서다. 클라이언트가 서버에 접속한 직후에 서버는 클라이언트에세 이 인증서 정보를 전달한다. 클라이언트는 이 인증서 정보가 신뢰할 수 있는 것인지를 검증 한 후에 다음 절차를 수행하게 된다. SSL과 SSL 디지털 인증서를 이용했을 때의 이점은 아래와 같다.</p>\n<ul>\n<li>통신 내용이 공격자에게 노출되는 것을 막을 수 있다.</li>\n<li>클라이언트가 접속하려는 서버가 신뢰 할 수 있는 서버인지를 판단할 수 있다.</li>\n<li>통신 내용의 악의적인 변경을 방지할 수 있다.</li>\n</ul>\n<h2 id=\"ssl에서-사용하는-암호화의-종류\" style=\"position:relative;\"><a href=\"#ssl%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%95%94%ED%98%B8%ED%99%94%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"ssl에서 사용하는 암호화의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL에서 사용하는 암호화의 종류</h2>\n<p>SSL의 핵심은 암호화이다. SSL은 보안과 성능상의 이유로 두가지 암호화 기법을 혼용해서 사용하고 있는데 SSL 동작방법을 이해하기 위해서는 이 암호화 기법들에 대한 이해가 필요하다. 이 방법을 모르면 SSL의 동작방법이 추상적으로 느껴질 것이다. SSL에 대한 구체적인 이해를 할 수 있도록 SSL에서 사용하는 암호화 기법들을 소개하겠다. 이것은 단 SSL의 이해 뿐 아니라 IT 담당자의 기본 소양에 해당하기 때문에 도전해보자</p>\n<h3 id=\"대칭키\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%B9%AD%ED%82%A4\" aria-label=\"대칭키 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대칭키</h3>\n<p>암호를 만드는 행위인 암호화를 할 때 사용하는 일정의 비밀번호를 키라고 한다. 이 키에 따라서 암호화된 결과가 달라지기 때문에 키를 모르면 암호를 푸는 행위인 복호화를 할 수 없다. 대칭키는 동일한 키로 암호화와 복호화를 같이 할 수 있는 방식의 암호화 기법을 의미한다. 즉 암호화를 할 때 1234라는 값을 사용했다면 복호화를 할 때 1234라는 값을 입력해야 한다는 것이다. 이해를 돕기 위해서 openssl을 이용해서 대칭키 방식으로 암호화하는 방법을 살펴보자. 아래 명령을 실행하면 plaintext.txt 파일이 생성된다. 그리고 비밀번호를 요구 받을 것이다. 이때 입력한 비밀번호가 대칭키가 되는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">echo</span> <span class=\"token string\">'this is the plain text'</span> > plaintext<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">;</span>\nopenssl enc <span class=\"token operator\">-</span>e <span class=\"token operator\">-</span>des3 <span class=\"token operator\">-</span>salt <span class=\"token operator\">-in</span> plaintext<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span>out ciphertext<span class=\"token punctuation\">.</span>bin<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>enc -e -des3: des3 방식으로 암호화 함</li>\n<li>-in plaintext.txt -out ciphertext.bin: plaintext.txt 파일을 암호화 한 결과를 ciphertext.bin 파일에 저장함</li>\n</ul>\n<h3 id=\"공개키\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EA%B0%9C%ED%82%A4\" aria-label=\"공개키 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공개키</h3>\n<p>대칭키 방식은 단점이 있다. 암호를 주고 받는 사라들 사이에 대칭키를 전달하는 것이 어렵다는 점이다. 대칭키가 유출되면 키를 획득한 공격자는 암호의 내용을 복호화 할 수 있기 때문에 암호화가 무용지물이 되기 때문이다. 이런 배경에서 나온 암호화 방식이 공개키 방식이다.</p>\n<p>공개키 방식은 두 개의 키를 갖게 되는데 A키로 암호화를 하면 B키로 복호화 할 수 있고, B키로 암호화하면 A키로 복호화 할 수 있는 방식이다. 이 방식에서 착안해서 두 개의 키 중 하나를 비공개키(private key, 개인키, 비밀키라고도 부른다)로 하고, 나머지를 공개키(public key)로 지정한다. 비공개키는 자신만이 가지고 있고, 공개키를 타인에서 제공한다. 공개키를 제공받은 타인은 공개키를 이용해서 정보를 암호화한다. 암호화한 정보를 비공개키를 가지고 있는 사람에게 전송한다. 비공개키의 소유자는 이 키를 이용하여 암호화된 정보를 복호화 한다. 이 과정에서 공개키가 유출된다고 해도 비공개키를 모르면 정보를 복호화 할 수 없기 때문에 안전하다. 공개키로는 암호화는 할 수 있지만 복호화는 할 수 없기 때문이다.</p>\n<p>이 방식은 이렇게 응용할 수 있다. 비공개키의 소유자는 비공개키를 이용해서 정보를 암호화 한 후에 공개키와 함께 암호화된 정보를 전송한다. 정보와 공개키를 확득한 사람은 공개키를 이용하여 암호화된 정보를 복호화 한다.이 과정에서 공개키가 유출된다면 의도하지 않은 공격자에 의해서 데이터가 복호화 될 위험이 있다. 이런 위험에도 불구하고 비공개키를 이용해서 암호화하는 이유는 무엇일까? 그것은 이것이 데이터를 보호하는 것이 목적이 아니기 때문이다. 암호화된 데이터를 공개키를 가지고 복호화 할 수 있다는 것은 그 데이터가 공개키와 쌍을 이루는 비공개 키에 의해서 암호화 되었다는 것을 의미한다. 즉 공개키가 데이터를 제공한 사람의 신원을 보장해주게 되는 것이다. 이러한 것을 전자 서명이라고 부른다.</p>\n<h3 id=\"ssl-인증서\" style=\"position:relative;\"><a href=\"#ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C\" aria-label=\"ssl 인증서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL 인증서</h3>\n<p>인증서의 기능은 크게 두 가지 이다. 이 두가지를 이해하는 것이 인증서를 이해하는 핵심이다.</p>\n<ol>\n<li>클라이언트가 접속한 서버가 신뢰 할 수 있는 서버임을 보장한다.</li>\n<li>SSL 통신에 사용할 공개키를 클라이언트에게 제공한다.</li>\n</ol>\n<h3 id=\"ca\" style=\"position:relative;\"><a href=\"#ca\" aria-label=\"ca permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CA</h3>\n<p>인증서의 역할을 클라이언트가 접속한 서버가 클라이언트가 의도한 서버가 맞는지를 보장하는 역할을 한다. 이 역할을 하는 민간기업들이 있는데 이런 기업들을 CA(Certificate authority) 혹은 Root Certificate라고 부른다. CA는 아무 기업이나 할 수 있는 것이 아니고 신뢰성이 엄격하게 동인된 기업들만이 참여할 수 있다.</p>\n<p>SSL을 통해서 암호화된 통신을 제공하려는 서비스는 CA를 통해서 인증서를 구입해야 한다. CA는 서비스와 신뢰성을 다양한 방법으로 평가하게 된다.</p>\n<h3 id=\"ssl-인증서의-내용\" style=\"position:relative;\"><a href=\"#ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C%EC%9D%98-%EB%82%B4%EC%9A%A9\" aria-label=\"ssl 인증서의 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL 인증서의 내용</h3>\n<ol>\n<li>\n<p>서비스의 정보( 인증서를 발급한 CA, 서비스의 도메인 등등)</p>\n<p>클라이언트가 접속한 서버가 클라이언트가 의도한 서버가 맞는지에 대한 내용</p>\n</li>\n<li>\n<p>서버 측 공개키(공개키의 내용, 공개키의 암호화 방법)</p>\n<p>서버와 통신을 할 때 사용할 공개키와 그 공개키의 암호화 방법들의 정보</p>\n</li>\n</ol>\n<p>인증서의 내용은 위와 같이 크게 두가지로 구분할 수 있다. 서비스의 도메인, 공개키와 같은 정보는 서비스가 CA로부터 인증서를 구입할 때 제출해야 한다.</p>\n<p>위와 같은 내용은 CA에 의해서 암호화된다. 이 때 사용하는 암호화 기법이 공개키 방식이다. CA는 자신의 CA 비공개키를 이용해서 서버가 제출한 인증서를 암호화하는 것이다. CA의 비공개키는 절대로 유출되어서는 안된다. 이것이 노출되는 바람에 디지노타라는 회사가 파산한 사례도 있다.</p>\n<ul>\n<li>브라우저는 내부적으로 CA의 리스트를 미리 파악하고 있다. 이 말은 브라우저의 소서코드 안에 CA의 리크스가 들어있다는 것이다. 브라우저가 미리 파악하고 있는 CA의 리스트에 포함되어야만 공인된 CA가 될 수 있는 것이다. CA의 리스트와 함께 각 CA의 공개키를 브라우저는 이미 알고 있다.</li>\n</ul>\n<h3 id=\"ssl-인증서가-서비스를-보증하는-방법\" style=\"position:relative;\"><a href=\"#ssl-%EC%9D%B8%EC%A6%9D%EC%84%9C%EA%B0%80-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EB%B3%B4%EC%A6%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"ssl 인증서가 서비스를 보증하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL 인증서가 서비스를 보증하는 방법</h3>\n<p>웹 브라우저가 서버에 접속할 때 서버는 제일 먼저 인증서를 제공한다. 브라우저는 이 인증서를 발급한 CA가 자신이 내장한 CA의 리스트에 있는지를 확인한다. 확인 결과 서버를 통해서 다운받은 인증서가 내장된 CA 리스트에 포함되어 있다면 해당 CA의 공개키를 이용해서 인증서를 복호화 한다.</p>\n<p>CA의 공개키를 이용해서 인증서를 복호화 할 수 있다는 것은 이 인증서가 CA의 비공개키에 의해서 암호화 된 것을 의미한다. 해당 CA의 비공개 키를 가지고 있는 CA는 해당 CA 밖에 없기 때문에 서버가 제공한 인증서가 CA에 의해서 발급된 것이라는 것을 의미한다. CA에 의해서 발급된 인증서라는 것은 접속한 사이트가 CA에 의해 검토되었다는 것을 의미하게 된다. CA의 검토를 통과했다는 것은 해당 서비스가 신뢰 할 수 있다는 것을 의미한다. 이것이 CA와 브라우저가 특정 서버를인증하는 과정이다.</p>\n<h2 id=\"ssl의-동작방법\" style=\"position:relative;\"><a href=\"#ssl%EC%9D%98-%EB%8F%99%EC%9E%91%EB%B0%A9%EB%B2%95\" aria-label=\"ssl의 동작방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL의 동작방법</h2>\n<p>SSL은 암호화된 데이터를 전송하기 위해서 공개키와 대칭키를 혼합해서 사용한다. 즉 ㅁ클라이언트와 서버가 주고 받는 실제 정보는 대칭키 방식으로 암호화하고, 대칭키 방식으로 암호화된 실제 정보를 복호화할 때 사용할 대칭키는 공개키 방식으로 암호화해서 클라이언트와 서버가 주고 받는다.</p>\n<ul>\n<li>실제 데이터: 대칭키</li>\n<li>대칭키의 키: 공개키</li>\n</ul>\n<p>컴퓨터와 컴퓨터가 네트워크를 이용해서 통신을 할 때는 내부적으로 3가지 단게가 있다.</p>\n<p>​ 악수 -> 전송 -> 세션종료</p>\n<p>이것은 은밀하게 일어나게 때문에 사용자에게 노출되지 않는다. 이 과정에서 SSL가 어떻게 데이터를 암호화해서 전달하는지 살펴보자</p>\n<h3 id=\"1-악수handshake\" style=\"position:relative;\"><a href=\"#1-%EC%95%85%EC%88%98handshake\" aria-label=\"1 악수handshake permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 악수(handshake)</h3>\n<p>사람과 사람이 소통 할 때를 생각해보자. 우선 인사를 한다. 인사를 통해서 상대의 기분과 상황을 상호탐색을 하는 것이다. 이 과정에서 잘되야 소통이 원활해진다. 클라이언트와 서버 사이도 마찬가지다. 실제 데이터를 주고받기 전에 클라이언트와 서버는 일종의 인사인 Handshake를 한다. 이 과정을 통해서 서로 상대방이 존재하는지, 또 상대방과 데이터를 주고 받기 위해서는 어떤 방법을 사용해야하는지를 파악한다.</p>\n<p>SSL 방식을 이용해서 통신을 하는 브라우저와 서버 역시 핸드쉐이크를 하는데, 이 때 SSL 인증서를 주고 받는다.</p>\n<p>공개키는 이상적인 통신 방법이다. 암호화와 복호화를 할 때 사용하는 키가 서로 다르기 때문에 메시지를 전송하는 쪽이 공개키로 데이터를 암호화하고, 수신 받는 쪽이 비공개키로 데이터를 복호화하면 되기 때문이다. 그런데 SSL에서는 이 방식을 사용하지 않는다. 왜냐하면 공개키 방식의 암호화는 매우 많은 컴퓨터 자원을 사용하기 때문이다. 반면에 암호화와 복호화에 사용되는 키가 동일한 대칭키 방식은 적은 컴퓨터 작원으로 암호화를 수행할 수 있기 때문에 효율적이지만 수신 측과 송신측이 동일한 키를 공유해야 하기 때문에 보안의 문제가 발생한다. 그래서 SSL은 공개키와 대칭키의 장점을 혼합한 방법을 사용한다. 그 핸드쉐이크 단게에서 클라이언트와 서버가 통신하는 과정을 순서대로 살펴보자.</p>\n<ol>\n<li>\n<p>클라이언트가 서버에 접소한다. 이 단게를 Client Hello라고 한다. 이 단계에서 주고 받는 정보는 아래와 같다.</p>\n<ul>\n<li>클라이언트 측에서 생성한 랜덤 데이터</li>\n<li>클라이언트가 지원하는 암호화 방식들: 클라이언트와 서버가 지원하는 암호화 방식이 서로 다를 수 있기 때문에 상호 간에 어떤 암호화 방식을 사용할 것인지에 대해 협상을 해야 한다. 이 협상을 위해서 클라이언트 측에서는 자신이 사용할 수 있는 암호화 방식을 전송한다.</li>\n<li>세션 아이디: 이미 SSL 핸드쉐이킹을 했다면 비용과 시간을 절약하기 위해서 기존의 세션을 재활용하게 되는데 이 때 사용할 연결에 대한 식별자를 서버 측으로 전송한다.</li>\n</ul>\n</li>\n<li>\n<p>서버는 Client Hello에 대한 응답으로 Server Hello를 하게 된다. 이 단계에서 주고 받는 정보는 아래와 같다.</p>\n<ul>\n<li>서버 측에서 생성한 랜덤 데이터</li>\n<li>서버가 선택한 클라이언트의 암호화 방식: 클라이언트가 전달한 암호화 방식 중에서 서버 쪽에서도 사용할 수 있는 암호화 방식을 선택해서 클라이언트로 전달한다. 이로써 암호화 방식에 대한 협상이 종료되고 서버와 클라이언트는 이 암호화 방식을 이용해서 정보를 교환하게 된다.</li>\n<li>인증서</li>\n</ul>\n</li>\n<li>\n<p>클라이언트는 서버의 인증서가 CA에 의해서 발급된 것인지를 확인하기 위해서 클라이언트에 내장된 CA 리스트를 확인한다. CA 리스트에 인증서가 없다면 사용자에게 경고 메세지를 출력한다. 인증서가 CA에 의해서 발급된 것인지를 확인하기 위해서 클라이언트에 내장된 CA의 공개키를 이용해서 인증서를 복호화한다. 복호화에 성공했다면 인증서는 CA의 공개키로 암호화된 문서임을 암시적으로 보증된 것이다. 인증서를 전송한 서버를 믿을 수 된 것이다.</p>\n<p>클라이언트를 상기 2번을 통해서 받은 서버의 랜덤 데이터와 클라이언트가 생성한 랜덤 데이터를 조합해서 pre master secret라는 키를 생성한다. 이 키는 뒤에서 살펴볼 세션 단게에서 데이터를 주고 받을 때 안호화하기 위해서 사용될 것이다. 이때 사용할 암호화 기법은 대칭키이기 때문에 pre master secret 값은 제 3자에게 절대로 노출되어서는 안된다.</p>\n<p>그럼 문제는 이 pre master secret 값을 어떻게 서버에게 전달할 것인가이다. 이 때 사용하는 방법이 바로 공개키 방식이다. 서버의 공개키로 pre master secret 값을 암호화해서 서버로 전송하면 서버는 자신의 비공개키로 안정하게 복호화 할 수 있다. 그럼 서버의 공개키는 어떻게 구할 수 있을까? 서버로부터 받은 인증서 안에 들어있다. 이 서버의 공개키를 이용해서 pre master secret 값을 암호화한 후에 서버로 전송하면 안전하게 전송할 수 있다.</p>\n</li>\n<li>서버는 클라이언트가 전송한 pre master secret 값을 자신의 비공개키로 복호화한다. 이로서 서버와 클라이언트가 모두 pre master secret 값을 공유하게 되었다. 그리고 서버와 클라이언트는 모두 일련의 과정을 거쳐서 pre master secret 값을 master secret 값으로 만든다. master secret 은 session key를 생성하는데 이 session key 값을 이용해서 서버와 클라이언트는 데이터를 대칭키 방식으로 암호화 한 후에 주고 받는다. 이렇게 세션키를 클라이언트와 서버가 모두 공유하게 된다.</li>\n<li>클라이언트와 서버는 핸드쉐이크 단계의 종료를 서로에게 알린다.</li>\n</ol>\n<h3 id=\"2-세션\" style=\"position:relative;\"><a href=\"#2-%EC%84%B8%EC%85%98\" aria-label=\"2 세션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 세션</h3>\n<p>세션은 실제로 서버와 클라이언트가 데이터를 주고 받는 단게이다. 이 단게에서 핵심은 정보를 상대방에게 전송하기 전에 session key 값을 이용해서 대칭 키 방식으로 암호화 한다는 점이다. 암호화된 정보는 상대방에게 전송될 것이고, 상대방도 세션키 값을 알고 있기 때문에 암호를 복호화 할 수 있다.</p>\n<p>그냥 공개키를 사용하면 될 것을 대칭키와 공개키를 조합해서 사용하는 이유는 무엇일까? 그것은 공개키 방식이 많은 컴퓨터 파워를 사용하기 때문이다. 만약 공개키를 그대로 사용하면 많은 접속이 몰리는 서버는 매우 큰 비용을 지불해야 할 것이다. 반대로 대칭키는 암호를 푸는 열쇠인 대칭키를 상대에게 전송해야 하는데, 암호화가 되지 않은 인터넷을 통해서 키를 전송하는 것은 위험하기 때문이다. 그래서 속도는 느리지만 데이터를 안전하게 주고 받을 수 있는 공개키 방식으로 대칭키를 암호화하고, 실제 데이터를 주고 받을 때 대칭키를 이용해서 데이터를 주고 받는 것이다.</p>\n<h3 id=\"3-세션-종료\" style=\"position:relative;\"><a href=\"#3-%EC%84%B8%EC%85%98-%EC%A2%85%EB%A3%8C\" aria-label=\"3 세션 종료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 세션 종료</h3>\n<p>데이터의 전송이 끝나면 SSL 통신이 끝났음을 서로에게 알려준다. 이 때 통신에서 사용한 대칭키인 세션키를 폐기한다.</p>\n<p>출처: <a href=\"https://opentutorials.org/course/228/4894\">생활코딩</a></p>","frontmatter":{"title":"HTTPS와 SSL 인증서, SSL 인증서 동작방법","date":null,"lang":null}}},{"node":{"id":"ce9b4320-7563-574e-aa88-1a2a05a62c0a","excerpt":"img Domain Name System 원리 이전엔 hosts 파일을 업체에서 관리하고 수정했음 때문에 업데이트가 느리고 효율적이지 못하다는 문제가 있었음 지금은 DNS Server가 hosts 파일을 대신 관리하면서 컴퓨터가 인터넷에 접속하는 순간 컴퓨터는 DNS Server…","html":"<p><img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3421/8340.jpeg\" alt=\"img\"></p>\n<h2 id=\"domain-name-system\" style=\"position:relative;\"><a href=\"#domain-name-system\" aria-label=\"domain name system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Domain Name System</h2>\n<h4 id=\"원리\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EB%A6%AC\" aria-label=\"원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원리</h4>\n<p>이전엔 hosts 파일을 업체에서 관리하고 수정했음 때문에 업데이트가 느리고 효율적이지 못하다는 문제가 있었음</p>\n<p>지금은 DNS Server가 hosts 파일을 대신 관리하면서 컴퓨터가 인터넷에 접속하는 순간 컴퓨터는 DNS Server로부터 hosts 파일을 업데이트 받을 수 있어서(DHCP) 바로 자신이 이동하고 싶은 사이트의 도메인 주소만 안다면 바로 이용할 수 있게됨</p>\n<h4 id=\"public-dns\" style=\"position:relative;\"><a href=\"#public-dns\" aria-label=\"public dns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Public DNS</h4>\n<p>컴퓨터가 원하는 도메인 이름의 IP 주소를 알아낼 수 있는 이유는 컴퓨터에 연결된 local DNS 서버 덕분이다.</p>\n<p>local DNS는 통신사가 자동으로 설정해주지만, 여러가지 이유로 이것을 다른 서비스로 변경하는 것이 가능합니다. 여기서 public DNS가 무엇이고 어떻게 변경하는지 알아봅니다.</p>\n<p><a href=\"https://1.1.1.1/ko-KR/dns/\">https://1.1.1.1/ko-KR/dns/</a></p>\n<p>DNS는 흔히 전화번호부에 비유된다. www.example.com과 같은 도메인이름을 192.xxx.x.x과 같은 ip 주소로 변환하여 원하는 서버를 찾을 수 있도록 도와주는 역할을 한다.</p>\n<p>인터넷에 연결되는 모든 기기들은 사용자가 다른 설정을 하지 않는 한 통신사가 자동으로 지정해주는 local DNS를 이용하게 된다. 이 때 통신사는 맘만 먹으면(물론 그러지 않으려고 노력하고 있겠지만) 사용자의 모든 인터넷 접근 기록을 확인할 수 있다. 때문에 사용자가 원한다면 사용자의 인터넷 기록을 수집하고 있지 않다고 홍보하고 있는 public DNS를 찾아 변경이 가능하다. public DNS에는 대표적으로 google public DNS(<code class=\"language-text\">8.8.8.8</code>)이 있고 생활코딩에서 소개된 public DNS는 cloudflare사의 <code class=\"language-text\">1.1.1.1</code>이었다. 제일 빠르고 안전한 DNS라고 적어놓기는 했던데 사용해보다보면 알겠지</p>\n<p>출처: <a href=\"https://opentutorials.org/course/3276\">생활코딩</a></p>","frontmatter":{"title":"DNS","date":null,"lang":null}}},{"node":{"id":"a041d01f-ec3c-5545-9cdf-4303ca17a30e","excerpt":"img 브라우저의 주요 기능 사용자가 선택한 자원을 서버에 요청, 브라우저에 표시 자원은 html문서, pdf, image 등 다양한 형태 자원의 주소는 URI에 의해 정해짐 브라우저는 html과 css 명세에 따라 html…","html":"<p><img src=\"https://t1.daumcdn.net/cfile/tistory/245A214D590FF63D20\" alt=\"img\"></p>\n<h3 id=\"브라우저의-주요-기능\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5\" aria-label=\"브라우저의 주요 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저의 주요 기능</h3>\n<p>사용자가 선택한 자원을 서버에 요청, 브라우저에 표시</p>\n<p>자원은 html문서, pdf, image 등 다양한 형태</p>\n<p>자원의 주소는 URI에 의해 정해짐</p>\n<p>브라우저는 html과 css 명세에 따라 html 파일을 해석해서 표시함</p>\n<p>이 명세는 웹 표준화 기구인 <code class=\"language-text\">W3C(word wide web consortium)</code>에서 정함</p>\n<blockquote>\n<p>과거 브라우저들은 일부만 명세에 따라 구현하고 독자적인 방법으로 확장함</p>\n<p>결국 심각한 호환성 문제가 발생했고 때문에 요즘은 대부분 표준 명세를 따름</p>\n</blockquote>\n<p>브라우저가 가진 인터페이스는 보통 비슷비슷한 요소들이 존재</p>\n<blockquote>\n<p>브라우저의 사용자 인터페이스는 표준 명세가 없음에도 불구하고 시간이 지나면서 서로의 장점을 모방하며 갖춰지게 된 것</p>\n<p>html5 명세는 주소표시줄, 상태표시줄, 도구 모음과 같은 일반적인 요소를 제외하고 브라우저의 필수 ui를 정의하지 않았다.</p>\n</blockquote>\n<ul>\n<li>URI 입력하는 주소표시줄</li>\n<li>이전, 다음 버튼</li>\n<li>북마크(즐겨찾기)</li>\n<li>새로고침 버튼</li>\n<li>홈 버튼</li>\n</ul>\n<h3 id=\"브라우저-기본-구조\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B3%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"브라우저 기본 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 기본 구조</h3>\n<p><img src=\"https://camo.githubusercontent.com/0e3ac4e617b8eda5046f592c74a1f7e4cbfb82a5c6abe8d5699020002c1227b6/68747470733a2f2f64322e6e617665722e636f6d2f636f6e74656e742f696d616765732f323031352f30362f68656c6c6f776f726c642d35393336312d312e706e67\" alt=\"img\"></p>\n<ul>\n<li>\n<p>사용자 인터페이스</p>\n<p>주소표시줄, 이전/다음 버튼, 북마크 등 사용자가 활용하는 서비스들 (요청한 페이지를 보여주는 창을 제회한 나머지 부분)</p>\n</li>\n<li>\n<p>브라우저 엔진</p>\n<p>사용자 인터페이스와 렌더링 엔진 사이의 동작 제어</p>\n</li>\n<li>\n<p>렌더링 엔진</p>\n<p>요청한 콘텐츠 표시(html 요청이 들어오면 html, css를 파싱해서 화면에 표시함)</p>\n</li>\n<li>\n<p>통신</p>\n<p>http 요청과 같은 네트워크 호출에 사용(플랫폼의 독립적인 인터페이스로 구성되어있음)</p>\n</li>\n<li>\n<p>UI 백엔드</p>\n<p>플랫폼에서 명시하지 않은 일반적인 인터페이스, 콤보 박스 창같은 기본적인 장치를 그림</p>\n</li>\n<li>\n<p>자바스크립트 해석기</p>\n<p>자바스크립트 코드를 해석하고 실행</p>\n</li>\n<li>\n<p>자료 저장소</p>\n<p>쿠키 등 모든 종류의 자원을 하드 디스크레 저장하는 계층</p>\n</li>\n</ul>\n<blockquote>\n<p>크롬은 대부분의 브라우저와 달리 각 탭마다 별도의 랜더링 엔진 인스턴스를 유지하는 것이 특징이다. 각 탭은 독립된 프로세스로 처리된다.</p>\n</blockquote>\n<h4 id=\"랜더링이란\" style=\"position:relative;\"><a href=\"#%EB%9E%9C%EB%8D%94%EB%A7%81%EC%9D%B4%EB%9E%80\" aria-label=\"랜더링이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>랜더링이란?</h4>\n<p>랜더링 엔진은 요청 받은 내용을 브라우저 화면에 표시해준다.</p>\n<p>기본적으로 html, xml 문서와 이미지를 표시할 수 있음</p>\n<p>추가로 플러그인이나 브라우저 확장 기능으로 pdf 등 다른 유형도 표시가 가능하다.</p>\n<blockquote>\n<p>추가로 확장이 필요한 유형은 바로 뜨지 않고 팝업으로 확장 여부를 묻는 것을 볼 수 있다.</p>\n</blockquote>\n<ul>\n<li>\n<p>랜더링 엔진 종류</p>\n<p>크롬, 사파리: 웹킷(Webkit) 엔진 사용</p>\n<p>파이어폭스: 게코(Gecko) 엔진 사용</p>\n</li>\n</ul>\n<p><strong>웹킷(Webkit)</strong>: 최초 리눅스 플랫폼에 동작하기 위한 오픈소스 엔진 (애플이 맥과 윈도우에서 사파리 브라우저를 지원하기 위해 수정을 더함)</p>\n<p><strong>랜더링 동작과정</strong></p>\n<p>통신으로부터 요청한 문서의 내용을 얻는 것으로 시작하는데 문서의 내용은 보통 8kb 단위로 전송</p>\n<p><img src=\"https://camo.githubusercontent.com/b7b2e4f87463a5508b6cc434e99d58c48b5b8ba1aa8a4d917d9d240fd94aebf1/68747470733a2f2f64322e6e617665722e636f6d2f636f6e74656e742f696d616765732f323031352f30362f68656c6c6f776f726c642d35393336312d322e706e67\" alt=\"img\"></p>\n<ol>\n<li>html 문서를 파싱</li>\n<li>콘텐츠 트리 내부에서 태그를 모두 DOM 노드로 변환</li>\n<li>\n<p>외부 css 파일과 함께 포함된 스타일 요소를 파싱</p>\n<p>(이 스타일 정보와 html 표시 규적은 렌더 트리라고 부르는 또 다른 트리를 생성한다.)</p>\n<p>랜더트리는 색상 또는 면적과 같은 시각적 속성이 있는 사각형을 포함하고 있는데 정해진 순서대로 화면에 표시된다.</p>\n</li>\n<li>랜더트리 생성이 끝나면 배치가 시작되는데, 각 노드가 화면의 정확한 위치에 표시된다.</li>\n<li>UI 백엔드에서 렌더 트리의 각 노드를 가로지으며 형상을 만드는 그리기 과정이 진행된다.</li>\n<li>\n<p>위의 모든 과정이 점진적으로 진행되며, 렌더링 엔진은 좀 더 나은 사용자 경험을 위해 가능하면 빠르게 내용을 표시하는데 모든 html을 파싱할 때까지 기다리지 않고 배치와 그리기 과정을 시작한다.</p>\n<p>네트워크로부터 나머지 내용 전송을 기다리는 동시에 받은 내용의 일부를 먼저 화면에 보여주는 것!</p>\n<blockquote>\n<p>우리가 웹페이지에 접속할 때 한꺼번에 뜨지 않고 점점 화면에 채워지는 것이 이 때문이다.</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"dom이란\" style=\"position:relative;\"><a href=\"#dom%EC%9D%B4%EB%9E%80\" aria-label=\"dom이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM이란?</h4>\n<p>Document Object Model(문서 객체 모델)</p>\n<p>웹페이지 소스를 까보면 <code class=\"language-text\">&lt;html>,&lt;body></code>와 같은 태그들이 존재한다. 이를 Javascript가 활용할 수 있는 객체로 만들면 <code class=\"language-text\">문서객체</code>가 된다.</p>\n<p>모델은 말 그대로, 모듈화로 만들었다, 객체를 인식한다라고 해석하면 된다.</p>\n<p>즉, <strong>DOM은 웹브라우저가 html 페이지를 인식하는 방식</strong>을 말한다.(트리구조)</p>\n<p><strong>웹킷 동작 구조</strong></p>\n<p><img src=\"https://camo.githubusercontent.com/fa4fdb9b5d45fec78ad6717a4f3d0099d8fe46287e2aa38a7b0500c77a48211b/68747470733a2f2f64322e6e617665722e636f6d2f636f6e74656e742f696d616765732f323031352f30362f68656c6c6f776f726c642d35393336312d332e706e67\" alt=\"img\"></p>\n<p><strong>게코 동작 구조</strong></p>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-4.png\" alt=\"brouser4\"></p>\n<p>웹킷과 게코가 용어를 다르게 사용하고 있지만 동작과정은 기본적으로 동일하다.</p>\n<blockquote>\n<p><strong>어태치먼트</strong>: 웹킷이 렌더 트리를 생성하기 위해 DOM 노드와 스타일 정보를 연결하는 과정</p>\n</blockquote>\n<h3 id=\"파싱과-dom-트리-구축\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%8B%B1%EA%B3%BC-dom-%ED%8A%B8%EB%A6%AC-%EA%B5%AC%EC%B6%95\" aria-label=\"파싱과 dom 트리 구축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파싱과 DOM 트리 구축</h3>\n<h4 id=\"파싱\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%8B%B1\" aria-label=\"파싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파싱</h4>\n<p>문서 파싱은 브라우저가 코드를 이해하고 사용할 수 있는 구조로 변환하는 것을 의미</p>\n<p>파싱 결과는 보통 문서 구조를 나타내는 노드트리이고 파싱트리 또는 문법트리라고 부른다.</p>\n<p><strong>문법</strong></p>\n<p>파싱은 문서에 작성된 언어 또는 형식의 규칙에 따름</p>\n<p>파싱할 수 있는 모든 형식은 정해진 용어와 구문 규칙에 따라야한다. 이것을 <code class=\"language-text\">문맥 자유 문법</code>이라고 한다.</p>\n<blockquote>\n<p>인간의 언어는 이런 모습과는 다르기 때문에 기계적으로 파싱이 불가능함</p>\n</blockquote>\n<p>파싱은 <strong>어휘분석</strong>과 <strong>구문분석</strong>으로 구분</p>\n<ul>\n<li>\n<p>어휘분석</p>\n<p>자료를 유효한 토큰으로 분해하는 과정</p>\n<p>토큰은 유효하게 구성된 단위의 집합체(용어집)</p>\n<blockquote>\n<p>인간의 언어로 말하자면 사전에 등장하는 모든 단어에 해당</p>\n</blockquote>\n</li>\n<li>\n<p>구문분석</p>\n<p>언어의 구문 규칙을 적용하는 과정</p>\n</li>\n</ul>\n<p><strong>파서가 하는 일</strong></p>\n<ol>\n<li>자료를 유효한 토큰으로 분해하는 어휘 분석기/토큰 변환기 (공백과 줄바꿈 같은 의미없는 문자를 제거)</li>\n<li>구문 규칙에 따라 문서 구조를 분석함으로써 파싱 트리를 생성하는 파서</li>\n</ol>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-6.png\" alt=\"brouser6\"></p>\n<p>파싱 과정은 반복된다.</p>\n<ul>\n<li>어휘 분석기로부터 새 토큰을 받아서 구문규칙과 일치하는지 확인</li>\n<li>규칙이 맞으면 코튼에 해당하는 노드가 파싱트리에 추가, 또 다른 토큰을 요청</li>\n<li>그렇지 않으면 토큰을 내부적으로 저장하고 토큰과 일치하는 규칙이 발견될 때까지 요청, 맞는 규칙이 없을 경우 예외로 처리하는데 이것은 문서가 유효하지 않고 구문 오류를 포함하고 있다는 의미</li>\n</ul>\n<p><strong>변환</strong></p>\n<p>파싱은 보통 문서를 다른 양식으로 변환하는데 컴파일이 하나의 예</p>\n<p>소스코드를 기계 코드로 만드는 컴파일러는 파싱 트리 생성 후 이를 기계 코드 문서로 변환한다.</p>\n<p><img src=\"https://d2.naver.com/content/images/2015/06/helloworld-59361-7.png\" alt=\"brouser7\"></p>\n<p>보통 이런 파서를 생성하는 것은 문법에 대한 규칙 부여 등 최적화하기 힘드므로, 자동으로 생성해주는 <code class=\"language-text\">파서생성기</code>를 많이 사용한다.</p>\n<blockquote>\n<p>웹킷은 플렉스(flex)나 바이슨(bison)을 이용하여 유용하게 파싱이 가능</p>\n</blockquote>\n<p>우리가 head 태그를 실수로 빼먹어도 파서가 돌면서 오류를 수정해줌(head 엘리먼트 객체를 암묵적으로 만들어준다.)</p>\n<p>결국 이 파싱 과정을 거치면서 서버로부터 받은 문서를 브라우저가 이해하고 쉽게 사용할 수 있는 DOM 트리구조로 변환시켜 주는 것이다.</p>\n<p><a href=\"https://d2.naver.com/helloworld/59361\">https://d2.naver.com/helloworld/59361</a> -> 자세히 읽어보기</p>\n<p>출처: <a href=\"https://github.com/gyoogle/tech-interview-for-developer/blob/master/Web/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%20%EB%8F%99%EC%9E%91%20%EB%B0%A9%EB%B2%95.md\">https://github.com/gyoogle/tech-interview-for-developer/blob/master/Web/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%20%EB%8F%99%EC%9E%91%20%EB%B0%A9%EB%B2%95.md</a> <a href=\"https://d2.naver.com/helloworld/59361\">https://d2.naver.com/helloworld/59361</a></p>","frontmatter":{"title":"브라우저와 그 작동 원리","date":null,"lang":null}}},{"node":{"id":"7d004113-e57c-5dc0-8c0a-a59cb2892874","excerpt":"TOC img 도메인 이름의 구조 전세계의 수천 수만대의 DNS 서버가 분산되고 보완하면서 전세계 사람들이 인터넷을 ip를 몰라도 사용할 수 있도록 돕고있음 도메인의 맨 끝에는 사실 이 숨어있음, 넣어도 빼도 이동하는데는 문제 없음 sub, second-level, top-level…","html":"<p>[TOC]</p>\n<p><img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3421/8338.jpeg\" alt=\"img\"></p>\n<h3 id=\"도메인-이름의-구조\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%9D%B4%EB%A6%84%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"도메인 이름의 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도메인 이름의 구조</h3>\n<p>전세계의 수천 수만대의 DNS 서버가 분산되고 보완하면서 전세계 사람들이 인터넷을 ip를 몰라도 사용할 수 있도록 돕고있음</p>\n<p>도메인의 맨 끝에는 사실 <code class=\"language-text\">.</code>이 숨어있음, 넣어도 빼도 이동하는데는 문제 없음</p>\n<p>sub, second-level, top-level, root 각각을 담당하는 DNS 서버가 존재함(동일한 서버이지만 담당하는 부분이 다른 것)</p>\n<p>즉, 각각의 서버들은 바로 아래의 DNS서버의 주소를 알고 있는 것</p>\n<p>주소를 찾아갈 때 Root Name Server에 제일 먼저 접근하게된다. Root Name Server가 자신 바로 아래의 DNS server 주소를 알려주고, 또 바로 아래의 서버를 알려주고… 하면서 원하는 도메인의 ip를 알아내는 것</p>\n<h3 id=\"도메인-이름-등록과정과-원리\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%9D%B4%EB%A6%84-%EB%93%B1%EB%A1%9D%EA%B3%BC%EC%A0%95%EA%B3%BC-%EC%9B%90%EB%A6%AC\" aria-label=\"도메인 이름 등록과정과 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도메인 이름 등록과정과 원리</h3>\n<p><img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3421/8343.jpeg\" alt=\"img\"></p>\n<h4 id=\"서버\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84\" aria-label=\"서버 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버</h4>\n<ul>\n<li>등록자: 서버로 사용할 컴퓨터</li>\n<li>ICANN : Root name server를 관리하는 비영리 단체 (a~m 13개의 루트네임서버가 수백대로 흩어져 전세계에서 루트네임서버로서 구동)</li>\n<li>등록소: Top-level domain을 관리(<code class=\"language-text\">.com</code> <code class=\"language-text\">.net</code> <code class=\"language-text\">.kr</code>)</li>\n<li>등록대행자: 등록소에 등록자의 등록을 대신해줌(등록자는 이미 있는 주소는 사용할 수 없고, 도메인에 대한 수수료를 지불함 돈을 지불하면 등록자가 계약한 기간동안은 아무도 사용할 수 없음)</li>\n</ul>\n<blockquote>\n<p>등록자가 도메인을 등록하면, 어떤 방법으로든 도메인에 해당하는 name server가 할당된다. 그럼 top-level server는 그 name server의 주소를 기억하고, root name server는 그 top-level server의 주소를 기억한다. 그리고 등록자는 도메인을 연결할 서버의 주소를 도메인에 해당하는 name server에 알려준다.</p>\n</blockquote>\n<h4 id=\"클라이언트\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8\" aria-label=\"클라이언트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라이언트</h4>\n<p>모든 DNS 서버는 Root name server들의 주소가 무엇인지 알고 있음</p>\n<p>컴퓨터가 인터넷에 연결되는 순간 DNS 서버가 할당된다. 이 DNS 서버는 Root name server에게 물어볼 준비가 되어있다.</p>\n<ol>\n<li>클라이언트가 <code class=\"language-text\">example.com</code>이라는 도메인을 입력한다.</li>\n<li>DNS 서버는 Root name server에게 <code class=\"language-text\">example.com</code>의 ip주소를 물어본다.</li>\n<li>Root name server는 그 주소를 정확하게 알고 있지는 않지만 전에 등록된 기록을 통해 top-level name server의 주소를 알려준다.</li>\n<li>DNS 서버는 Root name server에게 받은 주소를 보고 top-level name server를 찾아가 <code class=\"language-text\">example.com</code>의 ip주소를 물어본다.</li>\n<li>top-level name server는 그 주소를 모르기 때문에 ip주소를 알고있을 name server의 주소를 알려준다.DNS 서버는 top-level name server가 알려준 주소를 보고 name server를</li>\n<li>찾아가서 물어보고, name server는 자신이 알고있는 <code class=\"language-text\">example.com</code>의 ip 주소를 대답해준다.</li>\n<li>DNS 서버는 이렇게 알아낸 ip 주소를 컴퓨터에 돌려준다.</li>\n<li>결과적으로 컴퓨터는 <code class=\"language-text\">example.com</code>을 입력하는 것만으로 93.xxx.xx.x 의 컴퓨터를 찾아갈 수 있게 되는 것이다.</li>\n</ol>\n<h3 id=\"nslookup\" style=\"position:relative;\"><a href=\"#nslookup\" aria-label=\"nslookup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nslookup</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nslookup example.com</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nslookup -type=a example.com</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">서버:    one.one.one.one\nAddress:  1.1.1.1\n\n권한 없는 응답:\n이름:    example.com\nAddresses:  2606:2800:220:1:248:1893:25c8:1946\n          93.184.216.34</code></pre></div>\n<p>요청할 때마다 모든 요청을 반복한다면 (root name server, top-level server 등) 오래 걸리고 효율적이지 않으므로 DNS는 ip 주소를 찾은 기록을 저장해놓았다가 다음에 또 요청이 왔을 때 바로 응답해줌으로써 효율성을 향상시킨다. 이 때 ip 주소를 응답한 서버는 원래 ip 주소를 기록하고 있는 name server가 아닌 캐시로 주소를 기록하고 있던 DNS 이므로 결과에 <code class=\"language-text\">권한 없는 응답</code>이라는 결과가 뜨게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nslookup -type=ns example.com</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">서버:    one.one.one.one\nAddress:  1.1.1.1\n\n권한 없는 응답:\nexample.com     nameserver = a.iana-servers.net\nexample.com     nameserver = b.iana-servers.net</code></pre></div>\n<p><code class=\"language-text\">-type=ns</code> : ns 서버를 찾는 명령어</p>\n<p>example.com은 두 대의 nameserver로 운영되고 있음(한 대를 사용하지 못하게 됐을 때를 대비)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nslookup example.com a.iana-servers.net</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">서버:    a.iana-servers.net\nAddress:  199.43.135.53\n\n이름:    example.com\nAddresses:  2606:2800:220:1:248:1893:25c8:1946\n          93.184.216.34</code></pre></div>\n<p>네임서버에 직접 접속해서 <code class=\"language-text\">example.com</code>의 주소를 찾으면 주소에 대한 권한을 가지고 있는 네임서버에 의한 응답이기 때문에 <code class=\"language-text\">권한 없는 응답</code>이 뜨지 않음</p>\n<h3 id=\"무료-도메인-사이트\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EB%A3%8C-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"무료 도메인 사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무료 도메인 사이트</h3>\n<p><a href=\"https://www.freenom.com/en/index.html?lang=en\">https://www.freenom.com/en/index.html?lang=en</a></p>\n<h3 id=\"dns-record와-cname\" style=\"position:relative;\"><a href=\"#dns-record%EC%99%80-cname\" aria-label=\"dns record와 cname permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS record와 CNAME</h3>\n<h4 id=\"dns-record\" style=\"position:relative;\"><a href=\"#dns-record\" aria-label=\"dns record permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS record</h4>\n<p>도메인 이름에 대한 정보 한건한건을 의미</p>\n<p>DNS record에는 DNS record의 타입이 존재한다.</p>\n<p><a href=\"https://ko.wikipedia.org/wiki/DNS_%EB%A0%88%EC%BD%94%EB%93%9C_%ED%83%80%EC%9E%85_%EB%AA%A9%EB%A1%9D\">DNS record type list</a></p>\n<h3 id=\"domain-name에-대해-앞으로-공부해볼만한-주제\" style=\"position:relative;\"><a href=\"#domain-name%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%9E%EC%9C%BC%EB%A1%9C-%EA%B3%B5%EB%B6%80%ED%95%B4%EB%B3%BC%EB%A7%8C%ED%95%9C-%EC%A3%BC%EC%A0%9C\" aria-label=\"domain name에 대해 앞으로 공부해볼만한 주제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>domain name에 대해 앞으로 공부해볼만한 주제</h3>\n<ul>\n<li>BIND (최초의 DNS 서버)</li>\n<li>직접 DNS 서버를 운영해보기</li>\n<li>DNS service 사용, 비교</li>\n<li>\n<p>Dynamic DNS</p>\n<ul>\n<li>서버를 집에서 운영</li>\n<li>ip가 계속 변경되는 환경에서 운영</li>\n</ul>\n</li>\n<li>\n<p>HTTPS, SSL</p>\n<ul>\n<li>도메인을 사칭하는 것을 방지하여 보안</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"domain name","date":null,"lang":null}}},{"node":{"id":"c5514667-5b71-5bb3-8ed5-49bf152b1afd","excerpt":"프로토콜 : 컴퓨터 내부에서, 또는 컴퓨터 사이에서 데이터를 교환하는 방식을 정의하는 규칙 체계이다. 기기 간 통신은 교환되는 데이터의 형식에 대해 상호 합의를 요구한다. 이런 형식을 정의하는 규칙의 집합 HTTP Hyper Text Transfer Protocol…","html":"<blockquote>\n<p><strong>프로토콜</strong> : 컴퓨터 내부에서, 또는 컴퓨터 사이에서 데이터를 교환하는 방식을 정의하는 규칙 체계이다. 기기 간 통신은 교환되는 데이터의 형식에 대해 상호 합의를 요구한다. 이런 형식을 정의하는 규칙의 집합</p>\n</blockquote>\n<h3 id=\"http\" style=\"position:relative;\"><a href=\"#http\" aria-label=\"http permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP</h3>\n<ul>\n<li>Hyper Text Transfer Protocol, 하이퍼본문전송규약</li>\n<li>W3 상에서 서버/클라이언트 모델을 따라 데이터를 주고 받기 위한 프로토콜</li>\n<li>인터넷에서 하이퍼텍스트를 교환하기 위한 통신 규약으로, 80번 포트를 사용하고 있다. 따라서 HTTP 서버가 80번 포트에서 요청을 기다리고 있으며, 클라이언트는 80번 포트로 요청을 보내게 된다.</li>\n<li>HTTP는 1989년 팀버너스리에 의해 처음 설계되었으며, WWW(World-Wide-Web) 기반에서 세계적인 정보를 공유하는데 큰 역할을 하였다.</li>\n</ul>\n<h4 id=\"http의-구조\" style=\"position:relative;\"><a href=\"#http%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"http의 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP의 구조</h4>\n<p><img src=\"https://t1.daumcdn.net/cfile/tistory/2673024858FE02AB1F\" alt=\"img\"></p>\n<p>HTTP는 애플리케이션 레벨의 프로토콜로 TCP/IP 위에서 작동한다. HTTP는 상태를 가지고 있지 않은 Stateless 프로토콜이며 위 사진과 같은 구조로 구성된다.</p>\n<p>하지만 HTTP는 암호화가 되지 않은 평운 데이터를 전송하는 프로토콜이었기 때문에, HTTP로 비밀번호나 주민등록번호 등을 주고 받으면 제3자가 정보를 조회할 수 있었다. 그리고 이러한 문제를 해결하기 위해 HTTPS가 등장하게 되었다.</p>\n<h3 id=\"https\" style=\"position:relative;\"><a href=\"#https\" aria-label=\"https permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTPS</h3>\n<ul>\n<li>HyperText Transfer Protocol Secure, HTTP Over Secure Socket Layer</li>\n<li>HTTP에 데이터 암호화가 추가된 프로토콜</li>\n<li>HTTP와 다르게 433번 포트를 사용하며, 네트워크 상에서 중간에 제3자가 정보를 볼 수 없도록 공개키 암호화를 지원하고 있다.</li>\n</ul>\n<h4 id=\"공개키개인키\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EA%B0%9C%ED%82%A4%EA%B0%9C%EC%9D%B8%ED%82%A4\" aria-label=\"공개키개인키 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공개키/개인키</h4>\n<p>HTTPS는 공개키/개인키 암호화 방식을 이용해 데이터를 암호화하고 있다. 공개키와 개인키는 서로를 위한 한쌍의 키이다.</p>\n<ul>\n<li>공개키 : 모두에게 공개 가능한 키</li>\n<li>개인키 : 나만 가지고 알고 있어야 하는 키</li>\n<li>공개키 암호화 : 공개키로 암호화를 하면 개인키로만 복호화할 수 있다. ➡ 개인키는 나만 가지고 있으므로, 나만 볼 수 있다.</li>\n<li>개인키 암호화 : 개인키로 암호화하면 공개키로만 복호화할 수 있다. ➡ 공개키로 모두에게 공개되어 있으므로, 내가 인증한 정보임을 알려 신뢰성을 보장할 수 있다.</li>\n</ul>\n<p><img src=\"https://blog.kakaocdn.net/dn/OKcog/btqK71fM8a4/g1HmcDOR7MVRRz7pSKKJWk/img.png\" alt=\"img\"></p>\n<h4 id=\"https-동작-과정\" style=\"position:relative;\"><a href=\"#https-%EB%8F%99%EC%9E%91-%EA%B3%BC%EC%A0%95\" aria-label=\"https 동작 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTPS 동작 과정</h4>\n<p>HTTPS는 SSL과 같은 프로토콜을 사용하여 공개키/개인키 기반으로 데이터를 암호화되어 전송되기 떄문에 임의의 사용자가 데이터를 조회하여도 원본의 데이터를 보는 것은 불가능하다.</p>\n<p>그렇다면 이제 서버는 클라이언트가 요청을 보낼 때 암호화를 하기 위한 공개키를 생성해야 하는데, 일반적으로 인증된 기관(Certificate Authority)에 공개키를 전송하여 인증서를 발급받고 있다.</p>\n<ol>\n<li>A 기업은 HTTP 기반의 애플리케이션에 HTTPS를 적용하기 위해 공개키/개인키를 발급함</li>\n<li>CA 기업에게 돈을 지불하고, 공개키를 저장하는 인증서의 발급을 요청함</li>\n<li>CA 기업은 CA기업의 이름, 서버의 공개키, 서버의 정보 등을 기반으로 인증서를 생성하고, CA 기업의 개인키로 암호화하여 A기업에게 이를 제공함</li>\n<li>A기업은 클라이언트에게 암호화된 인증서를 제공함</li>\n<li>브라우저는 CA기업의 공개키를 미리 다운받아 갖고 있어, 암호화된 인증서를 복호화함</li>\n<li>암호화된 인증서를 복호화하여 얻은 A기업의 공개키로 데이터를 암호화하여 요청을 전송함</li>\n</ol>\n<p><img src=\"https://blog.kakaocdn.net/dn/Wwmv2/btqK6BvBV14/G8jN22KQFvylWL9Tak8CVk/img.png\" alt=\"img\"></p>\n<p>암호화된 인증서는 CA의 개인키로 암호화되었기 때문에 신뢰성을 확보할 수 있고, 클라이언트는 A 기업의 공개키로 데이터를 암호화하였기 때문에 A기업만 복호화하여 원본의 데이터를 얻을 수 있다.</p>\n<h3 id=\"http와-https의-차이점\" style=\"position:relative;\"><a href=\"#http%EC%99%80-https%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"http와 https의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP와 HTTPS의 차이점</h3>\n<p>HTTP란 일반적으로 웹 서버 통신을 위한 프로토콜이다. HTTPS란 암호화된 통신을 제공하는 HTTP를 말한다.</p>\n<p>HTTP를 이용해 클라이언트와 서버가 통신할 때, 암호화된 통신을 위한 키를 설정하고 통신하게 된다.</p>\n<p>이 때 사용하되는 암호화 방식은 공개키 암호화 방식을 사용하며, 데이터를 암호화하는데 2개의 키를, 복호화하는데 한 개의 키를 사용한다.</p>\n<p>HTTP 프로토콜을 사용하면 공격자가 패킷을 가로챌 경우, 평문이기 때문에 해당 데이터를 갈취하고, 변조하여 공격이 가능하다. (Man in the middle)</p>\n<p>이에 반해 HTTPS 프로토콜을 사용하면, 패킷이 중간에 탈취되더라도 공격자가 메시지를 알아내고 암호화까지 하여 변조하는데 일반적으로 천문학적인 시간을 소모하게 된다.</p>\n<p>이처럼 암호화된 통신을 함으로써 안전한 구조를 가져갈 수 있지만, 공개키 암호화와 복호화 과정은 많은 비용을 수반한다.</p>\n<p>따라서 HTTPS 통신은 HTTP에 비해 느릴 수밖에 없으며, 보통 선택적으로 사용하게 된다.</p>\n<p>예를 들어 금융정보 및 기밀 또는 민감한 개인정보들의 경우에는 HTTPS로, 그와 상관없는 UI 처리 및 일반 컨텐츠 관련 정보는 HTTP로 처리한다.</p>\n<p>출처</p>\n<p><a href=\"https://mangkyu.tistory.com/98\">HTTP와 HTTPS</a>\n<a href=\"https://jins-dev.tistory.com/entry/HTTP-vs-HTTPS-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\">HTTP와 HTTPS의 차이점</a></p>","frontmatter":{"title":"HTTP와 HTTPS의 차이점","date":null,"lang":null}}},{"node":{"id":"619cde95-247b-591d-9dad-6b4c1d45f873","excerpt":"통신을 하려면 최소 두 대의 컴퓨터가 필요하고, 그 다음엔 각각 컴퓨터의 고유 IP가 필요하다. 좀 더 포괄적으로 각각 인터넷에 연결된 컴퓨터 장치들을 host라고 부른다. 운영체제는 라는 파일을 가지고 있다. 이 파일은 전화번호부와 같은 역할을 하는데 어떤 컴퓨터의 ip…","html":"<p>통신을 하려면 최소 두 대의 컴퓨터가 필요하고, 그 다음엔 각각 컴퓨터의 고유 IP가 필요하다.</p>\n<p>좀 더 포괄적으로 각각 인터넷에 연결된 컴퓨터 장치들을 host라고 부른다.</p>\n<p>운영체제는 <code class=\"language-text\">hosts</code>라는 파일을 가지고 있다. 이 파일은 전화번호부와 같은 역할을 하는데 어떤 컴퓨터의 ip를 example.com이라는 이름으로 수정하고, example.com 주소를 입력하면 내가 설정해놓은 ip로 이동하게 된다.(변조의 가능성이 있음)</p>\n<h3 id=\"hosts란\" style=\"position:relative;\"><a href=\"#hosts%EB%9E%80\" aria-label=\"hosts란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hosts란?</h3>\n<p>호스트 이름에 대응하는 IP 주소가 저장되어 있어서 도메인 이름 시스템(DNS)에서 주소 정보를 제공받지 않고도 서버의 위치를 찾게 해주는 파일</p>\n<h4 id=\"window-hosts-파일-위치\" style=\"position:relative;\"><a href=\"#window-hosts-%ED%8C%8C%EC%9D%BC-%EC%9C%84%EC%B9%98\" aria-label=\"window hosts 파일 위치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>window hosts 파일 위치</h4>\n<p>window 10 <code class=\"language-text\">C:\\Windows\\System32\\drivers\\etc</code></p>\n<p>hosts 파일을 관리자 권한으로 수정 후 실행해보면 원하는 주소로 파일을 열 수 있음</p>\n<p>hosts 파일이 변조를 통한 해킹이 일어날 수 있다. 항상 변조가 일어나지 않도록 조심해야함</p>\n<p>보통은 백신프로그램이 항상 관리</p>\n<p>출처: <a href=\"https://opentutorials.org/course/3276/20296\">생활코딩</a></p>","frontmatter":{"title":"IP 주소와 hosts의 개념","date":null,"lang":null}}},{"node":{"id":"93b2bdda-feb6-57f2-a1d8-534e26eb6087","excerpt":"DNS DNS란 Domain Name System의 약자로서 IP 네트워크에서 사용하는 시스템이다. 사용자가 사람이 읽을 수 있는 도메인 이름(ww.google.com)으로 접속하면 머신이 읽을 수 있는 IP주소(192.0.2.4…","html":"<h2 id=\"dns\" style=\"position:relative;\"><a href=\"#dns\" aria-label=\"dns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS</h2>\n<p>DNS란 Domain Name System의 약자로서 IP 네트워크에서 사용하는 시스템이다.</p>\n<p>사용자가 사람이 읽을 수 있는 도메인 이름(<a href=\"http://ww.google.com\">ww.google.com</a>)으로 접속하면 머신이 읽을 수 있는 IP주소(192.0.2.44)로 변환해야 사용자에게 올바른 서비스를 제공할 수 있는데, 이때 도메인 주소와 주소체계를 상호 확인 및 변활 할 수 있도록 하는 시스템을 DNS라고 한다.</p>\n<ul>\n<li>예를 들어 우리가 구글에 접속하려 한다고 가정해보자. 이 때 원칙적으로 우리는 구글의 IP 주소를 알고 있어야하고, 그 IP 주소를 통해서 접속해야 합니다. 하지만 우리는 구글에 접속할 떄 일반적으로 <a href=\"http://google.com\">google.com</a> 이라는 도메인 주소를 사용합니다. 이것은 우리가 모르는 사이 어떤 시스템에 의해 우리가 입력한 google.com가 구글의 IP 주소로 변환되어 구글에 접속할 수 있었다는 것을 의미합니다. 이 때 도메인 입력만으로 우너하는 웹서버에 접속할 수 있도록 도와주는 시스템을 DNS라고 합니다.</li>\n</ul>\n<p><strong>DNS Server</strong></p>\n<p>웹 서버 주소에 해당하는 IP 주소 테이블을 가지고 있는 서버라고 할 수 있습니다. google.com이 가리키고 있는 IP 주소를 브라우저에게 반환합니다.</p>\n<h3 id=\"dns-과정\" style=\"position:relative;\"><a href=\"#dns-%EA%B3%BC%EC%A0%95\" aria-label=\"dns 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS 과정</h3>\n<ol>\n<li>\n<p>DNS Query</p>\n<p>DNS 서버에서 Domain Name을 이용하여 IP를 받아옵니다. 이때 Domain Name Server에 접속하는 유저에 대해서 Round Robin 방식으로 IP를 할당합니다.</p>\n</li>\n<li>\n<p>IP Communication</p>\n<p>IP를 받아온 유저는 리퀘스트 메세지 발송을 통하여 정상적으로 네트워크 통신을 실시합니다.</p>\n</li>\n</ol>\n<h2 id=\"dns-round-robin\" style=\"position:relative;\"><a href=\"#dns-round-robin\" aria-label=\"dns round robin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS round robin</h2>\n<p>round robin이란 DNS 서버 구성 방식 중 하나입니다.</p>\n<p>Domain에 대한 IP 요청 쿼리시 round-robin 방식으로 IP를 반환합니다.</p>\n<p><img src=\"https://blog-imgs-136-origin.fc2.com/d/a/i/dailusia/Round_Robin_Schedule_Example.jpg\" alt=\"https://blog-imgs-136-origin.fc2.com/d/a/i/dailusia/Round_Robin_Schedule_Example.jpg\"></p>\n<p>시분할 시스템을 위해 설계된 선점형 스케줄링의 하나로서, 프로세스들 사이에 우선순위를 두지 않고, 순서대로 시간단위(Time Quantum/Slice)로 CPU를 할당하는 방식의 CPU 스케줄링 알고리즘입니다.</p>\n<p>쉽게 말하면 자바에서 스레드가 운영체제의 스케줄러에 의하여 컴퓨터 자원을 사용할 수 있는 기회를 할당 받는 것과 같은 맥락입니다.</p>\n<p>각 프로세스에 일정시간을 할당하고, 할당된 시간이 지나면 그 프로세스는 잠시 보류한 뒤 다른 프로세스에게 기회를 주고, 또 그 다음 프로세스에게 하는 식으로, 돌아가며 기회를 부여하는 운영방식이라 풀어 말할 수 있겠습니다.</p>\n<p>즉, DNS 서버에 대한 Round Robin 형식으로 구성할 경우 로드 밸러서가 필요가 없습니다.</p>\n<p>부하에 대한 걱정을 할 필요가 없다는 뜻입니다.</p>\n<p><strong>단점</strong></p>\n<ol>\n<li>\n<p><strong>서버의 수 만큼 공인 IP 주소가 필요합니다.</strong></p>\n<p>부하 분산을 위한 서버의 대수를 늘리기 위해서는 그 만큼의 공인 IP가 필요합니다.</p>\n</li>\n<li>\n<p><strong>균등하게 분산되지 않습니다.</strong></p>\n<p>모바일 사이트 등에서 문제가 될 수 있는데, 스마트폰의 접속은 캐리어 게이트웨이라고 하는 프록시 서버를 경유합니다.</p>\n<p><a href=\"https://www.notion.so/Proxy-Server-e80f7fee9b60451eab1c4053619e4dd2\">프록시 서버</a>에서는 이름 변환 결과가 일정 시간 동안 캐싱되므로 같은 프록시 서버를 경유하는 접속은 항상 같은 서버로 접속됩니다.</p>\n<p>또한 PC 용 웹 브라우저도 DNS 질의 결과를 캐싱하기 때문에 균등하게 부하분산 되지 않습니다.</p>\n<p>DNS 레코드의 TTL값을 짧게 설정함으로써 어느 정도 해소가 되지만, TTL에 따라 캐시를 해제하는 것은 아니므로 반드시 주의가 필요합니다.</p>\n<p><a href=\"https://www.notion.so/Proxy-Server-e80f7fee9b60451eab1c4053619e4dd2\">프록시 서버(Proxy Server)란?</a></p>\n</li>\n<li>\n<p><strong>서버가 다운돼도 확인이 불가능합니다.</strong></p>\n<p>DNS 서버는 웹 서버의 부하나 접속 수 등의 상황에 따라 질의 결과를 제어할 수 없습니다.</p>\n<p>웹 서버의 부하가 높아서 응답이 느려지거나 접속 수가 꽉 차서 접속을 처리 할 수 없는 상황인지를 전혀 감지 할 수가 없기 때문에 어떤 원인으로 다운되더라도 이를 검출하지 못하고 유저들에게 제공합니다.</p>\n<p>이때문에 간혹 유저들은 다운된 서버에 연결되기도 합니다.</p>\n<p>DNS round robin은 어디까지나 부하분산을 위한 방법이지 다중화 방법은 아니므로 다른 S/W와 조합하여 관리할 필요가 있습니다.</p>\n</li>\n</ol>\n<p><strong>극복방법</strong></p>\n<h3 id=\"다중-구성-방식-synchronous-time-division-multiplexing\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%A4%91-%EA%B5%AC%EC%84%B1-%EB%B0%A9%EC%8B%9D-synchronous-time-division-multiplexing\" aria-label=\"다중 구성 방식 synchronous time division multiplexing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다중 구성 방식 (Synchronous Time-Division Multiplexing)</h3>\n<p>AP 서버에 VIP(Vitual IP)를 부여해서 다중화를 구성한다. 각 AP서버를 Health Check 후 이상이 감지되면 VIP를 정상 AP 서버로 인계하는 방식을 사용한다.</p>\n<p>즉 DNS Server Table에 실시간으로 AP 서버의 상태를 확인할 수 있는 칼럼 및 함수를 추가하여 요청될 경우 서버 상태를 확인하여 우회루트를 제공하거나 에러를 전송하는 방식을 말합니다.</p>\n<h3 id=\"가중치-편성-방식weighted-round-robin\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A4%91%EC%B9%98-%ED%8E%B8%EC%84%B1-%EB%B0%A9%EC%8B%9Dweighted-round-robin\" aria-label=\"가중치 편성 방식weighted round robin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가중치 편성 방식(Weighted round robin)</h3>\n<p>각각의 웹 서버에 가중치를 가미해서 분산 비율을 변경한다. 물론 가중치가 큰 서버일수록 빈번하게 선택되므로 처리능력이 높은 서버는 가중치를 높게 설정하는 것이 좋다.</p>\n<h3 id=\"최소-연결-방식least-connection\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%86%8C-%EC%97%B0%EA%B2%B0-%EB%B0%A9%EC%8B%9Dleast-connection\" aria-label=\"최소 연결 방식least connection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최소 연결 방식(Least connection)</h3>\n<p><em>로드 밸런서의 도입을 통한 구성</em></p>\n<p>접속 클라이언트 수가 가장 적은 서버를 선택한다. 로드밸런서에서 실시간으로 connection 수를 관리하거나 각 서버에서 주기적으로 알려주는 것이 필요하다.</p>","frontmatter":{"title":"[network]DNS Round Robin이란?","date":null,"lang":null}}},{"node":{"id":"46feff20-b451-5b17-a305-3fdab4b8697a","excerpt":"…","html":"<h4 id=\"운영체제-과목-소개\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C-%EA%B3%BC%EB%AA%A9-%EC%86%8C%EA%B0%9C\" aria-label=\"운영체제 과목 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제 과목 소개</h4>\n<ul>\n<li>컴퓨터 사이언스 전공 필수 과목</li>\n<li>컴퓨터 구조가 컴퓨터 하드웨어 원리를 이해하는 것이라면 운영체제는 컴퓨터 하드웨어/소프트웨어 전반적인 동작을 이해하는 것이다. 특히 컴퓨터 소프트웨어 관련 전반적인 동작 기술을 이해하는 것</li>\n<li>\n<p>효율적인 소프트웨어 동작을 지원하기 위해 자료구조(큐, 스택 등) 및 알고리즘이 사용됨</p>\n<p>자료구조를 사용하는 이유를 알 수 있음</p>\n</li>\n<li>소프트웨어를 구성할 때 구조를 어떻게 잘 작성할지, 운영체제를 고려하면서 소프트웨어를 효율적으로 잘 작성할지</li>\n</ul>\n<h4 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h4>\n<ul>\n<li>핵심 이론과 용어에 집중해서, 감을 잡는데 중점을 두자(80%이해)</li>\n</ul>\n<h2 id=\"운영체제-역할\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C-%EC%97%AD%ED%95%A0\" aria-label=\"운영체제 역할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제 역할</h2>\n<h3 id=\"시스템-자원system-resource-관리자\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%9E%90%EC%9B%90system-resource-%EA%B4%80%EB%A6%AC%EC%9E%90\" aria-label=\"시스템 자원system resource 관리자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시스템 자원(System Resource) 관리자</h3>\n<ul>\n<li>Operating System 또는 OS라고 부름</li>\n<li>\n<p>시스템 자원(System Resource) = 컴퓨터 하드웨어</p>\n<ul>\n<li>CPU(중앙처리장치), Memory(DRAM, RAM)</li>\n<li>I/O Devices (입출력장치)</li>\n<li>Monitor, Mouse, Keyboard, Network</li>\n<li>저장매체: SSD, HDD(하드디스크)</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>컴퓨터 하드웨어는 스스로 할 수 있는 것이 없다</p>\n</blockquote>\n<ol>\n<li>CPU: 각 프로그램이 얼만큼의 CPU를 사용할지 스스로 결정할 수 없음</li>\n<li>Memory: 각 프로그램이 어느 주소에 저장되어야하는지, 어느 정도의 메모리 공간을 확보해줘야 하는지를 스스로 결정할 수 없음</li>\n<li>저장매체(HDD, SSD): 어떻게, 어디에 저장할지는 스스로 결정할 수 없음</li>\n<li>키보드/마우스: 스스로 표시할 수 없음</li>\n</ol>\n<blockquote>\n<p>그래서 운영체제가 필요하다</p>\n</blockquote>\n<h3 id=\"사용자와-컴퓨터-간의-커뮤니케이션-지원\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90%EC%99%80-%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B0%84%EC%9D%98-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98-%EC%A7%80%EC%9B%90\" aria-label=\"사용자와 컴퓨터 간의 커뮤니케이션 지원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자와 컴퓨터 간의 커뮤니케이션 지원</h3>\n<p><img src=\"https://media.vlpt.us/images/min1378/post/62719f32-3006-4217-bbb3-29fe25967c0b/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C-1.png\" alt=\"img\"></p>\n<h3 id=\"컴퓨터-하드웨어와-프로그램을-제어\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%99%80-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EC%A0%9C%EC%96%B4\" aria-label=\"컴퓨터 하드웨어와 프로그램을 제어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터 하드웨어와 프로그램을 제어</h3>\n<p>shell - 운영체제에서 사용자와 컴퓨터 간의 커뮤니케이션을 지원하는 부분</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/6777ac36-abec-458e-832d-5ddbfecad7c9/image.png\" alt=\"img\"></p>\n<h4 id=\"대표적인-운영체제\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C\" aria-label=\"대표적인 운영체제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대표적인 운영체제</h4>\n<ul>\n<li>Windows OS</li>\n<li>Mac OS</li>\n<li>\n<p>UNIX(유닉스) 현대 운영체제의 형태</p>\n<ul>\n<li>UNIX OS</li>\n<li>\n<p>UNIX 계열 OS</p>\n<ul>\n<li>UNIX와 사용법이나, OS 구조가 유사한 것들</li>\n</ul>\n</li>\n<li>LINUX (리눅스) OS</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h3>\n<ul>\n<li>\n<p>운영체제 역할</p>\n<ol>\n<li>시스템 자원 관리자</li>\n<li>컴퓨터와 사용자 간의 커뮤니케이션 지원</li>\n<li>컴퓨터 하드웨어와 프로그램을 제어</li>\n</ol>\n</li>\n</ul>","frontmatter":{"title":"[OS]01_운영체제의 역할","date":null,"lang":null}}},{"node":{"id":"64f4ac67-7ff9-5716-9490-7ed67642ec6b","excerpt":"HTML 마크업을 처리하고 DOM 트리를 빌드한다.(“무엇을” 그릴지 결정한다.) DOM 및 CSSOM 을 결합하여 렌더링 트리를 형성한다. (“화면에 그려질 것만”결정) 랜더링 트리에서 레이아웃을 실행하여 각 노드의 기하학적 형태를 계산한다.(“Box-Model…","html":"<ol>\n<li>HTML 마크업을 처리하고 DOM 트리를 빌드한다.(“무엇을” 그릴지 결정한다.)</li>\n<li>DOM 및 CSSOM 을 결합하여 렌더링 트리를 형성한다. (“화면에 그려질 것만”결정)</li>\n<li>랜더링 트리에서 레이아웃을 실행하여 각 노드의 기하학적 형태를 계산한다.(“Box-Model”을 생성한다.)</li>\n<li>개별 노드를 화면에 페인트한다.(or 레지스터화)</li>\n</ol>","frontmatter":{"title":"[web]브라우저의 동작 원리","date":null,"lang":null}}},{"node":{"id":"f1a9b2ab-3ee8-5ad2-9734-61cbf5985c98","excerpt":"응용 프로그램이란? 흔히 프로그램이라고도 불리는 소프트웨어는 크게 운영체제와 응용 프로그램으로 나눌 수 있다. 이때 응용프로그램은 파워포인트, 엑셀 등등과 같이 사람들이 사용하는 프로그램을 말한다. Application = App 일반적으로 PC…","html":"<h3 id=\"응용-프로그램이란\" style=\"position:relative;\"><a href=\"#%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%B4%EB%9E%80\" aria-label=\"응용 프로그램이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>응용 프로그램이란?</h3>\n<p>흔히 프로그램이라고도 불리는 소프트웨어는 크게 운영체제와 응용 프로그램으로 나눌 수 있다. 이때 응용프로그램은 파워포인트, 엑셀 등등과 같이 사람들이 사용하는 프로그램을 말한다.</p>\n<ul>\n<li>Application = App</li>\n</ul>\n<p>일반적으로 PC에서의 프로그램을 애플리케이션이라고 하고 스마트폰에서의 응용프로그램을 앱이라고 부른다.</p>\n<h3 id=\"운영체제와-응용-프로그램-간의-관계\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EC%99%80-%EC%9D%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B0%84%EC%9D%98-%EA%B4%80%EA%B3%84\" aria-label=\"운영체제와 응용 프로그램 간의 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제와 응용 프로그램 간의 관계</h3>\n<ul>\n<li>응용프로그램을 <strong>실행</strong></li>\n<li>\n<p>응용프로그램 간의 <strong>권한을 관리</strong></p>\n<ul>\n<li>관리자 권한으로 실행 등</li>\n</ul>\n</li>\n<li>\n<p>응용프로그램을 사용하는 <strong>사용자 관리</strong></p>\n<ul>\n<li>부팅시 첫 화면에서 하는 로그인</li>\n</ul>\n</li>\n</ul>\n<p>응용프로그램은 누구나 만들 수 있기 때문에 항상 정상적인 작동을 하지 않을 수 있다. 예를 들어 프로그램이 무한히 돌게 만들어졌거나, 잘못 작성해서 프로그램이 다운됐거나 할 때 운영체제가 개입하여 프로그램을 강제로 멈출 수 있다.</p>\n<p>또 권한을 통해서 모든 파일이 삭제되는 것을 막기도 하고(사용자 관리) 자원을 과도하게 사용하는 등 프로그램의 비정상적인 동작을 막는 역할도 한다</p>\n<blockquote>\n<ol>\n<li>응용프로그램을 관리한다.</li>\n<li>시스템 자원(System Resource)를 관리한다.</li>\n<li>사용자와 컴퓨터 간의 커뮤니케이션을 지원</li>\n</ol>\n<p>목표: 사용자가 사용하는 응용 프로그램이 효율적으로, 적절히 동작하도록 지원</p>\n</blockquote>\n<p>운영체제는 <strong>응용 프로그램이 요청하는 시스템 리소스를 효율적으로 분배하고, 지원하는 소프트웨어</strong>라고 할 수 있다.</p>","frontmatter":{"title":"[OS]02_응용프로그램","date":null,"lang":null}}},{"node":{"id":"0e547c50-35b7-5d89-a072-d7c1cb81df91","excerpt":"1950년대 ENIAC: 첫 번째 컴퓨터 진공관을 이용해서 0, 1을 표현해 프로그램을 작동 한 개의 응용 프로그램을 실행시키기도 바쁘기 때문에 운영체제는 없었고, 응용프로그램이 시스템 자원을 제어했다. 오히려 응용 프로그램을 하나만 작동시키는 것이 당연한 시대 196…","html":"<h3 id=\"1950년대\" style=\"position:relative;\"><a href=\"#1950%EB%85%84%EB%8C%80\" aria-label=\"1950년대 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1950년대</h3>\n<h4 id=\"eniac-첫-번째-컴퓨터\" style=\"position:relative;\"><a href=\"#eniac-%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%BB%B4%ED%93%A8%ED%84%B0\" aria-label=\"eniac 첫 번째 컴퓨터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ENIAC: 첫 번째 컴퓨터</h4>\n<p>진공관을 이용해서 0, 1을 표현해 프로그램을 작동</p>\n<p>한 개의 응용 프로그램을 실행시키기도 바쁘기 때문에 운영체제는 없었고, 응용프로그램이 시스템 자원을 제어했다.</p>\n<p>오히려 응용 프로그램을 하나만 작동시키는 것이 당연한 시대</p>\n<h3 id=\"1960년대-초반\" style=\"position:relative;\"><a href=\"#1960%EB%85%84%EB%8C%80-%EC%B4%88%EB%B0%98\" aria-label=\"1960년대 초반 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1960년대 초반</h3>\n<p>프로그램의 종료가 많아지고, 사용자도 점차 많아지기 시작하면서 여러 프로그램이 순서대로 실행되야 하는 경우가 늘어났다. 그러면서 먼저 실행되고 있는 프로그램을 기다리지 않아도 되는, 자동으로 순서대로 실행시켜줄 시스템이 필요해짐</p>\n<ul>\n<li>\n<p>배치 처리 시스템(batch processiong system) 출현</p>\n<ul>\n<li>여러 프로그램을 등록시켜놓으면, 순차적으로 실행하는 시스템</li>\n<li>배치 처리 시스템을 기반으로 운영체게가 출현</li>\n<li>등록된 순서대로 실행되기 때문에 효율적인 시스템은 아니었다</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1960년대-후반\" style=\"position:relative;\"><a href=\"#1960%EB%85%84%EB%8C%80-%ED%9B%84%EB%B0%98\" aria-label=\"1960년대 후반 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1960년대 후반</h3>\n<p><code class=\"language-text\">시분할 시스템(Time Sharing System)</code>과 <code class=\"language-text\">멀티테스킹(Multi Tasking)</code> 개념이 제안됨(실현되지는 않음)</p>\n<ul>\n<li>응용 프로그램이 CPU를 사용하는 시간을 잘게 쪼개서, 여러 개의 응용 프로그램을 동시에 실행하는 기법</li>\n</ul>\n<h4 id=\"시분할-시스템time-sharing-system\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%B6%84%ED%95%A0-%EC%8B%9C%EC%8A%A4%ED%85%9Ctime-sharing-system\" aria-label=\"시분할 시스템time sharing system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시분할 시스템(Time Sharing System)</h4>\n<p>다중 사용자를 지원하고, 컴퓨터 응답 시간을 최소화하는 시스템</p>\n<p>기존의 배치 처리 시스템은 컴퓨터 응답 시간을 일정하게 유지할 수 없었기 때문에 다중 사용자를 지원할 수 없었다. 다중 사용자를 지원하기 위해서는 컴퓨터 응답 시간을 최소화해야했고, 그러기 위해서 시분할 시스템이 나왔다.</p>\n<h4 id=\"멀티테스킹multi-tasking\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0%ED%85%8C%EC%8A%A4%ED%82%B9multi-tasking\" aria-label=\"멀티테스킹multi tasking permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티테스킹(Multi Tasking)</h4>\n<p>단일 CPU에서 여러 응용 프로그램의 병렬 실행을 가능하게 하는 시스템</p>\n<p>시간을 최대한 잘게 쪼개서 여러 프로그램을 번갈아 실행하게 만들어 여러 프로그램이 동시에 실행되는 것처럼 보이게 만드는 시스템</p>\n<p>기본적으로 시간을 최대한 잘게 쪼개서 프로그램을 실행한다는 것은 같기 때문에 보통 시분할 시스템과 멀티 태스킹은 비슷한 의미로 사용된다.</p>\n<blockquote>\n<p>멀티프로그래밍</p>\n</blockquote>\n<p>배치 처리 시스템의 단점</p>\n<ol>\n<li>앞단에서 실행시간을 많이 필요로 하는 응용 프로그램이 실행될 경우가 있기 때문에 컴퓨터 응답 시간(response time)이 오래 걸릴 수 있다.</li>\n<li>CPU가 필요없음에도 응용 프로그램이 CPU를 점유할 수 있기 떄문</li>\n</ol>\n<p>위의 단점으로 인해 시분할 시스템/멀티태스킹이 등장했다.</p>\n<ul>\n<li>\n<p>핵심기술은 <strong>시간을 잘게 쪼개서, 여러 응용 프로그램을 실행</strong>하는 것이다. 그렇게 되면</p>\n<ul>\n<li>컴퓨터 응답 시간을 줄일 수 있음(시분할 시스템, 다중 사용자를 지원)</li>\n<li>전체 응용 프로그램의 실행 시간도 줄일 수 있음(멀티 프로그래밍)</li>\n<li>결과적으로, 사용자가 느낄 때에는, 여러 응용 프로그램이 동시에 실행되는 것처럼 보이게 된다.(멀티 태스킹)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1970년대\" style=\"position:relative;\"><a href=\"#1970%EB%85%84%EB%8C%80\" aria-label=\"1970년대 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1970년대</h3>\n<blockquote>\n<p>제대로 된 운영체제의 등장</p>\n</blockquote>\n<h4 id=\"unix유닉스-os\" style=\"position:relative;\"><a href=\"#unix%EC%9C%A0%EB%8B%89%EC%8A%A4-os\" aria-label=\"unix유닉스 os permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UNIX(유닉스) OS</h4>\n<p>미국 AT&#x26;T사의 벨 연구소에서 켄톰슨과 데니스 리치(C언어개발)가 만들었다.</p>\n<h5 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h5>\n<p>현대 운영체제의 기본 기술을 모두 포함한 최초의 운영체제</p>\n<ul>\n<li>\n<p>멀티태스킹, 시분할 시스템, 멀티 프로그래밍</p>\n<ul>\n<li>다중 사용자 지원</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1980년대\" style=\"position:relative;\"><a href=\"#1980%EB%85%84%EB%8C%80\" aria-label=\"1980년대 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1980년대</h3>\n<h4 id=\"개인용-컴퓨터-시대\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9D%B8%EC%9A%A9-%EC%BB%B4%ED%93%A8%ED%84%B0-%EC%8B%9C%EB%8C%80\" aria-label=\"개인용 컴퓨터 시대 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개인용 컴퓨터 시대</h4>\n<ul>\n<li>1980년대 이전에는 대형 컴퓨터를 여러 명이 접속해서 사용(UNIX, 시분할 시스템을 이용)</li>\n<li>1980년대 ~ : Personal Computer(PC)</li>\n</ul>\n<h4 id=\"cli---gui\" style=\"position:relative;\"><a href=\"#cli---gui\" aria-label=\"cli   gui permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CLI -> GUI</h4>\n<blockquote>\n<p><strong>CLI</strong> (Command Line interface): 터미널 환경</p>\n<p>​ 키보드로 명령어를 입력하여 결과를 확인할 수 있는 환경</p>\n<p><strong>GUI</strong> (Graphical User Interface): GUI 환경</p>\n<p>​ 마우스로 클릭을 통해 입력하여 결과를 확인할 수 있는 환경</p>\n</blockquote>\n<ul>\n<li>1980년대 초반: 터미널 환경</li>\n<li>1980년대 중후반: GUI 환경(마우스, 매킨토시에서 처음 사용)</li>\n</ul>\n<h3 id=\"1990년대\" style=\"position:relative;\"><a href=\"#1990%EB%85%84%EB%8C%80\" aria-label=\"1990년대 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1990년대</h3>\n<ol>\n<li>\n<p>응용프로그램의 시대 by GUI 환경, 개인용 컴퓨터의 사용자 증가</p>\n<ul>\n<li>엑셀, 워드 프로세서 등</li>\n<li>Windows OS 대중화</li>\n</ul>\n</li>\n<li>네트워크 기술의 발전 - 월드와이드웹(WWW) 인터넷 대중화</li>\n<li>\n<p>오픈소스 운동 활성화</p>\n<ul>\n<li>초반에는 UNIX 관련 프로그램의 기술 공개가 되지 않았는데, 오픈소스 운동이 시작됨</li>\n<li>(UNIX 계열 OS + 응용 프로그램 자체개발)형태로 소스를 오픈했다</li>\n<li>그 운동이 점점 더 활성화되면서 LINUX(리눅스) 운영체제는 소스오픈 뿐만 아니라 무료로 배포된다.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"2000년대-이후\" style=\"position:relative;\"><a href=\"#2000%EB%85%84%EB%8C%80-%EC%9D%B4%ED%9B%84\" aria-label=\"2000년대 이후 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2000년대 이후</h3>\n<ol>\n<li>\n<p>오픈 소스 활성화</p>\n<ul>\n<li>LINUX (리눅스) 운영체제</li>\n<li>Apache (아파치, 웹서버)</li>\n<li>MySQL (데이터베이스)</li>\n<li>요즘… 안드로이드, 딥러닝, 데이터사이언스, IoT 관련 소프트웨어들이 무료 오픈소스</li>\n</ul>\n</li>\n<li>\n<p>가상 머신, 대용량 병렬 처리 등 활성화</p>\n<ul>\n<li>가상 머신: 운영체제 위에 다른 운영체제를 설치하여 실행하는 기술, 하나의 컴퓨터에서 두개의 운영체제가 실행되는 것 같은 동작을 보여주는 기술</li>\n<li>대용량 병렬 처리: 요즘엔 옥타코어 같이 CPU가 여러개 들어가 있는 컴퓨터가 나오면서 여러가지 기술을 통해 한 번에 여러가지 일을 하는 기술이 활성화 되었다. 거기에 빅데이터 시대에 도래하면서 기존과 비교해서 대용량의 데이터를 다루는 기술이 필요해지기 시작했고 대용량 데이터와 병렬처리가 합쳐지면서 관련 기술들이 활성화되고 있다</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h4>\n<ul>\n<li><strong>1950년대</strong>에는 <strong>운영체제가 없음</strong>(응용 프로그램이 직접 시스템 자원을 제어)</li>\n<li><strong>1960년대 초반</strong>에는 여러 응용프로그램을 자동으로 실행하기 위해서 <strong>배치처리 시스템</strong>이 만들어졌고, 이를 기반으로 운영체제가 출현했다.</li>\n<li><strong>1960년대 후반</strong>에는 <strong>시분할 시스템, 멀티테스킹, 멀티프로그래밍 기술이 아이디어로 제공</strong>되었다. 핵심 기술은 시간을 잘개 쪼개는 것이고 결과적으로 다중 사용자를 지원하고 응용프로그램을 동시에 지원할 수 있게된다.</li>\n<li>\n<p><strong>1970년대</strong>에는 본격적으로 운영체제의 중요성이 부각됐고 현대 운영체제 기술이 확립되면서 <strong>UNIX OS</strong>가 최초로 구현되었다.</p>\n<ul>\n<li>UNIX: <strong>멀티태스킹, 시분할 프로그램, 멀티 프로그래밍</strong> -> 다중 사용자 지원</li>\n</ul>\n</li>\n<li>\n<p><strong>1980년대</strong></p>\n<ul>\n<li><strong>개인용 컴퓨터</strong></li>\n<li><strong>GUI 환경</strong></li>\n</ul>\n</li>\n<li>\n<p><strong>1990년대</strong></p>\n<ol>\n<li><strong>다양한 응용프로그램</strong> 활성화(ex. killer application)</li>\n<li>네트워크 발전(<strong>인터넷</strong>)</li>\n<li><strong>오픈소스 운동</strong> 활성화(리눅스)</li>\n</ol>\n</li>\n<li>\n<p><strong>2000년대</strong></p>\n<ul>\n<li>오픈소스 활성화</li>\n<li>가상머신, 대용량 병렬 처리 등이 발전</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[OS]03_운영체제의 역사","date":null,"lang":null}}},{"node":{"id":"bae2d2c8-7a69-54b6-89c0-bf2ef8ecc3dd","excerpt":"…","html":"<p>응용 프로그램, 운영체제, 컴퓨터 하드웨어(시스템 리소스)의 관계는 도서관서비스로 비유할 수 있다.</p>\n<p>운영체제를 도서관, 응용프로그램을 시민, 컴퓨터 하드웨어를 책이라고 비유고 운영체제(도서관)의 역할을 살펴보면</p>\n<ul>\n<li>시민(응용프로그램)은 도서관(운영체제)에 원하는 책(자원)을 요청함</li>\n<li>도서관(운영체제)은 적절한 책(자원)을 찾아서, 시민(응용프로그램)에게 빌려줌</li>\n<li>시민(응용프로그램)이 기한이 다 되면, 도서관(운영체제)이 해당 책(자원)을 회수함</li>\n<li>불량 회원의 자원을 강제로 회수함,, 등등 과 같은 역할을 한다.</li>\n</ul>\n<h4 id=\"응용프로그램-운영체제-컴퓨터-하드웨어-관계\" style=\"position:relative;\"><a href=\"#%EC%9D%91%EC%9A%A9%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C-%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EA%B4%80%EA%B3%84\" aria-label=\"응용프로그램 운영체제 컴퓨터 하드웨어 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>응용프로그램, 운영체제, 컴퓨터 하드웨어 관계</h4>\n<ul>\n<li>운영체제는 응용프로그램이 요청하는 메모리를 허가하고, 분배한다.</li>\n<li>운영체제는 응용 프로그램이 요청하는 CPU 시간을 제공한다.</li>\n<li>운영체제는 응용 프로그램이 요청하는 IO Devices 사용을 허가/제어한다.</li>\n</ul>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Operating_system_placement_kor.png/180px-Operating_system_placement_kor.png\" alt=\"Operating system placement kor.png\"></p>\n<img src=\"https://media.vlpt.us/images/underlier12/post/2b8f5464-5db5-4291-b79b-d39f1910af31/image.png\" alt=\"img\" style=\"zoom:67%;\">\n<h3 id=\"쉘shell\" style=\"position:relative;\"><a href=\"#%EC%89%98shell\" aria-label=\"쉘shell permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쉘(Shell)</h3>\n<ul>\n<li>운영체제가 제공하는 사용자 인터페이스</li>\n<li>사용자가 운영체제 기능과 서비스를 조작할 수 있도록 인터페이스를 제공하는 프로그램</li>\n<li>쉘은 터미널 환경(CLI)과, GUI 환경 두 종류로 분류</li>\n</ul>\n<h3 id=\"apiapplication-programming-interface\" style=\"position:relative;\"><a href=\"#apiapplication-programming-interface\" aria-label=\"apiapplication programming interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API(Application Programming Interface)</h3>\n<ul>\n<li>운영체제가 응용 프로그램을 위해서 제공하는 인터페이스(프로그래밍 언어를 통해)</li>\n<li>각 언어별 운영체제 기능 호출 인터페이스 함수(각 언어별 인터페이스)</li>\n<li>함수로 제공된다.(ex. open())</li>\n<li>\n<p>수가 많기 때문에 보통은 종류별로 묶어서 라이브러리(library) 형태로 제공</p>\n<ul>\n<li>ex. C library</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"시스템-콜\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%9C\" aria-label=\"시스템 콜 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시스템 콜</h3>\n<ul>\n<li>시스템 콜, 시스템 호출 인터페이스</li>\n<li>운영체제 기능을 호출하는 함수</li>\n<li>운영체제가 운영체제 각 기능을 사용할 수 있도록 시스템 콜이라는 명령, 함수를 제공</li>\n<li>API 내부에는 시스템콜을 호출하는 형태로 만들어지는 경우가 대부분</li>\n<li>정의 예: POSIX API, 윈도우 API</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/114696308-78d6f100-9d57-11eb-8dde-f5b2b3bc931e.png\" alt=\"image\"></p>\n<ul>\n<li>운영체제를 사용하려면 어떤 식으로 사용해야하는지 나와있는 것이 <code class=\"language-text\">시스템 콜</code></li>\n<li>시스템 콜을 직접 사용하는 것이 복잡하고 어려울 수 있기 때문에 좀 정리를 해서 더 쉽게 사용할 수 있도록 만들어 놓은 것이 <code class=\"language-text\">Library</code>와 <code class=\"language-text\">API</code> 이다. 때문에 API를 뜯어보면 시스템 콜을 호출하고 있는 것을 알 수 있다.</li>\n<li>라이브러리와 API를 사용해서 어플리케이션이나 쉘을 만들고 그것을 사용자들이 사용하게 되는 것</li>\n</ul>\n<h3 id=\"운영체제를-만드는-순서\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%88%9C%EC%84%9C\" aria-label=\"운영체제를 만드는 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제를 만드는 순서</h3>\n<ol>\n<li>운영체제를 개발 (kernel)</li>\n<li>시스템 콜을 개발</li>\n<li>C API(library) 개발 (쉘을 만들기 위해서 자신이 정한 언어로 만듦, 보통은 C)</li>\n<li>Shell 프로그램 개발</li>\n<li>응용 프로그램 개발</li>\n</ol>\n<h4 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h4>\n<ul>\n<li>운영체제는 컴퓨터 하드웨어와 응용 프로그램을 관리</li>\n<li>사용자 인터페이스를 제공하기 위해 운영체제가 쉘을 제공</li>\n<li>운영체제는 응용 프로그램에 운영체제 기능을 제공하기 위해서 시스템 콜을 제공</li>\n<li>보통 시스템 콜을 직접 사용하기 보다는 해당 시스템 콜을 사용해서 만든 각 언어별 라이브러리(API)를 사용</li>\n</ul>","frontmatter":{"title":"[OS]04_운영체제 구조 - 시스템콜","date":null,"lang":null}}},{"node":{"id":"23c7b673-1afc-554e-9698-2ccaa6e08b0f","excerpt":"kernel OS kernel, OS의 핵심 부분 Shell OS를 둘러싸고 있는 프로그램 CPU Protection Rings CPU의 권한 사용자 모드(user mode by applications) 응용프로그램이 사용(ring 3) 커널 모드(kernel mode by OS…","html":"<blockquote>\n<h4 id=\"kernel\" style=\"position:relative;\"><a href=\"#kernel\" aria-label=\"kernel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kernel</h4>\n<p>OS kernel, OS의 핵심 부분</p>\n<h4 id=\"shell\" style=\"position:relative;\"><a href=\"#shell\" aria-label=\"shell permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shell</h4>\n<p>OS를 둘러싸고 있는 프로그램</p>\n</blockquote>\n<h4 id=\"cpu-protection-rings\" style=\"position:relative;\"><a href=\"#cpu-protection-rings\" aria-label=\"cpu protection rings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU Protection Rings</h4>\n<ul>\n<li>\n<p>CPU의 권한</p>\n<ul>\n<li>사용자 모드(user mode by applications)</li>\n<li>응용프로그램이 사용(ring 3)</li>\n<li>커널 모드(kernel mode by OS): 특권 명령어 실행과 원하는 작업 수행을 위한 자원 접근을 가능하게 하는 모드</li>\n<li>OS가 사용(ring 0)</li>\n</ul>\n<p><img src=\"https://kwonsoonwoo.github.io/assets/Operating%20System/protectionring.png\" alt=\"운영체제구조\"></p>\n</li>\n</ul>\n<h4 id=\"커널-모드\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%84%90-%EB%AA%A8%EB%93%9C\" aria-label=\"커널 모드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커널 모드</h4>\n<ul>\n<li>시스템 콜은 커널 모드로만 실행</li>\n<li>커널 모드에서만 실행 가능한 기능들이 있음</li>\n<li>커널 모드로 실행하려면 반드시 시스템 콜을 거쳐서 사용해야함(시스템 콜을 사용하지 않고는 커널 모드를 실행할 수 없음)</li>\n<li>시스템 콜은 운영체제가 제공</li>\n</ul>\n<p>모드를 둘로 나눔으로서 응용 프로그램이 함부로 컴퓨터 전체 시스템을 해치지 못하게 된다. 이것은 주민등록등본을 꼭 동사무소 또는 민원24에서 특정 신청서를 작성해야만 발급가능한 것과 같은 맥락이다.</p>\n<ul>\n<li>동사무소 직원분들이 특별한 권한을 가지고, 주민등록등본 출력 명령을 실행</li>\n</ul>\n<h4 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h4>\n<ul>\n<li>시스템 콜: 운영체제가 운영체제의 기능을 제공하기 위해 제공</li>\n<li>API: 프로그래밍 언어별로 운영체제의 기능을 활용하기 위해 시스템 콜 기반으로 작성하여 제공</li>\n<li>\n<p>실행 과정</p>\n<ol>\n<li>응용프로그램이 운영체제의 기능이 필요하면 해당 API를 사용해서 프로그램을 작성</li>\n<li>응용 프로그램이 실행되면서 운영체제 기능을 사용하는 API를 호출</li>\n<li>API는 시스템 콜을 호출</li>\n<li>커널 모드로 변경되면서 OS 내부에서 해당 명령이 실행</li>\n<li>다시 응용 프로그램으로 돌아와 다음 코드를 실행</li>\n</ol>\n</li>\n</ul>","frontmatter":{"title":"[OS]05_운영체제 구조 - 사용자 모드와 커널 모드","date":null,"lang":null}}},{"node":{"id":"1b8dcfb1-05b8-5d61-a7d0-bfbb1c93175c","excerpt":"프로세스 - 운영체제\n스케쥴링 - 배치 처리 시스템, 시분할 시스템, 멀티 태스킹 배치 처리 시스템 자동으로 다음 응용프로그램이 이어서 실행될 수 있도록 하는 시스템 Queue: FIFO…","html":"<blockquote>\n<p>프로세스 - 운영체제\n스케쥴링 - 배치 처리 시스템, 시분할 시스템, 멀티 태스킹</p>\n</blockquote>\n<ul>\n<li>\n<p>배치 처리 시스템</p>\n<ul>\n<li>자동으로 다음 응용프로그램이 이어서 실행될 수 있도록 하는 시스템</li>\n<li>Queue: FIFO</li>\n</ul>\n</li>\n<li>\n<p>배치처리 시스템에서 시분할, 멀티 프로그래밍으로 바뀐 이유</p>\n<ul>\n<li>어떤 프로그램은 실행이 너무 오래 걸려서, 다른 프로그램을 실행하는데 너무 많은 시간을 기다려야한다.</li>\n<li>한번에 한가지 프로그램밖에 실행하지 못한다.(ex. 음악을 들으면서 문서작성 불가능)</li>\n<li>여러 사용자가 동시에 하나의 컴퓨터를 쓰지 못함(컴퓨터 응답시간을 짧게 할 수 없기 때문에 다중 사용자를 지원할 수 없음)</li>\n</ul>\n</li>\n<li>\n<p>시분할 시스템</p>\n<ul>\n<li>응용 프로그램이 CPU를 점유하는 시간을 잘게 쪼개어 실행 될 수 있도록 하는 시스템</li>\n<li>응용 프로그램의 CPU 점유 시간을 잘게 쪼갰기 때문에 컴퓨터 응답시간을 줄일 수 있어 다중 사용자를 지원</li>\n</ul>\n</li>\n<li>\n<p>멀티 태스킹</p>\n<ul>\n<li>단일 CPU에서 여러 응용 프로그램이 동시에 실행되는 것처럼 보이도록 하는 시스템(ex. 음악을 들으면서 문서 작성)</li>\n<li>사람이 인지하지 못할 정도의 시간 동안 응용프로그램이 번갈아가면서 실행하면 실제로는 응용프로그램이 동작하지 않는 시간이 존재하기 하지만 인지하지 못해 사용자는프로그램이 동시에 실행되는 것처럼 인지</li>\n<li>시분할 시스템의 기본 기술과 동일</li>\n</ul>\n</li>\n<li>\n<p>멀티 태스킹과 멀티 프로세싱</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/d1bc91d6-d40d-4168-939d-4130046edfa3/image.png\" alt=\"img\"></p>\n<ul>\n<li>멀티 태스킹: 단일 CPU</li>\n<li>멀티 프로세싱: 여러 CPU에 하나의 프로그램을 병렬로 실행해서 실행 속도를 극대화시키는 시스템</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[OS]06_스케쥴링 - 배치처리시스템, 멀티태스킹, 멀티프로그래밍","date":null,"lang":null}}},{"node":{"id":"b2f2f695-b05a-5ed6-88f6-e9751819908a","excerpt":"참조 캐시의 지역성 캐시의 지역성 원리 캐시 메모리는 속도가 빠른 장치와 느린 장치 간의 속도 차에 따른 병목현상을 줄이기 위한 범용 메모리이다. 이러한 역할을 수행하기 위해서는 CPU…","html":"<p><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/OS#%EC%BA%90%EC%8B%9C%EC%9D%98-%EC%A7%80%EC%97%AD%EC%84%B1\">참조</a></p>\n<h2 id=\"캐시의-지역성\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%9C%EC%9D%98-%EC%A7%80%EC%97%AD%EC%84%B1\" aria-label=\"캐시의 지역성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐시의 지역성</h2>\n<h3 id=\"캐시의-지역성-원리\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%9C%EC%9D%98-%EC%A7%80%EC%97%AD%EC%84%B1-%EC%9B%90%EB%A6%AC\" aria-label=\"캐시의 지역성 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐시의 지역성 원리</h3>\n<p>캐시 메모리는 속도가 빠른 장치와 느린 장치 간의 속도 차에 따른 병목현상을 줄이기 위한 범용 메모리이다. 이러한 역할을 수행하기 위해서는 CPU가 어떤 데이터를 원할 것 인가를 어느 정도 예측할 수 있어야 한다. 캐시의 성능은 작은 용량의 캐시 메모리에 CPU가 이후에 참조할, 쓸모 있는 정보가 어느 정도 들어 있느냐에 따라 죄우되기 때문이다.</p>\n<p>이 때 <code class=\"language-text\">적중률(Hit rate)</code>을 극대화 시키기 위해 데이터 <code class=\"language-text\">지역성(Locality)</code>의 원리를 사용한다. 지역성의 원리는 프로그램은 모든 코드나 데이터를 균등하게 Access 하지 않는다는 특성을 기본으로 한다. 즉, <code class=\"language-text\">Locality</code>란 기억 장치 내의 정보를 균일하게 Access 하는 것이 아닌 어느 한 순간에 특정 부분을 집중적으로 참조하는 특성이다.</p>\n<p>이 데이터 지역성은 대표적으로 시간 지역성(Temporal Localiry)과 공간 지역성(Spatial Localiry)으로 나뉜다.</p>\n<ul>\n<li>시간 지역성 : 최근에 참조된 주소의 내용이 다음에 다시 참조되는 특성</li>\n<li>공간 지역성 : 대부분의 실제 프로그램이 참조된 주소와 인접한 주소의 내용이 다시 참조되는 특성</li>\n</ul>\n<h3 id=\"caching-line\" style=\"position:relative;\"><a href=\"#caching-line\" aria-label=\"caching line permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Caching line</h3>\n<p>캐시는 프로세서 가까이에 위치하면서 빈번하게 사용되는 데이터를 놔두는 장소이다. 하지만 캐시가 아무리 가까이 있더라도 찾고자 하는 데이터가 어느 곳에 저장되어 있는지 몰라 모든 데이터를 순회해야 한다면 시간이 오래 걸리게 된다. 즉, 캐시에 목적 데이터가 저장되어 있다면 바로 접근하여 출력할 수 있어야 캐시가 의미 있어진다는 것이다.</p>\n<p>그렇기 때문에 캐시에 데이터를 저장할 때 특정 자료구조를 사용하여 <code class=\"language-text\">묶음</code>으로 저장하게 되는데 이를 <strong>캐싱라인</strong>이라고 한다. 프로세스는 다양한 주소에 있는 데이터를 사용하므로 빈번하게 사용하는 데이터의 주소 또한 흩어져 있다. 따라서 캐시에 저장하는 데이터에는 데이터의 메모리 주소 등을 기록해 둔 태그를 달아 놓을 필요가 있다. 이러한 태그들의 묶음을 캐싱 라인이라고 하고 메모리로부터 가져올 때도 캐싱 라인을 기준으로 가져온다. 종류로는 대표적으로 세 가지 방식이 존재한다.</p>\n<ol>\n<li>Full Associative</li>\n<li>Set Associative</li>\n<li>Direct Map</li>\n</ol>\n<blockquote>\n<p>컴퓨터 구조22에 매핑방법 3가지에 대해 강의 들은 것을 정리해놓음</p>\n</blockquote>","frontmatter":{"title":"[OS]캐시의 지역성","date":null,"lang":null}}},{"node":{"id":"2e21229d-57bd-52be-9801-21f651385985","excerpt":"프로세스와 스레드 정의 참고 프로그램 → 프로세스 → 스레드 참고 프로세스(Process…","html":"<p><a href=\"https://gmlwjd9405.github.io/2018/09/14/process-vs-thread.html\">프로세스와 스레드 정의 참고</a></p>\n<p><a href=\"https://velog.io/@raejoonee/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%8A%A4%EB%A0%88%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4\">프로그램 → 프로세스 → 스레드 참고</a></p>\n<h2 id=\"프로세스process란\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process%EB%9E%80\" aria-label=\"프로세스process란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스(Process)란</h2>\n<ul>\n<li>\n<p>사전적 의미</p>\n<ul>\n<li>“컴퓨터에서 연속적으로 실행되고 있는 컴퓨터 프로그램”</li>\n<li>메모리에 올라와 실행되고 있는 프로그램의 인스턴스(독립적인 개체)</li>\n<li>운영체제로부터 시스템 자원을 할다받는 작업의 단위</li>\n<li>동적인 개념으로는 실행된 프로그램을 의미</li>\n</ul>\n</li>\n<li>\n<p>할당받는 시스템 자원의 예</p>\n<ul>\n<li>CPU 시간</li>\n<li>운영되기 위해 필요한 주소 공간</li>\n<li>Code, Data, Stack, Heap의 구조로 되어있는 독립된 메모리 영역</li>\n</ul>\n</li>\n<li>\n<p>특징</p>\n<p><img src=\"https://gmlwjd9405.github.io/images/os-process-and-thread/process.png\" alt=\"https://gmlwjd9405.github.io/images/os-process-and-thread/process.png\"></p>\n<ul>\n<li>프로세스는 각각 독립된 메모리영역(code, data, stack, heap의 구조)을 할당받는다.</li>\n<li>기본적으로 프로세스당 최소 1개의 스레드(메인 스레드)를 가지고 있다.</li>\n<li>각 프로세스는 별도의 주소 공간에서 실행되며, 한 프로세스는 다른 프로세스의 변수나 자료 구조에 접근할 수 없다.</li>\n<li>한 프로세스가 다른 프로세스의 자원에 접근하려면 프로세스 간의 통신(IPC, Inter-Process Communication)을 사용해야 한다.</li>\n<li>ex. 파이프, 파일, 소켓 등을 이용한 통신 방법 이용</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"스레드thread란\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EB%A0%88%EB%93%9Cthread%EB%9E%80\" aria-label=\"스레드thread란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스레드(Thread)란</h2>\n<ul>\n<li>\n<p>사전적 의미</p>\n<ul>\n<li>“프로세스 내에서 실행되는 여러 흐름의 단위”</li>\n<li>프로세스의 특정한 수행 경로</li>\n<li>프로세스가 할당받은 자원을 이용하는 실행의 단위</li>\n</ul>\n</li>\n<li>\n<p>특징</p>\n<p><img src=\"https://gmlwjd9405.github.io/images/os-process-and-thread/thread.png\" alt=\"https://gmlwjd9405.github.io/images/os-process-and-thread/thread.png\"></p>\n<ul>\n<li>스레드는 프로세스 내에서 각각 stack만 따로 할당받고 code, data, heap 영역은 공유한다.</li>\n<li>스레드는 한 프로세스 내에서 동작되는 여러 실행의 흐름으로, 프로세스 내의 주소 공간이나 자원들(힙 공간 등(을 같은 프로세스 내에 스레드끼리 공유하면서 실행된다.</li>\n<li>같은 프로세스 안에 있는 여러 스레드들은 같은 힙 공간을 공유한다. 반면에 프로세스는 다른 프로세스의 메모리에 직접 접근할 수 없다.</li>\n<li>각각의 스레드는 별도의 레지스터와 스택을 갖고 있지만, 힙 메모리는 서로 읽고 쓸 수 있다.</li>\n<li>한 스레드가 프로세스 자원을 변경하면, 다른 이웃 스레드(sibling thread)도 그 변경 결과를 즉시 볼 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>프로세서 : 운영체제로부터 자원을 할당받은 <strong>작업</strong>의 단위</li>\n<li>스레드 : 프로세스가 할당받은 자원을 이용하는 <strong>실행 흐름</strong>의 단위</li>\n<li>스레드는 프로세스 안에 포함되어 있다.</li>\n<li>운영체제가 프로세스에서 Code/Data/Stack/Heap 메모리 영역을 할당해 주고 최소 작업 단위로 삼는 반면, 스레드는 프로세스 내에서 Stack 메모리 영역을 제외한 다른 메모리 영역을 같은 프로세스 내 다른 스레드와 공유한다.</li>\n<li>프로세스는 다른 프로세스와 정보를 공유하려면 IPC를 사용하는 등의 번거로운 과정을 거쳐야 하지만, 스레드는 기본 구조 자체가 메모리를 공유하는 구조이기 때문에 다른 스레드와 정보 공유가 쉽다. 때문에 멀티태스킹보다 멀티스레드가 자원을 아낄 수 있게 된다. 다만 스레드의 스케줄링은 운영체제가 처리하지 않기 때문에 프로그래머가 직접 동기화 문제에 대응할 수 있어야 한다.</li>\n</ul>","frontmatter":{"title":"[운영체제]프로세스와 스레드의 차이","date":null,"lang":null}}},{"node":{"id":"2ef56f0a-e285-520f-af26-75c402f8dc71","excerpt":"멀티프로그래밍 목적 시간 대비 CPU의 활용도를 높여서 최대한 CPU를 많이 활용하도록 한다. 때문에 응용 프로그램 실행을 더 빨리 완료시킬 수 있다. 응용프로그램은 실행되는 동안 CPU…","html":"<h4 id=\"멀티프로그래밍\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"멀티프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티프로그래밍</h4>\n<ul>\n<li>\n<p>목적</p>\n<p>시간 대비 CPU의 활용도를 높여서 최대한 CPU를 많이 활용하도록 한다. 때문에 응용 프로그램 실행을 더 빨리 완료시킬 수 있다.</p>\n</li>\n<li>응용프로그램은 실행되는 동안 CPU를 계속 사용하지 않고 다른 작업을 수행하는 경우가 많다. (파일읽기, 프린트하기) -> 이런 경우에도 CPU를 점유하고 있다면 효율성이 떨어진다.</li>\n</ul>\n<blockquote>\n<p>컴퓨터 구조에서 메모리 계층과 System Bus, DMA 부분을 보면 저장매체 부분이 얼마나 먼지 알 수 있음</p>\n</blockquote>\n<p>실제로는 시분할 시스템, 멀티 프로그래밍, 멀티 태스킹이 유사한 의미로 사용된다.</p>\n<p>핵심은 CPU가 쉬지 않고 응용 프로그램을 실행하도록 해서 짧은 시간 안에 응용 프로그램이 실행완료 될 수 있도록 한다는 것이고, 그 결과 컴퓨터 응답시간도 짧아지기 때문에, 다중 사용자를 지원하고, 사용자가 응용 프로그램이 동시에 실행되는 것처럼 느끼도록 하는 것이다.</p>\n<h3 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h3>\n<p>시분할 시스템: 다중 사용자 지원, 컴퓨터 응답시간을 최소화하는 시스템</p>\n<p>멀티테스킹: 단일 CPU에서 여러 응용 프로그램을 동시에 실행하는 것처럼 보이게 하는 시스템</p>\n<p>멀티 프로세싱: 여러 CPU에서 하나의 응용 프로그램을 병렬로 실행하게 해서, 실행속도를 높이는 기법</p>\n<p>멀티 프로그래밍: 최대한 CPU를 일정 시간당 최대한</p>","frontmatter":{"title":"[OS]07_스케쥴링 - 멀티프로그래밍","date":null,"lang":null}}},{"node":{"id":"1892b455-340f-554d-a053-cd4d95f4f5f2","excerpt":"…","html":"<h3 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h3>\n<p>세마포어와 뮤텍스는 <code class=\"language-text\">여러 프로세스나 스레드가 공유 자원에 접근하는 것을 제어하기 위한 방법</code>으로 정의할 수 있습니다. 즉, <strong>병렬 처리를 위한 프로세스 동기화 기법</strong>입니다.</p>\n<p>예를 들자면 교차하는 철도에서 열차의 진행가능 여부를 나타내는 신호등이 세마포어나 뮤텍스가 될 수 있습니다.</p>\n<h3 id=\"세마포어의-동작-원리\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%A7%88%ED%8F%AC%EC%96%B4%EC%9D%98-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"세마포어의 동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세마포어의 동작 원리</h3>\n<p>세마포어의 동작 원리를 알려면 세마포어 변수, semWait 연산, semSignal 연산에 대해 먼저 알아야 합니다.</p>\n<p>세마포어는 정수 값을 가지는 변수로 볼 수 있습니다. 그 정수 값은 접근할 수 있는 최대 허용치만큼 동시에 사용자 접근을 할 수 있게 합니다.</p>\n<ul>\n<li>semWait 연산 : 세마포어 값을 감소시킵니다. 만일 값이 음수가 되면 semWati를 호출한 프로세스는 블록됩니다. 음수가 아니면, 프로세스는 계속 수행될 수 있습니다.</li>\n<li>semSignal 연산 : 세마포어 값을 증가시킵니다. 만약 값이 양수가 아니면 (0이거나 음수면) semWait 연산에 의해 블록된 프로세스들을 깨웁니다.</li>\n</ul>\n<h3 id=\"세마포어의-종류\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%A7%88%ED%8F%AC%EC%96%B4%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"세마포어의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세마포어의 종류</h3>\n<p>세마포어는 유자힐 수 있는 값의 범위에 따라 이진 세마포어와 범용 세마포어(또는 카운팅 세마포어)로 구분됩니다.</p>\n<p>위에서 봤던 세마포어를 카운팅 세마포어(counting semaphore) 또는 범용 세마포어(genaral semaphore)라고 부릅니다. 세마포어의 초기값이 0 이상의 수입니다.</p>\n<p>이진 세마포어(binary semaphore)는 세마포어의 초기 값이 0 또는 1만 가질 수 있는 세마포어입니다.</p>\n<p>이렇게 세마포어의 초기 값에 따라 범용 세마포어, 이진 세마포어로 나뉘는 것을 알 수 있습니다.</p>\n<blockquote>\n<p>세마포어는 큐에 프로세스들이 여러 개 있을 때 어떤 프로세스부터 깨울지에 따라 강성 세마포어와 악성 세마포어로 나뉩니다. 큐에서 선입선출로 꺼낸다면 강성 세마포어이며, 프로세스들이 큐에서 제거되는 순서를 특별히 명시하지 않는 세마포어를 약성 세마포어라고 합니다.</p>\n</blockquote>\n<h3 id=\"뮤텍스\" style=\"position:relative;\"><a href=\"#%EB%AE%A4%ED%85%8D%EC%8A%A4\" aria-label=\"뮤텍스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뮤텍스</h3>\n<p>뮤텍스는 세마포어와 마찬가지로 병렬 처리를 위한 동기화 기법 중 하나입니다. 이진 세마포어와 같이 초기값을 1과 0으로 가집니다.</p>\n<p>임계영역에 들어갈 때 <code class=\"language-text\">락(lock)</code>을 걸어 다른 프로세스나 스레드가 접근하지 못하도록 하고, 임계 영역에서 나와 해당 락을 <code class=\"language-text\">해제(unlock)</code>합니다.</p>\n<h3 id=\"뮤텍스와-세마포어의-차이\" style=\"position:relative;\"><a href=\"#%EB%AE%A4%ED%85%8D%EC%8A%A4%EC%99%80-%EC%84%B8%EB%A7%88%ED%8F%AC%EC%96%B4%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"뮤텍스와 세마포어의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뮤텍스와 세마포어의 차이</h3>\n<ul>\n<li>세마포어는 공유자원에 세마포어의 변수만큼의 프로세스 혹은 스레드가 접근할 수 있습니다. 반면에 뮤텍스는 오직 1개의 프로세스 또는 스레드만 접근할 수 있습니다.</li>\n<li>현재 수행중인 프로세스가 아닌 다른 프로세스가 세마포어를 해제할 수 있습니다. 하지만 뮤텍스는 락(lock)을 획득한 프로세스가 반드시 그 락을 해제해야 합니다.</li>\n</ul>\n<p>출처 : <a href=\"https://velog.io/@conatuseus/OS-%EC%84%B8%EB%A7%88%ED%8F%AC%EC%96%B4%EC%99%80-%EB%AE%A4%ED%85%8D%EC%8A%A4\">https://velog.io/@conatuseus/OS-%EC%84%B8%EB%A7%88%ED%8F%AC%EC%96%B4%EC%99%80-%EB%AE%A4%ED%85%8D%EC%8A%A4</a></p>","frontmatter":{"title":"[OS]세마포어와 뮤텍스의 차이","date":null,"lang":null}}},{"node":{"id":"d15298ec-b5dc-575b-887a-e19f1e3cf981","excerpt":"…","html":"<ul>\n<li>\n<p>왜 컴퓨터 구조를 학습해야 할까?</p>\n<ul>\n<li>성능은 높이고, 자원은 아끼기 위해</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"컴퓨터의-구성\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0%EC%9D%98-%EA%B5%AC%EC%84%B1\" aria-label=\"컴퓨터의 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터의 구성</h4>\n<ul>\n<li>\n<p>소프트웨어</p>\n<ul>\n<li>시스템 소프트웨어</li>\n<li>응용 소프트웨어</li>\n</ul>\n</li>\n<li>\n<p>하드웨어</p>\n<ul>\n<li>입력장치</li>\n<li>키보드, 마우스, 터치 스크린</li>\n<li>플로피 디스크 판독기</li>\n<li>자기 테이프 구동장치…</li>\n<li>처리 장치</li>\n<li>주기억장치</li>\n<li>\n<p>중앙처리장치</p>\n<ul>\n<li>제어장치</li>\n<li>연산장치</li>\n</ul>\n</li>\n<li>보조 기억장치</li>\n<li>자기 테이프, 자기 디스크</li>\n<li>CD-ROM</li>\n<li>Flash memory</li>\n<li>출력장치</li>\n<li>인쇄장치: 프린터, 플로터</li>\n<li>표시장치: CRT, LCD</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"정보화-사회에-대한-이해\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%B3%B4%ED%99%94-%EC%82%AC%ED%9A%8C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4\" aria-label=\"정보화 사회에 대한 이해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정보화 사회에 대한 이해</h4>\n<ul>\n<li><strong>인류사회적 측면</strong>에서 본다면 신석기 시대의 농업혁명, 18세기의 산업혁명, 그후 전기와 생산라인이 발달한 2차산업혁명, 컴퓨터 통신의 3차 산업혁명에서 최근에 21세기의 4차 산업혁명 -> IOT, 공장자동화(인력, 자원의 낭비를 최소화)…</li>\n<li>\n<p><strong>사회발전적인 측면</strong></p>\n<p>직접적인 영향에 대한 측면</p>\n<p>다니엘 벨의 “The measurement of knowledge and Technology”</p>\n<ul>\n<li>주 평균노동시간이 적어지고, 주 2일 휴무, 생애노동시간 5만시간 이내</li>\n<li>국민총생산고의 30%이상이 정보산업의 총생간</li>\n<li>컴퓨터, 핸드폰, 텔레비전의 보유대수 증가…</li>\n</ul>\n<p>그 결과로 모든 산업생산의 패턴은 소품종 대량생산에서 다품종 소량생산으로 변화할 것이고, 확일적, 일방적인 구조에서 개별적 선택적인 Computopia의 세계가 될 것이다</p>\n</li>\n</ul>\n<h4 id=\"컴퓨터-하드웨어의-구성\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4%EC%9D%98-%EA%B5%AC%EC%84%B1\" aria-label=\"컴퓨터 하드웨어의 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터 하드웨어의 구성</h4>\n<p><img src=\"https://blog.kakaocdn.net/dn/EMIXz/btq0c2qC9Y8/YDuIEMzk5CAKlraK1dFUhK/img.png\" alt=\"img\"></p>\n<p>요즘은 쓰지 않는 장치들이 들어간 사진이지만 큰 구조는 지금과 크게 다르지 않음</p>\n<h3 id=\"데이터의-표현\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%ED%91%9C%ED%98%84\" aria-label=\"데이터의 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터의 표현</h3>\n<ul>\n<li>\n<h4 id=\"정보information\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%B3%B4information\" aria-label=\"정보information permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정보(information)</h4>\n<ul>\n<li>어떤 사물에 대한 소식이나 자료, 향후 의사결정을 하는데 도움</li>\n<li>가공된 데이터</li>\n</ul>\n</li>\n<li>\n<h4 id=\"데이터data\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0data\" aria-label=\"데이터data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터(data)</h4>\n<ul>\n<li>정보를 작성하기 위해 필요한 자료나 정보를 처리하거나 전송할 때 이진(binary)이나 디지털과 같은 좀더 편리한 형태로 바뀌어진 자료</li>\n<li>정보의 원재료</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"데이터-표현-및-단위\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%91%9C%ED%98%84-%EB%B0%8F-%EB%8B%A8%EC%9C%84\" aria-label=\"데이터 표현 및 단위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 표현 및 단위</h3>\n<ul>\n<li>\n<h4 id=\"수치데이터numerical-data-연산용-데이터\" style=\"position:relative;\"><a href=\"#%EC%88%98%EC%B9%98%EB%8D%B0%EC%9D%B4%ED%84%B0numerical-data-%EC%97%B0%EC%82%B0%EC%9A%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"수치데이터numerical data 연산용 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수치데이터(Numerical data): 연산용 데이터</h4>\n</li>\n<li>\n<h4 id=\"비-수치데이터alphanumerical-data-입출력용-데이터\" style=\"position:relative;\"><a href=\"#%EB%B9%84-%EC%88%98%EC%B9%98%EB%8D%B0%EC%9D%B4%ED%84%B0alphanumerical-data-%EC%9E%85%EC%B6%9C%EB%A0%A5%EC%9A%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"비 수치데이터alphanumerical data 입출력용 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비 수치데이터(Alphanumerical data): 입출력용 데이터</h4>\n</li>\n<li>\n<h4 id=\"특수문자special-character-입출력연산용-데이터\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%88%98%EB%AC%B8%EC%9E%90special-character-%EC%9E%85%EC%B6%9C%EB%A0%A5%EC%97%B0%EC%82%B0%EC%9A%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"특수문자special character 입출력연산용 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특수문자(Special Character): 입출력/연산용 데이터</h4>\n</li>\n</ul>\n<p><img src=\"https://blog.kakaocdn.net/dn/eHNduk/btqZ6iOBAja/gtjEPKQDWtKkfHT905VeK1/img.png\" alt=\"img\"></p>\n<ul>\n<li>컴퓨터의 언어(비트)를 좀더 사람이 효율적으로 사용할 수 있게 8자리씩 잘라서 바이트로 표현</li>\n<li>원드는 기계의 특징에 따라 다름, 정해져있진 않음</li>\n<li>1024 단위인 이유 -> 이진수로는 1000을 표현할 수 없음</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]01_컴퓨터 시스템의 이해","date":null,"lang":null}}},{"node":{"id":"d8fac03d-8fce-52b3-a562-bfc89be579c9","excerpt":"컴퓨터 구성요소의 기능 및 이해 중앙처리장치(Central Processiong Unit) CPU/MPU 사물 인터넷 디바이스 H/W 플랫폼 종류 주변장치(Peripheral Device) 기억장치(Memoriy unit) 보조기억장치(Auxiliary memory device…","html":"<ul>\n<li>\n<p>컴퓨터 구성요소의 기능 및 이해</p>\n<ul>\n<li>중앙처리장치(Central Processiong Unit)</li>\n<li>CPU/MPU</li>\n<li>사물 인터넷 디바이스 H/W 플랫폼 종류</li>\n<li>주변장치(Peripheral Device)</li>\n<li>기억장치(Memoriy unit)</li>\n<li>보조기억장치(Auxiliary memory device)</li>\n<li>입출력장치(Input/Output device)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"중앙처리장치\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EC%95%99%EC%B2%98%EB%A6%AC%EC%9E%A5%EC%B9%98\" aria-label=\"중앙처리장치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중앙처리장치</h3>\n<h4 id=\"cpu\" style=\"position:relative;\"><a href=\"#cpu\" aria-label=\"cpu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU</h4>\n<blockquote>\n<p>마더보드(mother board): 데이터의 전달 통로가 디자인 되어있는 메인 보드</p>\n</blockquote>\n<p>실행 프로그램의 명령 해석, 실행, 장치 제어, ALU, CU 각종 레지스터로 구성</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/927e43cd-15ce-44cd-bc95-151458db7f76/image.png\" alt=\"img\"></p>\n<h4 id=\"mpu\" style=\"position:relative;\"><a href=\"#mpu\" aria-label=\"mpu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MPU</h4>\n<p>Micro Processor Unit</p>\n<ul>\n<li>CPU를 LSI(고밀도 집적회로)화 한 일종의 통합장치</li>\n<li>CISC(Complex Instruction Set Computer) : 소프트웨어를 처리해주는 동작 중 반복적인 동작들을 일일이 소프트웨어처리하지 않고 하드웨어처리한 컨셉</li>\n<li>RISC(Reduced Instruction Set Computer) : 위의 개념과 반대</li>\n<li>Bit Slice MPU 등이 존재: 위의 두 종류의 MPU를 사용자가 원하는 형태로 조합해서 합친 MPU</li>\n</ul>\n<h4 id=\"사물인터넷-디바이스-hw-플랫폼-종류\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EB%AC%BC%EC%9D%B8%ED%84%B0%EB%84%B7-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4-hw-%ED%94%8C%EB%9E%AB%ED%8F%BC-%EC%A2%85%EB%A5%98\" aria-label=\"사물인터넷 디바이스 hw 플랫폼 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사물인터넷 디바이스 H/W 플랫폼 종류</h4>\n<ul>\n<li>\n<p>아두이노</p>\n<ul>\n<li>대표적인 오픈소스 H/W 플랫폼</li>\n</ul>\n</li>\n<li>Raspberry Pi: 어떻게 보면 아두이노보다 컴퓨터에 가까운 형태</li>\n<li>Galileo</li>\n<li>Edison</li>\n</ul>\n<h3 id=\"주변장치\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EB%B3%80%EC%9E%A5%EC%B9%98\" aria-label=\"주변장치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주변장치</h3>\n<h4 id=\"기억장치\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98\" aria-label=\"기억장치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기억장치</h4>\n<ul>\n<li>\n<p>RAM(Random Access Memory) : 효율을 위해 칠판같은 형태로 구성함, 끄면 날아감</p>\n<ul>\n<li>DRAM(Dynamic RAM)</li>\n<li>SRAM(Static RAM)</li>\n</ul>\n</li>\n<li>ROM(Read Only Memory) : 부팅될 때 운영체제를 불러옴, 프로그램을 불러올 때 작동하는 기억장치</li>\n</ul>\n<h4 id=\"입출력장치\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5%EC%9E%A5%EC%B9%98\" aria-label=\"입출력장치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력장치</h4>\n<ul>\n<li>키보드, 마우스, 스캐너, 터치스크린, 조이스틱, 광학마스크 판독기(OMR), 바코드 판독기</li>\n</ul>\n<h3 id=\"보조기억장치\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%A1%B0%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98\" aria-label=\"보조기억장치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보조기억장치</h3>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/0c386c38-7bb0-4677-b7af-2977d6b540c1/image.png\" alt=\"img\"></p>\n<ul>\n<li>부피와 속도는 반비례, 속도가 느리면 가격이 저렴하고, 많은 데이터를 저장할 수 있음</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/8bdf668b-ced7-4635-901f-2eb4972a6199/image.png\" alt=\"img\"></p>\n<ul>\n<li>\n<p>종류</p>\n<ul>\n<li>플래시기억장치 - EEPROM(RAM과 ROM의 중간), CF메모리, SSD</li>\n<li>USB</li>\n<li>SD card(Secure Digital Card)</li>\n<li>메모리 스틱</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]03_컴퓨터 시스템의 이해","date":null,"lang":null}}},{"node":{"id":"5ff77a2b-0c0a-5476-839b-38c506f79b0d","excerpt":"컴퓨터 구조란 어떤 과목인가? 컴퓨터 구조로 본 패러다임의 변화 컴퓨터의 태동 사무자동화 기계 네트워크 단말, 통신기기 현대 유비쿼터스 Mobile, Wireless IOT Smart Computer(Machine learning/Deep learning)/AI(Artificial…","html":"<ul>\n<li>\n<p>컴퓨터 구조란 어떤 과목인가?</p>\n<ul>\n<li>컴퓨터 구조로 본 패러다임의 변화</li>\n<li>컴퓨터의 태동</li>\n<li>사무자동화 기계</li>\n<li>네트워크 단말, 통신기기</li>\n<li>\n<p>현대</p>\n<ul>\n<li>유비쿼터스</li>\n<li>Mobile, Wireless</li>\n<li>IOT</li>\n<li>Smart Computer(Machine learning/Deep learning)/AI(Artificial Intelligent)…</li>\n</ul>\n</li>\n</ul>\n<p>패러다임에 따른 컴퓨터 구조가 어떻게 변화할지</p>\n</li>\n</ul>\n<h3 id=\"컴퓨터의-태동\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0%EC%9D%98-%ED%83%9C%EB%8F%99\" aria-label=\"컴퓨터의 태동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터의 태동</h3>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/6320dff8-a99a-44a9-9b5d-d08ff03f14fc/image.png\" alt=\"img\"></p>\n<h3 id=\"사무자동화-기계\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EB%AC%B4%EC%9E%90%EB%8F%99%ED%99%94-%EA%B8%B0%EA%B3%84\" aria-label=\"사무자동화 기계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사무자동화 기계</h3>\n<ul>\n<li>자료 <strong>준비</strong>기기 : 워드프로세서, 복사기, 프린터</li>\n<li>자료 <strong>처리</strong>기기 : 워드프로세서, 개인용 컴퓨터</li>\n<li>자료 <strong>전송</strong>기기 : 팩스, 이메일, 원격 회의 시스템</li>\n<li>자료 <strong>저장</strong>기기 : 마이크로 필름, COM -> CAR, 광디스크 -> 하드디스크</li>\n</ul>\n<h3 id=\"네트워크기기-통신기기\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EA%B8%B0%EA%B8%B0-%ED%86%B5%EC%8B%A0%EA%B8%B0%EA%B8%B0\" aria-label=\"네트워크기기 통신기기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크기기, 통신기기</h3>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/1106b149-03e7-4428-872b-66552a43d3e3/image.png\" alt=\"img\"></p>\n<p>통신망에 해당하는 <strong>코어</strong>를 통해 개개인(통신사)에 해당하는 <strong>엣지</strong>들이 서로 네트워킹하는 구조</p>\n<ul>\n<li>코어의 서버도 컴퓨터, 엣지도 컴퓨터</li>\n</ul>\n<h3 id=\"현대\" style=\"position:relative;\"><a href=\"#%ED%98%84%EB%8C%80\" aria-label=\"현대 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현대</h3>\n<h4 id=\"유비쿼터스-시대의-도래\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%B9%84%EC%BF%BC%ED%84%B0%EC%8A%A4-%EC%8B%9C%EB%8C%80%EC%9D%98-%EB%8F%84%EB%9E%98\" aria-label=\"유비쿼터스 시대의 도래 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유비쿼터스 시대의 도래</h4>\n<blockquote>\n<p>Ubiquitous: 신은 어디에나 존재한다</p>\n</blockquote>\n<ul>\n<li>Ubiquitous 컴퓨팅: 유비쿼터스 + 컴퓨팅</li>\n<li>CPU를 병렬로 연결할 수 있는 병렬 시스템의 발전 등으로 가능해짐</li>\n<li>실세계의 매핑(mapping : 지도화)를 통한 가상 세계 구성 -> 초연결(제 3 공간)에 의한 신개념의 도입</li>\n</ul>\n<h4 id=\"mobile--wireless-전성시대\" style=\"position:relative;\"><a href=\"#mobile--wireless-%EC%A0%84%EC%84%B1%EC%8B%9C%EB%8C%80\" aria-label=\"mobile  wireless 전성시대 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mobile &#x26; Wireless 전성시대</h4>\n<ul>\n<li>\n<p>피처폰과 스마트폰의 차이점</p>\n<ul>\n<li>자이로스코프 센서를 이용해 스마트폰은 자신의 위치를 파악</li>\n</ul>\n</li>\n<li>\n<p>유선 사업자와 스마트폰 사업자의 위상 변화</p>\n<ul>\n<li>핸드폰을 개발하여 유선사업자들에게 팔던 사업자들이 스마트폰을 개발하면서 세계적인 기업으로 성장하여 세계 사업을 선동</li>\n</ul>\n</li>\n<li>\n<p>컴퓨터 구성요소(병렬 프로세싱)의 변화</p>\n<ul>\n<li>파이프라인, 멀티스레딩, 병렬 프로세싱이 컴퓨터 구성요소를 변화시킴</li>\n</ul>\n</li>\n<li>\n<p>세대별 진화의 정도</p>\n<ul>\n<li>3g, 4g, LTE(long term evolution), 5g, 6g</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"iotinternet-of-thing-시대의-자화상\" style=\"position:relative;\"><a href=\"#iotinternet-of-thing-%EC%8B%9C%EB%8C%80%EC%9D%98-%EC%9E%90%ED%99%94%EC%83%81\" aria-label=\"iotinternet of thing 시대의 자화상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IOT(internet of thing) 시대의 자화상</h4>\n<p>사물 인터넷은 사람, 사물, 공간, 데이터 등 모든 것이 인터넷으로 서로 연결되어, 정보가 생성 수집 공유 활용되는 <strong>초연결 인터넷</strong></p>\n<ul>\n<li>모바일 기반의 IOT, 클라우드, 빅데이터가 연계된 새로운 가치와 서비스 창출(모바일 기반으로)</li>\n</ul>\n<h4 id=\"smart-computermachine-learningdeep-learningai\" style=\"position:relative;\"><a href=\"#smart-computermachine-learningdeep-learningai\" aria-label=\"smart computermachine learningdeep learningai permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Smart Computer(Machine learning/Deep learning/AI)</h4>\n<p>인공지능은 컴퓨터에 의한 활용으로 인간의 추론적 기능과 지능적인 행동을 재연하려는 시도</p>","frontmatter":{"title":"[컴퓨터구조]02_컴퓨터 시스템의 이해","date":null,"lang":null}}},{"node":{"id":"4871760b-d4e4-583f-bc6e-a485236678db","excerpt":"컴퓨터 구조와 통신 혁신적 네트워크의 발전에 따른 컴퓨터 구조의 변화 비지니스 환경에서의 통신과 네트워킹의 역할 양자 컴퓨터 웹의 진화 - 글로벌 인터넷 비지니스 환경에서의 통신과 네트워킹의 역할 네트워킹과 통신의 추세 Wireless…","html":"<ul>\n<li>\n<p>컴퓨터 구조와 통신</p>\n<ul>\n<li>혁신적 네트워크의 발전에 따른 컴퓨터 구조의 변화</li>\n<li>비지니스 환경에서의 통신과 네트워킹의 역할</li>\n<li>양자 컴퓨터</li>\n<li>웹의 진화 - 글로벌 인터넷</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"비지니스-환경에서의-통신과-네트워킹의-역할\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A7%80%EB%8B%88%EC%8A%A4-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EC%9D%98-%ED%86%B5%EC%8B%A0%EA%B3%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%82%B9%EC%9D%98-%EC%97%AD%ED%95%A0\" aria-label=\"비지니스 환경에서의 통신과 네트워킹의 역할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비지니스 환경에서의 통신과 네트워킹의 역할</h3>\n<ul>\n<li>\n<p>네트워킹과 통신의 추세</p>\n<ul>\n<li>Wireless</li>\n<li>통방융합</li>\n<li>과거에 라디오는 특정 주파수로 송출하는 방식으로 운영이 돼어 라디오에서만 들을 수 있었다면 지금은 디지털 방식으로 송출이 되기 때문에 라디오뿐만 아니라 컴퓨터에서도 실시간으로 방송을 들을 수 있다.</li>\n<li>NOS(Network Operating System)의 역할 확대</li>\n</ul>\n<p>이전에 PC는 OS가 PC의 상태를 파악하는 역할이었다면 지금은 네트워킹 역할이 추가된 형태</p>\n<ul>\n<li>네트워크 장비는 4차 산업혁명(초연결시대)을 실현하기 위한 핵심 인프라</li>\n<li>미중 무역전쟁의 핵심 쟁점</li>\n<li>유무선, 통신-방송 및 통신-컴퓨터의 융함 등 컨버전스 가능</li>\n<li>고성능 컴퓨팅 기술을 활용한 대용량의 통신회선 교환가능</li>\n<li>소프트웨어 기술과 고밀도 집적 기술의 발달 -> 신형의 서비스와 장비 등장</li>\n<li>사용자 중심의 신기술이 활발하게 개발됨</li>\n</ul>\n</li>\n<li>\n<p>4차 산업혁명과 5G 네트워크 간의 관계</p>\n<ul>\n<li>4차 산업혁명은 5G 네트워크가 구축되어있어야 실현 가능</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/fe06f3bb-9dfc-40a8-9840-6364573c1906/image.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h3 id=\"양자-컴퓨터\" style=\"position:relative;\"><a href=\"#%EC%96%91%EC%9E%90-%EC%BB%B4%ED%93%A8%ED%84%B0\" aria-label=\"양자 컴퓨터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>양자 컴퓨터</h3>\n<ul>\n<li>중첩(superposition), 얽힘(entanglement) 등 양자의 고유한 물리학적 특성을 이용하여, 다수의 정보를 동시 처리할 수 있는 새로운 개념의 컴퓨터</li>\n<li>현대 반도체 칩의 미세회로에서 발생하는 누설 전류로 인한 고전컴퓨터 성능 한계 돌파를 위한 대안</li>\n<li>양자적 정보 단위인 양자 비트 또는 큐비트를 정보처리의 기본단위로 하는 양자 병렬처리를 통해 정보처리 및 연산 속도가 지수함수적으로 증가하여 빠른 속도로 문제 해결이 가능</li>\n<li>\n<p>양자의 병렬성(quantum parallelism) : 단 한번에 모든 숫자의 연산을 수행할 수 있는 성질</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/25018630-4f86-48db-89a1-e9e368ef5e3f/image.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h3 id=\"글로벌-인터넷\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%9D%B8%ED%84%B0%EB%84%B7\" aria-label=\"글로벌 인터넷 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글로벌 인터넷</h3>\n<ul>\n<li>Web 1.0 : www 디렉토리 검색</li>\n<li>Web 2.0 : 개방, 참여정신을 바탕으로 하는 쌍방향 웹기술</li>\n<li>Web 3.0 : 시맨틱 웹 기술을 활용하여 웹 페이지에 담긴 내용을 이해하고 이로부터 개인 맞춤형 정보를 제공하는 지능형 웹 기술</li>\n<li>Web 4.0 : 현실과 가상의 세상이 연결되는 초연결 지능화 웹 기술(IOT, 유비쿼터스…)</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]04_컴퓨터 시스템의 이해","date":null,"lang":null}}},{"node":{"id":"fa53e09a-0513-57d3-a48a-27793995b7e8","excerpt":"컴퓨터에서의 데이터 표현 진법과 진법 변환 정수 표현 실수 표현 디지털 코드 에러 검출 코드 진법과 진법 변환 디지털 정보의 단위 1nibble = 4 bits 1byte = 8 bits 1byte = 1문자(character) 영여 - 1byte, 한글 - 2byte 1word…","html":"<ul>\n<li>\n<p>컴퓨터에서의 데이터 표현</p>\n<ul>\n<li>진법과 진법 변환</li>\n<li>정수 표현</li>\n<li>실수 표현</li>\n<li>디지털 코드</li>\n<li>에러 검출 코드</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"진법과-진법-변환\" style=\"position:relative;\"><a href=\"#%EC%A7%84%EB%B2%95%EA%B3%BC-%EC%A7%84%EB%B2%95-%EB%B3%80%ED%99%98\" aria-label=\"진법과 진법 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>진법과 진법 변환</h3>\n<h4 id=\"디지털-정보의-단위\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%A7%80%ED%84%B8-%EC%A0%95%EB%B3%B4%EC%9D%98-%EB%8B%A8%EC%9C%84\" aria-label=\"디지털 정보의 단위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디지털 정보의 단위</h4>\n<ul>\n<li>1nibble = 4 bits</li>\n<li>1byte = 8 bits</li>\n<li>1byte = 1문자(character)</li>\n<li>영여 - 1byte, 한글 - 2byte</li>\n<li>1word : 특정 CPU에서 취급하는 명령어나 데이터의 길이에 해당하는 비트 수</li>\n<li>\n<p>워드 길이는 8-16-32-64비트 등 8의 배수가 가능</p>\n<p><img src=\"http://www.plcdev.com/files/plcdev/images/01-05%20word%20bytes%20bits.gif\" alt=\"01-05 word bytes bits\"></p>\n</li>\n</ul>\n<h4 id=\"진법number-system\" style=\"position:relative;\"><a href=\"#%EC%A7%84%EB%B2%95number-system\" aria-label=\"진법number system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>진법(number system)</h4>\n<ul>\n<li>2진법 : 0, 1</li>\n<li>8진법 : 0 ~ 7</li>\n<li>10진법 : 0 ~ 9</li>\n<li>16진법 : 0 ~ 9, A ~ F</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/6ae26488-0be1-4bae-806e-eda63733b2ac/image.png\" alt=\"img\"></p>\n<h4 id=\"진법의-변환\" style=\"position:relative;\"><a href=\"#%EC%A7%84%EB%B2%95%EC%9D%98-%EB%B3%80%ED%99%98\" aria-label=\"진법의 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>진법의 변환</h4>\n<ul>\n<li>\n<p>10진수 -> 2진수</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/5f3a4406-7ec6-4344-af8c-a109b3d0f5d1/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p>2진수 -> 10진수</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/07c4e22a-5b18-4cf9-b078-dc4a0fb757f7/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p>8/16진수 &#x3C;-> 2진수</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/a8316876-f19e-433b-a92d-a9626173e59e/image.png\" alt=\"img\"></p>\n<p>자리수가 모자라면 모자란 만큼 0을 붙인다고 생각하고 계산</p>\n</li>\n<li>\n<p>분수(실수)의 변환</p>\n<p>정수자리는 위와 똑같이 처리하고 실수 자리는 2씩 곱해주면서 변환</p>\n<ul>\n<li>항상 딱 떨어지는 결과가 나오지는 않음</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/4280505b-e90c-4d38-b4c0-f9e5527292f4/image.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h4 id=\"보수complement\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%88%98complement\" aria-label=\"보수complement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보수(Complement)</h4>\n<ul>\n<li><strong>최대값</strong>(해당 bit에서 가장 큰 표현형)을 형성하는데 서로 보완 관계에 있는 두 수 사이의 관계를 <strong>one’s COMPLEMENT</strong>라고 함</li>\n<li>\n<p><strong>MODULUS</strong>(최대 표현 자리 수)를 형성하는데 서로 보완관계에 있는 두 수 사이의 관계를 <strong>two’s COMPLEMENT</strong>라 함</p>\n<p>ex) 10진수\n1의 보수 : A+B=9, A+B=99\n2의 보수 : A+B=10, A+B=100</p>\n<p>ex) 2진수\n1의 보수 : A+B=1, A+B=11\n2의 보수 : A+B=10, A+B=100</p>\n<blockquote>\n<p>2진수의 1의 보수는 자신의 수를 반대로 바꾸면됨(0 ↔ 1)</p>\n<p>2진수의 2의 보수는 1의 보수에 +1 또는 주어진 수의 우단으로부터 최초의 유효 BIT까지는 그대로 두고 나머지를 모두 반대로(0 ↔ 1) 바꾸면 된다</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"정수형고정-소숫점-fixed-point-number의-표현\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%88%98%ED%98%95%EA%B3%A0%EC%A0%95-%EC%86%8C%EC%88%AB%EC%A0%90-fixed-point-number%EC%9D%98-%ED%91%9C%ED%98%84\" aria-label=\"정수형고정 소숫점 fixed point number의 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정수형(고정 소숫점, FIXED POINT NUMBER)의 표현</h4>\n<ul>\n<li>\n<p>부호화 절대치(signeagnitube)</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/53fbc777-d083-42af-a07d-db813ab1c3c3/image.png\" alt=\"img\"></p>\n<p>sign bit - 0(+) 1(-)</p>\n<ul>\n<li>정수의 부호와 절대치를 따로 보관</li>\n<li>음수 표현은 절대치가 같은 양수와 부호만 다름</li>\n<li>표현 범위(n bit 사용) : -(2^(n-1)) ~ +(2^(n-1))</li>\n<li>+0과 -0이 공존</li>\n</ul>\n</li>\n<li>\n<p>보수</p>\n<ul>\n<li>-0과 +0이 공존하는 문제를 해결하기 위해 사용</li>\n<li>R의 보수 R-1의 보수가 존재한다</li>\n<li>양수의 표현은 절대값 표현 방식과 동일</li>\n<li>표현 범위(n bit 사용)</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/b1901684-ec3e-4b10-946d-644a20d2559c/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p>10진형 정수 표현</p>\n<ul>\n<li><strong>Unpacked decimal</strong></li>\n<li>zoned decimal 이라하며 EBCDIC의 숫자 표현과 동일</li>\n<li>\n<p>1byte -> 10 진수 한자만 표현</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/e165ef5c-22e3-44a5-8bbe-965848a24bf6/image.png\" alt=\"img\"></p>\n<p>ex : 2 -> 11110010</p>\n<p>마지막 비트는 sign bit로 음수와 양수를 표시</p>\n</li>\n<li>연산에서는 사용될 수 없으나 입출력 가능</li>\n<li><strong>Packed deciaml</strong></li>\n<li>1byte에 2자의 10진수를 표현(BCD code 사용)</li>\n<li>\n<p>마지막 4개의 비트로는 부호를 표현</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/66687421-d396-4ad0-9e52-578e24af95d9/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p>연산에 이용, 입출력 불가능</p>\n<p>Unpacked decimal에서 F를 모두 빼고 s를 맨 앞으로 이동</p>\n<p>완벽히 떨어지지 않는 수가 존재할 수 있음</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"실수-표현부동-소수점-floating-point\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B6%80%EB%8F%99-%EC%86%8C%EC%88%98%EC%A0%90-floating-point\" aria-label=\"실수 표현부동 소수점 floating point permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수 표현(부동 소수점, Floating-point)</h4>\n<ul>\n<li>과학적 표기의 지수(exponent)를 사용하여 소수점의 위치를 이동시킬 수 있는 표현 방법</li>\n<li>표현의 범위가 확대</li>\n<li>\n<p>비트 수에 따른 분류가 가능</p>\n<ul>\n<li>단일 정밀도 부동 소수점 형식</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/2efcaab9-dccc-4ed9-a8e1-5c6fbf2b01a6/image.png\" alt=\"img\"></p>\n<p>S(1) + E(7) = 8bit, M = 27bit</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/7e9a93c5-3405-4191-9ff4-946ba9c4abed/image.png\" alt=\"img\"></p>\n<ul>\n<li>0: 부호비트 (+)</li>\n<li>0000101 : 지수(E) (5)</li>\n<li>1001 0000 0000 0000 0000 : 기수(M) (0.9)</li>\n<li>(+0.1001 _ 2^5) -> 임의의 표현법 10진수로 표현하면 (+0,9 _ 10^5)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"디지털-코드\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%A7%80%ED%84%B8-%EC%BD%94%EB%93%9C\" aria-label=\"디지털 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디지털 코드</h4>\n<ul>\n<li>\n<p>BCD 코드(Binary Coded Decimal Code : 2진화 10진 코드, 8421 코드)</p>\n<ul>\n<li>일일히 나눠주는 것이 번거롭기 때문에 체계가 만들어짐</li>\n<li>연산이 불가능하고 입출력용</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/ac5d7392-027e-4330-ac02-c8e0c9409e5b/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p>3초과 코드(excess-3 코드)</p>\n<ul>\n<li>통신에서 사용되던 코드체계</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"에러-검출-코드\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EA%B2%80%EC%B6%9C-%EC%BD%94%EB%93%9C\" aria-label=\"에러 검출 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 검출 코드</h3>\n<h4 id=\"패리티-비트\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%EB%A6%AC%ED%8B%B0-%EB%B9%84%ED%8A%B8\" aria-label=\"패리티 비트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패리티 비트</h4>\n<p>데이터의 진위여부를 검사하는 방법</p>\n<p>짝수 패리티는 패킷에서 1의 개수가 짝수이면 0 홀수이면 1을 넣어 짝수개를 유지시켜주는 체계이고 홀수 패리티는 패킷에서 1의 개수가 짝수이면 1 홀수이면 0을 넣어 홀수를 유지시켜주는 체계이다</p>\n<p>동시에 두 군데에 발생하면 체크되지 못함</p>\n<p>패리티 비트가 발전하여 해시함수 -> 해시 코드 -> 해시 알고리즘에 의해 보안 개념이 잡힘</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/0667a6a3-b330-4794-aa11-32905992b330/image.png\" alt=\"img\"></p>\n<h4 id=\"해밍-비트\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EB%B0%8D-%EB%B9%84%ED%8A%B8\" aria-label=\"해밍 비트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해밍 비트</h4>\n<ul>\n<li>8비트 데이터의 에러 정정 코드</li>\n<li>\n<p>실습을 통해 다시 설명될 예정햣</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/7fc2b497-223b-4485-8197-acbfd27860b7/image.png\" alt=\"img\"></p>\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]05_데이터의 종류","date":null,"lang":null}}},{"node":{"id":"5e8f3aa5-b772-5461-8972-7c40f124d3d7","excerpt":"연산의 결과 도출 및 자료 기억방법 조합논리 회로 기억회로의 구성 및 작동 원리 순차회로 조합논리 회로 조합회로: 입력과 출력을 가진 논리 게이트의 집합으로 출력은 현재 입력(0, 1)값과 조합의 함수 순차 논리회로: 게이트 뿐만 아니라 기억능력이 있는 플립플롭(Flip-Flop…","html":"<ul>\n<li>\n<p>연산의 결과 도출 및 자료 기억방법</p>\n<ul>\n<li>조합논리 회로</li>\n<li>기억회로의 구성 및 작동 원리</li>\n<li>순차회로</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"조합논리-회로\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%ED%95%A9%EB%85%BC%EB%A6%AC-%ED%9A%8C%EB%A1%9C\" aria-label=\"조합논리 회로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조합논리 회로</h3>\n<ul>\n<li>조합회로: 입력과 출력을 가진 논리 게이트의 집합으로 출력은 현재 입력(0, 1)값과 조합의 함수</li>\n<li>순차 논리회로: 게이트 뿐만 아니라 기억능력이 있는 플립플롭(Flip-Flop)으로 구성</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/7618801d-ed6e-444c-92e4-4f3b6106e8b1/image.png\" alt=\"img\"></p>\n<h4 id=\"조합-회로의-설계-절차\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%ED%95%A9-%ED%9A%8C%EB%A1%9C%EC%9D%98-%EC%84%A4%EA%B3%84-%EC%A0%88%EC%B0%A8\" aria-label=\"조합 회로의 설계 절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조합 회로의 설계 절차</h4>\n<ol>\n<li>문제가 제시된다.</li>\n<li>입력과 출력 변수에 문자 기호를 붙인다.(2변수냐, 3변수냐, 4변수냐)</li>\n<li>입력과 출력 사이의 관계를 정의하는 진리표를 유도한다.</li>\n<li>각 출력에 대한 간소화된 부울 함수를 얻는다.</li>\n<li>논리도를 작성한다.</li>\n</ol>\n<h4 id=\"대표적인-조합-회로\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%A1%B0%ED%95%A9-%ED%9A%8C%EB%A1%9C\" aria-label=\"대표적인 조합 회로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대표적인 조합 회로</h4>\n<ul>\n<li>\n<p>가산기(Adder) : 두개(그 이상)의 입력을 받아 결과물을 출력하는 조합논리 회로 / bit와 bit 사이의 연산이 가능함</p>\n<ul>\n<li>반 가산기(Half Adder) : 기본 게이트 설명시 다룸</li>\n<li>전 가산기(Full Adder)</li>\n</ul>\n<p>반 가산기 2개와 캐리비트를 처리해주는 부분의 조합</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/6fd84b74-b786-4a30-959c-764953da0def/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p>멀티플렉서(Multiplexer)</p>\n<p>다수의 입력 선 중 하나만을 선별적(시그널 조작)으로 출력 가능하게 해주는 조합논리 회로</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/0c6c2f9d-f870-4849-8baa-02b6a82a38d8/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p>디멀티플렉서(Demultiplexer)</p>\n<p>하나의 입력 선(값)을 다수개의 출력선으로 분해하는 기능의 조합회로(멀티플렉서 역기능)</p>\n<p>ex) 10진수 3 -> 2진수 011</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/083aea57-2916-460e-ae61-f9280915ed8b/image.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h3 id=\"기억회로의-구성-및-작동-원리\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%96%B5%ED%9A%8C%EB%A1%9C%EC%9D%98-%EA%B5%AC%EC%84%B1-%EB%B0%8F-%EC%9E%91%EB%8F%99-%EC%9B%90%EB%A6%AC\" aria-label=\"기억회로의 구성 및 작동 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기억회로의 구성 및 작동 원리</h3>\n<p>대부분의 디지털 시스템들이 조합회로를 가지고 있는 것은 사실이지만, 대부분의 경우 순차회로로 구현되는 저장요소를 필요로 한다. 우리는 이러한 종류의 회로를 플립플롭(Flip Flop)이라고 한다.</p>\n<h4 id=\"플립플롭-종류\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%A6%BD%ED%94%8C%EB%A1%AD-%EC%A2%85%EB%A5%98\" aria-label=\"플립플롭 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>플립플롭 종류</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/602c810c-04a9-4856-ac3b-5a5dcfcd67f2/image.png\" alt=\"img\"></p>\n<h3 id=\"순차회로\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%B0%A8%ED%9A%8C%EB%A1%9C\" aria-label=\"순차회로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순차회로</h3>\n<p>순차회로는 플립플롭과 게이트를 서로 연결한 것이다. 게이트들로만 이루어진 회로는 조합회로이지만, 플립플롭이 포함될 때 순차 회로가 된다. 순차회로의 외부 출력은 외부 입력과 플립플롭의 현상태의 함수로 표시된다.</p>\n<h4 id=\"네-가지-플립플롭에-대한-표\" style=\"position:relative;\"><a href=\"#%EB%84%A4-%EA%B0%80%EC%A7%80-%ED%94%8C%EB%A6%BD%ED%94%8C%EB%A1%AD%EC%97%90-%EB%8C%80%ED%95%9C-%ED%91%9C\" aria-label=\"네 가지 플립플롭에 대한 표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네 가지 플립플롭에 대한 표</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/38e45ea9-4aad-4222-8c43-4dd731a44d01/image.png\" alt=\"img\"></p>\n<h4 id=\"순차회로의-상태표와-상태도\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%B0%A8%ED%9A%8C%EB%A1%9C%EC%9D%98-%EC%83%81%ED%83%9C%ED%91%9C%EC%99%80-%EC%83%81%ED%83%9C%EB%8F%84\" aria-label=\"순차회로의 상태표와 상태도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순차회로의 상태표와 상태도</h4>\n<p>순차회로의 특성은 입력, 출력 및 플립프롭의 상태로부터 특정지어진다. 출력과 다음 상태는 모두 입력과 현 상태의 함수이다. 이 사이의 관계를 상태표라고 한다. 또한 이러한 상태표를 그림으로 도시한 것이 상태도이다.</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/75f2aa9e-b36e-4962-8d08-3895ecea8a30/image.png\" alt=\"img\"></p>","frontmatter":{"title":"[컴퓨터구조]08_조합&기억논리회로","date":null,"lang":null}}},{"node":{"id":"3cf49b2f-aad1-5196-a5d4-afbb572122fb","excerpt":"논리회로와 데이터 표현 데이터 표현 실습 - 데이터 종류 논리 게이트(Logical gate) 실무 적용 사례 데이터 표현 실습 - 데이터 종류 인류가 오랫동안 사용해온 10진수 체계는 전기를 사용하는 컴퓨터에게는 10진수가 맞지 않기 때문에 2/8/1…","html":"<ul>\n<li>\n<p>논리회로와 데이터 표현</p>\n<ul>\n<li>데이터 표현 실습 - 데이터 종류</li>\n<li><strong>논리 게이트(Logical gate)</strong></li>\n<li>실무 적용 사례</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"데이터-표현-실습---데이터-종류\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%91%9C%ED%98%84-%EC%8B%A4%EC%8A%B5---%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A2%85%EB%A5%98\" aria-label=\"데이터 표현 실습   데이터 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 표현 실습 - 데이터 종류</h3>\n<p>인류가 오랫동안 사용해온 10진수 체계는 전기를 사용하는 컴퓨터에게는 10진수가 맞지 않기 때문에 2/8/16진수로 변환하여 사용한다.</p>\n<ul>\n<li>진 이진수: 연산이 가능한 형태로 변환</li>\n<li>코드화 변환 : 연산이 필요하지 않은 경우의 변환</li>\n<li>정-실수&#x26;연산용 변환</li>\n</ul>\n<h4 id=\"보수complement\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%88%98complement\" aria-label=\"보수complement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>보수(Complement)</strong>⭐</h4>\n<ul>\n<li>양/음수로 활용</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/f7f4d592-a450-4a5d-bfea-d77641f789d1/image.png\" alt=\"img\"></p>\n<ul>\n<li>\n<p>연산에 활용</p>\n<ul>\n<li>10진 연산의 경우</li>\n</ul>\n<p>12의 보수를 더해줌 : 1->8 2->7</p>\n<p>넘어가는 수(캐리비트)를 두자리에 더해줌</p>\n<ul>\n<li>2진수의 경우</li>\n</ul>\n<p>뒤의 이진수의 보수를 더해주고 여기서 발생한 캐리비트를 나머지에 더해줌</p>\n<blockquote>\n<ul>\n<li>캐리비트가 발생하지 않는 경우에는 다른 방법으로 계산</li>\n<li>2의 보수도 다른 방법</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/115999259-12d74d00-a626-11eb-80c5-8852a25d2468.png\" alt=\"image-20210426002543465\"></p>\n<h3 id=\"논리-게이트logical-gate\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EA%B2%8C%EC%9D%B4%ED%8A%B8logical-gate\" aria-label=\"논리 게이트logical gate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 게이트(Logical gate)</h3>\n<p>논리 연산을 수행하는 전자소자로서 주어진 입력 변수 값에 대하여 정해진 논리 함수를 수행하여 그 함수의 연산 경과와 동일한 결과값을 출력하는 하드웨어</p>\n<p>컴퓨터를 구성하는 가장 기본적인 요소</p>\n<h4 id=\"스위칭-이론\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%9C%84%EC%B9%AD-%EC%9D%B4%EB%A1%A0\" aria-label=\"스위칭 이론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스위칭 이론</h4>\n<p>1983년 미국의 샤논에 의해 스위치로 2진 정보를 표현하거나 논리 연산의 실행을 가능하도록 구성된 이론</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/ad41d79d-89e7-40d9-bfcc-bea9e2015d9a/image.png\" alt=\"img\"></p>\n<h4 id=\"논리-연산의-기본-표현\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9D%98-%EA%B8%B0%EB%B3%B8-%ED%91%9C%ED%98%84\" aria-label=\"논리 연산의 기본 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 연산의 기본 표현</h4>\n<ul>\n<li>\n<p><strong>논리곱(AND)</strong></p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/460f218d-6b02-4d75-b218-a2ca8cf8f661/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p><strong>논리합(OR)</strong></p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/737529ed-4fb4-4b3d-b993-45f93f1c1f15/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p><strong>논리부정(NOT)</strong></p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/0ea99887-9ebb-4088-a718-b68a22d202bf/image.png\" alt=\"img\"></p>\n</li>\n<li>\n<p><strong>배타적 논리합(exclusive OR)</strong></p>\n<ul>\n<li>값이 서로 다를 때만 True</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/5da026cf-759c-4157-93f8-6a5f3cb5b1b1/image.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h3 id=\"실무-적용-사례\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EB%AC%B4-%EC%A0%81%EC%9A%A9-%EC%82%AC%EB%A1%80\" aria-label=\"실무 적용 사례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실무 적용 사례</h3>\n<ul>\n<li>\n<p>1bit 덧셈의 구현 ↔ 논리 회로를 이용한 반가산기(Half adder)의 구현</p>\n<p>a + b = S 라는 연산을 구현하고자 하는 경우</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/c496ea0b-de09-460f-af16-c1f302dea35b/image.png\" alt=\"img\"></p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/593def5e-5998-4081-9a31-a824a585d655/image.png\" alt=\"img\"></p>\n</li>\n</ul>\n<p>​</p>","frontmatter":{"title":"[컴퓨터구조]06_논리회로와 데이터 표현","date":null,"lang":null}}},{"node":{"id":"3caaed9c-50bd-57f1-9b50-23d65c264db3","excerpt":"CPU 내부 구조와 레지스터들의 유기적 연결 CPU 구성요소 각종 레지스터들의 명칭과 기능 플립플롭이 모인게 레지스터 CPU 구성요소 중앙처리장치 컴퓨터에서 데이터처리 동작을 수행하는 부분 CPU(Central Processiong Unit) 레지스터 세트(Register set…","html":"<ul>\n<li>\n<p>CPU 내부 구조와 레지스터들의 유기적 연결</p>\n<ul>\n<li>CPU 구성요소</li>\n<li>각종 레지스터들의 명칭과 기능</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>플립플롭이 모인게 레지스터</p>\n</blockquote>\n<h3 id=\"cpu-구성요소\" style=\"position:relative;\"><a href=\"#cpu-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" aria-label=\"cpu 구성요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU 구성요소</h3>\n<p><strong>중앙처리장치</strong></p>\n<ul>\n<li>컴퓨터에서 데이터처리 동작을 수행하는 부분</li>\n<li>CPU(Central Processiong Unit)</li>\n<li>\n<p>레지스터 세트(Register set) + 산술논리장치(ALU : Arithmetics Logic Unit) + 제어장치 (Control Unit)</p>\n<ul>\n<li>Control Unit : RS 간 정보전송 감시, ALU에게 수행할 동작을 지시</li>\n<li>Register set : 명령어를 실행하는데 필요한 데이터를 보관</li>\n<li>Arithmetic Login Unit(ALU) : 명령어를 실행하기 위한 마이크로 연산 수행</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/14ac14de-6d09-4d88-8c22-a15c2683997d/image.png\" alt=\"img\"></p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/446e1d69-b4a9-40d6-b18f-3292a5441b29/image.png\" alt=\"img\"></p>\n<ul>\n<li>MAR : menory address register 메모리의 상태를 체크(주차장에 주차된 차량 위치 확인하는 것처럼)</li>\n<li>MBR : memory buffer register 메모리에 들어가기 전에 임시 저장공간, MAR의 명령(어디로 들어가야하는지)을 받아야 들어갈 수 있음</li>\n<li>\n<p>PC : program counter 프로그램 계수기</p>\n<p>다음에 수행될 명령어가 들어있는 주기억장치의 주소를 기억하고 있는 레지스터 IC(Instruction counter : 명령어 계수기) 혹은 LC(location counter : 위치 계수기)</p>\n</li>\n<li>IR (Instruction Register) : PC가 지정하는 주소에 기억되어 있는 명령어를 해독하기 위해 임시 기억하는 레지스터</li>\n<li>ID : Instruction Decoder : 명령어 해독기 / IR에 들어있는 명령 코드를 해석하는데 사용 / 각종 명령 코드를 제어 신호화하여 기계 사이클로 변환 전송한다.</li>\n<li>CU : Control Unit : 제어 장치 / ID로부터 보내진 신호에 따라 명령어를 실행 / clock에 의해 발생</li>\n<li>GR : General purpose Register 범용 레지스터 / 작업 레지스터에서 DATA가 용이하게 처리되도록 임시로 자료를 저장하는 경우 사용</li>\n<li>WR : Working Register 작업 레지스터 / 산술 논리 연산을 실행할수 있고 자료를 저장하여 그 결과를 저장(GPR과의 차이점은 ALU연결 유무)</li>\n<li>\n<p>SR : Status Register 상태 레지스터 / CPU의 상태를 나타내는 특수 목적의 레지스터 /연산 결과의 상태와 다음의 내용들을 처리</p>\n<p>영 Z(zero) / 부호 S(sign) / 오버플로우 V(overflow) / 캐리 C(carry) / 인터럽트 I(interrupt)</p>\n</li>\n</ul>\n<h3 id=\"각종-레지스터들의-명칭과-기능\" style=\"position:relative;\"><a href=\"#%EA%B0%81%EC%A2%85-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0%EB%93%A4%EC%9D%98-%EB%AA%85%EC%B9%AD%EA%B3%BC-%EA%B8%B0%EB%8A%A5\" aria-label=\"각종 레지스터들의 명칭과 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>각종 레지스터들의 명칭과 기능</h3>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/d856bccf-7be1-45ee-a82e-98fe05992fcf/image.png\" alt=\"img\"></p>\n<ul>\n<li>FETCH 부분에서는 실제 연산이 일어나기 전 어떤 연산인지 파악</li>\n<li>EXECUTE 부분에서는 실제 연산이 일어남</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]09_CPU 내부 구조와 레지스터","date":null,"lang":null}}},{"node":{"id":"8f419d51-3c84-5baa-95f3-47efb28966d9","excerpt":"CPU 내부 구조와 명령어 집합 명령어(instruction) 구성과 실행 CPU(central procession unit) 디자인 명령어(instruction) 구성과 실행 명령어 코드 레지스터 전송문으로 나타내어지는 기본 컴퓨터의 각 연산이 어떻게 동작하는지 컴퓨터의 구조(CPU…","html":"<ul>\n<li>\n<p>CPU 내부 구조와 명령어 집합</p>\n<ul>\n<li>명령어(instruction) 구성과 실행</li>\n<li>CPU(central procession unit) 디자인</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"명령어instruction-구성과-실행\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4instruction-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EC%8B%A4%ED%96%89\" aria-label=\"명령어instruction 구성과 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령어(instruction) 구성과 실행</h3>\n<h4 id=\"명령어-코드\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%BD%94%EB%93%9C\" aria-label=\"명령어 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령어 코드</h4>\n<ul>\n<li>레지스터 전송문으로 나타내어지는 기본 컴퓨터의 각 연산이 어떻게 동작하는지</li>\n<li>컴퓨터의 구조(CPU 구조)는 내부 레지스터, 타이밍과 제어구조 명령어 집합에 의해 정의된다.</li>\n</ul>\n<h4 id=\"레지스터-전송-언어\" style=\"position:relative;\"><a href=\"#%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%A0%84%EC%86%A1-%EC%96%B8%EC%96%B4\" aria-label=\"레지스터 전송 언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레지스터 전송 언어</h4>\n<blockquote>\n<p>플립플럽(정보를 기억하는 단위)</p>\n<p>레지스터 - 플립플럽은 비트 하나만 저장되고 플립플럽을 여러 개 묶은게 레지스터</p>\n</blockquote>\n<p>레지스터(Register)에 저장된 데이터의 조작을 위해 실행되는 동작을 <strong>마이크로연산(micro-operation)</strong></p>\n<ul>\n<li>\n<p>클럭 펄스 내에서 실행되는 기본적인 동작</p>\n<ul>\n<li>시프트(shift) 카운트(count) 클리어(clear) 로드(road)…</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"디지털-컴퓨터의-구조를-정의하기-위해-논의-되어야-할-내용\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%A7%80%ED%84%B8-%EC%BB%B4%ED%93%A8%ED%84%B0%EC%9D%98-%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EB%85%BC%EC%9D%98-%EB%90%98%EC%96%B4%EC%95%BC-%ED%95%A0-%EB%82%B4%EC%9A%A9\" aria-label=\"디지털 컴퓨터의 구조를 정의하기 위해 논의 되어야 할 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디지털 컴퓨터의 구조를 정의하기 위해 논의 되어야 할 내용</h4>\n<ul>\n<li>레지스터의 종류와 그 기능</li>\n<li>레지스터에 저장된 이진 정보를 가지고 수행되는 일련의 마이크로 연산들</li>\n<li>일련의 마이크로 동작을 온/오프 시킬 수 있는 제어기능</li>\n</ul>\n<h4 id=\"레지스터-전송\" style=\"position:relative;\"><a href=\"#%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%A0%84%EC%86%A1\" aria-label=\"레지스터 전송 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레지스터 전송</h4>\n<p><img src=\"https://blog.kakaocdn.net/dn/bwzbOp/btqCU7PLfdT/FlOEP0ZZ9n2vQGdU6phCM0/img.png\" alt=\"img\"></p>\n<ul>\n<li>\n<p><strong>R2← R1</strong></p>\n<p>치환연산자(replacement)를 이용한 레지스터 간 정보 전송</p>\n</li>\n<li>\n<p><strong>P:R2← R1</strong></p>\n<p>if(P==1)then(R2← R1)</p>\n<p>소스(source) 레지스터로부터 목적(target)레지스터로의 연결과 아울러 목적 레지스터에 조건부 처리가 가능 할 수 있도록 병렬 로드 기능이 있어야한다.</p>\n</li>\n</ul>\n<blockquote>\n<p>레지스터 전송을 나타내는 각 문장들은 그 전송을 수행하는 하드웨어가 구성되어 있음을 의미함</p>\n</blockquote>\n<h4 id=\"레지스터-전송의-기본-기호\" style=\"position:relative;\"><a href=\"#%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%A0%84%EC%86%A1%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B8%B0%ED%98%B8\" aria-label=\"레지스터 전송의 기본 기호 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레지스터 전송의 기본 기호</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/e731f0eb-e49b-4bf2-b171-5ec880496558/image.png\" alt=\"img\"></p>\n<ul>\n<li>\n<p>괄호</p>\n<p>R2의 0번~7번 비트를 표현, R2의 로우바우드</p>\n</li>\n<li>\n<p>콤마</p>\n<p>두 연산이 서로 관련이 없다는 것을 의미</p>\n</li>\n</ul>\n<h4 id=\"cpu-내의-다양한-디바이스들간-상호-연결\" style=\"position:relative;\"><a href=\"#cpu-%EB%82%B4%EC%9D%98-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%94%94%EB%B0%94%EC%9D%B4%EC%8A%A4%EB%93%A4%EA%B0%84-%EC%83%81%ED%98%B8-%EC%97%B0%EA%B2%B0\" aria-label=\"cpu 내의 다양한 디바이스들간 상호 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU 내의 다양한 디바이스들간 상호 연결</h4>\n<blockquote>\n<p>하드웨어는 소프트웨어에 의해 동작한다. 이 때 소프트웨어는 시간이 지남에 따라 계속 업데이트가 되는데 소프트웨어가 업데이트될 때 마다 하드웨어도 바뀌어야하면 굉장히 비효율적이다. 때문에 소프트웨어와 하드웨어는 독립적이어야한다.</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>직접 연결</strong> : 연결 복잡도가 장치 수의 제곱에 비례</p>\n<p>가장 간편한 방법이지만, 확장성이 떨어진다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/117159572-5b97be80-adfb-11eb-8ee1-02263f5e5162.png\" alt=\"image\"></p>\n</li>\n<li>\n<p><strong>버스연결</strong> : 공용선에 의한 연결</p>\n<ul>\n<li>가장 가성비 높은 연결 방식</li>\n<li>관리를 위한 다양한 방법이 제시된다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/117160192-df51ab00-adfb-11eb-84f0-a595c0bd9673.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h3 id=\"공용선에-의한-레지스터-상호-연결\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EC%9A%A9%EC%84%A0%EC%97%90-%EC%9D%98%ED%95%9C-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%83%81%ED%98%B8-%EC%97%B0%EA%B2%B0\" aria-label=\"공용선에 의한 레지스터 상호 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공용선에 의한 레지스터 상호 연결</h3>\n<h4 id=\"멀티-플렉서를-이용\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0-%ED%94%8C%EB%A0%89%EC%84%9C%EB%A5%BC-%EC%9D%B4%EC%9A%A9\" aria-label=\"멀티 플렉서를 이용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티 플렉서를 이용</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/98d68d7b-eee3-4cbe-ad29-20833fb2e659/image.png\" alt=\"img\"></p>\n<h4 id=\"3-상태-버스-버퍼\" style=\"position:relative;\"><a href=\"#3-%EC%83%81%ED%83%9C-%EB%B2%84%EC%8A%A4-%EB%B2%84%ED%8D%BC\" aria-label=\"3 상태 버스 버퍼 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-상태 버스 버퍼</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/585daa77-3908-451c-9130-839cdb978706/image.png\" alt=\"img\"></p>\n<ul>\n<li>멀티플렉서와 비슷하지만 Enable을 사용한다는 점에서 다르다 -> 버퍼에 사용됨</li>\n</ul>\n<h3 id=\"cpu-내의-자료구조\" style=\"position:relative;\"><a href=\"#cpu-%EB%82%B4%EC%9D%98-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\" aria-label=\"cpu 내의 자료구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU 내의 자료구조</h3>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/e63d9ce7-d50d-474b-85fa-6d01ba138acd/image.png\" alt=\"img\"></p>\n<ul>\n<li>\n<p>스택</p>\n<p>커맨드가 간단해지기 때문에 사용한다. (pop, push)</p>\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]10_CPU 내부 구조와 명령어 집합","date":null,"lang":null}}},{"node":{"id":"7a1d8f81-d808-5b6d-a641-ca3599c87312","excerpt":"마이크로 명령과 ALU 마이크로 연산 마이크로 연산과 ALU…","html":"<ul>\n<li>\n<p>마이크로 명령과 ALU</p>\n<ul>\n<li>마이크로 연산</li>\n<li>마이크로 연산과 ALU</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"마이크로-연산\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C-%EC%97%B0%EC%82%B0\" aria-label=\"마이크로 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마이크로 연산</h3>\n<ul>\n<li>마이크로 연산은 레지스터에 저장된 데이터에 대해 수행되는 기본적인 연산</li>\n<li>\n<p>디지털 컴퓨터에서 흔히 사용되는 마이크로 연산</p>\n<ol>\n<li>레이스터 사이에서 이진 정보를 전송하는 레지스터 <strong>전송</strong> 마이크로 연산</li>\n<li>레지스터에 저장된 수치 데이터에 대해 산술 연산을 수행하는 <strong>산술</strong> 마이크로 연산(ALU, 버퍼)</li>\n<li>레지스터에 저장된 비수치 데이터에 대해 비트 조작 연산을 수행하는 <strong>논리</strong> 마이크로 연산(OR, AND, NOT, XOR)</li>\n<li>레지스터에 저장된 데이터에 대해 시프트 연산을 수행하는 <strong>시프트</strong> 마이크로 연산 (0010(2) ⬅ 0100(4) ➡ 1000(8))</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"산술-논리-연산-장치alrithmetic-logic-unit-alu\" style=\"position:relative;\"><a href=\"#%EC%82%B0%EC%88%A0-%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0-%EC%9E%A5%EC%B9%98alrithmetic-logic-unit-alu\" aria-label=\"산술 논리 연산 장치alrithmetic logic unit alu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>산술 논리 연산 장치(Alrithmetic Logic Unit, ALU)</h4>\n<ul>\n<li>\n<p><strong>산술 연산</strong>과 <strong>논리 연산</strong>이 처리</p>\n<ul>\n<li>주로 정수 연산을 처리</li>\n<li>부동소수연산(Floating-point Number) 연산: FPU(Floating-Point Unit)</li>\n<li>최근에는 ALU가 부동 소수 연산까지 처리</li>\n</ul>\n</li>\n<li><strong>산술연산</strong> : 덧셈, 뺄셈, 곱셈, 나눗셈, 증가, 감소, 보수</li>\n<li><strong>논리 연산</strong> : AND, OR, NOT, XOR, shift(시프트 연산)</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/117635509-d6295b00-b1ba-11eb-8b85-f13fb3d70967.png\" alt=\"image\"></p>\n<h4 id=\"산술연산\" style=\"position:relative;\"><a href=\"#%EC%82%B0%EC%88%A0%EC%97%B0%EC%82%B0\" aria-label=\"산술연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>산술연산</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/9e951c1a-bf8a-4d06-8bc5-4be0edaf6374/image.png\" alt=\"img\"></p>\n<ul>\n<li>~B : B의 2의 보수</li>\n</ul>\n<h4 id=\"논리-연산과-산술-시프트-연산\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EA%B3%BC-%EC%82%B0%EC%88%A0-%EC%8B%9C%ED%94%84%ED%8A%B8-%EC%97%B0%EC%82%B0\" aria-label=\"논리 연산과 산술 시프트 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 연산과 산술 시프트 연산</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/19007420-7632-490d-97dc-3155987d6eb1/image.png\" alt=\"img\"></p>\n<ul>\n<li>결과 값을 가지고 연산을 하는 것이 아니라 비트끼리의 연산</li>\n<li>\n<p>MSB : 제일 왼쪽의 비트 (1: 음수, 0: 양수)</p>\n<ul>\n<li>ASR : 비트가 옮겨질 때 MSB를 기억해서 부호가 바뀌지 않음</li>\n</ul>\n</li>\n<li>LSB : 제일 오른쪽의 비트</li>\n<li>ROL, ROR: 밀려나는 비트가 잘리지 않고 돌아서 비어있는 비트에 들어감</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/7d1557d9-cecd-4552-beb6-084fbb722326/image.png\" alt=\"img\"></p>\n<ul>\n<li>AND(논리곱) : 둘 다 1이어야 1</li>\n<li>OR(논리합) : 둘 중 하나라도 1이면 1</li>\n<li>XOR : 값이 같지 않으면 1, 값이 서로 다르면 1( 배타적으로 참 )</li>\n<li>Masking : 원하는 자리를 잘라내고 표시하는 방법 (00001111: Mask) 0자리에 있는 값들은 무조건 0이 나오게됨으로</li>\n<li>Insert : A레지스터 값의 PCL과 B레지스터 값의 PCH이 합쳐짐(언팩하고 팩형일 때 붙여주는 기능) 붙여주고 싶은 자리에 0이 들어있으면 붙이고 싶은 값이 무조건 들어오게 됨</li>\n</ul>\n<h4 id=\"시프트-연산-예\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%ED%94%84%ED%8A%B8-%EC%97%B0%EC%82%B0-%EC%98%88\" aria-label=\"시프트 연산 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시프트 연산 예</h4>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/2ca0ea0e-523f-4a5d-89c0-8de395501b14/image.png\" alt=\"img\"></p>\n<ul>\n<li>ALU를 효율적으로 구성하기 위해 필요함</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]11_마이크로 명령과 ALU","date":null,"lang":null}}},{"node":{"id":"a55bc162-a924-58b1-ad35-2d527bfcfdf2","excerpt":"부울 대수와 논리식의 간편화 부울대수(Boolean Algebra) 논리식의 간편화 카노(Karnaugh) 맵 부울 대수(Boolean Algebra) 참(True)과 거짓(False)을 판별할 수 있는 논리적 명제를 수학적 표현의 논리 전개식으로 구현한 것으로 185…","html":"<ul>\n<li>\n<p>부울 대수와 논리식의 간편화</p>\n<ul>\n<li>부울대수(Boolean Algebra)</li>\n<li>논리식의 간편화 카노(Karnaugh) 맵</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"부울-대수boolean-algebra\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%9A%B8-%EB%8C%80%EC%88%98boolean-algebra\" aria-label=\"부울 대수boolean algebra permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부울 대수(Boolean Algebra)</h3>\n<p>참(True)과 거짓(False)을 판별할 수 있는 논리적 명제를 수학적 표현의 논리 전개식으로 구현한 것으로 1854년 영국의 수학자 부울(G.Boole)에 의해서 구현되었다.</p>\n<ul>\n<li>논리 회로의 형태와 구조를 기술하는데 필요한 수학적인 이론</li>\n<li>부울 대수를 사용하면 변수들의 진리표 관계를 대수식으로 표현하기에 용이</li>\n<li>동일한 성능을 가지는 더 간단한 회로를 만들기에 편리</li>\n</ul>\n<h4 id=\"부울-대수의-기본-법칙\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%9A%B8-%EB%8C%80%EC%88%98%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EB%B2%95%EC%B9%99\" aria-label=\"부울 대수의 기본 법칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부울 대수의 기본 법칙</h4>\n<ul>\n<li>\n<p>교환법칙(Commutative Law)</p>\n<img src=\"https://media.vlpt.us/images/underlier12/post/2f75afaa-e933-46a8-8999-8ed8a5ceacac/image.png\" alt=\"img\" style=\"zoom: 50%;\">\n</li>\n<li>\n<p>결합법칙(Associative Law)</p>\n<img src=\"https://media.vlpt.us/images/underlier12/post/148cace5-689e-4dec-8861-28d64d1cd2be/image.png\" alt=\"img\" style=\"zoom:50%;\">\n</li>\n<li>\n<p>분배법칙(Distribute Law)</p>\n<img src=\"https://media.vlpt.us/images/underlier12/post/81098789-8a2c-4cd2-8441-7893cfb69461/image.png\" alt=\"img\" style=\"zoom:50%;\">\n</li>\n<li>\n<p>드모르강의 정리(De Morgan’s Law)</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/a1035e66-13ab-4844-9c70-9bbe1c1a4a5f/image.png\" alt=\"img\"></p>\n</li>\n</ul>\n<h4 id=\"부울-대수를-이용한-간략화\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%9A%B8-%EB%8C%80%EC%88%98%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EA%B0%84%EB%9E%B5%ED%99%94\" aria-label=\"부울 대수를 이용한 간략화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부울 대수를 이용한 간략화</h4>\n<img src=\"https://media.vlpt.us/images/underlier12/post/307ad5d1-dc85-49a6-b5ef-c5882d55283b/image.png\" alt=\"img\" style=\"zoom:50%;\">\n<h3 id=\"논리식의-간편화-카노karnaugh-맵\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC%EC%8B%9D%EC%9D%98-%EA%B0%84%ED%8E%B8%ED%99%94-%EC%B9%B4%EB%85%B8karnaugh-%EB%A7%B5\" aria-label=\"논리식의 간편화 카노karnaugh 맵 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리식의 간편화 카노(Karnaugh) 맵</h3>\n<p>논리 표현식은 부울 대수를 이용해 간단히 만들 수 있으나 여러가지 규칙이 있다. 맵(map) 방법은 부울 함수를 곧바로 간소화 할 수 있으므로 널리 활용된다.</p>\n<h4 id=\"카노karnaugh-맵의-표현-방법\" style=\"position:relative;\"><a href=\"#%EC%B9%B4%EB%85%B8karnaugh-%EB%A7%B5%EC%9D%98-%ED%91%9C%ED%98%84-%EB%B0%A9%EB%B2%95\" aria-label=\"카노karnaugh 맵의 표현 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>카노(Karnaugh) 맵의 표현 방법</h4>\n<ul>\n<li>만약 변수가 n개라면 카노 맵은 2^n개의 민텀(minterm)으로 구성</li>\n<li>각 인접 민텀은 하나의 변수만이 변경되어야 한다.</li>\n<li>출력이 1인 기본 곱에 해당하는 민텀은 1로, 나머지는 0으로 표시</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/b4181f8e-59f5-45d3-bd35-5698b98048fb/image.png\" alt=\"img\"></p>\n<ul>\n<li>\n<p>예시</p>\n<img src=\"https://media.vlpt.us/images/underlier12/post/16001c8e-7634-404d-a928-49d623773cbe/image.png\" alt=\"img\" style=\"zoom:50%;\">\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]07_부울 대수와 논리식의 간편화","date":null,"lang":null}}},{"node":{"id":"eaec35a6-0bd9-5f4e-af25-cac34e2b7fca","excerpt":"마이크로 명령어 집합과 구성 명령어(instruction) 집합 주소 지정 모드(addressing mode) 명령어 집합 실행 순서에 따른 명령어 분류 순차적 실행 명령어 - 전체 실행 명령어의 70~8…","html":"<ul>\n<li>\n<p>마이크로 명령어 집합과 구성</p>\n<ul>\n<li>명령어(instruction) 집합</li>\n<li>주소 지정 모드(addressing mode)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"명령어-집합\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A7%91%ED%95%A9\" aria-label=\"명령어 집합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령어 집합</h3>\n<h4 id=\"실행-순서에-따른-명령어-분류\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89-%EC%88%9C%EC%84%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%B6%84%EB%A5%98\" aria-label=\"실행 순서에 따른 명령어 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행 순서에 따른 명령어 분류</h4>\n<ul>\n<li>순차적 실행 명령어 - 전체 실행 명령어의 70~80% 차지 / 가장 익숙한 타입</li>\n<li>\n<p>분기 명령어</p>\n<p>예) <code class=\"language-text\">P: R1 &lt;- R2</code> (<code class=\"language-text\">if (P == 1) then R1 &lt;- R2</code>)</p>\n</li>\n<li>\n<p>부 함수 호출 명령어</p>\n<p>메인과 서브로 나누어져있고 메인이 실행되는 중간에 서브가 실행된 후 서브의 실행이 끝나면 메인으로 피드백된다</p>\n</li>\n<li>복귀 명령어</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/6162defa-8287-46f8-ba09-34def22c553c/image.png\" alt=\"img\"></p>\n<h4 id=\"명령어-구문-형식\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EB%AC%B8-%ED%98%95%EC%8B%9D\" aria-label=\"명령어 구문 형식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령어 구문 형식</h4>\n<img src=\"https://media.vlpt.us/images/underlier12/post/ab393698-4e8c-4759-88ff-fac052438d4a/image.png\" alt=\"img\" style=\"zoom: 67%;\">\n<blockquote>\n<p>프로그램과 하드웨어 간의 독립성을 위해 direct mode에서 indirect mode로 변화하였다.</p>\n</blockquote>\n<ol>\n<li>명령 코드 : CPU가 실행할 수 있도록 디자인 된 연산</li>\n<li>오퍼랜드 : 연산에 사용되는 자료 값, 자료가 지정 된 주소에 관한 정보</li>\n<li>주소 지정 모드(addressing mode) : 오퍼랜드가 저장된 위치를 인덱싱(지정)하는 방법</li>\n</ol>\n<h4 id=\"명령어-집합의-설계\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A7%91%ED%95%A9%EC%9D%98-%EC%84%A4%EA%B3%84\" aria-label=\"명령어 집합의 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령어 집합의 설계</h4>\n<blockquote>\n<p>마이크로 연산 등등</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>설계관점</th>\n<th>자연어에 가까운 명령 코드</th>\n<th>기계 중심의 명령 코드</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>프로그램의 관점(SW)</td>\n<td>- 프로그램이 용이<br />- 전체 프로그램의 길이 감소<br />- 번역기의 설계 용이</td>\n<td>- 프로그래밍규칙이 많아짐<br />- 프로그램의 길이가 증가<br />- 번역기의 설계가 복잡해짐</td>\n</tr>\n<tr>\n<td>CPU 구조 설계 관점(HW)</td>\n<td>- 사용 언어에 따른 구조적 차이로 인해 오동작 및 처리 어려움<br />- 명령어의 길이 증가<br />- 제어장치(ALU, Register 등)의 제어가 매우 복잡해짐</td>\n<td>- 다양한 업체별 국가별 프로그래밍의 표준화가 가능<br />- 명령어의 종류 및 길이 등 간편화 될 수 있음<br />- 제어장치(ALU, Register 등)의 제어가 상대적으로 용이</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"현업에서-활용되는-명령어군의-활용-비율\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%97%85%EC%97%90%EC%84%9C-%ED%99%9C%EC%9A%A9%EB%90%98%EB%8A%94-%EB%AA%85%EB%A0%B9%EC%96%B4%EA%B5%B0%EC%9D%98-%ED%99%9C%EC%9A%A9-%EB%B9%84%EC%9C%A8\" aria-label=\"현업에서 활용되는 명령어군의 활용 비율 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현업에서 활용되는 명령어군의 활용 비율</h4>\n<table>\n<thead>\n<tr>\n<th>명령 코드</th>\n<th>실행 비율</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>load, store, move</td>\n<td>38% ➡자료전송 명령어</td>\n</tr>\n<tr>\n<td>compare, add, and, sub</td>\n<td>35% ➡산술/논리 연산 명령어</td>\n</tr>\n<tr>\n<td>condition, blench, call, return</td>\n<td>22% ➡실행제어 명령어</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>위의 명령어가 전체 실행 명령어의 약 90% 이상임</p>\n<p>위의 명령어들의 쓰임을 면밀이 연구를 해야 ALU, CPU의 개선을 담보할 수 있을 것임</p>\n</blockquote>\n<h3 id=\"주소-지정-모드addressing-mode\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%86%8C-%EC%A7%80%EC%A0%95-%EB%AA%A8%EB%93%9Caddressing-mode\" aria-label=\"주소 지정 모드addressing mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주소 지정 모드(addressing mode)</h3>\n<blockquote>\n<p>찾아볼 것: <strong>명령어 구문 형식</strong></p>\n</blockquote>\n<p>명령어의 구조상 자료가 저장되어 있는 장소를 지정하는 방법이 필요하다. (하드웨어와 소프트웨어의 독립성을 최대한 유지하여 프로그램의 유연성(pointer, indexing 등)을 가능하게 하여 명령어의 수와 길이를 줄이기 위해 - 세계 표준화 기법임)</p>\n<h4 id=\"묵시적-모드operand가-명령어에-포함되어-있지-않은-특수-모드\" style=\"position:relative;\"><a href=\"#%EB%AC%B5%EC%8B%9C%EC%A0%81-%EB%AA%A8%EB%93%9Coperand%EA%B0%80-%EB%AA%85%EB%A0%B9%EC%96%B4%EC%97%90-%ED%8F%AC%ED%95%A8%EB%90%98%EC%96%B4-%EC%9E%88%EC%A7%80-%EC%95%8A%EC%9D%80-%ED%8A%B9%EC%88%98-%EB%AA%A8%EB%93%9C\" aria-label=\"묵시적 모드operand가 명령어에 포함되어 있지 않은 특수 모드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>묵시적 모드(operand가 명령어에 포함되어 있지 않은 특수 모드)</h4>\n<ul>\n<li>NOP : NO operation, 오퍼랜드가 필요없는 명령어</li>\n<li>INC : 묵시적 오퍼랜드인 누산기(AC)의 연산 명령어</li>\n<li>ADD : 스택 구조의 명령어(스택에 오퍼랜드가 저장)</li>\n</ul>\n<h4 id=\"직접-값-모드operand-자체가-명령어에-포함되어-있는-모드\" style=\"position:relative;\"><a href=\"#%EC%A7%81%EC%A0%91-%EA%B0%92-%EB%AA%A8%EB%93%9Coperand-%EC%9E%90%EC%B2%B4%EA%B0%80-%EB%AA%85%EB%A0%B9%EC%96%B4%EC%97%90-%ED%8F%AC%ED%95%A8%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94-%EB%AA%A8%EB%93%9C\" aria-label=\"직접 값 모드operand 자체가 명령어에 포함되어 있는 모드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>직접 값 모드(operand 자체가 명령어에 포함되어 있는 모드)</h4>\n<p>ex ) <code class=\"language-text\">MOV R1, #100;</code> 십진수 값 100이 두번째 오퍼랜드로 직접 명령문에 포함되어 있는 경우</p>\n<h4 id=\"레지스터-모드register-mode--오퍼랜드가-레지스터에-저장된-모드\" style=\"position:relative;\"><a href=\"#%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EB%AA%A8%EB%93%9Cregister-mode--%EC%98%A4%ED%8D%BC%EB%9E%9C%EB%93%9C%EA%B0%80-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0%EC%97%90-%EC%A0%80%EC%9E%A5%EB%90%9C-%EB%AA%A8%EB%93%9C\" aria-label=\"레지스터 모드register mode  오퍼랜드가 레지스터에 저장된 모드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레지스터 모드(Register mode : 오퍼랜드가 레지스터에 저장된 모드)</h4>\n<p>ex ) <code class=\"language-text\">ADD R1 R2;</code> 레지스터 R1과 R2에 보유하고 있는 값이 오퍼랜드임</p>\n<h4 id=\"메모리-직접-주소-모드direct-mode--오퍼랜드가-저장된-메모리-주소를-나타내는-모드\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A7%81%EC%A0%91-%EC%A3%BC%EC%86%8C-%EB%AA%A8%EB%93%9Cdirect-mode--%EC%98%A4%ED%8D%BC%EB%9E%9C%EB%93%9C%EA%B0%80-%EC%A0%80%EC%9E%A5%EB%90%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A3%BC%EC%86%8C%EB%A5%BC-%EB%82%98%ED%83%80%EB%82%B4%EB%8A%94-%EB%AA%A8%EB%93%9C\" aria-label=\"메모리 직접 주소 모드direct mode  오퍼랜드가 저장된 메모리 주소를 나타내는 모드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 직접 주소 모드(Direct mode : 오퍼랜드가 저장된 메모리 주소를 나타내는 모드)</h4>\n<p>ex ) <code class=\"language-text\">MOV R1, 100;</code> R1에 100번지의 내용을 이동하라는 내용(기종에 따라 반대의 경우도 가능), 100번지의 내용이 두번째 오퍼랜드가 됨</p>\n<h4 id=\"메모리-간접-주소-모드memory-indirect-addressing-mode\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B0%84%EC%A0%91-%EC%A3%BC%EC%86%8C-%EB%AA%A8%EB%93%9Cmemory-indirect-addressing-mode\" aria-label=\"메모리 간접 주소 모드memory indirect addressing mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 간접 주소 모드(Memory indirect addressing mode)</h4>\n<p>메모리를 이용하여 간접적으로 주소를 지정하는 모드</p>\n<p>ex ) <code class=\"language-text\">MOV R1, @100;</code> <code class=\"language-text\">R1 ⬅ M[100] or M[100] ⬅ R1</code></p>\n<img src=\"https://media.vlpt.us/images/underlier12/post/af1bcbdf-1a72-4038-bb3d-8f103a8bc733/image.png\" alt=\"img\" style=\"zoom: 50%;\">\n<h4 id=\"주소-지정-모드-예\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%86%8C-%EC%A7%80%EC%A0%95-%EB%AA%A8%EB%93%9C-%EC%98%88\" aria-label=\"주소 지정 모드 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주소 지정 모드 예</h4>\n<p>다음 마이크로 명령을 수행한 후, 어떤 변화가 생겼을까? (주어진 일부 메모리 내용을 참조할 것, R1 = 100, R2 = 200이라고 가정)</p>\n<p><img src=\"https://media.vlpt.us/images/underlier12/post/2475e784-41d0-4966-963b-9c14dbef64f7/image.png\" alt=\"img\"></p>","frontmatter":{"title":"[컴퓨터구조]12_마이크로 명령어 집합과 구성","date":null,"lang":null}}},{"node":{"id":"5e7b5cc1-1ebe-5568-a458-519416e7f6db","excerpt":"입출력과 인터럽트 입출력(input/output) 구성 인터럽트(interrupt) 입출력(input/output) 구성 컴퓨터는 사용자와 통신하기 위해서 외부 장치, 즉 메모리로 데이터와 명령어를 읽어 들이는 입력장치(input-device…","html":"<ul>\n<li>\n<p>입출력과 인터럽트</p>\n<ul>\n<li>입출력(input/output) 구성</li>\n<li>인터럽트(interrupt)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"입출력inputoutput-구성\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5inputoutput-%EA%B5%AC%EC%84%B1\" aria-label=\"입출력inputoutput 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력(input/output) 구성</h3>\n<p>컴퓨터는 사용자와 통신하기 위해서 외부 장치, 즉 메모리로 데이터와 명령어를 읽어 들이는 <strong>입력장치(input-device)</strong>와 계산 결과를 사용자에게 표시해 주는 <strong>출력장치(output-device)</strong>를 갖추어야 한다.</p>\n<img src=\"https://user-images.githubusercontent.com/53068706/118065068-490f1d80-b3d7-11eb-93f4-0d5629518e73.png\" alt=\"image\" style=\"zoom:80%;\">\n<blockquote>\n<p>모든 입력과 출력은 레지스터가 정보를 처리하는 과정을 거친다.</p>\n<p>INPR에 8bit가 모두 채워져야 전송됨 - 하나씩 전송되지 않음</p>\n<p>FGI/FGO : INPR에 정보가 override 되는 것을 막기 위해 플립플롭을 준다. (0일 때는 값이 들어갈 수 있는 것, 1일 때는 값이 들어가지 않음)</p>\n</blockquote>\n<h3 id=\"인터럽트interrupt\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8interrupt\" aria-label=\"인터럽트interrupt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터럽트(interrupt)</h3>\n<img src=\"https://user-images.githubusercontent.com/53068706/118065768-7c9e7780-b3d8-11eb-8ef3-98f614f73e5a.png\" alt=\"image\" style=\"zoom:80%;\">\n<blockquote>\n<p>플래그를 이용한 통신 방법을 프로그램 제어 전송(program controlled transfer)이라고 하는데 이것은 프로세스와 입출력 장치와의 속도 차이 때문에 메우 비효율적이다. (컴퓨터 프로세스의 속도가 훨씬 빠름)</p>\n</blockquote>\n<h4 id=\"인터럽트-인에이블-플립플롭interrupt-enable-flip-flop-ien\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8-%EC%9D%B8%EC%97%90%EC%9D%B4%EB%B8%94-%ED%94%8C%EB%A6%BD%ED%94%8C%EB%A1%ADinterrupt-enable-flip-flop-ien\" aria-label=\"인터럽트 인에이블 플립플롭interrupt enable flip flop ien permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인터럽트 인에이블 플립플롭(interrupt enable flip-flop, IEN)</h4>\n<ul>\n<li>프로그램 제어 전송 대신에 외부 장치에서 전송이 준비되었을 때 컴퓨터에 알리는 방법에 활용되는 플립플롭</li>\n<li>컴퓨터는 프로그램 실행 도중에는 플래그 체크를 하지 않으며, 플래그가 세트되면 컴퓨터는 실행중이던 프로그램을 즉시 중지하고 플래그의 세트 정보를 받아들여 입출력을 실행, 입출력을 실행 후 즉시 원 프로그램으로 복귀한다. 이런 동작을 <strong>인터럽트(interrupt)</strong>라고 한다. 우선 순위가 높은 작업을 즉시 처리하고 원래 작업으로 돌아가는 방식</li>\n<li>IEN이 인터럽트를 가능하게 해준다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118066897-7b6e4a00-b3da-11eb-8a00-ea75f0facf0a.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p><code class=\"language-text\">R=1</code> interrupt cycle</p>\n<ul>\n<li>지금 하고 있는 작업을 저장(in location 0)후 작업을 수행하고 IEN과 R을 0으로 바꿔줌</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">R=0</code> instruction cycle</p>\n<ul>\n<li>명령 가져오기 -> IEN, FGI, FGO 의 값을 확인하여 플래그를 확인해야하는지 체크하고 R을 1로 바꿔주거나 명령을 실행</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118067473-94c3c600-b3db-11eb-9e63-e4cac49f542d.png\" alt=\"image\"></p>\n<ul>\n<li>메모리 주소 255에 있는 명령이 실행되던 중, R=1이 되어 인터럽트가 발생하면, 인터럽트가 끝난 후 복귀할 주소는 256이 된다.</li>\n<li>\n<p>(프로그래머가 입출력 서비스 프로그램을 주소 1120에 로드 시켜놓았다고 가정) 주소 1에서 BUN 1120을 로드</p>\n<ul>\n<li>Execute M[1] : 1120번지로 분기하여 입출력 프로그램을 실행</li>\n</ul>\n</li>\n<li>\n<p>[인터럽트 실행] M[0] ⬅ 256, PC ⬅ 1, R ⬅ 0 (clear)</p>\n<ul>\n<li>ION instruction이 IEN을 1로 세트하고 프로그램 복귀 시도</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]13_마이크로 명령 - 입출력과 인터럽트","date":null,"lang":null}}},{"node":{"id":"a66a235e-39c1-54ec-8970-6dbd2f94d130","excerpt":"컴퓨터 프로그래밍(Computer Programming) 프로그래밍 일반 기계어 어셈블리 언어 프로그래밍 일반 일반적으로 컴퓨터는 하드웨어(Hardware)와 소프트웨어(Software…","html":"<ul>\n<li>\n<p>컴퓨터 프로그래밍(Computer Programming)</p>\n<ul>\n<li>프로그래밍 일반</li>\n<li>기계어</li>\n<li>어셈블리 언어</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"프로그래밍-일반\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%9D%BC%EB%B0%98\" aria-label=\"프로그래밍 일반 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래밍 일반</h3>\n<p>일반적으로 컴퓨터는 하드웨어(Hardware)와 소프트웨어(Software)로 구성된다.</p>\n<p>하드웨어가 잘 동작할 수 있도록 제어하고, 지시하는 모든 종류의 프로그램을 소프트웨어라고 하고, 소프트웨어는 <strong>시스템 소프트웨어</strong>와 <strong>응용 소프트웨어</strong>로 나눌 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118093539-8d66e180-b408-11eb-8d01-9384c1f3317a.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>언어번역프로그램</p>\n<ul>\n<li>사람과 컴퓨터 사이의 언어를 번역하여 전달하는 프로그램</li>\n</ul>\n</li>\n<li>\n<p>유틸리티 프로그램</p>\n<ul>\n<li>DB</li>\n<li>알약, V3</li>\n<li>ActiveX</li>\n</ul>\n</li>\n<li>\n<p>응용소프트웨어</p>\n<ul>\n<li>아래아한글, MS오피스 등등</li>\n<li>모바일 어플</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118093902-0bc38380-b409-11eb-8298-3e47205f1244.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>프로그램을 작성하는 일은 일련의 기계 명령어(Low level language)를 직-간접적으로 기술하는 행위로, 컴퓨터 내부의 기계어는 이진 형태의 의미 파악이 힘든 형태로 구성되어 있어 프로그래머는 영자, 숫자 형태의 기호(일반 고급언어, High level language)로 프로그램을 작성하는 것이 더욱 편리하다.</p>\n<p>하지만 기계는 이러한 형태의 사용자 위주 프로그래밍 언어를 이해할 수 없기 때문에, 이 기호 프로그램의 내용을 하드웨어가 인지할 수 있는 이진 프로그램으로 번역해야할 필요가 있다. 이 번역을 위해 컴파일 언어가 등장했다.</p>\n</li>\n<li>니모닉(mnemonic) : 직관적인 형태로 명령어를 구성하는 것</li>\n</ul>\n<h3 id=\"기계어\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EA%B3%84%EC%96%B4\" aria-label=\"기계어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기계어</h3>\n<p>프로그램이란 컴퓨터로 하여금 원하는 데이터처리 업무를 시행시키기 위해서 작성된 명령어 또는 문장으로 구성된 리스트이며 다음과 같은 종류가 있다.</p>\n<ul>\n<li><strong>이진 코드</strong> - 메모리 상에 나타나는 형태의 명령어로서 이진 명령어와 피연산자의 시퀀스다.</li>\n<li><strong>8/16진수</strong> - 이진수 코드를 편의상 8/16진수 형태로 표현한 내용</li>\n<li><strong>기호코드</strong> - 사용자가 연산부분, 주소부분 등에 대해 기호(문자, 숫자, 특수문자 등)을 사용하게 되며, 각 기호 명령어는 하나의 이진 코드로 번역되는데 이러한 번역을 어셈블러(assembler)가 담당 - <strong>assembly language</strong></li>\n<li><strong>고급 프로그래밍 언어</strong> - 컴퓨터 하드웨어의 동작을 염두에 두지 않고(HW와 SW 사이의 독립성) 문제해결에 관점을 맞춰서 개발한 인간 중심의 언어 C, C#, Java 등이 대표적인 사용언어들이다. 이러한 언어를 <strong>컴파일러형 언어(complier language)</strong>라고 한다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118094838-3a8e2980-b40a-11eb-9b40-27c923b1900e.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>두 수를 가산하는 이진 프로그램</p>\n<ul>\n<li>기계어 형태의 프로그램, 위치와 명령코드로 구성</li>\n</ul>\n</li>\n<li>\n<p>두 수를 가산하는 16진 프로그램</p>\n<ul>\n<li>이진 프로그램와 비교했을 때 보기 편하도록 만듦 (16비트를 4비트씩 잘라서 표현)</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118095557-331b5000-b40b-11eb-890b-5fc9eec96c3a.png\" alt=\"image\"></p>\n<ul>\n<li>어셈블리 언어</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118095637-49291080-b40b-11eb-8931-d444acf9936c.png\" alt=\"image\"></p>\n<ul>\n<li>고급 언어</li>\n</ul>\n<h3 id=\"어셈블리-언어\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EC%96%B8%EC%96%B4\" aria-label=\"어셈블리 언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어셈블리 언어</h3>\n<p>프로그래밍 언어는 일정한 규칙에 의해서 정의되므로 작성된 프로그램이 정확히 번역되기 위해서는 그 언어의 형식 규정을 잘 지켜야 한다. 모든 컴퓨터는 각각의 어셈블리 언어를 가지고 있으면 이들에 대한 규칙 등은 컴퓨터 제조 업체로부터 출판되어 인다.</p>\n<h4 id=\"어셈블리-언어의-규칙\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EC%96%B8%EC%96%B4%EC%9D%98-%EA%B7%9C%EC%B9%99\" aria-label=\"어셈블리 언어의 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어셈블리 언어의 규칙</h4>\n<ul>\n<li>\n<p>라벨필드 : 기호 주소를 나타내거나 빈칸이 될 수 있다.</p>\n<ul>\n<li>기호주소는 세 개 이하의 영자숫자들로구성, 첫자는 문자여야함</li>\n</ul>\n</li>\n<li>\n<p>명령어 필드 : 기계 명령어나 슈도 명령어를 기술</p>\n<ul>\n<li>메모리 참조 명령어(MRI)</li>\n<li>레지스터 참조 또는 입출력 명령어(non-MRI)</li>\n<li>슈도 명령어</li>\n</ul>\n</li>\n<li>코멘트 필드 : 명령어에 대한 주석이나 해설을 하거나 불필요할 경우 생략도 가능</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]14_기본 컴퓨터 프로그래밍","date":null,"lang":null}}},{"node":{"id":"1baa9250-c0a6-5533-91c9-05873cd1acd8","excerpt":"프로그래밍 언어의 실행 프로그래밍의 구현 architecture 컴퓨터 네트워크 환경 프로그래밍의 구현 architecture image IDE (Integrated Development Environment, 통합 개발 환경)에서 고급언어프로그램을 사용하여 작성 CPU…","html":"<ul>\n<li>\n<p>프로그래밍 언어의 실행</p>\n<ul>\n<li>프로그래밍의 구현 architecture</li>\n<li>컴퓨터 네트워크 환경</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"프로그래밍의-구현-architecture\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%98-%EA%B5%AC%ED%98%84-architecture\" aria-label=\"프로그래밍의 구현 architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래밍의 구현 architecture</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118146715-dab77300-b449-11eb-8243-dd1b2d64539d.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>IDE (Integrated Development Environment, 통합 개발 환경)에서 고급언어프로그램을 사용하여 작성</p>\n<p>CPU의 제조사가 무엇인지 등등을 신경쓸 필요없이 처리해야할 문제를 중심으로 작성하면 됨</p>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118147235-57e2e800-b44a-11eb-8a6d-622d54124416.png\" alt=\"image\"></p>\n<ul>\n<li>CPU, 컴퓨터 구조의 개선, 메모리, CPU, 네트워크 등이 효율적으로 동작하기 위해서 어떤 문제점을 만났을 때 문제를 해결하기 위한 새로운 기술들이 나오면서 발전해왔는데, 소프트웨어도 마찬가지로 효율적인 동작을 위해 위와 같은 형태로 변화해왔다.</li>\n<li>구조적 기법 : 밀레니엄 버그로 논란이 됐던 COBOL이 구조적 기법</li>\n<li>객체 지향 기법 : 객체란 프로그램을 기능별로 처리하는 것이 아니라 프레임 위주로 만드는 것(ex, <code class=\"language-text\">사람 = 말하기 + 걷기 + 달리기 + 먹기</code> 기본적인 형태로 만들어 놓고 원하는 형태로 빼거나 넣어서 사용 / <code class=\"language-text\">재사용</code> / C++, Java 등 )</li>\n<li>컴포넌트 기법 : 집약성 있는 덩어리, 덩어리의 프로그램들의 조합으로 구성하는 기법 / 핸드폰이 고장났을 때 납땜을 하지 않고 부품을 갈아버리는 방식</li>\n<li>분산객체 프레임 워크 : 클라우드 환경 / 다른 회사의 프로그램을 같이 사용할 때 쉽게 통합하기 위한 방식</li>\n</ul>\n<h3 id=\"컴퓨터-네트워크-환경\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%99%98%EA%B2%BD\" aria-label=\"컴퓨터 네트워크 환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터 네트워크 환경</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118148435-86ad8e00-b44b-11eb-963e-5e17eae34c6a.png\" alt=\"image\"></p>\n<ul>\n<li>NOS : New technology Operating System</li>\n<li>\n<p>Wireshark : 정보가 탈취당하고 있는지도 확인할 수 있음</p>\n<ul>\n<li>패킷 : 통신을 할 때 한번에 전송/수신 되는 단위</li>\n<li>프로토콜 : TCP(똑똑 하고 들어감, shake hand)/UDP(무조건 들어감), 어떤 경로로 통신이 진행되는지</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"실습\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5\" aria-label=\"실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습</h3>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre class=\"language-c++\"><code class=\"language-c++\">#include &lt;stdio.h&gt;\n#include &lt;conio.h&gt;\n\nint main()\n{\n    int a, b, c;\n    a = 83;\n    b = 234;\n\n    c = a + b;\n    printf(&quot;a + b = %5.2d&quot;, c);\n\n    return 0;\n}</code></pre></div>\n<ul>\n<li><code class=\"language-text\">%5.2d</code> : 5자리 확보, 소숫점 둘째자리까지, 정수</li>\n<li>Wireshark : 현재 컴퓨터가 어떤 통신을 하고 있는지 로그를 확인할 수 있음</li>\n<li>snapshot : 컴파일 된 파일을 뜯어서 어떻게 동작하고 있는지 확인 할 수 있음(어셈블리언어)</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]15_프로그래밍 언어의 실행","date":null,"lang":null}}},{"node":{"id":"1821256c-a09d-55f4-a6c0-7f1b987d1c08","excerpt":"데이터의 종속성 - 병렬처리와 파이프라인 병렬 처리 파이프 라인 병렬처리(parallel processing…","html":"<ul>\n<li>\n<p>데이터의 종속성 - 병렬처리와 파이프라인</p>\n<ul>\n<li>병렬 처리</li>\n<li>파이프 라인</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"병렬처리parallel-processing\" style=\"position:relative;\"><a href=\"#%EB%B3%91%EB%A0%AC%EC%B2%98%EB%A6%ACparallel-processing\" aria-label=\"병렬처리parallel processing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>병렬처리(parallel processing)</h3>\n<p>컴퓨터 시스템의 계산 속도 향상을 목적으로 하여 동시 데이터 처리기능을 제공하는 광범위한 개념의 기술을 의미한다.</p>\n<h4 id=\"복잡도에-따른-병렬처리의-다양한-단계\" style=\"position:relative;\"><a href=\"#%EB%B3%B5%EC%9E%A1%EB%8F%84%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%B3%91%EB%A0%AC%EC%B2%98%EB%A6%AC%EC%9D%98-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%8B%A8%EA%B3%84\" aria-label=\"복잡도에 따른 병렬처리의 다양한 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>복잡도에 따른 병렬처리의 다양한 단계</h4>\n<ul>\n<li>사용 레지스터의 형태에 따른 병렬 성 구현(ex - 시프트레지스터 vs 워드당 동시에 전송이 가능한 병렬성을 갖는 레지스터)</li>\n<li>동일한 또는 서로 다른 동작을 동시에 수행하는 여러 개의 기능 장치(functional unit)를 가지고 데이터를 각각의 장치에 분산시켜 작업을 수행하는 경우(ex - 산술, 논리, 시프트 동작을 세 개의 장치로 분류하고, 제어 장치의 관리에 따라 피 연산자를 각 장치들 사이에서 전환시킨다.)</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118342798-fca31980-b55f-11eb-9a08-4c4b9ebde37a.png\" alt=\"image\"></p>\n<blockquote>\n<p>한계 : 앞의 연산의 결과가 필요한 연산인 경우에는 앞의 연산이 끝날 때까지 기다려야한다. 때문에 다른 플래그를 둬서 모든 결과값을 저장해놓고 필요할 때마다 꺼내 쓰는 방법으로 해결</p>\n</blockquote>\n<h4 id=\"mj-flynn의-분류-방법\" style=\"position:relative;\"><a href=\"#mj-flynn%EC%9D%98-%EB%B6%84%EB%A5%98-%EB%B0%A9%EB%B2%95\" aria-label=\"mj flynn의 분류 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>M.J Flynn의 분류 방법</h4>\n<p>동시에 처리되는 명령어와 데이터 항목 수에 의해 컴퓨터 시스템의 구조를 파악하려는 분류 방법 제안</p>\n<ul>\n<li>명령어 흐름(instruction stream) ➡ 메모리로부터 읽어온 명령어의 순서</li>\n<li>데이터 흐름(data stream) ➡ 데이터에 대해 수헹되는 동작</li>\n<li>SISD ➡단일 명령어 흐름, 단일 데이터 흐름</li>\n<li>SIMD➡단일 명령어 흐름, 다중 데이터 흐름</li>\n<li>MISD➡다중 명령어 흐름, 단일 데이터 흐름</li>\n<li>MIMD➡다중 명령어 흐름, 다중 데이터 흐름</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>분류</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>SISD</strong></td>\n<td>- 제어장치, 처리장치, 메모리 장치를 가지는 단일 컴퓨터 구조<br />- 명령어들은 순차적으로 실행되고, 병렬처리는 다중 기능 장치나 파이프라인 처리에 의해서 구현된다.</td>\n</tr>\n<tr>\n<td><strong>SIMD</strong></td>\n<td>- 공통의 제어장치 아래에 여러 개의 처리 장치를 두는 구조<br />- 모든 프로세서는 동일한 명령어를 서로 다른 데이터 항목에 대하여 실행시킬 수 있다.<br />- 모든 프로세서가 동시에 메모리에 접근 할 수 있도록 다중 모듈을 가진 공유 메모리 장치가 필요하다.</td>\n</tr>\n<tr>\n<td>MISD</td>\n<td>이론적으로만 연구되고 있음</td>\n</tr>\n<tr>\n<td>MIMD</td>\n<td>- 여러 프로그램을 동시에 수행하는 능력을 가진 컴퓨터 시스템<br />- 대부분의 다중 프로세서와 다중 컴퓨터 시스템이 이 범주에 속한다.</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>이 분류방식은 컴퓨터의 구조적 연계방식에 대한 고찰이기보다는 외양적 행동 양식을 강조한 분류방식이라고 볼 수 있다. 이 분류 방식에 적합하지 않은 것이 파이프라인이다.</p>\n</blockquote>\n<h3 id=\"파이프-라인\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84-%EB%9D%BC%EC%9D%B8\" aria-label=\"파이프 라인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이프 라인</h3>\n<h4 id=\"파이프라인-구조의-성능\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EA%B5%AC%EC%A1%B0%EC%9D%98-%EC%84%B1%EB%8A%A5\" aria-label=\"파이프라인 구조의 성능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이프라인 구조의 성능</h4>\n<p>파이프라인의 동작은 공간-시간표에 의해 설명되는데, 이것은 시간에 대한 함수로서 세그먼트의 사용상황을 보여준다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118993120-36d94480-b9c0-11eb-9765-907a556abe6c.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118993259-52dce600-b9c0-11eb-8530-06b485d269d1.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118993401-73a53b80-b9c0-11eb-9cc0-fdc64eba1ae4.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>파이프라인이 아닌 경우</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/118994268-25dd0300-b9c1-11eb-81c8-86101b516382.png\" alt=\"image\"></p>\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]16_데이터의 종속성 - 병렬처리와 파이프라인","date":null,"lang":null}}},{"node":{"id":"af93a8a2-57d3-59c6-b7c4-14a27de8466a","excerpt":"현실적 병렬적 다중 기능 장치 산술 파이프라인 명령어 파이프라인 현실적 파이프라인 구조 파이프라인 구조 VS…","html":"<ul>\n<li>현실적 병렬적 다중 기능 장치</li>\n<li>산술 파이프라인</li>\n<li>명령어 파이프라인</li>\n</ul>\n<h2 id=\"현실적-파이프라인-구조\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%8B%A4%EC%A0%81-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"현실적 파이프라인 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현실적 파이프라인 구조</h2>\n<ul>\n<li>\n<p>파이프라인 구조 VS 병렬적 다중 기능 장치</p>\n<ul>\n<li>실제 파이프라인 구조가 이론적인 최대 속도를 구현하지 못하는 이유</li>\n<li>각 세그먼트들이 <strong>부연산을 수행하는 시간이 서로 다르다.</strong></li>\n<li>또한 각 레지스터를 제어하는 클럭 사이클은 최대 전파 시간을 갖는 세그먼트의 지연시간과 싱크를 맞추어야 한다. (제일 느린 시간에 맞춰야함, 싱크를 맞추지 않을 경우 수행되지 않은 작업의 결과를 가져와야 하는 경우가 생김)</li>\n<li>다음 그림과 같이 병렬적인 다중 기능장치(=<strong>파이프라인 처리 속도</strong>)를 고려할 수 있다.</li>\n<li>각 P회로는 전체 파이프라인 회로에서와 동일하게 태스크를 수행한다.</li>\n<li>그러나 이 구조는 순차적 처리가 아니라 모든 회로가 동시에 데이터를 입력받아 네 태스크를 한꺼번에 수행한다. - SIMD(Single Instruction Multi Data) 구조 일 뿐</li>\n<li>효율 : 파이프라인 구조 > 순차적 처리 구조</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119457543-c2fbbb00-bd76-11eb-871e-7093aaeb8600.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h3 id=\"파이프-라인-구조가-적용되는-컴퓨터-설계\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84-%EB%9D%BC%EC%9D%B8-%EA%B5%AC%EC%A1%B0%EA%B0%80-%EC%A0%81%EC%9A%A9%EB%90%98%EB%8A%94-%EC%BB%B4%ED%93%A8%ED%84%B0-%EC%84%A4%EA%B3%84\" aria-label=\"파이프 라인 구조가 적용되는 컴퓨터 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이프 라인 구조가 적용되는 컴퓨터 설계</h3>\n<ul>\n<li>\n<p><strong>신술(arithmetic)</strong> 파이프라인</p>\n<ul>\n<li>산술 연산들을 부연산으로 나누어 파이프라인의 세그먼트에서 수행</li>\n<li>고속 컴퓨터에서 부동 소수점 연산, 고정 소수점 수의 곱셈, 과학 계산용으로 활용</li>\n<li>파이프라인 승산기(배열 승산기 - 부분 곱 사이의 캐리(carry)전파시간의 최소화를 위한 가산기 보유)</li>\n</ul>\n</li>\n<li>\n<p><strong>명령어(instruction)</strong> 파이프라인</p>\n<ul>\n<li>명령어 사이클의 fetch, 디코드, 실행 단계를 중첩 시킴으로 명령어 흐름에 동작</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"산술-파이프-라인\" style=\"position:relative;\"><a href=\"#%EC%82%B0%EC%88%A0-%ED%8C%8C%EC%9D%B4%ED%94%84-%EB%9D%BC%EC%9D%B8\" aria-label=\"산술 파이프 라인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>산술 파이프 라인</h3>\n<ul>\n<li>\n<p>부동 소수점 덧셈과 뺄셈을 위한 파이프 라인</p>\n<ul>\n<li>입력 : 두 개의 정규화(normalized)된 부동 소수점 이진수</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119498042-2bab5d80-bda0-11eb-8e06-7e0486aba13f.png\" alt=\"image\"></p>\n<ul>\n<li>각 세그먼트에서 수행되는 부연산</li>\n<li>지수의 비교</li>\n<li>가수의 정렬</li>\n<li>가수의 덧셈이나 뺄셈</li>\n<li>결과의 정규화</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119498323-762cda00-bda0-11eb-850e-7afd7fee8e84.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>더하기 연산 예시</p>\n<ul>\n<li>정규화 -> 결과를 약속된 형태로 표현함</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>산술파이프 라인의 효율성</p>\n<ul>\n<li>부동 소수점 파이프라인의 구성 요소</li>\n<li>비교기, 시프터, 가산-감산기, 인크리멘터, 디크리멘터 -> 조합회로</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119498917-1edb3980-bda1-11eb-8c4a-f6f0b4e9877a.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h3 id=\"명령어-파이프-라인\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%96%B4-%ED%8C%8C%EC%9D%B4%ED%94%84-%EB%9D%BC%EC%9D%B8\" aria-label=\"명령어 파이프 라인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령어 파이프 라인</h3>\n<ul>\n<li>\n<p>명령어 실행과 파이프라인 구조</p>\n<ul>\n<li>명령어 파이프라인은 이전 명령어가 다른 세그먼트에서 실행되고 있는 동안 메모리에 연속적으로 저장되엉 있는 다음 명령어를 읽어옴으로서 fetch와 실행이 중첩되어 동시에 수행되는 구조</li>\n<li>분기가 발생할 경우 (가장 큰 취약점)</li>\n<li>현재의 파이프라인은 모두 비워져야 하고, 분기 명령 이후에 메모리에서 읽어온 명령어는 모두 무시되어야한다.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119499424-aaed6100-bda1-11eb-9288-932ff74c7a21.png\" alt=\"image\"></p>\n<ul>\n<li>분기가 발생할 경우 아무 것도 하지 않는 시간이 생김</li>\n<li>\n<p>효율적 명령어 실행을 위한 파이프라인 구조</p>\n<ul>\n<li>명령어 fetch장치와 명령어 실행 장치로서 두 세그먼트 파이프라인을 구성하는 컴퓨터를 고려</li>\n<li>명령어 fetch 장치 -> FIFO에 의한 Queue로 구성 되어 queuing기법에 의한 메모리 참조에 의해 평균 메모리 접근 시간을 효과적으로 줄여줌</li>\n<li>명령어 파이프라인이 수행되는데 있어 발생하는 단점</li>\n<li>세그먼트의 수행시간일 서로 다름 (실행되지 않는 세그먼트도 있을 수 있음 ex. 레지스터 모드 명령의 경우 - 유효주소 계산 불필요)</li>\n<li>두개 이상의 세그먼트에 의해 동일한 주소 공간이 참조되는 경우(충돌)</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119500098-62827300-bda2-11eb-9588-e2f9bbc8f7d1.png\" alt=\"image\"></p>","frontmatter":{"title":"[컴퓨터구조]18_Pipeline 구조 - 산술/명령어 파이프라인 구조","date":null,"lang":null}}},{"node":{"id":"42437245-7608-58f8-bf0d-85221b547dfa","excerpt":"Pipeline 구조 & 구현 Pipeline 구조 & 데이터 표현 Pipeline 구조 & 표현 파이프라인의 구현 하나의 프로세스를 서로 다른 기능(function)을 가진 여러 개의 서브프로세스(subprocess…","html":"<ul>\n<li>Pipeline 구조 &#x26; 구현</li>\n<li>Pipeline 구조 &#x26; 데이터 표현</li>\n</ul>\n<h2 id=\"pipeline-구조--표현\" style=\"position:relative;\"><a href=\"#pipeline-%EA%B5%AC%EC%A1%B0--%ED%91%9C%ED%98%84\" aria-label=\"pipeline 구조  표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pipeline 구조 &#x26; 표현</h2>\n<ul>\n<li>\n<p>파이프라인의 구현</p>\n<ul>\n<li>하나의 프로세스를 서로 다른 기능(function)을 가진 여러 개의 서브프로세스(subprocess)로 나누어 각 프로세스가 동시에 서로 다른 데이터로 취급하도록 하는 기법</li>\n<li>각 <strong>세그먼트(segment)</strong>에서 수행된 연산 결과를 다음 세그먼트로 연속적으로 넘어가게 되어 데이터가 마지막 세그먼트를 통과하게 되면 최종적인 연산 결과를 얻게 된다.</li>\n<li>하나의 프로세스를 다양한 연산으로 중복시킬 수 있는 근간은 각 세그먼트마다의 <strong>레지스터</strong>이다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119138500-eb38a080-ba7c-11eb-9b9e-d512471d3083.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119138681-17542180-ba7d-11eb-8547-b5e2b93c383b.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119138746-2cc94b80-ba7d-11eb-9bf1-2b718eb937d5.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h3 id=\"파이프-라인의-일반적-고찰\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84-%EB%9D%BC%EC%9D%B8%EC%9D%98-%EC%9D%BC%EB%B0%98%EC%A0%81-%EA%B3%A0%EC%B0%B0\" aria-label=\"파이프 라인의 일반적 고찰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이프 라인의 일반적 고찰</h3>\n<ul>\n<li>동일한 복잡도의 부연산들로 나뉘어지는 어떠한 연산 동작도 파이프라인 프로세서에 의해 구현 될 수 있다.</li>\n<li>파이프라인 기술은 매번 다른 데이터 집합을 동일한 태스크에 적용시켜 여러 번 반복하는 응용에 효과적이다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119147642-bdf0f000-ba86-11eb-8529-9fd242c25e83.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119148123-2c35b280-ba87-11eb-94b2-d0ea5f3939c2.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/119148377-61da9b80-ba87-11eb-923a-83ce813d8e49.png\" alt=\"image\"></p>\n<ul>\n<li>이론적인 이야기 / 소요시간이 20에 고정되어 있을 수 없다.</li>\n<li>세그먼트가 많을 수록 효율이 좋아진다.</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]17_Pipeline 구조 - 데이터/구조","date":null,"lang":null}}},{"node":{"id":"604070e5-700f-5b78-b8df-35e9b0ceb41e","excerpt":"메모리 시스템의 이해 메모리 계층 주 기억장치 보조기억장치 시스템의 성능 향상 측면에서 메모리를 학습하는 것을 추천 메모리 계층 기억장치는 CPU에 의해 시행될 프로그램이 저장되는 곳으로 주 기억장치(main memory unit) 보조 기억장치(auxiliary memory unit…","html":"<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F991E7C365CBF4BFF010A49\"></p>\n<h3 id=\"메모리-시스템의-이해\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EC%9D%B4%ED%95%B4\" aria-label=\"메모리 시스템의 이해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 시스템의 이해</h3>\n<ul>\n<li>메모리 계층</li>\n<li>주 기억장치</li>\n<li>보조기억장치</li>\n</ul>\n<blockquote>\n<p>시스템의 성능 향상 측면에서 메모리를 학습하는 것을 추천</p>\n</blockquote>\n<h2 id=\"메모리-계층\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B3%84%EC%B8%B5\" aria-label=\"메모리 계층 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 계층</h2>\n<p>기억장치는 CPU에 의해 시행될 프로그램이 저장되는 곳으로</p>\n<ul>\n<li>주 기억장치(main memory unit)</li>\n<li>보조 기억장치(auxiliary memory unit)</li>\n<li>캐쉬 메모리(cache memory)</li>\n</ul>\n<p>로 분류된다.</p>\n<h3 id=\"주-기억장치main-memory-unit\" style=\"position:relative;\"><a href=\"#%EC%A3%BC-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98main-memory-unit\" aria-label=\"주 기억장치main memory unit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주 기억장치(Main memory unit)</h3>\n<ul>\n<li>마더보드(motherboard)에 장착된다.</li>\n<li>RAM, ROM이 주 기억장치로 분류된다.</li>\n<li>\n<p>RAM, Random Access Memory</p>\n<ul>\n<li>비교적 대용량으로 고속의 속도를 지닌다.</li>\n<li>휘발성을 가진다. (작업대에 비유)</li>\n</ul>\n</li>\n<li>\n<p>ROM, Read Only Memory</p>\n<ul>\n<li>작성이 불가능하고, 컴퓨터가 켜질 때 부스터 역할을 하며, 보조기억 장치에 있는 OS 기능들을 RAM으로 끌어올리는 작업을 수행한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"캐쉬-메모리cache-memory-buffer\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%89%AC-%EB%A9%94%EB%AA%A8%EB%A6%ACcache-memory-buffer\" aria-label=\"캐쉬 메모리cache memory buffer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐쉬 메모리(Cache memory, buffer)</h3>\n<ul>\n<li>주 기억장치에 접근하는 시간은 프로세스의 논리회로의 속도보다 느리기 때문에 자주 사용하는 프로그램을 사용할 때 비효율적이다. 때문에 사용빈도가 높은 부분은 캐쉬 메모리에 넣어놓아 효율적인 작업수행을 가능하게 한다. MMS와 CPU에 배치해서 사용한다.</li>\n<li>현재 진행되고 있는 프로그램의 일부 또는 사용빈도가 높은 임시 데이터를 저장한다.</li>\n</ul>\n<h3 id=\"보조기억장치auxiliary-memory-unit\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%A1%B0%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98auxiliary-memory-unit\" aria-label=\"보조기억장치auxiliary memory unit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보조기억장치(Auxiliary Memory Unit)</h3>\n<ul>\n<li>비교적 저속이고 대용량의 자료 보관이 가능하다. (서랍에 비유가능) 보통 당장 사용하지 않을 정보를 저장하는 용도로 사용된다.</li>\n<li>보조기억장치 내의 자료는 필요한 경우 주 기억장치로 옮겨져야한다. (Loading, ROM의 역할)</li>\n<li>Magnetic Tape, USB, SD card - 필요한 파일의 생성 및 삭제가 가능</li>\n<li>Magnetic drum, disk - back up 저장 장치</li>\n<li>코어(core) 메모리, magnetic bubble, CCD(Charge Coupled Device)등의 대용량 저장장치</li>\n</ul>\n<h3 id=\"컴퓨터-시스템의-메모리-계층\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%93%A8%ED%84%B0-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B3%84%EC%B8%B5\" aria-label=\"컴퓨터 시스템의 메모리 계층 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴퓨터 시스템의 메모리 계층</h3>\n<ul>\n<li>왜 메모리를 계층별로 나누어서 사용할까? - <strong>입출력의 경제성</strong> 때문이다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/120201616-9a852c80-c260-11eb-8086-18a3a5defdf4.png\" alt=\"image\"></p>\n<ul>\n<li>캐쉬 메모리는 CPU와 주기억장치 사이에 위치하며 CPU는 캐쉬메모리를 먼저 확인한 후에 주기억장치를 확인한다. 여기서 CPU는 보조 기억장치까지 관리하지 않는다는 것을 알 수 있는데, 그것은 성능저하 문제 때문이다. 성능저하를 막기 위해 CPU는 주기억장치와 캐쉬메모리만 관리하고, 보조기억장치는 I/O Processor가 따로 관리한다.</li>\n<li>SRAM는 속도가 비싼 대신 빠르고, DRAM은 SRAM에 비해 느리고 저렴해서 자주 사용해야 하는 일부분에 해당하는 부분은 SRAM을 사용하고(캐쉬), 그 외의 부분들은 DRAM을 사용했다.(주기억장치)</li>\n<li>여기서 주로 사용하는 부분은 극히 일부분이라는 점과, 빠른 메모리가 비싸다는 점때문에 메모리에 계층을 두고 맞는 장치를 사용하게 되었다.</li>\n<li>보조기억장치는 I/O Processor를 통해서 주 기억장치로 넘어가고 거기서 CPU로 이동하기 때문에 시간이 더 많이 걸린다.</li>\n</ul>\n<h2 id=\"주-기억장치\" style=\"position:relative;\"><a href=\"#%EC%A3%BC-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98\" aria-label=\"주 기억장치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주 기억장치</h2>\n<h3 id=\"주-기억장치의-종류\" style=\"position:relative;\"><a href=\"#%EC%A3%BC-%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"주 기억장치의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주 기억장치의 종류</h3>\n<p><strong>RAM(Ramdom Access Memory)</strong></p>\n<ul>\n<li>\n<p>SRAM, Static RAM</p>\n<ul>\n<li>전원이 연결되어 있는 동안 정보를 유지한다. (Flip-Flop으로 구성되어 있음)</li>\n<li>사용이 편리하고 읽기와 쓰기 시간이 짧다</li>\n<li>Cache 메모리에 사용</li>\n</ul>\n</li>\n<li>\n<p>DRAM, Dynamic RAM</p>\n<ul>\n<li>주기적으로 재충전을 해주어야 정보가 유지된다.</li>\n<li>전력 소비가 적고, 하나의 칩으로 대량의 정보를 저장 할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p><strong>ROM(Read Only Memory)</strong></p>\n<ul>\n<li>부트스트랩 로더, bootstrap loader</li>\n<li>전원의 on/off와 무관하게 작동되기 때문에 불변하는 상수의 표 등이 저장된다.</li>\n</ul>\n<h3 id=\"ram의-동작-원리\" style=\"position:relative;\"><a href=\"#ram%EC%9D%98-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC\" aria-label=\"ram의 동작 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RAM의 동작 원리</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/120201685-acff6600-c260-11eb-991d-bf1354c8d0e5.png\" alt=\"image\"></p>\n<ul>\n<li>빨간색 점선 내부가 주 기억공간</li>\n<li>MAR, Memory Address Register - 기억공간의 어떤 주소에 write/read 할 수 있는지 알려준다.</li>\n<li>주소 디코더 - 주소를 해석하고 그 의미가 무엇인지 해석하여 실제 번지를 지정해준다.(오른쪽 아래)</li>\n<li>MBR - Memory Buffer Register</li>\n</ul>\n<h2 id=\"보조기억장치\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%A1%B0%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98\" aria-label=\"보조기억장치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보조기억장치</h2>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/120201758-c1436300-c260-11eb-9ea1-21afc59018db.png\" alt=\"image\"></p>\n<h3 id=\"보조기억장치auxiliary-memory-unit의-주요-특성\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%A1%B0%EA%B8%B0%EC%96%B5%EC%9E%A5%EC%B9%98auxiliary-memory-unit%EC%9D%98-%EC%A3%BC%EC%9A%94-%ED%8A%B9%EC%84%B1\" aria-label=\"보조기억장치auxiliary memory unit의 주요 특성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보조기억장치(Auxiliary Memory Unit)의 주요 특성</h3>\n<ul>\n<li>보조기억장치를 설명할 때 사용하는 여러 용어들이 있다.</li>\n<li>\n<p>접근 시간</p>\n<p>메모리 내의 기억장소에 도달하여 그 내용을 얻는데 요구되는 평균시간</p>\n</li>\n<li>\n<p>시크타임, Seek time</p>\n<p>read/write head가 지정된 기억장소에 도달하는데 소요되는 시간</p>\n</li>\n<li>\n<p>트렌스퍼 타임, Transfer Time</p>\n<p>추출된 데이터를 장치 내 또는 장치 밖 필요한 곳으로 전송하는데 요구되는 시간</p>\n</li>\n<li>\n<p>레코드, record</p>\n<p>일반적으로 데이터가 기록되는 단위, 시크 타임을 체크하게 되는 기준(일정한 길이의 수치 또는 문자 집합)</p>\n</li>\n<li>\n<p>전송률</p>\n<p>장치가 레코드의 시작점에 위치한 다음 단위 시간 당(보통 minute) 전송할 수 있는 문자나 워드의 수</p>\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]20_Memory system의 이해","date":null,"lang":null}}},{"node":{"id":"50f34824-08ed-5b8e-b4bf-7ec4f58002fa","excerpt":"Associative Memory Cache Memory Associative Memory 내용애 의해 접근하는 메모리 장치를 이르는 용어 메모리 장치, Memory device 자료(data)의 저장(store)과 접근(access)을 용이하게 하기 위해 필요로 하는 장치 결국 CPU…","html":"<ul>\n<li>Associative Memory</li>\n<li>Cache Memory</li>\n</ul>\n<hr>\n<h2 id=\"associative-memory\" style=\"position:relative;\"><a href=\"#associative-memory\" aria-label=\"associative memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Associative Memory</h2>\n<p>내용애 의해 접근하는 메모리 장치를 이르는 용어</p>\n<ul>\n<li>\n<p>메모리 장치, Memory device</p>\n<p>자료(data)의 저장(store)과 접근(access)을 용이하게 하기 위해 필요로 하는 장치</p>\n</li>\n<li>결국 CPU는 필요한 자료를 얻기 위해 메모리 장치에 탐색(search)을 하게 될 수 밖에 없고, 좀 더 효율적은 탐색이 가능할 수 있는 저장 공간의 필요성이 생겼다. 이 필요에 의해 만들어진 저장 형태를 Associative Memory라고 한다.</li>\n<li>잘 저장해놓고 잘 꺼내서 쓰는 것을 목적으로 한다.</li>\n<li>다른 말로 내용지정메모리(content addressable memory, CAM)이라고도 한다.</li>\n</ul>\n<p>이 방식은 <strong>데이터의 내용을 병렬 탐색을 하기에 적합하도록 구성</strong>되어 있으며, 탐색은 전체 워드 또는 한 워드 내의 일부만을 가지고 실행 될 수 없다.</p>\n<p>각 셀이 저장 능력 뿐 아니라 <strong>외부의 인자와 내용을 비교하기 위한 논리회로</strong>를 갖고 있기 때문에 RAM보다 값이 비싸다. 따라서 탐색시간이 짧아야 하는 것이 중요한 이슈일 경우에 활용한다.</p>\n<h3 id=\"associative-memory의-하드웨어-구성과-메모리\" style=\"position:relative;\"><a href=\"#associative-memory%EC%9D%98-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"associative memory의 하드웨어 구성과 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Associative Memory의 하드웨어 구성과 메모리</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/120335502-7b53d100-c32c-11eb-9fb8-e31e044fc12f.png\" alt=\"image\"></p>\n<ul>\n<li>m개의 words는 n개의 bits로 이루어져있음</li>\n<li>Match register - 일치하는 단어가 있으면 레지스터의 값이 1로 바뀌고 비교가 끝난 후에는 m개의 레지스터의 값을 읽으면서 과정이 끝남</li>\n<li>Mask - and 연산자를 사용해서 마스크하는 것</li>\n</ul>\n<p><strong>Key register의 역할</strong></p>\n<ul>\n<li>\n<p>인자 워드(argument register)의 특정 영역이나 키를 선택하기 위한 마스크(mask)를 제공한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/120335832-c2da5d00-c32c-11eb-9c5c-7d039b38a335.png\" alt=\"image\"></p>\n</li>\n</ul>\n<hr>\n<h2 id=\"cache-memory\" style=\"position:relative;\"><a href=\"#cache-memory\" aria-label=\"cache memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache Memory</h2>\n<h3 id=\"참조의-국한성locality-of-reference\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%EC%9D%98-%EA%B5%AD%ED%95%9C%EC%84%B1locality-of-reference\" aria-label=\"참조의 국한성locality of reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조의 국한성(locality of reference)</h3>\n<p>프로그램이 수행되는 동안 메모리 참조는 국한된 영역에서만 이루어지는 경향이 있음을 확인할 수 있다.</p>\n<ul>\n<li>프로그램 루프와 서브루틴의 빈번한 활용</li>\n<li>순차적 프로그램의 실행</li>\n<li>\n<p>데이터 메모리 참조에서도 동일한 경향이 있음을 확인할 수 있다.</p>\n<ul>\n<li>테이블-룩업(loop-up) 절차</li>\n<li>공통 메모리와 배열 사용 예</li>\n</ul>\n</li>\n</ul>\n<p>캐시 메모리는 <strong>참조의 국한성(locality of reference)</strong>을 이용하여</p>\n<ul>\n<li>속도는 빠르고 (CPU와 거의 동일)</li>\n<li>조그마한 메모리(비싸서, 경제성)</li>\n</ul>\n<p>를 이용하여 프로그램을 수행시키는데, 평균 메모리 접근 시간의 단축과 그에 따른 전체 프로그램의 수행 시간의 절약을 담보한다.</p>\n<h3 id=\"cache-메모리의-동작과-성능\" style=\"position:relative;\"><a href=\"#cache-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%9D%98-%EB%8F%99%EC%9E%91%EA%B3%BC-%EC%84%B1%EB%8A%A5\" aria-label=\"cache 메모리의 동작과 성능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache 메모리의 동작과 성능</h3>\n<p><strong>Cache의 기본 동작</strong>(CPU가 메모리에 접근 할 필요가 있는 경우)</p>\n<ul>\n<li>Cache를 체크</li>\n<li>워드가 Cache에서 발견되면(hit) 읽어들이고 아닐 경우(miss) 주 기억장치에 접근한다.</li>\n<li>이 워드를 포함한 블록(1~16워드, 환경에 따라 다름)을 Cache로 전송한다.</li>\n</ul>\n<p><strong>히트율, hit ratio</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/120336623-7e02f600-c32d-11eb-8f9e-4c1fd9c28b3b.png\" alt=\"image\"></p>\n<h3 id=\"cache-메모리의-매핑-프로세스\" style=\"position:relative;\"><a href=\"#cache-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%9D%98-%EB%A7%A4%ED%95%91-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\" aria-label=\"cache 메모리의 매핑 프로세스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache 메모리의 매핑 프로세스</h3>\n<ul>\n<li>\n<p>효율적 메모리 관리를 위해서는 효율적으로 cache를 구성하는 방법이 현존하는 메모리 관리 방법 중 최고의 방법이다.</p>\n<ul>\n<li>associative mapping</li>\n<li>Direct mapping</li>\n<li>Set-associative mapping</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]21_효율적 메모리 관리 정책","date":null,"lang":null}}},{"node":{"id":"6ff026cc-ead8-52ee-8f95-b0b064e248bc","excerpt":"Pipeline CPU의 성능 분석 파이프라인 분기 예측 RISC Processor 파이프라인 CPU 성능 분석 명령어 파이프라인이 정상적인 동작에서 벗어나게 되는 요인 자원 충돌(Resource conflict…","html":"<ul>\n<li>\n<p>Pipeline CPU의 성능 분석</p>\n<ul>\n<li>파이프라인 분기 예측</li>\n<li>RISC Processor</li>\n<li>파이프라인 CPU 성능 분석</li>\n</ul>\n</li>\n</ul>\n<p><strong>명령어 파이프라인이 정상적인 동작에서 벗어나게 되는 요인</strong></p>\n<ul>\n<li>\n<p>자원 충돌(Resource conflict)</p>\n<p>두 세그먼트가 동시에 메모리에 접근하려고 하는데서 기인하는데, 명령어 메모리와 데이터 메모리를 분리함으로써 대부분 해결할 수 있다.</p>\n</li>\n<li>\n<p>데이터 의존성(data dependency)</p>\n<p>어떤 명령어가 이전 명령어의 결과에 의존하여 수행되는데, 그 값이 아직 준비되지 읂은 경우 발생한다.</p>\n</li>\n<li>\n<p>분기 곤란(branch difficulty)</p>\n<p>분기 명령어같이 PC의 값을 변경시키려는 명령어에 의해 발생한다</p>\n</li>\n</ul>\n<h3 id=\"데이터-의존성\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%98%EC%A1%B4%EC%84%B1\" aria-label=\"데이터 의존성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 의존성</h3>\n<p>데이터나 주소의 충돌은 명령어 파이프라이늬 성능을 저하시키는 요인이 된다.</p>\n<p><strong>데이터 의존성</strong></p>\n<ul>\n<li>아직 준비되지 않은 데이터를 기다리는 경우에 발생한다고 할 수 있다.</li>\n<li>ex. FO에 의해 피연산자를 fetch하려고 하는 경우 아직 EX세그먼트에 의해 데이터가 만들어지지 않은 경우</li>\n</ul>\n<p><strong>주소 의존성</strong></p>\n<ul>\n<li>마이크로 연산 시 레지스터 간접모드를 사용하는 명령어는 이전 명령어가 주소값을 메모리로부터 로드하는 명령이라면 곧바로 피 연산자를 fetch하지 못하고 기다리게 된다.</li>\n</ul>\n<p><strong>데이터 의존성 해결 방법</strong></p>\n<ul>\n<li>\n<p>hardware interlock / 하드웨어 인터락</p>\n<p>어떤 명령어의 피연산자가 파이프라인에 앞서간 명령어의 목적지와 일치하는지 검사한다. 이러한 상황이 감지되면 피연산자가 준비되지 않은 명령어는 충돌을 피할 수 있을 만큼 충분한 클럭 사이클을 두어 지연시킨다.</p>\n</li>\n<li>\n<p>operand forwarding / 오퍼랜드 포워딩</p>\n<p>충돌을 감지하는 경우 특별한 통로를 통해 직접 파이프라인 세그먼트를 전달하는 경우</p>\n<p>있을 수 있는 모든 충돌을 색인으로 체크해놓고 감지될 경우 정해진 경로로 처리한다.</p>\n</li>\n</ul>\n<p><strong>분기 명령어의 처리</strong></p>\n<p>조건분기 또는 무조건분기 등은 처리여하에 따라 파이프라인의 정상적인 프로그램 순서를 바꾸어버리기 때문에 파이프라인 시스템을 채택하고 있는 컴퓨터의 성능을 저하시키는 주요인으로 간주되고 있다.</p>\n<p>순차적으로 처리될 명령어를 분기의 목표가 되는 명령어와 함께 저장하는 방법을 사용한다.</p>\n<ul>\n<li>\n<p>분기 목표 버퍼 / branch target buffer, BTB 의 사용</p>\n<p>fetch 세그먼트에 속해있는 associate memory</p>\n<p>(associate memory : 주소가 아닌 내용에 의해 검색이 가능한 기억장치)</p>\n<p>이전에 실행된 분기 명령어의 분기 목표 명령어를 저장하여 활용한다. (loop buffer - 일종의 레지스터)</p>\n</li>\n<li>\n<p>분기 예측(branch prediction)</p>\n<p>실제 다양한 프로그램의 실행 결과를 분석한 결과, 참조의 시간적 지역성과 유사하게 일부 명령어들은 반복 수행되며 반복 실행 시에는 규칙성을 갖는다.</p>\n<p>이러한 예측 기법을 이용하여 분기 및 적재 명령어가 참조하는 오퍼랜드도 반복 참조 시 규칙성을 갖고 있으며 이를 이용할 경우 fetch 과정에서 신속하게 오퍼랜드의 제공 및 fetch가 수월해 질 수 있다. 다만 예측 실패시 패널티(시간지연)이 있을 수 있다.</p>\n</li>\n</ul>\n<h3 id=\"risc-processor\" style=\"position:relative;\"><a href=\"#risc-processor\" aria-label=\"risc processor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RISC Processor</h3>\n<p><strong>RISC 프로세서의 설계 목표</strong></p>\n<p>실행 명령어 수는 증가하더라도 작업 처리 시간은 감소시킬 수 있다.</p>\n<p>명령어당 실행 클록수(CPI)와 클록 주기를 파이프라인 구조를 이용하여 감소시킬 수 있다.</p>\n<p><strong>RISC 프로세서의 구조적 특징</strong></p>\n<ul>\n<li>명령어의 1 사이클 실행을 위한 파이프라인 구조, 메모리 참조를 위한 온칩캐쉬(CPU 내 메모리 구현, 명령어 캐쉬, 자료 캐쉬로 구성)</li>\n<li>간단한 명령 코드와 주소 지정 모드 및 하드웨어적 제어장치</li>\n<li>신속한 오퍼랜드 참소/문맥 전환을 위한 레지스터 집합(중첩된 레지스터 윈도우)</li>\n<li>실수 연산의 별도 처리를 위한 코프로세서(co-processor)</li>\n</ul>\n<p><strong>RISC 파이프라인</strong></p>\n<ul>\n<li>명령어 사이클은 세 개의 부연산으로 나뉘어 다음과 같은 세 세그먼트로 구성된다.</li>\n<li>딜레이 시간을 프로그램적으로 주는 것이 아니라 컴파일러로 준다.</li>\n</ul>\n<p><img src=\"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/d152029a-074d-420f-bf80-7c0273745388/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&#x26;X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210529%2Fus-west-2%2Fs3%2Faws4_request&#x26;X-Amz-Date=20210529T132525Z&#x26;X-Amz-Expires=86400&#x26;X-Amz-Signature=c6387cdb8733c88bdcaddc7e136adcd64e3f4f68db89c87f4828ec55a5719504&#x26;X-Amz-SignedHeaders=host&#x26;response-content-disposition=filename%20%3D%22Untitled.png%22\"></p>\n<h3 id=\"파이프라인-cpu-성능-향상\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-cpu-%EC%84%B1%EB%8A%A5-%ED%96%A5%EC%83%81\" aria-label=\"파이프라인 cpu 성능 향상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이프라인 CPU 성능 향상</h3>\n<p>이론적으로는 명령어 세그먼트의 횟수가 많아질수록 파이프라인의 최대 속도가 증가하는 것으로 분석되었으나, 이를 구현하기 위해서는 까다로운 조건이 필요하다.</p>\n<ul>\n<li>모든 명령어는 동일한 처리과정(세그먼트의 적용)으로 처리되어야한다.</li>\n<li>파이프라인을 구성하는 각 단계의 처리 시간이 일정해야 한다.</li>\n<li>모든 명령어는 작성된 순서에 따라 순차적으로 실행되어야 한다. (분기명령, 함수호출, 반환명령 등에 의해 순차성이 깨지지 않아야함)</li>\n<li>사용 명령어들 사이에는 상호 의존성이 없어야한다.</li>\n<li>명령어들 처리 시 공유 자원의 충돌이 없어야한다.\n이 부분은 명령어를 저장하는 공간과 자료를 저장하는 공간을 분리함으로써 해결할 수 있다.</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]19_Pipeline CPU의 성능 분석","date":null,"lang":null}}},{"node":{"id":"b6faa0b8-275f-52d1-9354-35e5a22a3143","excerpt":"Cache 메모리 전송을 위한 다양한 매핑 기법 가상 메모리 메모리 관리 하드웨어 Cache 메모리 전송을 위한 다양한 매핑 방법 Cache 메모리의 매핑 프로세스 Associative mapping Direct mapping Set-associative mapping image…","html":"<ul>\n<li>Cache 메모리 전송을 위한 다양한 매핑 기법</li>\n<li>가상 메모리</li>\n<li>메모리 관리 하드웨어</li>\n</ul>\n<hr>\n<h2 id=\"cache-메모리-전송을-위한-다양한-매핑-방법\" style=\"position:relative;\"><a href=\"#cache-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A0%84%EC%86%A1%EC%9D%84-%EC%9C%84%ED%95%9C-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%A7%A4%ED%95%91-%EB%B0%A9%EB%B2%95\" aria-label=\"cache 메모리 전송을 위한 다양한 매핑 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache 메모리 전송을 위한 다양한 매핑 방법</h2>\n<h3 id=\"cache-메모리의-매핑-프로세스\" style=\"position:relative;\"><a href=\"#cache-%EB%A9%94%EB%AA%A8%EB%A6%AC%EC%9D%98-%EB%A7%A4%ED%95%91-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\" aria-label=\"cache 메모리의 매핑 프로세스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache 메모리의 매핑 프로세스</h3>\n<ul>\n<li>Associative mapping</li>\n<li>Direct mapping</li>\n<li>Set-associative mapping</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121010527-81d0c580-c7d0-11eb-8c6b-00e9fb772330.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>상기의 내용을 설명하기 위해 다음과 같은 설정을 가정한다.</p>\n<ul>\n<li>주 기억장치 : 12bit 32K워드를 저장</li>\n<li>cache memory ; 512 words/주어진 시간 내 저장</li>\n<li>CPU는 main/cache memory 모두 통신 가능</li>\n<li>우선 15bit의 주소를 cache로 보내어 hit가 발생하면 cache로부터 12bit의 데이터를 받아들인다. 만약 miss가 발생하면 주 기억장치로부터 워드를 읽고, 이를 cache로 이동, 저장한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"associative-mapping\" style=\"position:relative;\"><a href=\"#associative-mapping\" aria-label=\"associative mapping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Associative mapping</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121010889-edb32e00-c7d0-11eb-8177-581b070f9325.png\" alt=\"image\"></p>\n<ul>\n<li>가장 빠르고 융통성 있는 cache 구조</li>\n<li>CPU의 15bit 주소는 인자 레지스터에 놓여지며, associative memory 내 주소와 같은 12bit의 데이터를 읽어 CPU로 보낸다.</li>\n<li>miss인 경우 CPU는 주 기억장치에서 해당 자료를 찾아 cache로 옮긴다.</li>\n<li>만약 cache에 여유 공간이 있다면 그 공간에 주소와 데이터를 저장한다.</li>\n<li>cache가 꽉 차 있을 경우 기존 cache의 주소와 데이터 쌍 중 주어진 알고리즘에 의해 해당 주소 데이터 쌍이 새로운 쌍으로 대체 된다.</li>\n</ul>\n<h3 id=\"direct-mapping\" style=\"position:relative;\"><a href=\"#direct-mapping\" aria-label=\"direct mapping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Direct mapping</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121011613-c4df6880-c7d1-11eb-8c84-0acf32f58392.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121011658-d0329400-c7d1-11eb-92f1-a27a5af423fa.png\" alt=\"image\"></p>\n<h3 id=\"set-associative-mapping\" style=\"position:relative;\"><a href=\"#set-associative-mapping\" aria-label=\"set associative mapping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set-associative mapping</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121011714-e3456400-c7d1-11eb-93ad-10aa29e50b85.png\" alt=\"image\"></p>\n<ul>\n<li>Cache의 각 워드는 같은 인덱스 주소 아래 두 개 이상의 메모리 워드를 저장 할 수 있게 함으로써 매핑의 단점을 보완한 논리이다.</li>\n<li>\n<p>한 인덱스 안에 두 개의 태그를 가지는 경우 cache를 구현한 예가 위의 그림이다.</p>\n<ul>\n<li>cache 메모리의 크기 : 512 X 36(=2 X (6 + 12))</li>\n</ul>\n</li>\n<li>큰 규모의 cache는 히트율을 높일 수 있으나 좀 더 복잡한 비교 논리 회로를 필요로 한다.</li>\n<li>기존 데이터의 대체 알고리즘은 복잡해진다.</li>\n</ul>\n<h2 id=\"가상-메모리\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"가상 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 메모리</h2>\n<h3 id=\"virtual-memory-vs-cache-memory\" style=\"position:relative;\"><a href=\"#virtual-memory-vs-cache-memory\" aria-label=\"virtual memory vs cache memory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Virtual memory VS Cache memory</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121012099-53ec8080-c7d2-11eb-86da-8bb46c213b56.png\" alt=\"image\"></p>\n<h2 id=\"메모리-관리-하드웨어\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4\" aria-label=\"메모리 관리 하드웨어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 관리 하드웨어</h2>\n<h3 id=\"메모리-관리-시스템\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"메모리 관리 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 관리 시스템</h3>\n<ul>\n<li>메모리의 광역화 (가상 메모리+캐시 메모리)와 멀티프로그램의 발달로 인해 시스템 내 상호 간섭도 시스템 기능 저하 요인의 중요한 부분이다.</li>\n<li>프로그램과 프로그램 사이의 데이터 흐름, 선후 데이터의 활용, 사용 메모리의 양 조절, 다른 프로그램의 흐름에 영향을 끼치지 못하게 하는 제어 등의 역할을 한다.</li>\n<li>메모리 내의 여러 프로그램을 관리하기 위한 H/W와 S/W 절차의 집합체로 메모리 관리 소프트웨어는 운영체제(OS)의 일부이다.</li>\n</ul>\n<h3 id=\"메모리-관리-하드웨어-1\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-1\" aria-label=\"메모리 관리 하드웨어 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모리 관리 하드웨어</h3>\n<ul>\n<li>논리 메모리 참조를 물리 메모리 주소로 변환하는 동적 저장장소 재배치를 위한 기능</li>\n<li>메모리 내에서 서로 다른 사용자가 하나의 프로그램을 같이 사용하기 위한 편의</li>\n<li>사용자 간의 허락되지 않은 접근을 방지하고 사용자가 OS의 기능을 변경하지 못하도록 하는 정보의 보호의 역할</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]22_컴퓨터 성능 개선을 위한 메모리 관리","date":null,"lang":null}}},{"node":{"id":"c13db61a-16f8-56e0-bffb-f5cdeb5eec02","excerpt":"…","html":"<ul>\n<li>시스템 버스의 필요성</li>\n<li>시스템 버스의 제어</li>\n<li>시스템 버스의 활용</li>\n</ul>\n<hr>\n<h2 id=\"시스템-버스의-필요성\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B2%84%EC%8A%A4%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"시스템 버스의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시스템 버스의 필요성</h2>\n<h3 id=\"버스와-메모리-전송\" style=\"position:relative;\"><a href=\"#%EB%B2%84%EC%8A%A4%EC%99%80-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A0%84%EC%86%A1\" aria-label=\"버스와 메모리 전송 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>버스와 메모리 전송</h3>\n<p>전형적인 디지털 컴퓨터는 많은 레지스터와 레지스터들 사이의 정보 전송을 위한 경로를 가져야 한다. 시스템은 이를 위해 각 레지스터들 사이를 연결하는 번거로움 대신 공통의 버스 시스템이라는 효율적인 방법을 사용한다.</p>\n<ul>\n<li>BUS : 한번에 하나의 전송 만이 이루어지도록 제어 신호를 이용하여 해당 레지스터를 선별</li>\n</ul>\n<p>또한, CPU가 행하는 중요한 기능 중 하나는 외부 주변장치(입출력 장치) 및 통신(network)의 주체로서 정보의 입출력을 관장하는 일이다.</p>\n<ul>\n<li>Bus Adapter : 입출력 버스를 시스템 버스 라인에 연결</li>\n<li>I/O controller(입출력 제어기, 입출력 제어 인터페이스) : 입출력 속도 및 유사한 동작 특성 단위로 입출력 장치들을 제어 관리하는 장치</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121544332-987f5280-ca44-11eb-815a-cbcf96e297fe.png\" alt=\"image\"></p>\n<ul>\n<li>레지스터와 레지스터를 각각 연결하는 대신에 라인을 하나 만들어놓고 그 라인에 연결하는 방식을 사용함</li>\n<li>Bus라인은 하나만 있지 않다. 그룹별로 bus가 나눠져 있고(I/O bus), Bus adapter에 의해 common bus로 모인다.</li>\n</ul>\n<h2 id=\"시스템-버스의-제어\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B2%84%EC%8A%A4%EC%9D%98-%EC%A0%9C%EC%96%B4\" aria-label=\"시스템 버스의 제어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시스템 버스의 제어</h2>\n<h3 id=\"시스템-버스와-io-버스-간-상호-중재\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B2%84%EC%8A%A4%EC%99%80-io-%EB%B2%84%EC%8A%A4-%EA%B0%84-%EC%83%81%ED%98%B8-%EC%A4%91%EC%9E%AC\" aria-label=\"시스템 버스와 io 버스 간 상호 중재 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시스템 버스와 I/O 버스 간 상호 중재</h3>\n<p>컴퓨터 시스템에는 각 요소들 사이의 정보 전송을 위한 다양한 단계의 여러 버스가 존재한다. CPU 내에서도 레지스와 ALU 사이의 정보 전송을 위한 여러 내부 버스가 존재한다.</p>\n<ul>\n<li>메모리 버스 : 데이터, 주소, 읽기/쓰기 정보 전송</li>\n<li>I/O 버스 : 입출력 장치로 정보를 주고 받는데 사용</li>\n</ul>\n<p>공유 메모리 멀티 프로세서 시스템에서 프로세서는 시스템 버스를 통해 공유 자원에 대한 접근을 요구한다.</p>\n<ul>\n<li>공유 자원이 사용되고 있지 않을 경우 바로 사용 승인</li>\n<li>공유 자원이 사용되고 있을 경우, 선점 프로세스의 종료까지 대기 상태 유지</li>\n<li>동시에 시스템 버스를 요구하는 경우, 공유자원에 대한 충돌을 해결하기 위한 <strong>중재(arbiration)</strong> 동작이 수행되어야 한다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121544984-14799a80-ca45-11eb-8330-e5993704eafd.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>데이터 라인 : 프로세서와 공통 메모리 사이의 데이터 전송 경로 제공(16 ~ 32 line이 가장 일반적, 양방향 정보 전송)</p>\n<ul>\n<li>데이터 전송 모드</li>\n<li>동기: source &#x26; target 장치 간 공통 clock 구동에 의해 정해진 시분할 동안 데이터가 전송된다.</li>\n<li>비동기: 각 장치들을 독립적 클럭으로 동기화, source &#x26; target 장치 간 핸드셰이킹(hand shaking) 제어 신호에 의해 각 데이터를 전송한다.</li>\n<li>주소 라인: 메모리 주소와 입출력 포트 식별에 활용(단방향 정보 전송)</li>\n<li>제어 라인: 장치들 간의 정보 전송을 제어하는 신호를 제공</li>\n<li>Timing signal: 데이터와 주소 정보의 유효성 체크</li>\n<li>Command line: 수행 할 동작을 지정</li>\n<li>전송 신호 : 메모리 읽기와 쓰기 등\n예. 메모리 I/O 모두를 포함, 주소 라인은 독립된 메모리와 I/O 공간의 지정을 위해 활용</li>\n<li>전송의 승낙(acknowledge)\n예. 전송이 완료되었음을 알리는데 사용된다.</li>\n<li>인터럽트 요구\n예. 8개의 인터럽트 요구 명령과 1개의 승낙 명령으로 구성. 우선 순위 인터럽트 제어기에 연결되어 활용됨</li>\n<li>버스 제어 신호 : 버스 요구 및 버스 승인(grant) 등\n예. bus lock : 멀티 프로세서 응용에서 검사와 설정이 실행되는 동안 다른 프로세서가 버스를 계속 잡고 있지 못하도록 막아준다.</li>\n<li>중재 절차를 위한 신호 등으로 구성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"시스템-버스의-활용\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B2%84%EC%8A%A4%EC%9D%98-%ED%99%9C%EC%9A%A9\" aria-label=\"시스템 버스의 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시스템 버스의 활용</h2>\n<h3 id=\"직립-중재-절차\" style=\"position:relative;\"><a href=\"#%EC%A7%81%EB%A6%BD-%EC%A4%91%EC%9E%AC-%EC%A0%88%EC%B0%A8\" aria-label=\"직립 중재 절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>직립 중재 절차</h3>\n<p>시스템 버스 제어기 : 중재를 위한 논리 회로 내장</p>\n<ul>\n<li>우선 순위를 바탕으로 Daisy-chain연결로 중재 하는 방법 제시</li>\n<li>\n<p>가장 높은 중재자의 PI는 항상 1(버스 신청 시 항상 할당)이고 PO는 0이다.</p>\n<ul>\n<li>만약 해당 중재자가 바스의 사용을 원치 않는다면 해당 중재자의 PI=0, PO=1이 되어 다음 중재자로 전송된다.</li>\n<li>Bus busy line의 활용 → 사용 중인 버스를 특정 중재자가 할당 받고자 할 경우 활용 되는 기법</li>\n<li>해당 중재자(PI=1이고 PO=0을 할당 받은 경우)는 bus 신청 전 Bus busy line 의 상태를 확인한다.</li>\n<li>Bus busy line 비 활성 상태 : 해당 프로세서는 버스 라인을 할당 받고 Bus busy line을 활성 상태로 변경시킨다.</li>\n<li>Bus busy line 활성 상태 : 이는 낮은 우선 순위의 프로세서가 버스를 사용하고 있다는 의미이므로 이 프로세서가 버스 사용을 원료하고 비지 라인을 비활성 상태로 전환할 때까지 대기해야 한다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121546428-3e7f8c80-ca46-11eb-89b6-247adf88f20e.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h3 id=\"병렬-중재-논리\" style=\"position:relative;\"><a href=\"#%EB%B3%91%EB%A0%AC-%EC%A4%91%EC%9E%AC-%EB%85%BC%EB%A6%AC\" aria-label=\"병렬 중재 논리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>병렬 중재 논리</h3>\n<ul>\n<li>각 버스 중재자는 버스 요청 출력 라인(Req)과 버스 승락(Ack) 입력 라인 보유</li>\n<li>버스 비지 라인은 Daisy-chain의 경우와 동일</li>\n<li>BPRN(버스 우선 순위 입력) &#x26; BPRO(버스 우선 순위 출력) → 버스 중재 회로의 데이지 체인 연결에 활용</li>\n<li>Busy(버스 혼잡 신호) → 버스가 사용 중임을 모든 중재자에게 알리는 open collecrot 출력</li>\n<li>CBRQ(공통버스 요구) → open collector 출력, 우선 순위가 낮은 중재자가 현재 버스 사용 중</li>\n<li>각각의 acknowledge와 request에 BREQ(버스 요구) &#x26; BPRN(우선 순위 입력)을 연결해야 함, BCLK(버스 클럭)은 모든 버스 작업의 동기화에 활용</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121546533-522af300-ca46-11eb-9d68-6415a6fe15cd.png\" alt=\"image\"></p>","frontmatter":{"title":"[컴퓨터구조]23_시스템 BUS 구성 및 제어","date":null,"lang":null}}},{"node":{"id":"236ebefb-1a23-5c33-83e9-072a195cbe7a","excerpt":"…","html":"<ul>\n<li>입출력 주소 지정</li>\n<li>입출력 버스 할당</li>\n<li>입출력 수행의 분류</li>\n</ul>\n<hr>\n<h2 id=\"입출력-주소-지정\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%A3%BC%EC%86%8C-%EC%A7%80%EC%A0%95\" aria-label=\"입출력 주소 지정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 주소 지정</h2>\n<p>컴퓨터 시스템에는 다양한 입출력 장치 및 통신 포트 등이 연결된다. 이 장치들을 서로 구분을 하기 위해 각 입출력 장치 또는 통신 포트에 고유한 주소를 할당하게 된다.</p>\n<p>하나의 입출력 장치에 그 상태나 데이터의 입출력 등 용도에 따라 다수의 주소 할당이 가능하다. 일반 저장 공간에 할당된 주소에 비해 입출력 장치의 개수가 작기 때문이다<strong>.</strong></p>\n<ul>\n<li>\n<p><strong>메모리 맵 입출력(memory map I/O)</strong></p>\n<p>메모리에 부여된 주소 공간의 일부를 입출력 주소 공간으로 활용한다.</p>\n<ul>\n<li>동일한 주소선과 주소 공간의 일부를 입출력 주소 공간으로 활용한다.</li>\n<li>시스템은 지정된 주소 값에 의해 데이터 저장 공간과 I/O 장치를 구분한다.</li>\n<li>모든 CPU에 대해 구현이 가능하지만, H/W적(주소 값에 따라) 분류 접근 구현이 필요하다.</li>\n</ul>\n</li>\n<li>\n<p><strong>입출력 맵 입출력(I/O mapped I/O)</strong></p>\n<p>독립된 메모리 주소 공간과 입출력 주소 공간</p>\n<ul>\n<li>메모리와 입출력 주소를 구분하는 제어선을 사용한다.</li>\n<li>상호 구분되는 명령어가 필요하다.(상호 동일한 주소일 경우)</li>\n<li>제어 신호를 통해 메모리/입출력 장치에 접근이 가능하도록 H/W적 구현이 필요하다.</li>\n</ul>\n</li>\n</ul>\n<p>메모리 맵 입출력은 모든 CPU에서 구현이 가능하지만 입출력 맵 입출력의 경우 I/O용 별도의 명령어와 이를 위한 외부 제어선이 있는 CPU에서만 구현이 가능하다. 단. PC에서는 양자 모두 구현이 가능하다고 알려져 있다.</p>\n<h2 id=\"입출력-버스-할당\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EB%B2%84%EC%8A%A4-%ED%95%A0%EB%8B%B9\" aria-label=\"입출력 버스 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 버스 할당</h2>\n<h3 id=\"중앙-제어-버스-vs-분산-제어-버스\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EC%95%99-%EC%A0%9C%EC%96%B4-%EB%B2%84%EC%8A%A4-vs-%EB%B6%84%EC%82%B0-%EC%A0%9C%EC%96%B4-%EB%B2%84%EC%8A%A4\" aria-label=\"중앙 제어 버스 vs 분산 제어 버스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중앙 제어 버스 vs 분산 제어 버스</h3>\n<p><strong>중앙 제어 버스 시스템</strong></p>\n<p>구현 및 관리가 용이하나 제어기의 이상 시 버스 중재 및 활용에 지대한 결함이 발생할 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121702593-fa0af400-cb0c-11eb-8c12-d5b7a7097c5b.png\" alt=\"image\"></p>\n<p><strong>분산 제어 버스 시스템</strong></p>\n<p>버스 상의 모든 장치가 제어 기능을 나누어 실행한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121702848-32123700-cb0d-11eb-8170-77603983aaf8.png\" alt=\"image\"></p>\n<ul>\n<li>I/O 버스는 주로 중앙 제어 버스 시스템을 적용</li>\n<li>시스템 버스로는 분산 제어 버스 시스템을 선호한다.</li>\n</ul>\n<h3 id=\"동적-중재-알고리즘\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%EC%A4%91%EC%9E%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"동적 중재 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 중재 알고리즘</h3>\n<p>정적 우선 순위 알고리즘에 대해 시스템이 동작하고 있는 동안 장치들의 우선 순위를 변경 시킬 필요가 있을 경우 적용이 가능한 알고리즘을 동적 우선 순위 알고리즘이라고 한다.</p>\n<p><strong>시간 분할(time slice) alogrithm</strong></p>\n<p>연속적으로 주어지는 버스 시간을 고정된 길이의 시간 분할로 나누고 이를 라운드로빈(round-robin) 방식으로 각 프로세서에 할당, 버스에서의 위치에 관계없이 모든 요소들이 동등한 서비스를 받게 된다.</p>\n<p><strong>폴링(polling)</strong>을 이용한 버스 시스템</p>\n<ul>\n<li>폴(poll) 라인으로 버스 승인(grant) 신호를 대체하여 모든 장치에 연결한다.</li>\n<li>버스 제어기는 이 신호를 이용하여 각 장치의 주소를 결정한다.</li>\n<li>지정된 순서에 따라 버스를 할당 받는다. 프로그램으로 우선 순위 변경이 가능하다.</li>\n</ul>\n<p><strong>LRU(Least recently used) algorithm</strong></p>\n<ul>\n<li>가장 오랫동안 버스 서비스를 사용하지 못한 장치에게 우선권을 부여한다.</li>\n<li>몇 번의 버스 사이클마다 LRU algorithm에 의해 각 장치의 우선순위가 계속 변경된다.</li>\n<li>모든 프로세서가 버스에 접근 할 수 있는 기회를 동등하게 부여 받을 수 있다.</li>\n</ul>\n<p><strong>first-come &#x26; first-serve</strong></p>\n<p>버스 제어기는 각 프로세서의 버스 요구 도착 시간 별 저장이 가능한 큐(queue)를 이용해 도착한 순서대로 서비스를 제공한다.</p>\n<p><strong>회전 데이지 체인 방식(rotating daisy chain)</strong></p>\n<p>모든 장치를 연결(closed loof)하여 차례로 버스 서비스를 제공하는 방식</p>\n<p>bus busy line에 의해 비활성, 활성을 따져서 세팅한다.</p>\n<h2 id=\"입출력-수행의-분류\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%88%98%ED%96%89%EC%9D%98-%EB%B6%84%EB%A5%98\" aria-label=\"입출력 수행의 분류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 수행의 분류</h2>\n<h3 id=\"동기-버스에-의한-수행\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EA%B8%B0-%EB%B2%84%EC%8A%A4%EC%97%90-%EC%9D%98%ED%95%9C-%EC%88%98%ED%96%89\" aria-label=\"동기 버스에 의한 수행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동기 버스에 의한 수행</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121703706-0fcce900-cb0e-11eb-8e5d-fa751084ba19.png\" alt=\"image\"></p>\n<p>버스에 연결된 모든 장치들에 동일하게 적용하는 버스 clock이 있고, 주소와 자료 및 다른 제어선은 버스 clock을 기준으로 전송된다.</p>\n<ul>\n<li>\n<p>bus clock</p>\n<ul>\n<li>0 -> 1</li>\n<li>필요한 장치의 주소 및 제어 신호를 버스를 통해 발송한다.</li>\n<li>지정된 장치는 주소를 식별한다.</li>\n<li>1 -> 0</li>\n<li>데이터 전송이 시작된다.</li>\n</ul>\n</li>\n<li>별도의 동기용 신호가 필요하지 않다.</li>\n<li>버스에 연결된 모든 장치는 clock에 맞추어 입출력이 진행되도록 설계되어야 한다.</li>\n</ul>\n<h3 id=\"비동기-버스에-의한-수행\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%B2%84%EC%8A%A4%EC%97%90-%EC%9D%98%ED%95%9C-%EC%88%98%ED%96%89\" aria-label=\"비동기 버스에 의한 수행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기 버스에 의한 수행</h3>\n<p><img src=\"https://user-images.githubusercontent.com/53068706/121703746-19eee780-cb0e-11eb-8ab7-cad2a83ee614.png\" alt=\"image\"></p>\n<ul>\n<li>\n<p>주소 및 제어버스</p>\n<p>주소선에 지정된 I/O장치 주소를 전송한다.</p>\n</li>\n<li>\n<p>ready</p>\n<p>I/O 전송 요구 ready 신호를 활성시킨다.</p>\n</li>\n<li>\n<p>Data</p>\n<p>data 전송</p>\n</li>\n<li>CPU로부터 I/O 제어기를 통해 해당 장치의 Ready 신호를 활성시킨다.</li>\n<li>응답/자료 전송</li>\n<li>작업 종료 신호의 비 활성화</li>\n</ul>","frontmatter":{"title":"[컴퓨터구조]24_입출력(I/O) 연결과 주소 지정","date":null,"lang":null}}},{"node":{"id":"b15d3fec-4708-59d3-9f00-8f896a789eb0","excerpt":"Your name Thank you for reading my resume. If you want to contact me, Please send me an email.","html":"<h1 id=\"your-name\" style=\"position:relative;\"><a href=\"#your-name\" aria-label=\"your name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your name</h1>\n<div align=\"center\">\n<p><em>Thank you for reading my resume. If you want to contact me, Please send me an email.</em></p>\n</div>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}}]}},"pageContext":{}},"staticQueryHashes":[]}