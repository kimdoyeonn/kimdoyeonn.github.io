I"9<p>참고: <a href="https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Grid_Layout">MDN</a>, <a href="https://opentutorials.org/course/3086">생활코딩</a> https://heropy.blog/2019/08/17/css-grid/</p>

<p>CSS Grid Layout은 페이지를 여러 주요 영역으로 나누거나, 크기와 위치 및 문서 계층 구조의 관점에서 HTML 기본 요소를 작성된 컨트롤 간의 관계를 정의하는 데 아주 탁월합니다.</p>

<p>테이블과 마찬가지로 그리드 레이아웃은 세로 열(column)과 가로 행(row)을 기준으로 요소를 정렬할 수 있습니다. 하지만 태그들이 복잡하게 얽혀있는 테이블과 달리 그리드는 다양한 레이아웃을 훨씬 더 쉽게 구현할 수 있습니다. 예를 들어, 그리드 컨테이너 속 자식 요소를 마치 CSS로 일일이 위치를 지정해 준 것처럼 실제로 겹치게 층을 지면서 자리를 잡도록 각 요소의 위치를 지정해 줄 수도 있습니다.(!)</p>

<blockquote>
  <p>생활코딩에서 블럭속성태그를 열 별로 정리하는 간단한 실습만 해보고 신기해서 정리하는 중인데, MDN에 나와있는 예시가 너무 신기하다. 난 지금까지 원시인이었던 것임🙄</p>
</blockquote>

<p>CSS Grid는 CSS Flex와 같이 Container와 Item이라는 두 가지 개념으로 구분되어 있습니다. Container는 Item을 감싸는 부모 요소이며, 그 안에서 각 Item을 배치할 수 있습니다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">#grid</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">5px</span> <span class="nb">solid</span> <span class="no">pink</span><span class="p">;</span>
    <span class="nl">display</span><span class="p">:</span> <span class="n">grid</span><span class="p">;</span>
    <span class="py">grid-template-columns</span><span class="p">:</span> <span class="m">150px</span> <span class="m">1</span><span class="n">fr</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">div</span> <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">5px</span> <span class="nb">solid</span> <span class="no">gray</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"grid"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div&gt;</span>NAVIDATION<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div&gt;</span>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Dolor optio itaque quasi maxime tempore molestiae expedita nemo cum suscipit, impedit ad distinctio illo voluptatibus alias a iusto deserunt totam beatae!<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/53068706/107882632-dbfe0000-6f2d-11eb-9d59-2c71e18e70c5.png" alt="grid_ex1" style="zoom:67%;" /></p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.wrapper</span> <span class="p">{</span>
    <span class="nl">display</span><span class="p">:</span> <span class="n">grid</span><span class="p">;</span>
    <span class="py">grid-template-columns</span><span class="p">:</span> <span class="nb">repeat</span><span class="p">(</span><span class="m">3</span><span class="p">,</span> <span class="m">1</span><span class="n">fr</span><span class="p">);</span>
    <span class="py">grid-gap</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
    <span class="py">grid-auto-rows</span><span class="p">:</span> <span class="n">minmax</span><span class="p">(</span><span class="m">100px</span><span class="p">,</span> <span class="nb">auto</span><span class="p">);</span>
<span class="p">}</span>

<span class="nc">.one</span><span class="p">{</span>
    <span class="nl">grid-column</span><span class="p">:</span> <span class="m">1</span><span class="p">/</span><span class="m">3</span><span class="p">;</span>
    <span class="nl">grid-row</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.two</span><span class="p">{</span>
    <span class="nl">grid-column</span><span class="p">:</span> <span class="m">2</span><span class="p">/</span><span class="m">4</span><span class="p">;</span>
    <span class="nl">grid-row</span><span class="p">:</span><span class="m">1</span><span class="p">/</span><span class="m">3</span>
<span class="p">}</span>
<span class="nc">.three</span><span class="p">{</span>
    <span class="nl">grid-column</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
    <span class="nl">grid-row</span><span class="p">:</span> <span class="m">2</span><span class="p">/</span><span class="m">5</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.four</span><span class="p">{</span>
    <span class="nl">grid-column</span><span class="p">:</span> <span class="m">3</span><span class="p">;</span>
    <span class="nl">grid-row</span><span class="p">:</span> <span class="m">3</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.five</span><span class="p">{</span>
    <span class="nl">grid-column</span><span class="p">:</span> <span class="m">2</span><span class="p">;</span>
    <span class="nl">grid-row</span><span class="p">:</span><span class="m">4</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.six</span><span class="p">{</span>
    <span class="nl">grid-column</span><span class="p">:</span> <span class="m">3</span><span class="p">;</span>
    <span class="nl">grid-row</span><span class="p">:</span> <span class="m">4</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.wrapper</span> <span class="nt">div</span><span class="p">{</span>
    <span class="nl">background-color</span><span class="p">:</span> <span class="no">orange</span><span class="p">;</span>
    <span class="nl">opacity</span><span class="p">:</span> <span class="m">0.5</span><span class="p">;</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">red</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"wrapper"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"one"</span><span class="nt">&gt;</span>One<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"two"</span><span class="nt">&gt;</span>Two<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"three"</span><span class="nt">&gt;</span>Three<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"four"</span><span class="nt">&gt;</span>Four<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"five"</span><span class="nt">&gt;</span>Five<span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"six"</span><span class="nt">&gt;</span>Six<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/53068706/107882649-ecae7600-6f2d-11eb-8fa2-c037979d29bd.png" alt="grid_ex2" style="zoom:67%;" /></p>

<h2 id="grid-container-속성">Grid Container 속성</h2>

<table>
  <thead>
    <tr>
      <th>속성</th>
      <th>의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>display</td>
      <td>그리드 컨테이너를 정의</td>
    </tr>
    <tr>
      <td>grid-template-rows</td>
      <td>명시적 행의 크기 정의</td>
    </tr>
    <tr>
      <td>grid-template-columns</td>
      <td>명시적 열의 크기를 정의</td>
    </tr>
    <tr>
      <td>gap(grid-gap)</td>
      <td><code class="language-plaintext highlighter-rouge">row-gap</code>, <code class="language-plaintext highlighter-rouge">column-gap</code>의 단축 속성<br />행과 행, 열과 열 사이의 간격을 정의</td>
    </tr>
  </tbody>
</table>

<h2 id="grid-item-속성">Grid Item 속성</h2>

<table>
  <thead>
    <tr>
      <th>속성</th>
      <th>의미</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>grid-column</td>
      <td><code class="language-plaintext highlighter-rouge">grid-column-start</code>, <code class="language-plaintext highlighter-rouge">grid-column-end</code>의 단축속성(<code class="language-plaintext highlighter-rouge">시작</code>이나 <code class="language-plaintext highlighter-rouge">시작/끝</code>으로 작성)</td>
    </tr>
    <tr>
      <td>grid-row</td>
      <td><code class="language-plaintext highlighter-rouge">grid-row-start</code>, <code class="language-plaintext highlighter-rouge">grid-row-end</code>의 단축속성(<code class="language-plaintext highlighter-rouge">시작</code>이나 <code class="language-plaintext highlighter-rouge">시작/끝</code>으로 작성)</td>
    </tr>
    <tr>
      <td>grid-auto-columns</td>
      <td>암시적 행의 크기를 정의합니다.<br />아이템이 <code class="language-plaintext highlighter-rouge">grid-template-rows</code>로 정의한 명시적 행 외부에 배치되는 경우<br /> 암시적 행의 크기가 적용됩니다.</td>
    </tr>
    <tr>
      <td>grid-auto-rows</td>
      <td>암시적 열의 크기를 정의합니다.<br />아이템이 <code class="language-plaintext highlighter-rouge">grid-template-columns</code>로 정의한 명시적 열 외부에 배치되는 경우<br />암시적 열의 크기가 적용됩니다.</td>
    </tr>
  </tbody>
</table>

<h2 id="css-함수">CSS 함수</h2>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">repeat()</code></p>

    <p>만약 <code class="language-plaintext highlighter-rouge">1200px</code> 너비의 12 컬럼 그리드 탬플릿을 정의하려고 하면 다음과 같이 작성할 수 있다.</p>

    <p><code class="language-plaintext highlighter-rouge">grid-template-columns: 100px 100px 100px 100px 100px 100px 100px 100px 100px 100px 100px 100px</code></p>

    <p>하지만 <code class="language-plaintext highlighter-rouge">repeat()</code>을 사용하면 다음과 같이 간소화할 수 있다.</p>

    <p><code class="language-plaintext highlighter-rouge">grid-template-columns: repeat(12, 100px)</code></p>

    <p>컬럼의 크기는 <code class="language-plaintext highlighter-rouge">fr</code> 단위를 사용해 비율로 지정할 수도 있다. 각 컬럼은 비율에 맞게 출력되기 때문에 컨테이너의 너비가 가변해도 열 크기를 수정할 필요가 없다.</p>

    <p><code class="language-plaintext highlighter-rouge">grid-template-columns: repeat(12, 1fr)</code></p>

    <p><code class="language-plaintext highlighter-rouge">repeat()</code>함수는 두번째 인수를 반복하기 때문에 다음과 같이 활용할 수 있다.</p>

    <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">grid-template-columns</span><span class="o">:</span> <span class="nt">repeat</span><span class="o">(</span><span class="err">4</span><span class="o">,</span> <span class="err">100</span><span class="nt">px</span> <span class="err">200</span><span class="nt">px</span> <span class="err">50</span><span class="nt">px</span><span class="o">)</span>
<span class="nt">grid-template-columns</span><span class="o">:</span> <span class="nt">repeat</span><span class="o">(</span><span class="err">4</span><span class="o">,</span> <span class="err">1</span><span class="nt">fr</span> <span class="err">2</span><span class="nt">fr</span> <span class="err">3</span><span class="nt">fr</span><span class="o">)</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">minmax()</code></p>

    <p>행/열의 ‘‘최소/최대 크기’‘를 정의합니다.</p>

    <p>첫번째 인수는 최솟값이고 두번째 인수는 최댓값이다.</p>

    <p><code class="language-plaintext highlighter-rouge">grid-template-rows</code>, <code class="language-plaintext highlighter-rouge">grid-template-columns</code>, <code class="language-plaintext highlighter-rouge">grid-auto-rows</code>, <code class="language-plaintext highlighter-rouge">grid-auto-columns</code>에서 사용되며 일반 요소에 <code class="language-plaintext highlighter-rouge">min-width</code>와 <code class="language-plaintext highlighter-rouge">max-width</code> 속성을 동시 지정하는 것과 유사하다.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>grid-template-columns: minmax(100px, 1fr) minmax(200px, 1fr)
</code></pre></div>    </div>
  </li>
</ul>

<p><img src="https://heropy.blog/images/screenshot/css-grid/minmax-1.jpg" alt="CSS Grid" style="zoom:67%;" /></p>

<p>암시적 행/열 크기를 좀 더 유연하게 사용할 수도 있습니다.</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">grid-auto-rows</span><span class="o">:</span> <span class="nt">minmax</span><span class="o">(</span><span class="err">200</span><span class="nt">px</span><span class="o">,</span> <span class="nt">auto</span><span class="o">);</span>
<span class="nt">grid-auto-columns</span><span class="o">:</span> <span class="nt">minmax</span><span class="o">(</span><span class="err">300</span><span class="nt">px</span><span class="o">,</span> <span class="nt">auto</span><span class="o">);</span>
</code></pre></div></div>

<p>위의 예제는 행/열의 크기를 최소 200px/300px으로 지정하였고 <code class="language-plaintext highlighter-rouge">auto</code>를 통해 그리드 아이템의 크기에 따라 확장될 수 있습니다.</p>

<p>자세한 속성과 기능은 <a href="https://heropy.blog/2019/08/17/css-grid/">여기서</a> 찾아보기</p>
:ET