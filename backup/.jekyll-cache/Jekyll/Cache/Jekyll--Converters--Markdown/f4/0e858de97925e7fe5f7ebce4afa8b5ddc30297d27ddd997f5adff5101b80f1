I"(<h3 id="모듈">모듈</h3>

<ul>
  <li>모듈: 함수나 변수 또는 클래스를 모아 놓은 파일</li>
  <li>다른 파이썬 프로그램에서 불러와 사용할 수 있게끔 만든 파이썬 파일</li>
  <li>다른 사람이 이미 만들어 놓은 모듈을 사용할 수도 있고 자기가 직접 만들어서 사용할 수도 있다.</li>
</ul>

<h3 id="모듈-만들기">모듈 만들기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># mod1.py
</span><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
<span class="k">def</span> <span class="nf">sub</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span>
</code></pre></div></div>

<ul>
  <li>확장자 py로 만들 파일이 모두 모듈이다.</li>
</ul>

<h3 id="모듈-불러오기">모듈 불러오기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">mod1</span>
<span class="k">print</span><span class="p">(</span><span class="n">mod1</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">mod1</span><span class="p">.</span><span class="n">mul</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>

<span class="kn">import</span> <span class="nn">모듈이름</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">import</code> : 미리 만들어 놓은 파이썬 모듈을 사용할 수 있게 해주는 명령어</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">mod1.py</code>에 들어있는 <code class="language-plaintext highlighter-rouge">add</code> 함수를 사용하기 위해서는 <code class="language-plaintext highlighter-rouge">mod1.add</code> 처럼 <code class="language-plaintext highlighter-rouge">모듈.함수이름</code>형식으로 작성하면 된다.</p>
  </li>
  <li>import는 현재 디렉터리에 있는 파일이나 파이썬 라이브러리가 저장된 디렉터리에 있는 모듈만 불러올 수 있다.</li>
  <li>파이썬 라이브러리 - 파이썬을 설치할 때 자동으로 설치되는 파이썬 모듈</li>
  <li><code class="language-plaintext highlighter-rouge">from 모듈이름 import 모듈함수</code>형식으로 작성하면 모듈이름을 붙이지 않고 바로 함수를 사용할 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">mod1</span> <span class="kn">import</span> <span class="n">add</span><span class="p">,</span> <span class="n">sub</span>
<span class="kn">from</span> <span class="nn">mod1</span> <span class="kn">import</span> <span class="o">*</span> <span class="c1"># mod1 모듈에 있는 모든 함수를 사용할 수 있음
</span></code></pre></div></div>

<h3 id="if-__name__--__main__-의-의미">if __name__ == “__main__”: 의 의미</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># mod1.py
</span><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
<span class="k">def</span> <span class="nf">sub</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span>

<span class="k">print</span><span class="p">(</span><span class="n">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">sub</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">import mod1</code>을 했을 때 아래의 print가 실행되는 것을 막아준다.</li>
  <li><code class="language-plaintext highlighter-rouge">__name__ == "__main__"</code>
    <ul>
      <li>파일을 직접 실행할 경우 값이 <code class="language-plaintext highlighter-rouge">참</code>되어 if 안의 문장이 실행된다.</li>
      <li>반대로 대화형 인터프리터나 달느 파일에서 이 모듈을 불러서 사용할 때는 <code class="language-plaintext highlighter-rouge">거짓</code>이 되어 다음 문장이 수행되지 않는다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">__name__</code>
    <ul>
      <li>직접 파일을 실행할 경우 <code class="language-plaintext highlighter-rouge">__name__</code>변수에 <code class="language-plaintext highlighter-rouge">__main__</code>값이 저장된다.</li>
      <li>파이썬 셸이나 다른 파이썬 모듈에서 mod1을 import 할 경우에는 <code class="language-plaintext highlighter-rouge">__name__</code>변수에는 모듈 이름 값 <code class="language-plaintext highlighter-rouge">mod1</code>이 저장된다.</li>
    </ul>
  </li>
</ul>

<h3 id="클래스나-변수-등을-포함한-모듈">클래스나 변수 등을 포함한 모듈</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># mod2.py
</span><span class="n">PI</span> <span class="o">=</span> <span class="mf">3.141592</span>

<span class="k">class</span> <span class="nc">Math</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">soly</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">r</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">PI</span> <span class="o">*</span> <span class="p">(</span> <span class="n">r</span><span class="o">**</span><span class="mi">2</span> <span class="p">)</span>
<span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">mod2</span>
<span class="k">print</span><span class="p">(</span><span class="n">mod2</span><span class="p">.</span><span class="n">PI</span><span class="p">)</span> <span class="c1"># 3.141592
</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">mod2</span><span class="p">.</span><span class="n">Math</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">solv</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span> <span class="c1"># 12.~~~
</span>
<span class="k">print</span><span class="p">(</span><span class="n">mod2</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">mod2</span><span class="p">.</span><span class="n">PI</span><span class="p">,</span> <span class="mf">4.4</span><span class="p">))</span>
</code></pre></div></div>

<h3 id="다른-파일에서-모듈-불러오기">다른 파일에서 모듈 불러오기</h3>

<ol>
  <li>
    <p><code class="language-plaintext highlighter-rouge">sys.path.append(모듈을 저장한 디렉터리)</code> 사용하기</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">sys</span><span class="p">.</span><span class="n">path</span>
</code></pre></div>    </div>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">sys.path</code>는 파이썬 라이브러리가 설치되어 있는 디렉터리를 보여준다.</li>
      <li>모듈이 위 디렉터리에 들어 있다면 모듈이 저장된 디렉터리로 이동할 필요 없이 바로 불러서 사용할 수 있다.</li>
      <li>소스코드 안에서는 <code class="language-plaintext highlighter-rouge">\\</code>, <code class="language-plaintext highlighter-rouge">/</code>을 사용하여야한다.</li>
    </ul>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"C:/doit/mymod"</span><span class="p">)</span><span class="c1">#예시
</span></code></pre></div>    </div>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">PYTHONPATH</code> 환경 변수 사용하기</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>set PYTHONPATH = c:\doit\mymod
</code></pre></div>    </div>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">set</code>명령어를 사용해 <code class="language-plaintext highlighter-rouge">PYTHONPATH</code>환변 변수에 디렉터리를 설정하면 추가 작업 없이 모듈을 불러와서 사용할 수 있다.</li>
    </ul>
  </li>
</ol>
:ET