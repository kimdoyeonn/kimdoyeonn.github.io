I" <ul>
  <li>논리회로와 데이터 표현
    <ul>
      <li>데이터 표현 실습 - 데이터 종류</li>
      <li><strong>논리 게이트(Logical gate)</strong></li>
      <li>실무 적용 사례</li>
    </ul>
  </li>
</ul>

<h3 id="데이터-표현-실습---데이터-종류">데이터 표현 실습 - 데이터 종류</h3>

<p>인류가 오랫동안 사용해온 10진수 체계는 전기를 사용하는 컴퓨터에게는 10진수가 맞지 않기 때문에 2/8/16진수로 변환하여 사용한다.</p>

<ul>
  <li>진 이진수: 연산이 가능한 형태로 변환</li>
  <li>코드화 변환 : 연산이 필요하지 않은 경우의 변환</li>
  <li>정-실수&amp;연산용 변환</li>
</ul>

<h4 id="보수complement"><strong>보수(Complement)</strong>⭐</h4>

<ul>
  <li>양/음수로 활용</li>
</ul>

<p><img src="https://media.vlpt.us/images/underlier12/post/f7f4d592-a450-4a5d-bfea-d77641f789d1/image.png" alt="img" /></p>

<ul>
  <li>
    <p>연산에 활용</p>

    <ul>
      <li>
        <p>10진 연산의 경우</p>

        <p>12의 보수를 더해줌 : 1-&gt;8 2-&gt;7</p>

        <p>넘어가는 수(캐리비트)를 두자리에 더해줌</p>
      </li>
      <li>
        <p>2진수의 경우</p>

        <p>뒤의 이진수의 보수를 더해주고 여기서 발생한 캐리비트를 나머지에 더해줌</p>
      </li>
    </ul>

    <blockquote>
      <ul>
        <li>캐리비트가 발생하지 않는 경우에는 다른 방법으로 계산</li>
        <li>2의 보수도 다른 방법</li>
      </ul>
    </blockquote>
  </li>
</ul>

<p><img src="https://user-images.githubusercontent.com/53068706/115999259-12d74d00-a626-11eb-80c5-8852a25d2468.png" alt="image-20210426002543465" /></p>

<h3 id="논리-게이트logical-gate">논리 게이트(Logical gate)</h3>

<p>논리 연산을 수행하는 전자소자로서 주어진 입력 변수 값에 대하여 정해진 논리 함수를 수행하여 그 함수의 연산 경과와 동일한 결과값을 출력하는 하드웨어</p>

<p>컴퓨터를 구성하는 가장 기본적인 요소</p>

<h4 id="스위칭-이론">스위칭 이론</h4>

<p>1983년 미국의 샤논에 의해 스위치로 2진 정보를 표현하거나 논리 연산의 실행을 가능하도록 구성된 이론</p>

<p><img src="https://media.vlpt.us/images/underlier12/post/ad41d79d-89e7-40d9-bfcc-bea9e2015d9a/image.png" alt="img" /></p>

<h4 id="논리-연산의-기본-표현">논리 연산의 기본 표현</h4>

<ul>
  <li>
    <p><strong>논리곱(AND)</strong></p>

    <p><img src="https://media.vlpt.us/images/underlier12/post/460f218d-6b02-4d75-b218-a2ca8cf8f661/image.png" alt="img" /></p>
  </li>
  <li>
    <p><strong>논리합(OR)</strong></p>

    <p><img src="https://media.vlpt.us/images/underlier12/post/737529ed-4fb4-4b3d-b993-45f93f1c1f15/image.png" alt="img" /></p>
  </li>
  <li>
    <p><strong>논리부정(NOT)</strong></p>

    <p><img src="https://media.vlpt.us/images/underlier12/post/0ea99887-9ebb-4088-a718-b68a22d202bf/image.png" alt="img" /></p>
  </li>
  <li>
    <p><strong>배타적 논리합(exclusive OR)</strong></p>

    <ul>
      <li>값이 서로 다를 때만 True</li>
    </ul>

    <p><img src="https://media.vlpt.us/images/underlier12/post/5da026cf-759c-4157-93f8-6a5f3cb5b1b1/image.png" alt="img" /></p>
  </li>
</ul>

<h3 id="실무-적용-사례">실무 적용 사례</h3>

<ul>
  <li>
    <p>1bit 덧셈의 구현 ↔ 논리 회로를 이용한 반가산기(Half adder)의 구현</p>

    <p>a + b = S 라는 연산을 구현하고자 하는 경우</p>

    <p><img src="https://media.vlpt.us/images/underlier12/post/c496ea0b-de09-460f-af16-c1f302dea35b/image.png" alt="img" /></p>

    <p><img src="https://media.vlpt.us/images/underlier12/post/593def5e-5998-4081-9a31-a824a585d655/image.png" alt="img" /></p>
  </li>
</ul>

<p>​</p>
:ET